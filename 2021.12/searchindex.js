Search.setIndex({"docnames": ["API_specification/array_object", "API_specification/broadcasting", "API_specification/constants", "API_specification/creation_functions", "API_specification/data_type_functions", "API_specification/data_types", "API_specification/elementwise_functions", "API_specification/function_and_method_signatures", "API_specification/generated/array_api.abs", "API_specification/generated/array_api.acos", "API_specification/generated/array_api.acosh", "API_specification/generated/array_api.add", "API_specification/generated/array_api.all", "API_specification/generated/array_api.any", "API_specification/generated/array_api.arange", "API_specification/generated/array_api.argmax", "API_specification/generated/array_api.argmin", "API_specification/generated/array_api.argsort", "API_specification/generated/array_api.array.T", "API_specification/generated/array_api.array.__abs__", "API_specification/generated/array_api.array.__add__", "API_specification/generated/array_api.array.__and__", "API_specification/generated/array_api.array.__array_namespace__", "API_specification/generated/array_api.array.__bool__", "API_specification/generated/array_api.array.__dlpack__", "API_specification/generated/array_api.array.__dlpack_device__", "API_specification/generated/array_api.array.__eq__", "API_specification/generated/array_api.array.__float__", "API_specification/generated/array_api.array.__floordiv__", "API_specification/generated/array_api.array.__ge__", "API_specification/generated/array_api.array.__getitem__", "API_specification/generated/array_api.array.__gt__", "API_specification/generated/array_api.array.__index__", "API_specification/generated/array_api.array.__int__", "API_specification/generated/array_api.array.__invert__", "API_specification/generated/array_api.array.__le__", "API_specification/generated/array_api.array.__lshift__", "API_specification/generated/array_api.array.__lt__", "API_specification/generated/array_api.array.__matmul__", "API_specification/generated/array_api.array.__mod__", "API_specification/generated/array_api.array.__mul__", "API_specification/generated/array_api.array.__ne__", "API_specification/generated/array_api.array.__neg__", "API_specification/generated/array_api.array.__or__", "API_specification/generated/array_api.array.__pos__", "API_specification/generated/array_api.array.__pow__", "API_specification/generated/array_api.array.__rshift__", "API_specification/generated/array_api.array.__setitem__", "API_specification/generated/array_api.array.__sub__", "API_specification/generated/array_api.array.__truediv__", "API_specification/generated/array_api.array.__xor__", "API_specification/generated/array_api.array.device", "API_specification/generated/array_api.array.dtype", "API_specification/generated/array_api.array.mT", "API_specification/generated/array_api.array.ndim", "API_specification/generated/array_api.array.shape", "API_specification/generated/array_api.array.size", "API_specification/generated/array_api.array.to_device", "API_specification/generated/array_api.asarray", "API_specification/generated/array_api.asin", "API_specification/generated/array_api.asinh", "API_specification/generated/array_api.astype", "API_specification/generated/array_api.atan", "API_specification/generated/array_api.atan2", "API_specification/generated/array_api.atanh", "API_specification/generated/array_api.bitwise_and", "API_specification/generated/array_api.bitwise_invert", "API_specification/generated/array_api.bitwise_left_shift", "API_specification/generated/array_api.bitwise_or", "API_specification/generated/array_api.bitwise_right_shift", "API_specification/generated/array_api.bitwise_xor", "API_specification/generated/array_api.broadcast_arrays", "API_specification/generated/array_api.broadcast_to", "API_specification/generated/array_api.can_cast", "API_specification/generated/array_api.ceil", "API_specification/generated/array_api.concat", "API_specification/generated/array_api.constants.e", "API_specification/generated/array_api.constants.inf", "API_specification/generated/array_api.constants.nan", "API_specification/generated/array_api.constants.newaxis", "API_specification/generated/array_api.constants.pi", "API_specification/generated/array_api.cos", "API_specification/generated/array_api.cosh", "API_specification/generated/array_api.data_types.__eq__", "API_specification/generated/array_api.divide", "API_specification/generated/array_api.empty", "API_specification/generated/array_api.empty_like", "API_specification/generated/array_api.equal", "API_specification/generated/array_api.exp", "API_specification/generated/array_api.expand_dims", "API_specification/generated/array_api.expm1", "API_specification/generated/array_api.eye", "API_specification/generated/array_api.finfo", "API_specification/generated/array_api.flip", "API_specification/generated/array_api.floor", "API_specification/generated/array_api.floor_divide", "API_specification/generated/array_api.from_dlpack", "API_specification/generated/array_api.full", "API_specification/generated/array_api.full_like", "API_specification/generated/array_api.greater", "API_specification/generated/array_api.greater_equal", "API_specification/generated/array_api.iinfo", "API_specification/generated/array_api.isfinite", "API_specification/generated/array_api.isinf", "API_specification/generated/array_api.isnan", "API_specification/generated/array_api.less", "API_specification/generated/array_api.less_equal", "API_specification/generated/array_api.linspace", "API_specification/generated/array_api.log", "API_specification/generated/array_api.log10", "API_specification/generated/array_api.log1p", "API_specification/generated/array_api.log2", "API_specification/generated/array_api.logaddexp", "API_specification/generated/array_api.logical_and", "API_specification/generated/array_api.logical_not", "API_specification/generated/array_api.logical_or", "API_specification/generated/array_api.logical_xor", "API_specification/generated/array_api.matmul", "API_specification/generated/array_api.matrix_transpose", "API_specification/generated/array_api.max", "API_specification/generated/array_api.mean", "API_specification/generated/array_api.meshgrid", "API_specification/generated/array_api.min", "API_specification/generated/array_api.multiply", "API_specification/generated/array_api.negative", "API_specification/generated/array_api.nonzero", "API_specification/generated/array_api.not_equal", "API_specification/generated/array_api.ones", "API_specification/generated/array_api.ones_like", "API_specification/generated/array_api.permute_dims", "API_specification/generated/array_api.positive", "API_specification/generated/array_api.pow", "API_specification/generated/array_api.prod", "API_specification/generated/array_api.remainder", "API_specification/generated/array_api.reshape", "API_specification/generated/array_api.result_type", "API_specification/generated/array_api.roll", "API_specification/generated/array_api.round", "API_specification/generated/array_api.sign", "API_specification/generated/array_api.sin", "API_specification/generated/array_api.sinh", "API_specification/generated/array_api.sort", "API_specification/generated/array_api.sqrt", "API_specification/generated/array_api.square", "API_specification/generated/array_api.squeeze", "API_specification/generated/array_api.stack", "API_specification/generated/array_api.std", "API_specification/generated/array_api.subtract", "API_specification/generated/array_api.sum", "API_specification/generated/array_api.tan", "API_specification/generated/array_api.tanh", "API_specification/generated/array_api.tensordot", "API_specification/generated/array_api.tril", "API_specification/generated/array_api.triu", "API_specification/generated/array_api.trunc", "API_specification/generated/array_api.unique_all", "API_specification/generated/array_api.unique_counts", "API_specification/generated/array_api.unique_inverse", "API_specification/generated/array_api.unique_values", "API_specification/generated/array_api.var", "API_specification/generated/array_api.vecdot", "API_specification/generated/array_api.where", "API_specification/generated/array_api.zeros", "API_specification/generated/array_api.zeros_like", "API_specification/index", "API_specification/indexing", "API_specification/linear_algebra_functions", "API_specification/manipulation_functions", "API_specification/searching_functions", "API_specification/set_functions", "API_specification/sorting_functions", "API_specification/statistical_functions", "API_specification/type_promotion", "API_specification/utility_functions", "assumptions", "benchmark_suite", "design_topics/C_API", "design_topics/accuracy", "design_topics/copies_views_and_mutation", "design_topics/data_dependent_output_shapes", "design_topics/data_interchange", "design_topics/device_support", "design_topics/index", "design_topics/parallelism", "design_topics/static_typing", "extensions/generated/array_api.linalg.cholesky", "extensions/generated/array_api.linalg.cross", "extensions/generated/array_api.linalg.det", "extensions/generated/array_api.linalg.diagonal", "extensions/generated/array_api.linalg.eigh", "extensions/generated/array_api.linalg.eigvalsh", "extensions/generated/array_api.linalg.inv", "extensions/generated/array_api.linalg.matmul", "extensions/generated/array_api.linalg.matrix_norm", "extensions/generated/array_api.linalg.matrix_power", "extensions/generated/array_api.linalg.matrix_rank", "extensions/generated/array_api.linalg.matrix_transpose", "extensions/generated/array_api.linalg.outer", "extensions/generated/array_api.linalg.pinv", "extensions/generated/array_api.linalg.qr", "extensions/generated/array_api.linalg.slogdet", "extensions/generated/array_api.linalg.solve", "extensions/generated/array_api.linalg.svd", "extensions/generated/array_api.linalg.svdvals", "extensions/generated/array_api.linalg.tensordot", "extensions/generated/array_api.linalg.trace", "extensions/generated/array_api.linalg.vecdot", "extensions/generated/array_api.linalg.vector_norm", "extensions/index", "extensions/linear_algebra_functions", "future_API_evolution", "index", "purpose_and_scope", "usage_data", "use_cases", "verification_test_suite"], "filenames": ["API_specification/array_object.rst", "API_specification/broadcasting.rst", "API_specification/constants.rst", "API_specification/creation_functions.rst", "API_specification/data_type_functions.rst", "API_specification/data_types.rst", "API_specification/elementwise_functions.rst", "API_specification/function_and_method_signatures.rst", "API_specification/generated/array_api.abs.rst", "API_specification/generated/array_api.acos.rst", "API_specification/generated/array_api.acosh.rst", "API_specification/generated/array_api.add.rst", "API_specification/generated/array_api.all.rst", "API_specification/generated/array_api.any.rst", "API_specification/generated/array_api.arange.rst", "API_specification/generated/array_api.argmax.rst", "API_specification/generated/array_api.argmin.rst", "API_specification/generated/array_api.argsort.rst", "API_specification/generated/array_api.array.T.rst", "API_specification/generated/array_api.array.__abs__.rst", "API_specification/generated/array_api.array.__add__.rst", "API_specification/generated/array_api.array.__and__.rst", "API_specification/generated/array_api.array.__array_namespace__.rst", "API_specification/generated/array_api.array.__bool__.rst", "API_specification/generated/array_api.array.__dlpack__.rst", "API_specification/generated/array_api.array.__dlpack_device__.rst", "API_specification/generated/array_api.array.__eq__.rst", "API_specification/generated/array_api.array.__float__.rst", "API_specification/generated/array_api.array.__floordiv__.rst", "API_specification/generated/array_api.array.__ge__.rst", "API_specification/generated/array_api.array.__getitem__.rst", "API_specification/generated/array_api.array.__gt__.rst", "API_specification/generated/array_api.array.__index__.rst", "API_specification/generated/array_api.array.__int__.rst", "API_specification/generated/array_api.array.__invert__.rst", "API_specification/generated/array_api.array.__le__.rst", "API_specification/generated/array_api.array.__lshift__.rst", "API_specification/generated/array_api.array.__lt__.rst", "API_specification/generated/array_api.array.__matmul__.rst", "API_specification/generated/array_api.array.__mod__.rst", "API_specification/generated/array_api.array.__mul__.rst", "API_specification/generated/array_api.array.__ne__.rst", "API_specification/generated/array_api.array.__neg__.rst", "API_specification/generated/array_api.array.__or__.rst", "API_specification/generated/array_api.array.__pos__.rst", "API_specification/generated/array_api.array.__pow__.rst", "API_specification/generated/array_api.array.__rshift__.rst", "API_specification/generated/array_api.array.__setitem__.rst", "API_specification/generated/array_api.array.__sub__.rst", "API_specification/generated/array_api.array.__truediv__.rst", "API_specification/generated/array_api.array.__xor__.rst", "API_specification/generated/array_api.array.device.rst", "API_specification/generated/array_api.array.dtype.rst", "API_specification/generated/array_api.array.mT.rst", "API_specification/generated/array_api.array.ndim.rst", "API_specification/generated/array_api.array.shape.rst", "API_specification/generated/array_api.array.size.rst", "API_specification/generated/array_api.array.to_device.rst", "API_specification/generated/array_api.asarray.rst", "API_specification/generated/array_api.asin.rst", "API_specification/generated/array_api.asinh.rst", "API_specification/generated/array_api.astype.rst", "API_specification/generated/array_api.atan.rst", "API_specification/generated/array_api.atan2.rst", "API_specification/generated/array_api.atanh.rst", "API_specification/generated/array_api.bitwise_and.rst", "API_specification/generated/array_api.bitwise_invert.rst", "API_specification/generated/array_api.bitwise_left_shift.rst", "API_specification/generated/array_api.bitwise_or.rst", "API_specification/generated/array_api.bitwise_right_shift.rst", "API_specification/generated/array_api.bitwise_xor.rst", "API_specification/generated/array_api.broadcast_arrays.rst", "API_specification/generated/array_api.broadcast_to.rst", "API_specification/generated/array_api.can_cast.rst", "API_specification/generated/array_api.ceil.rst", "API_specification/generated/array_api.concat.rst", "API_specification/generated/array_api.constants.e.rst", "API_specification/generated/array_api.constants.inf.rst", "API_specification/generated/array_api.constants.nan.rst", "API_specification/generated/array_api.constants.newaxis.rst", "API_specification/generated/array_api.constants.pi.rst", "API_specification/generated/array_api.cos.rst", "API_specification/generated/array_api.cosh.rst", "API_specification/generated/array_api.data_types.__eq__.rst", "API_specification/generated/array_api.divide.rst", "API_specification/generated/array_api.empty.rst", "API_specification/generated/array_api.empty_like.rst", "API_specification/generated/array_api.equal.rst", "API_specification/generated/array_api.exp.rst", "API_specification/generated/array_api.expand_dims.rst", "API_specification/generated/array_api.expm1.rst", "API_specification/generated/array_api.eye.rst", "API_specification/generated/array_api.finfo.rst", "API_specification/generated/array_api.flip.rst", "API_specification/generated/array_api.floor.rst", "API_specification/generated/array_api.floor_divide.rst", "API_specification/generated/array_api.from_dlpack.rst", "API_specification/generated/array_api.full.rst", "API_specification/generated/array_api.full_like.rst", "API_specification/generated/array_api.greater.rst", "API_specification/generated/array_api.greater_equal.rst", "API_specification/generated/array_api.iinfo.rst", "API_specification/generated/array_api.isfinite.rst", "API_specification/generated/array_api.isinf.rst", "API_specification/generated/array_api.isnan.rst", "API_specification/generated/array_api.less.rst", "API_specification/generated/array_api.less_equal.rst", "API_specification/generated/array_api.linspace.rst", "API_specification/generated/array_api.log.rst", "API_specification/generated/array_api.log10.rst", "API_specification/generated/array_api.log1p.rst", "API_specification/generated/array_api.log2.rst", "API_specification/generated/array_api.logaddexp.rst", "API_specification/generated/array_api.logical_and.rst", "API_specification/generated/array_api.logical_not.rst", "API_specification/generated/array_api.logical_or.rst", "API_specification/generated/array_api.logical_xor.rst", "API_specification/generated/array_api.matmul.rst", "API_specification/generated/array_api.matrix_transpose.rst", "API_specification/generated/array_api.max.rst", "API_specification/generated/array_api.mean.rst", "API_specification/generated/array_api.meshgrid.rst", "API_specification/generated/array_api.min.rst", "API_specification/generated/array_api.multiply.rst", "API_specification/generated/array_api.negative.rst", "API_specification/generated/array_api.nonzero.rst", "API_specification/generated/array_api.not_equal.rst", "API_specification/generated/array_api.ones.rst", "API_specification/generated/array_api.ones_like.rst", "API_specification/generated/array_api.permute_dims.rst", "API_specification/generated/array_api.positive.rst", "API_specification/generated/array_api.pow.rst", "API_specification/generated/array_api.prod.rst", "API_specification/generated/array_api.remainder.rst", "API_specification/generated/array_api.reshape.rst", "API_specification/generated/array_api.result_type.rst", "API_specification/generated/array_api.roll.rst", "API_specification/generated/array_api.round.rst", "API_specification/generated/array_api.sign.rst", "API_specification/generated/array_api.sin.rst", "API_specification/generated/array_api.sinh.rst", "API_specification/generated/array_api.sort.rst", "API_specification/generated/array_api.sqrt.rst", "API_specification/generated/array_api.square.rst", "API_specification/generated/array_api.squeeze.rst", "API_specification/generated/array_api.stack.rst", "API_specification/generated/array_api.std.rst", "API_specification/generated/array_api.subtract.rst", "API_specification/generated/array_api.sum.rst", "API_specification/generated/array_api.tan.rst", "API_specification/generated/array_api.tanh.rst", "API_specification/generated/array_api.tensordot.rst", "API_specification/generated/array_api.tril.rst", "API_specification/generated/array_api.triu.rst", "API_specification/generated/array_api.trunc.rst", "API_specification/generated/array_api.unique_all.rst", "API_specification/generated/array_api.unique_counts.rst", "API_specification/generated/array_api.unique_inverse.rst", "API_specification/generated/array_api.unique_values.rst", "API_specification/generated/array_api.var.rst", "API_specification/generated/array_api.vecdot.rst", "API_specification/generated/array_api.where.rst", "API_specification/generated/array_api.zeros.rst", "API_specification/generated/array_api.zeros_like.rst", "API_specification/index.rst", "API_specification/indexing.rst", "API_specification/linear_algebra_functions.rst", "API_specification/manipulation_functions.rst", "API_specification/searching_functions.rst", "API_specification/set_functions.rst", "API_specification/sorting_functions.rst", "API_specification/statistical_functions.rst", "API_specification/type_promotion.rst", "API_specification/utility_functions.rst", "assumptions.md", "benchmark_suite.md", "design_topics/C_API.rst", "design_topics/accuracy.rst", "design_topics/copies_views_and_mutation.rst", "design_topics/data_dependent_output_shapes.rst", "design_topics/data_interchange.rst", "design_topics/device_support.rst", "design_topics/index.rst", "design_topics/parallelism.rst", "design_topics/static_typing.rst", "extensions/generated/array_api.linalg.cholesky.rst", "extensions/generated/array_api.linalg.cross.rst", "extensions/generated/array_api.linalg.det.rst", "extensions/generated/array_api.linalg.diagonal.rst", "extensions/generated/array_api.linalg.eigh.rst", "extensions/generated/array_api.linalg.eigvalsh.rst", "extensions/generated/array_api.linalg.inv.rst", "extensions/generated/array_api.linalg.matmul.rst", "extensions/generated/array_api.linalg.matrix_norm.rst", "extensions/generated/array_api.linalg.matrix_power.rst", "extensions/generated/array_api.linalg.matrix_rank.rst", "extensions/generated/array_api.linalg.matrix_transpose.rst", "extensions/generated/array_api.linalg.outer.rst", "extensions/generated/array_api.linalg.pinv.rst", "extensions/generated/array_api.linalg.qr.rst", "extensions/generated/array_api.linalg.slogdet.rst", "extensions/generated/array_api.linalg.solve.rst", "extensions/generated/array_api.linalg.svd.rst", "extensions/generated/array_api.linalg.svdvals.rst", "extensions/generated/array_api.linalg.tensordot.rst", "extensions/generated/array_api.linalg.trace.rst", "extensions/generated/array_api.linalg.vecdot.rst", "extensions/generated/array_api.linalg.vector_norm.rst", "extensions/index.rst", "extensions/linear_algebra_functions.rst", "future_API_evolution.md", "index.rst", "purpose_and_scope.md", "usage_data.md", "use_cases.md", "verification_test_suite.md"], "titles": ["Array object", "Broadcasting", "Constants", "Creation Functions", "Data Type Functions", "Data Types", "Element-wise Functions", "Function and method signatures", "abs", "acos", "acosh", "add", "all", "any", "arange", "argmax", "argmin", "argsort", "T", "__abs__", "__add__", "__and__", "__array_namespace__", "__bool__", "__dlpack__", "__dlpack_device__", "__eq__", "__float__", "__floordiv__", "__ge__", "__getitem__", "__gt__", "__index__", "__int__", "__invert__", "__le__", "__lshift__", "__lt__", "__matmul__", "__mod__", "__mul__", "__ne__", "__neg__", "__or__", "__pos__", "__pow__", "__rshift__", "__setitem__", "__sub__", "__truediv__", "__xor__", "device", "dtype", "mT", "ndim", "shape", "size", "to_device", "asarray", "asin", "asinh", "astype", "atan", "atan2", "atanh", "bitwise_and", "bitwise_invert", "bitwise_left_shift", "bitwise_or", "bitwise_right_shift", "bitwise_xor", "broadcast_arrays", "broadcast_to", "can_cast", "ceil", "concat", "e", "inf", "nan", "newaxis", "pi", "cos", "cosh", "__eq__", "divide", "empty", "empty_like", "equal", "exp", "expand_dims", "expm1", "eye", "finfo", "flip", "floor", "floor_divide", "from_dlpack", "full", "full_like", "greater", "greater_equal", "iinfo", "isfinite", "isinf", "isnan", "less", "less_equal", "linspace", "log", "log10", "log1p", "log2", "logaddexp", "logical_and", "logical_not", "logical_or", "logical_xor", "matmul", "matrix_transpose", "max", "mean", "meshgrid", "min", "multiply", "negative", "nonzero", "not_equal", "ones", "ones_like", "permute_dims", "positive", "pow", "prod", "remainder", "reshape", "result_type", "roll", "round", "sign", "sin", "sinh", "sort", "sqrt", "square", "squeeze", "stack", "std", "subtract", "sum", "tan", "tanh", "tensordot", "tril", "triu", "trunc", "unique_all", "unique_counts", "unique_inverse", "unique_values", "var", "vecdot", "where", "zeros", "zeros_like", "API specification", "Indexing", "Linear Algebra Functions", "Manipulation Functions", "Searching Functions", "Set Functions", "Sorting Functions", "Statistical Functions", "Type Promotion Rules", "Utility Functions", "Assumptions", "Benchmark suite", "C API", "Accuracy", "Copy-view behaviour and mutability", "Data-dependent output shapes", "Data interchange mechanisms", "Device support", "Design topics &amp; constraints", "Parallelism", "Static typing", "cholesky", "cross", "det", "diagonal", "eigh", "eigvalsh", "inv", "matmul", "matrix_norm", "matrix_power", "matrix_rank", "matrix_transpose", "outer", "pinv", "qr", "slogdet", "solve", "svd", "svdvals", "tensordot", "trace", "vecdot", "vector_norm", "Extensions", "Linear Algebra Extension", "Future API standard evolution", "Python array API standard", "Purpose and scope", "Usage Data", "Use cases", "Verification - test suite"], "terms": {"api": [0, 1, 5, 7, 22, 24, 165, 172, 174, 177, 178, 180, 181, 182, 183, 184, 208, 213, 215], "specif": [0, 1, 2, 3, 4, 5, 6, 18, 22, 24, 28, 47, 49, 57, 75, 84, 95, 107, 113, 114, 115, 116, 119, 120, 122, 135, 145, 146, 151, 159, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 176, 177, 178, 179, 180, 181, 184, 189, 190, 209, 210, 211, 212, 213, 214, 215], "A": [0, 1, 2, 3, 4, 5, 6, 7, 12, 13, 55, 91, 145, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 176, 178, 180, 181, 183, 184, 201, 202, 209, 212, 213, 214], "conform": [0, 2, 3, 4, 5, 6, 57, 58, 90, 110, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 177, 180, 209], "implement": [0, 2, 3, 4, 5, 6, 8, 9, 10, 17, 19, 22, 24, 28, 32, 38, 39, 40, 42, 45, 47, 49, 57, 58, 59, 60, 61, 62, 63, 64, 81, 82, 84, 88, 90, 95, 97, 98, 107, 108, 109, 110, 111, 117, 119, 120, 122, 123, 124, 125, 131, 133, 135, 139, 140, 141, 146, 149, 150, 155, 156, 157, 158, 159, 165, 166, 167, 168, 169, 170, 171, 172, 173, 176, 177, 178, 179, 180, 181, 184, 185, 189, 190, 199, 201, 209, 210, 213, 214], "standard": [0, 2, 3, 4, 5, 6, 7, 24, 92, 146, 159, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 177, 178, 180, 181, 183, 184, 209, 213, 214], "must": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 53, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 75, 81, 82, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 95, 97, 98, 99, 100, 102, 103, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 177, 178, 180, 185, 186, 187, 188, 189, 190, 191, 193, 194, 195, 197, 198, 199, 200, 201, 202, 203, 205, 207, 209, 210, 212, 213], "provid": [0, 2, 3, 4, 5, 6, 12, 13, 24, 57, 89, 93, 121, 135, 145, 146, 159, 160, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 176, 178, 180, 181, 183, 184, 194, 209, 210, 212, 213, 214], "support": [0, 2, 3, 4, 5, 6, 7, 11, 20, 24, 28, 30, 40, 47, 49, 51, 55, 57, 58, 83, 84, 95, 107, 113, 114, 115, 116, 123, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 177, 178, 180, 182, 184, 189, 190, 193, 202, 207, 209, 212, 213], "an": [0, 1, 5, 7, 8, 9, 10, 11, 12, 13, 14, 17, 18, 19, 20, 21, 22, 24, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 53, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 75, 79, 81, 82, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 165, 170, 172, 174, 176, 177, 178, 179, 181, 183, 184, 185, 186, 188, 189, 190, 191, 193, 194, 195, 198, 199, 200, 201, 202, 203, 205, 207, 209, 210, 213, 214], "have": [0, 1, 2, 3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 53, 55, 56, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 75, 81, 82, 84, 85, 86, 87, 88, 89, 90, 92, 93, 94, 95, 97, 98, 99, 100, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 165, 166, 167, 168, 169, 170, 171, 173, 174, 176, 178, 181, 184, 185, 186, 187, 188, 189, 190, 191, 193, 194, 195, 197, 198, 199, 200, 201, 202, 203, 205, 207, 209, 210, 212, 213, 214], "follow": [0, 1, 2, 3, 4, 5, 6, 7, 28, 39, 47, 95, 101, 133, 151, 155, 156, 157, 158, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 177, 179, 180, 181, 193, 199, 207, 209, 210, 212, 213, 214], "adher": [0, 2, 3, 6, 7, 165, 166, 167, 168, 169, 170, 171, 173, 174, 209, 212], "convent": [0, 2, 3, 6, 7, 24, 38, 63, 117, 165, 166, 167, 168, 169, 170, 171, 173, 181, 209, 213], "posit": [0, 3, 6, 7, 8, 12, 13, 19, 24, 28, 39, 40, 44, 49, 63, 77, 84, 89, 91, 92, 95, 102, 103, 123, 125, 133, 136, 164, 165, 166, 167, 168, 169, 170, 171, 173, 174, 177, 184, 185, 209, 213], "paramet": [0, 3, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 166, 167, 168, 169, 170, 171, 173, 174, 184, 185, 186, 187, 188, 189, 190, 191, 193, 194, 195, 197, 198, 199, 200, 201, 202, 203, 205, 207, 209], "onli": [0, 1, 3, 5, 6, 7, 15, 16, 22, 24, 38, 55, 56, 93, 107, 113, 114, 115, 116, 117, 120, 146, 159, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 176, 178, 180, 181, 184, 199, 209, 210, 212, 213, 214, 215], "extern": [0, 3, 6, 7, 166, 167, 168, 169, 170, 171, 173, 209, 214], "usabl": [0, 3, 6, 7, 166, 167, 168, 169, 170, 171, 173, 209], "name": [0, 3, 6, 7, 22, 28, 95, 155, 156, 157, 165, 166, 167, 168, 169, 170, 171, 173, 189, 199, 200, 202, 209, 212, 213], "when": [0, 3, 6, 7, 11, 15, 16, 20, 24, 28, 45, 47, 61, 90, 95, 107, 110, 119, 122, 131, 134, 146, 159, 161, 165, 166, 167, 168, 169, 170, 171, 172, 173, 176, 178, 179, 180, 183, 184, 200, 209, 212, 213, 214], "accept": [0, 3, 6, 7, 24, 39, 113, 114, 115, 116, 120, 133, 146, 159, 166, 167, 168, 169, 170, 171, 173, 174, 209, 210], "i": [0, 1, 2, 3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 24, 28, 32, 38, 39, 40, 41, 42, 45, 47, 49, 53, 55, 57, 58, 59, 60, 61, 62, 63, 64, 67, 69, 72, 74, 75, 79, 81, 82, 84, 85, 86, 88, 89, 90, 91, 93, 94, 95, 97, 98, 102, 103, 104, 107, 108, 109, 110, 111, 112, 117, 119, 120, 121, 122, 123, 124, 125, 127, 128, 129, 130, 131, 132, 133, 134, 136, 137, 138, 139, 140, 141, 142, 145, 146, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 177, 178, 180, 181, 183, 184, 185, 186, 187, 188, 189, 190, 193, 194, 195, 197, 198, 199, 200, 201, 202, 203, 205, 207, 209, 210, 212, 213, 214, 215], "call": [0, 3, 6, 7, 32, 166, 167, 168, 169, 170, 171, 173, 180, 181, 200, 209, 212, 213, 214], "argument": [0, 3, 6, 7, 63, 132, 135, 148, 166, 167, 168, 169, 170, 171, 172, 173, 177, 178, 180, 181, 209, 212, 213, 214], "ar": [0, 1, 3, 5, 6, 7, 14, 15, 16, 18, 22, 25, 28, 38, 47, 49, 53, 56, 58, 81, 83, 84, 91, 93, 95, 113, 114, 115, 116, 117, 125, 136, 137, 139, 149, 155, 157, 160, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 176, 177, 178, 179, 180, 181, 183, 184, 186, 195, 198, 202, 209, 210, 212, 213, 214, 215], "map": [0, 3, 6, 7, 166, 167, 168, 169, 170, 171, 173, 178, 209], "base": [0, 3, 6, 7, 45, 55, 56, 88, 89, 108, 109, 110, 111, 131, 155, 156, 157, 158, 165, 166, 167, 168, 169, 170, 171, 173, 178, 184, 209, 210, 212, 213, 214], "sole": [0, 3, 6, 7, 165, 166, 167, 168, 169, 170, 171, 173, 209], "order": [0, 3, 5, 6, 7, 17, 18, 24, 28, 53, 63, 83, 93, 95, 125, 141, 151, 155, 156, 157, 158, 165, 166, 167, 168, 169, 170, 171, 172, 173, 177, 179, 180, 189, 190, 193, 202, 203, 207, 209, 210, 212, 213], "option": [0, 3, 6, 7, 12, 13, 14, 15, 16, 22, 24, 55, 56, 57, 58, 75, 85, 86, 91, 93, 97, 98, 107, 119, 120, 122, 127, 128, 132, 134, 136, 146, 148, 159, 162, 163, 166, 167, 168, 169, 170, 171, 173, 183, 193, 195, 198, 207, 209, 213, 214], "keyword": [0, 3, 6, 7, 121, 132, 148, 166, 167, 168, 169, 170, 171, 173, 178, 181, 183, 184, 209, 210, 212, 213, 214], "broadcast": [0, 6, 11, 12, 13, 15, 16, 20, 21, 26, 28, 29, 31, 35, 36, 37, 38, 39, 40, 41, 43, 45, 46, 47, 48, 49, 50, 63, 65, 67, 68, 69, 70, 71, 72, 84, 87, 95, 99, 100, 105, 106, 112, 113, 115, 116, 117, 119, 120, 122, 123, 126, 131, 132, 133, 146, 147, 148, 151, 159, 160, 161, 164, 166, 168, 171, 173, 193, 195, 198, 201, 207, 209, 212], "semant": [0, 6, 28, 30, 38, 39, 47, 95, 117, 133, 164, 165, 166, 168, 171, 173, 174, 178, 180, 183, 209, 212, 213, 214], "defin": [0, 5, 6, 22, 28, 39, 40, 47, 58, 63, 95, 97, 98, 107, 119, 120, 122, 123, 133, 146, 152, 153, 159, 166, 167, 168, 169, 170, 171, 173, 177, 184, 185, 186, 189, 190, 199, 201, 209, 213, 214, 215], "unless": [0, 6, 40, 123, 166, 167, 168, 169, 170, 171, 173, 209], "state": [0, 6, 40, 123, 165, 166, 167, 168, 169, 170, 171, 173, 209, 212], "otherwis": [0, 5, 6, 12, 13, 14, 15, 16, 57, 58, 61, 73, 102, 103, 104, 107, 119, 120, 122, 132, 134, 146, 148, 159, 160, 161, 165, 166, 167, 168, 169, 170, 171, 173, 174, 181, 185, 187, 193, 207, 209], "data": [0, 1, 2, 6, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 72, 73, 74, 75, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 126, 127, 128, 129, 130, 131, 132, 133, 134, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 159, 160, 161, 162, 163, 164, 166, 168, 169, 170, 171, 172, 173, 174, 176, 178, 181, 182, 185, 186, 187, 188, 189, 190, 191, 193, 194, 195, 197, 198, 199, 200, 201, 202, 203, 205, 207, 209, 210, 211, 212, 215], "type": [0, 2, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 72, 73, 74, 75, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 173, 174, 176, 178, 180, 182, 185, 186, 187, 188, 189, 190, 191, 193, 194, 195, 197, 198, 199, 200, 201, 202, 203, 205, 207, 209, 210, 212, 213], "promot": [0, 1, 5, 6, 9, 10, 11, 20, 21, 28, 38, 39, 40, 42, 43, 45, 47, 48, 49, 50, 58, 59, 60, 61, 62, 63, 64, 65, 67, 68, 69, 70, 73, 75, 81, 82, 84, 88, 90, 95, 98, 107, 108, 109, 110, 111, 112, 117, 120, 123, 124, 131, 133, 135, 139, 140, 142, 143, 145, 146, 147, 149, 150, 151, 159, 160, 161, 164, 166, 167, 168, 171, 173, 185, 186, 191, 193, 194, 195, 197, 198, 199, 200, 201, 207, 209], "rule": [0, 5, 6, 9, 10, 11, 20, 21, 28, 38, 39, 40, 42, 43, 45, 47, 48, 49, 50, 58, 59, 60, 61, 62, 63, 64, 65, 67, 68, 69, 70, 73, 75, 81, 82, 84, 88, 90, 95, 98, 108, 109, 110, 111, 112, 117, 123, 124, 131, 133, 135, 139, 140, 142, 143, 145, 147, 149, 150, 151, 160, 161, 164, 165, 166, 167, 168, 171, 173, 180, 185, 186, 191, 193, 194, 195, 197, 198, 199, 200, 201, 207, 209, 212, 214], "float": [0, 2, 6, 8, 9, 10, 11, 14, 19, 20, 26, 27, 28, 29, 31, 35, 37, 39, 40, 41, 45, 47, 48, 49, 58, 59, 60, 61, 62, 63, 64, 74, 76, 77, 78, 80, 81, 82, 84, 85, 88, 90, 91, 92, 94, 95, 97, 98, 107, 108, 109, 110, 111, 112, 119, 120, 122, 123, 127, 131, 132, 133, 135, 137, 139, 140, 142, 146, 147, 148, 149, 150, 154, 155, 156, 157, 158, 159, 162, 164, 166, 170, 171, 173, 177, 185, 187, 189, 190, 191, 193, 194, 195, 198, 199, 200, 201, 202, 203, 207, 209, 212, 213], "point": [0, 2, 6, 8, 9, 10, 11, 14, 19, 20, 27, 28, 39, 40, 45, 48, 49, 58, 59, 60, 61, 62, 63, 64, 74, 76, 77, 78, 80, 81, 82, 84, 85, 88, 90, 91, 92, 94, 95, 97, 107, 108, 109, 110, 111, 112, 119, 120, 122, 123, 127, 131, 132, 133, 135, 137, 139, 140, 142, 146, 147, 148, 149, 150, 154, 155, 156, 157, 158, 159, 162, 164, 166, 170, 171, 173, 177, 181, 185, 187, 189, 190, 191, 193, 194, 195, 198, 199, 200, 201, 202, 203, 207, 209, 212, 214], "ieee": [0, 5, 6, 11, 20, 39, 40, 49, 63, 76, 77, 78, 80, 84, 90, 92, 110, 123, 133, 142, 166, 170, 171, 173, 177, 209, 212], "754": [0, 5, 6, 11, 20, 39, 40, 49, 63, 76, 77, 78, 80, 84, 90, 92, 110, 123, 133, 142, 166, 170, 171, 173, 177, 209, 212], "2019": [0, 5, 6, 11, 20, 40, 49, 84, 90, 110, 123, 166, 171, 173, 177, 209, 212, 214], "furthermor": [0, 212, 215], "arbitrari": [0, 71, 121, 135, 177], "rank": [0, 1, 12, 13, 89, 121, 125, 145, 160, 165, 186, 193, 195, 199, 201, 205, 207, 212], "n": [0, 1, 12, 13, 38, 53, 89, 117, 118, 120, 121, 125, 129, 132, 145, 146, 148, 151, 152, 153, 159, 160, 165, 188, 193, 194, 195, 197, 198, 199, 202, 203, 205, 207, 212], "e": [0, 1, 2, 5, 7, 8, 17, 18, 19, 24, 28, 38, 39, 41, 45, 47, 49, 53, 55, 63, 67, 69, 74, 75, 84, 88, 89, 94, 95, 102, 107, 108, 110, 117, 119, 120, 121, 122, 124, 125, 130, 131, 132, 133, 135, 141, 145, 146, 148, 155, 156, 157, 158, 159, 164, 165, 170, 172, 176, 177, 178, 179, 180, 181, 186, 193, 195, 198, 201, 202, 207, 209, 210, 212, 213, 214], "number": [0, 1, 5, 11, 12, 13, 20, 24, 28, 39, 40, 45, 49, 54, 56, 63, 71, 74, 78, 84, 89, 91, 92, 94, 95, 101, 107, 119, 120, 121, 122, 123, 125, 129, 131, 132, 133, 135, 136, 137, 138, 145, 146, 148, 151, 154, 155, 156, 159, 160, 165, 170, 172, 180, 189, 190, 195, 200, 202, 209, 212, 213], "dimens": [0, 1, 12, 13, 15, 16, 18, 38, 53, 54, 55, 56, 75, 89, 93, 117, 118, 119, 120, 122, 125, 129, 132, 134, 136, 144, 145, 146, 148, 151, 152, 153, 155, 156, 157, 158, 159, 160, 165, 172, 185, 186, 187, 188, 189, 190, 191, 193, 194, 195, 198, 199, 200, 201, 202, 203, 205, 207, 212], "where": [0, 12, 13, 14, 28, 40, 45, 49, 55, 63, 84, 88, 91, 95, 97, 98, 110, 121, 123, 125, 129, 131, 145, 146, 159, 160, 164, 165, 172, 176, 180, 181, 185, 189, 193, 195, 198, 199, 202, 203, 205, 209, 212, 213, 214], "greater": [0, 9, 28, 31, 36, 39, 45, 46, 49, 59, 63, 64, 67, 69, 84, 94, 95, 131, 133, 138, 144, 154, 164, 165, 186, 194], "than": [0, 9, 10, 18, 24, 28, 36, 38, 39, 45, 46, 47, 49, 53, 59, 63, 64, 67, 69, 74, 84, 92, 93, 94, 95, 108, 109, 110, 111, 117, 131, 132, 133, 138, 142, 144, 146, 148, 154, 155, 156, 157, 158, 159, 165, 172, 174, 176, 178, 181, 183, 186, 193, 194, 195, 198, 207, 209, 210, 212, 214], "equal": [0, 1, 17, 19, 20, 21, 26, 28, 29, 31, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 56, 61, 63, 67, 69, 83, 91, 97, 98, 102, 103, 120, 131, 132, 137, 141, 146, 148, 151, 155, 156, 157, 158, 159, 164, 165, 170, 181, 188, 194, 195, 198, 200, 212], "zero": [0, 5, 12, 13, 15, 16, 23, 27, 28, 32, 33, 38, 39, 40, 45, 49, 61, 63, 67, 84, 89, 90, 91, 95, 110, 113, 114, 115, 116, 117, 119, 120, 121, 122, 123, 125, 131, 132, 133, 146, 148, 152, 153, 155, 156, 157, 158, 159, 160, 163, 164, 165, 170, 172, 176, 180, 187, 194, 195, 198, 200, 207, 214], "dimension": [0, 12, 13, 14, 15, 16, 18, 23, 27, 32, 33, 38, 91, 107, 117, 119, 120, 121, 122, 125, 132, 146, 148, 159, 160, 165, 172, 184, 186, 187, 195, 197, 198, 207, 209, 212], "apart": 0, "from": [0, 12, 13, 14, 18, 28, 57, 58, 73, 75, 86, 93, 95, 96, 97, 98, 107, 121, 128, 132, 134, 135, 142, 144, 146, 148, 155, 157, 159, 160, 161, 163, 165, 172, 174, 176, 177, 180, 181, 209, 210, 212, 213, 214, 215], "ndim": [0, 164, 199, 202, 203], "devic": [0, 14, 24, 25, 57, 58, 85, 86, 91, 97, 98, 107, 127, 128, 152, 153, 162, 163, 164, 165, 180, 182, 209, 212, 214], "dtype": [0, 5, 14, 58, 61, 71, 73, 83, 85, 86, 91, 92, 97, 98, 101, 107, 127, 128, 132, 135, 148, 162, 163, 164, 172, 174, 180, 184, 212, 213, 214], "all": [0, 5, 14, 18, 22, 24, 58, 91, 93, 136, 152, 153, 164, 165, 174, 176, 178, 179, 180, 181, 200, 201, 207, 209, 212, 214, 215], "thi": [0, 5, 7, 14, 18, 24, 28, 32, 39, 56, 57, 69, 75, 90, 95, 107, 110, 113, 114, 115, 116, 120, 125, 132, 133, 145, 146, 155, 156, 157, 158, 159, 165, 170, 172, 174, 176, 177, 178, 179, 180, 181, 183, 184, 200, 209, 210, 213, 214, 215], "return": [0, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 170, 176, 177, 178, 180, 181, 184, 185, 186, 187, 188, 189, 190, 191, 193, 194, 195, 197, 198, 199, 200, 201, 202, 203, 205, 207, 209, 212, 214], "tupl": [0, 1, 12, 13, 25, 30, 47, 55, 72, 75, 85, 93, 97, 119, 120, 122, 125, 127, 129, 132, 134, 136, 144, 145, 146, 148, 151, 155, 156, 157, 159, 162, 165, 174, 189, 199, 200, 202, 204, 207, 212], "includ": [0, 5, 12, 13, 14, 15, 16, 22, 38, 107, 117, 119, 120, 122, 132, 146, 148, 159, 165, 172, 176, 177, 178, 179, 181, 183, 193, 207, 209, 210, 213, 214], "those": [0, 5, 7, 14, 22, 172, 178, 181, 199, 202, 203, 209, 210, 212, 213, 214], "mean": [0, 24, 164, 174, 178, 180, 181, 184, 210, 212], "var": [0, 164], "std": [0, 164], "which": [0, 1, 5, 7, 12, 13, 14, 15, 16, 17, 18, 24, 28, 38, 39, 57, 58, 73, 75, 79, 85, 86, 89, 91, 92, 93, 95, 97, 98, 101, 107, 117, 119, 120, 122, 125, 127, 128, 132, 133, 136, 141, 145, 146, 148, 152, 153, 155, 156, 157, 158, 159, 160, 162, 163, 165, 176, 177, 178, 179, 180, 181, 186, 193, 201, 202, 203, 207, 209, 210, 212, 213, 214], "some": [0, 28, 90, 95, 110, 165, 176, 177, 178, 181, 184, 212, 214, 215], "common": [0, 165, 172, 174, 181, 183, 209, 212, 213, 214], "librari": [0, 5, 6, 7, 24, 28, 49, 55, 56, 57, 58, 84, 90, 95, 107, 110, 113, 114, 115, 116, 119, 120, 122, 125, 146, 155, 156, 157, 158, 159, 165, 174, 176, 177, 178, 179, 180, 181, 183, 184, 185, 189, 190, 199, 201, 209, 210, 212, 213, 214, 215], "g": [0, 5, 18, 24, 45, 49, 55, 84, 107, 119, 122, 125, 132, 135, 148, 155, 156, 157, 158, 165, 170, 172, 176, 177, 178, 179, 180, 181, 209, 210, 212, 213, 214], "numpi": [0, 18, 165, 174, 178, 180, 181, 209, 212, 213, 214, 215], "scalar": [0, 2, 47, 58, 164, 165, 207, 214], "valu": [0, 1, 2, 5, 8, 9, 11, 14, 15, 16, 17, 19, 20, 24, 26, 28, 29, 30, 31, 35, 37, 40, 41, 45, 47, 49, 55, 56, 58, 59, 61, 62, 74, 75, 83, 84, 87, 91, 94, 95, 97, 98, 99, 100, 105, 106, 107, 119, 120, 122, 123, 125, 126, 131, 132, 137, 141, 146, 148, 154, 155, 156, 157, 158, 159, 164, 170, 172, 174, 177, 178, 179, 184, 193, 194, 195, 198, 199, 200, 201, 202, 203, 207, 209, 212, 214], "rational": [0, 7, 165, 180, 181, 210, 212], "alwai": [0, 11, 20, 40, 58, 61, 123, 134, 165, 174, 178, 181], "necessari": [0, 24, 58, 134, 165, 178, 212], "1": [0, 1, 7, 9, 10, 12, 13, 14, 17, 24, 25, 28, 38, 45, 59, 61, 63, 64, 81, 82, 88, 89, 90, 92, 95, 107, 108, 109, 110, 111, 117, 129, 131, 132, 134, 138, 139, 141, 145, 146, 150, 151, 152, 153, 159, 160, 165, 178, 183, 186, 193, 200, 201, 202, 203, 206, 207], "acceler": [0, 5, 174, 180], "non": [0, 1, 12, 13, 15, 16, 61, 107, 113, 114, 115, 116, 119, 120, 122, 125, 132, 146, 151, 159, 160, 165, 172, 176, 181, 187, 193, 195, 202, 207, 214], "could": [0, 24, 155, 156, 157, 158, 174, 178, 183, 209, 212, 214], "forc": 0, "synchron": [0, 24, 57, 212], "2": [0, 1, 5, 7, 24, 25, 38, 59, 62, 63, 76, 111, 117, 151, 165, 178, 184, 193, 195, 198, 199, 200, 202, 203, 204, 205, 207], "delai": [0, 174, 212], "execut": [0, 172, 174, 181, 183, 212, 214], "model": [0, 55, 56, 214], "repres": [0, 10, 11, 20, 22, 23, 24, 27, 28, 32, 33, 40, 49, 60, 64, 82, 84, 95, 121, 123, 140, 150, 177, 181, 200, 201, 213, 214], "futur": [0, 24, 175, 178, 181, 183, 184, 189, 190, 211, 212, 214], "python": [0, 2, 5, 7, 23, 24, 27, 28, 32, 33, 39, 47, 58, 95, 133, 164, 165, 174, 180, 183, 184, 210, 212, 213], "x": [0, 1, 7, 8, 9, 10, 12, 13, 15, 16, 17, 19, 59, 60, 61, 62, 63, 64, 66, 72, 74, 81, 82, 86, 88, 89, 90, 93, 94, 96, 98, 102, 103, 104, 108, 109, 110, 111, 114, 118, 119, 120, 122, 124, 125, 128, 129, 130, 132, 134, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 149, 150, 152, 153, 154, 155, 156, 157, 158, 159, 163, 165, 178, 184, 185, 187, 188, 189, 190, 191, 193, 194, 195, 196, 198, 199, 200, 202, 203, 205, 207, 212, 214], "__pos__": [0, 164], "po": 0, "__neg__": [0, 164], "neg": [0, 12, 13, 14, 28, 39, 40, 42, 45, 49, 63, 75, 84, 89, 91, 93, 95, 102, 103, 107, 123, 131, 133, 136, 160, 164, 165, 202, 207, 212], "x1": [0, 7, 11, 20, 28, 39, 40, 45, 49, 63, 65, 67, 68, 69, 70, 84, 87, 95, 99, 100, 105, 106, 112, 113, 115, 116, 117, 123, 126, 131, 133, 147, 151, 160, 161, 186, 192, 197, 201, 204, 206], "x2": [0, 7, 11, 20, 28, 39, 40, 45, 49, 63, 65, 67, 68, 69, 70, 84, 87, 95, 99, 100, 105, 106, 112, 113, 115, 116, 117, 123, 126, 131, 133, 147, 151, 160, 161, 186, 192, 197, 201, 204, 206], "__add__": [0, 48, 164], "add": [0, 5, 7, 20, 147, 164, 165, 176, 177, 181], "__sub__": [0, 164], "sub": [0, 165], "__mul__": [0, 164], "mul": 0, "__truediv__": [0, 164], "truediv": 0, "__floordiv__": [0, 164], "floordiv": 0, "__mod__": [0, 164], "mod": 0, "__pow__": [0, 164], "pow": [0, 45, 164, 177], "should": [0, 5, 8, 9, 10, 11, 15, 16, 18, 19, 20, 21, 22, 28, 29, 31, 34, 35, 36, 37, 38, 39, 40, 42, 43, 44, 45, 46, 48, 49, 50, 53, 55, 57, 58, 59, 60, 62, 63, 64, 65, 66, 67, 68, 69, 70, 72, 74, 81, 82, 84, 88, 90, 94, 95, 99, 100, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 121, 122, 123, 124, 130, 131, 132, 133, 137, 138, 139, 140, 142, 143, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 165, 170, 176, 177, 180, 181, 184, 185, 186, 187, 191, 193, 194, 195, 197, 198, 199, 200, 201, 202, 203, 205, 207, 209, 212, 214, 215], "numer": [0, 8, 11, 15, 16, 19, 20, 28, 29, 31, 35, 37, 38, 39, 40, 42, 44, 45, 48, 49, 61, 74, 84, 94, 95, 99, 100, 102, 103, 104, 105, 106, 113, 114, 115, 116, 117, 119, 121, 122, 123, 124, 130, 131, 132, 133, 137, 138, 143, 147, 148, 151, 154, 160, 164, 172, 177, 186, 197, 200, 205, 209, 212, 214], "__matmul__": [0, 164], "matmul": [0, 38, 164, 172, 208, 209], "The": [0, 1, 5, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 24, 26, 28, 29, 30, 31, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 53, 55, 56, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 74, 75, 81, 82, 84, 87, 88, 90, 93, 94, 95, 96, 99, 100, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 122, 123, 124, 125, 126, 129, 130, 131, 132, 133, 137, 138, 139, 140, 141, 142, 143, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 165, 172, 174, 176, 177, 178, 179, 180, 181, 183, 185, 186, 187, 188, 189, 190, 191, 193, 194, 195, 197, 198, 199, 200, 201, 202, 203, 205, 207, 209, 210, 212, 213, 214, 215], "__invert__": [0, 164], "inv": [0, 208, 209], "invert": [0, 66, 194], "__inv__": 0, "__and__": [0, 164], "__or__": [0, 164], "__xor__": [0, 164], "xor": [0, 70, 116], "__lshift__": [0, 164], "lshift": 0, "__rshift__": [0, 164], "rshift": 0, "integ": [0, 8, 12, 13, 14, 19, 21, 24, 28, 32, 33, 34, 36, 39, 42, 43, 45, 46, 49, 50, 58, 65, 66, 67, 68, 69, 70, 74, 84, 94, 95, 97, 101, 107, 119, 120, 122, 124, 131, 132, 133, 135, 137, 146, 148, 151, 154, 159, 160, 164, 165, 177, 194, 207, 212], "boolean": [0, 21, 23, 34, 41, 43, 50, 55, 58, 61, 65, 66, 68, 70, 83, 97, 107, 113, 114, 115, 116, 134, 161, 164, 172], "__lt__": [0, 164], "lt": 0, "__le__": [0, 164], "le": 0, "__gt__": [0, 164], "gt": 0, "__ge__": [0, 164], "ge": 0, "__eq__": [0, 164, 181], "eq": 0, "__ne__": [0, 164], "ne": 0, "ani": [0, 22, 24, 26, 41, 57, 83, 87, 126, 164, 165, 172, 178, 180, 184, 210, 212, 215], "chang": [0, 1, 107, 134, 174, 210, 212, 214, 215], "shape": [0, 1, 17, 38, 53, 61, 71, 72, 75, 85, 86, 89, 93, 97, 98, 117, 118, 121, 127, 128, 134, 136, 141, 145, 151, 152, 153, 160, 162, 163, 164, 182, 184, 185, 186, 187, 188, 189, 190, 191, 193, 194, 195, 197, 198, 199, 200, 201, 202, 203, 205, 212, 214], "result": [0, 1, 8, 9, 10, 11, 12, 13, 14, 15, 16, 19, 20, 21, 26, 28, 29, 31, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 59, 60, 62, 63, 64, 65, 66, 67, 68, 69, 70, 74, 81, 82, 84, 87, 88, 90, 94, 95, 99, 100, 102, 103, 104, 105, 106, 108, 109, 110, 111, 112, 113, 114, 115, 116, 119, 120, 122, 123, 124, 126, 130, 131, 132, 133, 135, 137, 138, 139, 140, 142, 143, 145, 146, 147, 148, 149, 150, 151, 154, 155, 159, 165, 170, 172, 177, 178, 185, 188, 193, 194, 200, 207, 212, 213, 214, 215], "same": [0, 5, 7, 8, 11, 14, 17, 18, 19, 20, 28, 30, 34, 36, 38, 39, 40, 44, 46, 48, 49, 53, 57, 61, 66, 71, 72, 74, 75, 84, 86, 89, 93, 94, 95, 98, 117, 118, 119, 120, 121, 122, 123, 128, 129, 130, 132, 133, 134, 136, 137, 138, 141, 144, 145, 146, 147, 148, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 163, 165, 172, 174, 178, 180, 181, 184, 185, 186, 187, 188, 189, 190, 191, 194, 198, 199, 201, 202, 203, 205, 209, 212, 214], "behavior": [0, 5, 6, 28, 39, 45, 47, 58, 95, 97, 98, 107, 131, 133, 155, 156, 157, 158, 165, 172, 174, 177, 183, 209, 210, 212, 213, 214, 215], "special": [0, 8, 9, 10, 11, 19, 20, 28, 39, 40, 45, 49, 59, 60, 62, 63, 64, 74, 81, 82, 84, 88, 90, 94, 95, 108, 109, 110, 111, 112, 119, 120, 122, 123, 131, 132, 133, 137, 138, 139, 140, 142, 146, 148, 149, 150, 154, 159, 176], "case": [0, 8, 9, 10, 11, 14, 19, 20, 28, 39, 40, 45, 49, 58, 59, 60, 62, 63, 64, 74, 81, 82, 84, 88, 90, 94, 95, 108, 109, 110, 111, 112, 119, 120, 121, 122, 123, 131, 132, 133, 134, 137, 138, 139, 140, 142, 146, 148, 149, 150, 154, 159, 165, 174, 176, 177, 178, 181, 200, 209, 211, 212, 215], "its": [0, 24, 38, 71, 117, 134, 136, 177, 181, 212, 213, 214], "respect": [0, 8, 11, 19, 20, 21, 26, 28, 29, 31, 35, 36, 37, 39, 40, 41, 43, 46, 48, 49, 50, 63, 65, 67, 68, 69, 70, 84, 87, 95, 99, 100, 105, 106, 112, 113, 115, 116, 121, 123, 126, 133, 147, 151, 177, 179, 181, 199], "binari": [0, 5, 65, 68, 70, 176], "two": [0, 1, 14, 18, 38, 53, 63, 69, 91, 117, 118, 121, 137, 151, 152, 153, 155, 156, 157, 158, 160, 165, 172, 180, 181, 183, 185, 187, 188, 189, 190, 191, 193, 194, 195, 197, 198, 199, 200, 201, 202, 203, 205, 209, 212, 213, 214, 215], "operand": [0, 8, 9, 10, 11, 19, 20, 28, 39, 40, 45, 49, 59, 60, 62, 63, 64, 74, 81, 82, 84, 88, 90, 94, 95, 108, 109, 110, 111, 112, 119, 122, 123, 131, 132, 133, 137, 139, 140, 142, 148, 149, 150, 154, 172, 177], "assign": [0, 178], "For": [0, 5, 7, 8, 9, 10, 11, 19, 20, 24, 28, 39, 40, 42, 45, 49, 55, 56, 59, 60, 62, 63, 64, 74, 81, 82, 84, 88, 90, 94, 95, 108, 109, 110, 111, 112, 119, 121, 122, 123, 124, 131, 132, 133, 137, 139, 140, 142, 145, 148, 149, 150, 154, 155, 156, 157, 158, 165, 170, 174, 177, 179, 181, 200, 202, 203, 205, 212, 214, 215], "exampl": [0, 22, 145, 164, 165, 174, 178, 179, 181, 183, 184, 205, 209, 212, 214, 215], "after": [0, 38, 117, 142], "addit": [0, 5, 6, 7, 11, 20, 48, 57, 147, 165, 172, 176, 180, 209, 212, 213, 215], "modifi": [0, 178], "equival": [0, 19, 20, 21, 26, 28, 29, 31, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 69, 95, 113, 114, 115, 116, 133, 165, 172, 178, 195, 198, 201, 207, 212], "discuss": [0, 180, 181, 183, 212, 213, 214], "copi": [0, 1, 57, 58, 61, 96, 134, 141, 176, 180, 181, 182, 212], "view": [0, 96, 182], "behaviour": [0, 182, 212, 214], "mutabl": [0, 182], "mai": [0, 5, 6, 7, 14, 17, 22, 24, 26, 28, 41, 49, 55, 56, 57, 58, 83, 84, 87, 95, 96, 107, 113, 114, 115, 116, 119, 120, 122, 125, 126, 141, 146, 155, 156, 157, 158, 159, 165, 170, 172, 174, 176, 177, 178, 179, 181, 183, 184, 200, 209, 212, 213, 214], "via": [0, 24, 28, 95, 165, 176, 180, 181, 183, 210, 212], "__iadd__": 0, "__isub__": 0, "__imul__": 0, "__itruediv__": 0, "__ifloordiv__": 0, "__ipow__": 0, "__imod__": 0, "__imatmul__": 0, "__iand__": 0, "__ior__": 0, "__ixor__": 0, "__ilshift__": 0, "__irshift__": 0, "appli": [0, 75, 135, 145, 151, 165, 172, 174, 195, 198, 209, 212, 214], "match": [0, 1, 28, 39, 61, 95, 133, 151, 214], "op": [0, 172], "__radd__": 0, "__rsub__": 0, "__rmul__": 0, "__rtruediv__": 0, "__rfloordiv__": 0, "__rpow__": 0, "__rmod__": 0, "__rmatmul__": 0, "__rand__": 0, "__ror__": 0, "__rxor__": 0, "__rlshift__": 0, "__rrshift__": 0, "arrai": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 79, 81, 82, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 166, 167, 168, 169, 170, 171, 173, 174, 176, 177, 178, 179, 180, 181, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 209, 210, 213, 215], "refer": [1, 12, 13, 90, 91, 110, 146, 159, 160, 165, 178, 184], "automat": [1, 212], "implicit": [1, 181, 212], "expans": [1, 212], "size": [1, 12, 13, 89, 107, 125, 136, 144, 151, 160, 164, 165, 179, 183, 188, 197, 199, 202, 212], "without": [1, 7, 24, 55, 125, 134, 155, 156, 157, 158, 174, 176, 177, 179, 212, 214], "purpos": [1, 5, 90, 110, 174, 200, 209, 211, 214], "make": [1, 7, 174, 176, 177, 178, 180, 210, 212], "differ": [1, 11, 20, 28, 40, 47, 48, 49, 75, 84, 92, 95, 123, 132, 145, 147, 148, 165, 174, 178, 181, 200, 209, 212, 213, 214], "compat": [1, 11, 12, 13, 15, 16, 20, 21, 26, 28, 29, 31, 35, 36, 37, 38, 39, 40, 41, 43, 45, 46, 47, 48, 49, 50, 63, 65, 67, 68, 69, 70, 72, 84, 87, 95, 99, 100, 105, 106, 107, 112, 113, 115, 116, 117, 119, 120, 122, 123, 126, 131, 132, 133, 134, 146, 147, 148, 159, 160, 161, 172, 178, 193, 195, 198, 201, 207, 212, 214], "element": [1, 8, 9, 10, 11, 12, 13, 14, 19, 20, 21, 23, 26, 27, 28, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 52, 56, 59, 60, 62, 63, 64, 65, 66, 67, 68, 69, 70, 74, 81, 82, 84, 87, 88, 90, 91, 93, 94, 95, 97, 98, 99, 100, 102, 103, 104, 105, 106, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 122, 123, 124, 125, 126, 130, 131, 132, 133, 134, 136, 137, 138, 139, 140, 142, 143, 144, 146, 147, 148, 149, 150, 152, 153, 154, 155, 156, 157, 158, 159, 161, 164, 165, 177, 186, 189, 199, 200, 202, 212], "wise": [1, 8, 9, 11, 19, 20, 21, 26, 28, 29, 31, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 59, 62, 63, 65, 66, 67, 68, 69, 70, 84, 87, 95, 99, 100, 105, 106, 112, 113, 114, 115, 116, 123, 126, 131, 133, 147, 164, 177, 212], "oper": [1, 6, 11, 18, 20, 24, 28, 32, 38, 39, 49, 55, 56, 57, 69, 84, 95, 117, 133, 135, 164, 165, 166, 169, 171, 172, 173, 178, 179, 180, 181, 209, 210, 212, 213, 214], "facilit": [1, 170, 174], "user": [1, 7, 174, 176, 177, 178, 181, 183, 209, 212, 213, 214], "ergonom": 1, "encourag": [1, 212, 213], "avoid": [1, 28, 90, 95, 110, 176, 178, 181, 209, 212, 214], "unnecessari": [1, 209], "can": [1, 7, 24, 58, 73, 165, 172, 174, 176, 178, 180, 181, 184, 209, 212, 213, 214, 215], "potenti": [1, 24, 90, 110, 178, 212], "enabl": [1, 181, 183, 184, 212], "more": [1, 5, 7, 14, 18, 24, 28, 38, 56, 58, 71, 90, 93, 95, 110, 117, 125, 155, 156, 157, 158, 165, 172, 174, 176, 177, 178, 179, 180, 181, 183, 184, 200, 209, 210, 212, 213, 215], "memori": [1, 58, 134, 174, 178, 179, 181, 212, 214], "effici": [1, 174, 178], "through": [1, 58, 63, 210, 213, 214], "vector": [1, 38, 117, 121, 160, 186, 189, 197, 202, 203, 207, 209, 212], "reduc": [1, 12, 13, 15, 16, 119, 120, 122, 132, 146, 148, 159, 165, 199, 209, 213, 214], "consumpt": [1, 24, 213], "cach": 1, "local": [1, 181], "given": [1, 22, 57, 93, 136, 172, 178, 181, 184, 209, 210, 212, 214], "involv": [1, 11, 20, 28, 40, 49, 84, 95, 123, 135, 172, 177, 181, 183], "singleton": [1, 12, 13, 15, 16, 89, 119, 120, 122, 132, 144, 146, 148, 159, 193, 207, 212], "whose": [1, 5, 10, 18, 45, 53, 60, 64, 81, 82, 91, 93, 118, 131, 136, 139, 140, 149, 150, 151, 152, 153, 155, 156, 157, 165, 178, 185, 187, 188, 189, 190, 191, 193, 194, 195, 197, 198, 199, 200, 201, 202, 203, 205, 212, 214], "one": [1, 14, 18, 24, 28, 38, 49, 56, 58, 71, 73, 84, 89, 91, 93, 95, 107, 117, 121, 125, 144, 155, 156, 157, 158, 160, 165, 174, 176, 178, 180, 181, 183, 184, 197, 199, 207, 209, 210, 212, 214], "virtual": 1, "repeat": [1, 165, 214], "across": [1, 5, 28, 95, 177, 181, 212], "correspond": [1, 15, 16, 22, 45, 63, 71, 131, 132, 134, 136, 146, 148, 151, 155, 156, 157, 158, 159, 165, 177, 186, 189, 193, 200, 201, 212], "If": [1, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 24, 28, 38, 39, 40, 45, 49, 53, 55, 57, 58, 59, 60, 61, 62, 63, 64, 72, 74, 75, 81, 82, 84, 85, 86, 88, 89, 90, 91, 93, 94, 95, 97, 98, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 121, 122, 123, 125, 127, 128, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 144, 145, 146, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 162, 163, 165, 176, 181, 185, 186, 193, 194, 195, 198, 199, 200, 201, 202, 207, 212, 214], "unequ": 1, "lower": [1, 91, 152, 185], "higher": [1, 165, 176, 209, 213], "prepend": [1, 38, 89, 117], "until": 1, "store": [1, 181, 205], "determin": [1, 9, 10, 11, 12, 13, 20, 21, 24, 28, 38, 39, 40, 42, 43, 45, 48, 49, 50, 59, 60, 62, 63, 64, 65, 67, 68, 69, 70, 73, 75, 81, 82, 84, 88, 90, 95, 102, 103, 104, 108, 109, 110, 111, 112, 117, 123, 124, 131, 133, 139, 140, 142, 143, 147, 149, 150, 151, 155, 156, 157, 158, 160, 161, 172, 180, 181, 185, 186, 187, 188, 191, 193, 194, 195, 197, 198, 199, 200, 201, 205, 207, 209, 212], "let": [1, 19, 20, 28, 39, 40, 45, 49, 120, 132, 146, 148, 159, 165, 183], "b": [1, 28, 55, 95, 145, 165, 178, 201, 214], "both": [1, 28, 38, 45, 49, 63, 84, 95, 117, 131, 151, 160, 165, 178, 180, 184, 186, 209, 212, 213], "shape1": 1, "describ": [1, 5, 132, 148, 172, 180, 212], "shape2": 1, "n1": [1, 121], "len": [1, 121], "n2": [1, 121], "maximum": [1, 15, 107, 119, 122, 177, 193], "max": [1, 92, 101, 164, 165, 193, 195, 198], "temporari": 1, "list": [1, 71, 75, 121, 145, 165, 174, 181, 212, 214], "length": [1, 14, 121, 134, 151, 165, 202, 203], "while": [1, 28, 95, 107, 113, 114, 115, 116, 120, 146, 155, 156, 159, 165, 170, 174, 178, 179, 181, 209, 213, 214, 215], "0": [1, 5, 8, 9, 10, 11, 14, 19, 20, 24, 28, 36, 39, 40, 45, 46, 49, 55, 59, 60, 61, 62, 63, 64, 67, 69, 74, 75, 81, 82, 84, 88, 89, 90, 91, 92, 94, 95, 108, 109, 110, 111, 120, 123, 129, 131, 132, 133, 137, 138, 139, 140, 142, 145, 146, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 165, 170, 172, 178, 188, 193, 200, 202, 203, 205, 207, 212, 214], "d1": 1, "els": [1, 174, 213], "d2": 1, "set": [1, 17, 47, 63, 141, 146, 152, 153, 155, 157, 158, 159, 164, 165, 176, 177, 178, 181, 183, 184, 186, 195, 198, 201, 209, 212, 214, 215], "th": [1, 165], "throw": 1, "except": [1, 5, 12, 13, 72, 75, 89, 91, 107, 125, 145, 165, 172, 174, 177, 178, 181, 198, 210, 212, 213, 214], "demonstr": 1, "applic": [1, 172, 209, 212, 213], "4d": 1, "8": [1, 5, 7, 25, 172, 174], "6": [1, 7], "3d": 1, "7": [1, 7, 25, 184], "5": [1, 165, 212], "2d": 1, "4": [1, 5, 25, 63, 165, 183, 213], "1d": 1, "15": 1, "3": [1, 5, 7, 25, 80, 174, 178, 181, 186], "do": [1, 24, 39, 133, 170, 174, 176, 178, 180, 181, 209, 210, 212, 214, 215], "doe": [1, 14, 165, 172, 174, 176, 177, 178, 179, 181, 184, 209, 212, 214, 215], "second": [1, 11, 63, 65, 67, 68, 69, 70, 87, 99, 100, 105, 106, 112, 113, 115, 116, 117, 123, 126, 131, 145, 147, 151, 155, 156, 157, 160, 161, 186, 189, 197, 199, 200, 202, 203, 212], "append": [1, 38, 67, 89, 117, 188], "As": [1, 107, 155, 156, 157, 158, 174, 180, 184, 214], "impli": [1, 155, 156, 157, 158, 212], "each": [2, 8, 9, 10, 11, 19, 20, 21, 26, 28, 29, 31, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 59, 60, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 74, 81, 82, 84, 87, 88, 90, 94, 95, 99, 100, 102, 103, 104, 105, 106, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 121, 123, 124, 125, 126, 130, 131, 133, 136, 137, 138, 139, 140, 142, 143, 145, 147, 149, 150, 151, 154, 155, 156, 165, 174, 177, 180, 184, 185, 186, 187, 189, 193, 194, 195, 198, 199, 200, 201, 202, 203, 209, 212, 213, 214], "creat": [3, 14, 58, 85, 86, 91, 97, 98, 107, 127, 128, 162, 163, 169, 174, 181, 209, 212], "true": [5, 12, 13, 15, 16, 17, 28, 58, 61, 73, 95, 102, 103, 104, 107, 113, 114, 115, 116, 119, 120, 122, 132, 134, 141, 146, 148, 155, 156, 157, 158, 159, 161, 165, 185, 193, 202, 207, 209], "fals": [5, 12, 13, 15, 16, 17, 58, 61, 73, 102, 103, 104, 107, 113, 114, 115, 116, 119, 120, 122, 132, 134, 141, 146, 148, 155, 156, 157, 158, 159, 165, 185, 193, 202, 207], "bit": [5, 66, 67, 69, 92, 101, 132, 148, 172, 177], "sign": [5, 8, 11, 14, 19, 20, 28, 39, 40, 42, 49, 63, 69, 84, 95, 123, 124, 132, 133, 148, 155, 156, 157, 158, 164, 170, 200], "exist": [5, 7, 58, 75, 134, 174, 180, 181, 210, 212, 213], "interv": [5, 12, 13, 14, 89, 107, 145, 152, 153, 160, 165, 210], "128": 5, "127": 5, "16": [5, 172], "32": [5, 172], "767": 5, "147": 5, "483": 5, "647": 5, "64": [5, 172], "9": [5, 25], "223": 5, "372": 5, "036": 5, "854": 5, "775": 5, "807": 5, "unsign": [5, 132, 148, 164], "255": 5, "65": 5, "535": 5, "294": 5, "967": 5, "295": 5, "18": 5, "446": 5, "744": 5, "073": 5, "709": 5, "551": 5, "615": 5, "singl": [5, 7, 23, 27, 32, 33, 155, 156, 164, 172, 176, 180, 181, 184, 209, 212, 213, 214], "precis": [5, 40, 58, 92, 97, 98, 123, 142, 172, 177, 200, 212], "see": [5, 6, 11, 12, 13, 15, 16, 20, 21, 24, 26, 28, 29, 30, 31, 32, 35, 36, 37, 38, 39, 40, 41, 43, 45, 46, 47, 48, 49, 50, 51, 57, 63, 65, 67, 68, 69, 70, 72, 84, 87, 90, 95, 96, 98, 99, 100, 105, 106, 110, 112, 113, 115, 116, 117, 119, 120, 122, 123, 125, 126, 131, 132, 133, 135, 146, 147, 148, 155, 156, 157, 158, 159, 160, 161, 165, 172, 174, 176, 179, 180, 181, 184, 193, 195, 198, 201, 207, 212, 213, 214, 215], "doubl": [5, 151, 172], "requir": [5, 6, 57, 142, 145, 165, 170, 172, 174, 176, 177, 178, 179, 180, 181, 184, 189, 190, 209, 212, 213, 214], "subnorm": 5, "k": [5, 38, 91, 117, 125, 152, 153, 165, 199, 201, 202, 203, 205, 212], "denorm": 5, "us": [5, 7, 18, 24, 25, 57, 58, 79, 107, 136, 155, 157, 165, 172, 177, 178, 179, 180, 181, 183, 184, 209, 210, 211, 212, 215], "gradual": [5, 212], "underflow": [5, 28, 49, 84, 95, 200], "howev": [5, 7, 28, 55, 95, 107, 174, 176, 177, 178, 179, 181, 200, 209, 210, 212, 214], "hardwar": [5, 51, 177, 180, 181, 209, 212], "univers": [5, 176, 181, 209, 212], "mani": [5, 212, 214], "platform": 5, "compil": [5, 174, 176, 179, 212], "toggl": 5, "daz": 5, "flush": 5, "ftz": 5, "increas": [5, 177, 213], "perform": [5, 12, 13, 24, 38, 57, 58, 117, 151, 165, 176, 177, 178, 179, 180, 202, 203, 209, 212, 213, 214], "guard": 5, "against": [5, 38, 71, 117, 165, 195, 198, 215], "time": [5, 7, 15, 16, 155, 156, 174, 179, 180, 183, 209, 212, 214], "attack": 5, "accordingli": [5, 12, 13, 15, 16, 28, 57, 90, 95, 107, 110, 119, 120, 121, 122, 125, 132, 146, 148, 155, 156, 157, 158, 159, 165, 172, 177, 178, 179, 181, 193, 207, 209], "left": [5, 7, 28, 58, 67, 95, 97, 165, 172, 189, 190, 202, 212], "unspecifi": [5, 28, 39, 45, 49, 58, 75, 84, 95, 97, 98, 107, 131, 133, 145, 165, 170, 172, 189, 190, 212], "thu": [5, 28, 39, 45, 55, 58, 69, 95, 97, 98, 107, 131, 133, 170, 177, 189, 190, 209], "vari": [5, 155, 156, 157, 158, 172, 177], "complex64": [5, 212], "complex128": [5, 212], "expect": [5, 28, 95, 172, 177, 179, 180, 181, 184, 212], "next": [5, 92, 212], "version": [5, 22, 24, 174, 176, 181, 183, 184, 189, 190, 212, 214], "cast": [5, 47, 58, 61, 73, 132, 148, 172, 212, 214], "ad": [5, 7, 165, 175, 176, 181, 189, 190, 210], "issu": [5, 176, 178, 180, 181, 183, 212, 214], "102": 5, "detail": [5, 24, 30, 47, 96, 125, 155, 156, 157, 158, 165, 174, 179, 181, 183, 209, 212, 214], "beyond": [5, 136, 172, 212], "specifi": [5, 12, 13, 14, 15, 16, 17, 24, 39, 57, 58, 61, 72, 75, 85, 89, 93, 97, 107, 127, 132, 133, 136, 144, 145, 148, 151, 152, 153, 155, 156, 157, 158, 160, 162, 165, 172, 177, 178, 180, 181, 184, 188, 205, 207, 209, 210, 212, 214, 215], "function": [5, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 26, 28, 29, 31, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 58, 63, 72, 75, 88, 90, 93, 107, 110, 113, 114, 115, 116, 117, 120, 125, 133, 134, 141, 145, 146, 155, 156, 157, 158, 159, 160, 164, 174, 176, 178, 179, 180, 181, 183, 184, 186, 189, 190, 200, 209, 210, 212, 213, 214], "attribut": [5, 22, 92, 101, 164, 210, 212, 213, 214], "other": [5, 20, 21, 22, 24, 26, 28, 29, 31, 35, 36, 37, 38, 39, 40, 41, 43, 45, 46, 48, 49, 50, 83, 90, 95, 110, 146, 159, 165, 174, 177, 178, 179, 180, 181, 184, 209, 212, 214], "wai": [5, 174, 176, 181, 210, 212, 213, 214, 215], "f4": [5, 172], "ensur": [5, 24, 174, 177, 209, 212, 213, 214], "portabl": [5, 57, 107, 177, 178, 181, 212], "consum": [5, 24, 174, 178, 184, 212, 213], "recommend": [5, 7, 18, 22, 24, 39, 107, 113, 114, 115, 116, 120, 133, 146, 159, 170, 177, 180, 181, 212], "either": [5, 11, 20, 24, 28, 38, 39, 40, 49, 63, 84, 95, 96, 103, 108, 109, 111, 112, 117, 123, 132, 133, 138, 139, 148, 149, 165, 177, 178, 184, 200, 212, 213, 215], "index": [5, 15, 16, 17, 30, 32, 47, 55, 79, 91, 121, 125, 145, 155, 156, 157, 164, 212, 214], "depend": [5, 8, 9, 10, 17, 19, 24, 42, 45, 49, 55, 56, 57, 59, 60, 61, 62, 63, 64, 81, 82, 84, 88, 90, 108, 109, 110, 111, 124, 131, 139, 140, 141, 149, 150, 161, 170, 172, 177, 180, 182, 184, 189, 190, 199, 200, 201, 202, 209, 212, 214, 215], "whether": [5, 12, 13, 57, 58, 61, 83, 104, 107, 134, 181, 185, 189, 190, 199, 201, 212, 214], "clearli": [5, 57, 170, 209, 210], "": [5, 28, 30, 47, 56, 57, 58, 76, 95, 121, 133, 146, 152, 153, 159, 165, 170, 174, 176, 177, 178, 180, 181, 184, 202, 203, 209, 210, 212, 214], "document": [5, 7, 28, 57, 95, 170, 176, 180, 210, 213, 214, 215], "organ": [5, 209, 213, 214], "within": [5, 14, 25, 165, 172, 174, 181, 212], "accord": [5, 11, 20, 28, 40, 49, 58, 69, 73, 84, 92, 95, 123, 146, 159, 160, 165, 177], "These": [5, 178, 189, 213], "intend": [5, 132, 148, 174], "complex": [5, 177, 180, 181, 189, 190, 202, 209, 212, 213], "subset": [6, 177, 213, 214], "input": [6, 8, 9, 10, 11, 12, 13, 15, 16, 17, 28, 39, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 73, 74, 75, 81, 82, 84, 86, 87, 88, 89, 90, 93, 94, 95, 96, 98, 99, 100, 102, 103, 104, 105, 106, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 163, 170, 174, 179, 181, 184, 185, 186, 187, 188, 189, 190, 191, 193, 194, 195, 197, 198, 199, 200, 201, 202, 203, 205, 207, 209, 212, 214], "choos": [6, 28, 49, 55, 57, 84, 95, 107, 113, 114, 115, 116, 119, 120, 122, 125, 146, 155, 156, 157, 158, 159, 165, 170, 178, 179, 181, 212, 214], "categori": [6, 164], "mathemat": [6, 11, 18, 20, 28, 40, 49, 63, 80, 84, 90, 95, 110, 123, 193, 207], "satisfi": [6, 165, 177, 213], "minimum": [6, 8, 16, 19, 42, 119, 122, 124, 177], "accuraci": [6, 182], "incompat": [7, 72, 174, 210, 212], "normal": [7, 75, 145], "practic": [7, 18, 165, 209, 213], "avail": [7, 174, 180, 210, 213], "still": [7, 184, 209, 213, 214, 215], "consid": [7, 113, 114, 115, 116, 155, 156, 157, 158, 181, 209, 212, 214, 215], "compliant": [7, 49, 84, 90, 107, 110, 113, 114, 115, 116, 119, 120, 122, 146, 159, 177, 179, 181, 210, 212], "namespac": [7, 22, 174, 210, 212, 215], "altern": [7, 178, 180, 215], "thei": [7, 24, 172, 176, 180, 181, 183, 184, 209, 210, 212, 214, 215], "guidanc": [7, 47, 176, 212], "were": [7, 28, 95, 212], "lead": [7, 28, 95, 199, 202, 212], "readabl": [7, 172, 209, 213], "code": [7, 57, 172, 178, 179, 181, 184, 209, 212, 213, 214], "easier": [7, 174, 178, 209], "evolv": [7, 174, 209], "over": [7, 12, 13, 107, 119, 120, 122, 132, 146, 148, 151, 159, 160, 177, 178, 180, 181, 183, 207, 209, 212], "worri": 7, "about": [7, 24, 92, 101, 178, 209, 212, 214, 215], "multipl": [7, 12, 13, 15, 16, 38, 40, 117, 119, 120, 122, 123, 132, 146, 148, 159, 165, 174, 176, 180, 181, 183, 184, 191, 209, 210, 212, 214], "xi": [7, 121], "annot": [7, 184, 212], "out": [7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 165, 176, 178, 180, 183, 185, 186, 187, 188, 189, 190, 191, 193, 194, 195, 197, 198, 199, 200, 201, 202, 203, 205, 207, 214], "themselv": [7, 181], "individu": [7, 181, 183, 184, 212, 213], "descript": [7, 177, 193, 207], "aim": [7, 176, 184, 209, 210, 212, 213, 214, 215], "strongli": [7, 178, 214], "look": [7, 214], "like": [7, 174, 176, 178, 184, 210, 212, 213, 214], "funcnam": 7, "key1": 7, "key2": 7, "none": [7, 12, 13, 14, 15, 16, 22, 24, 30, 47, 55, 56, 57, 58, 75, 79, 85, 86, 91, 93, 97, 98, 107, 119, 120, 122, 127, 128, 132, 134, 136, 146, 148, 159, 162, 163, 165, 181, 193, 195, 198, 207, 212, 213, 215], "int": [7, 12, 13, 14, 15, 16, 17, 20, 21, 24, 25, 26, 28, 29, 30, 31, 32, 33, 35, 36, 37, 39, 40, 41, 43, 45, 46, 47, 48, 49, 50, 54, 55, 56, 57, 58, 72, 75, 85, 89, 91, 92, 93, 95, 97, 98, 101, 107, 119, 120, 122, 127, 129, 132, 134, 136, 141, 144, 145, 146, 148, 151, 152, 153, 159, 160, 162, 165, 172, 186, 188, 193, 194, 204, 205, 206, 207, 213], "str": [7, 22, 213], "modulo": 7, "self": [7, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 57, 83, 214], "calcul": [8, 9, 10, 11, 19, 20, 40, 45, 48, 59, 60, 62, 63, 64, 81, 82, 84, 88, 90, 108, 109, 110, 111, 112, 119, 120, 122, 123, 131, 132, 139, 140, 142, 146, 147, 148, 149, 150, 159, 200], "absolut": [8, 19, 177, 178, 193, 194, 200, 209], "x_i": [8, 9, 10, 19, 59, 60, 62, 64, 66, 74, 81, 82, 88, 90, 94, 102, 103, 104, 108, 109, 110, 111, 114, 119, 120, 122, 124, 130, 132, 137, 138, 139, 140, 142, 143, 146, 148, 149, 150, 154, 155, 156, 157, 158, 159], "ha": [8, 19, 22, 28, 38, 40, 45, 49, 53, 84, 89, 95, 98, 117, 120, 121, 123, 131, 132, 144, 146, 148, 155, 156, 157, 158, 159, 165, 172, 174, 180, 181, 183, 201, 202, 205, 209, 210, 212, 214, 215], "magnitud": [8, 11, 19, 20, 28, 40, 49, 84, 95, 123, 202, 203], "represent": [8, 11, 19, 20, 28, 40, 42, 49, 65, 68, 70, 76, 77, 78, 80, 84, 92, 95, 101, 123, 124, 177, 213], "nan": [8, 9, 10, 11, 12, 13, 19, 20, 28, 39, 40, 45, 49, 59, 60, 61, 62, 63, 64, 74, 81, 82, 84, 88, 90, 94, 95, 102, 104, 108, 109, 110, 111, 112, 119, 120, 122, 123, 131, 132, 133, 137, 139, 140, 142, 146, 148, 149, 150, 154, 155, 156, 157, 158, 159, 164, 170, 212], "infin": [8, 10, 11, 12, 13, 19, 20, 28, 39, 40, 45, 49, 60, 61, 62, 63, 64, 74, 77, 81, 82, 84, 88, 90, 94, 95, 102, 103, 108, 109, 110, 111, 112, 119, 122, 123, 131, 133, 137, 139, 140, 142, 149, 150, 154, 200, 207], "contain": [8, 9, 10, 11, 12, 13, 14, 15, 16, 19, 20, 21, 22, 24, 26, 28, 29, 30, 31, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 58, 59, 60, 62, 63, 64, 65, 66, 67, 68, 69, 70, 74, 75, 81, 82, 84, 85, 86, 87, 88, 90, 94, 95, 96, 99, 100, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 122, 123, 124, 125, 126, 127, 129, 130, 131, 132, 133, 137, 138, 139, 140, 142, 143, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 162, 165, 177, 178, 180, 183, 185, 186, 187, 188, 189, 190, 191, 193, 194, 195, 197, 198, 199, 200, 201, 202, 203, 205, 207, 212, 214], "approxim": [9, 10, 28, 45, 59, 60, 62, 63, 64, 81, 82, 88, 90, 95, 108, 109, 110, 111, 131, 139, 140, 149, 150, 177, 195, 198], "princip": [9, 59, 62, 209], "invers": [9, 10, 59, 60, 62, 63, 64, 191, 194, 198, 209], "cosin": [9, 10, 81, 82], "domain": [9, 10, 59, 60, 62, 63, 64, 81, 82, 88, 90, 108, 109, 110, 111, 139, 140, 142, 149, 150, 177, 212, 214], "codomain": [9, 10, 59, 60, 62, 63, 64, 81, 82, 88, 90, 108, 109, 110, 111, 139, 140, 142, 149, 150], "\u03c0": [9, 59, 62, 63, 80], "express": [9, 59, 62, 63, 81, 139, 149, 165, 172, 178, 209], "radian": [9, 59, 62, 63, 81, 139, 149], "less": [9, 10, 28, 37, 39, 45, 49, 59, 63, 64, 74, 84, 95, 108, 109, 110, 111, 131, 133, 138, 142, 146, 159, 164, 165, 178, 193, 194, 195, 198, 207, 212], "hyperbol": [10, 60, 64, 82, 140, 150], "area": [10, 60, 64], "sector": [10, 60, 64], "sum": [11, 20, 112, 164, 193, 205, 207, 209], "x1_i": [11, 20, 28, 39, 40, 45, 49, 63, 65, 67, 68, 69, 70, 84, 87, 95, 99, 100, 105, 106, 112, 113, 115, 116, 123, 126, 131, 133, 147, 161], "x2_i": [11, 20, 28, 39, 40, 45, 49, 63, 65, 67, 68, 69, 70, 84, 87, 95, 99, 100, 105, 106, 112, 113, 115, 116, 123, 126, 131, 133, 147, 161], "finit": [11, 20, 28, 39, 40, 45, 49, 63, 84, 95, 102, 123, 131, 133, 177], "nonzero": [11, 20, 28, 40, 49, 84, 95, 123, 164, 165], "In": [11, 18, 20, 28, 39, 40, 49, 57, 84, 95, 123, 133, 164, 165, 172, 177, 180, 181, 200, 209, 210, 213, 214, 215], "remain": [11, 20, 28, 39, 40, 49, 84, 95, 123, 133, 134, 165, 178], "neither": [11, 20, 28, 40, 49, 84, 95, 123, 213], "nor": [11, 20, 28, 40, 49, 84, 95, 123, 213], "comput": [11, 20, 26, 28, 29, 31, 35, 37, 38, 40, 41, 49, 55, 56, 65, 68, 70, 83, 84, 87, 89, 95, 99, 100, 105, 106, 113, 114, 115, 116, 117, 119, 120, 122, 123, 124, 125, 126, 130, 132, 146, 148, 155, 156, 157, 158, 159, 160, 165, 177, 179, 186, 189, 190, 193, 199, 201, 202, 207, 209, 212], "round": [11, 14, 20, 28, 40, 49, 74, 84, 94, 95, 123, 142, 154, 164, 177], "nearest": [11, 20, 40, 49, 84, 123, 137, 177], "mode": [11, 20, 40, 49, 84, 123, 177, 199], "too": [11, 20, 28, 40, 49, 84, 95, 123, 209, 212], "larg": [11, 20, 28, 40, 49, 84, 95, 123, 184, 200, 212], "overflow": [11, 20, 28, 49, 84, 95, 107, 132, 148, 172, 200, 209], "appropri": [11, 20, 24, 28, 40, 49, 84, 95, 123], "commut": [11, 20], "associ": [11, 20, 40, 123, 172, 195, 198, 209, 213], "first": [11, 15, 16, 18, 63, 65, 67, 68, 69, 70, 87, 99, 100, 105, 106, 112, 113, 115, 116, 117, 123, 126, 131, 136, 145, 147, 151, 155, 156, 157, 160, 161, 165, 186, 189, 197, 199, 200, 202, 203, 209, 212, 213, 214, 215], "axi": [12, 13, 15, 16, 17, 75, 89, 93, 119, 120, 122, 132, 136, 141, 144, 145, 146, 148, 151, 159, 160, 164, 186, 193, 206, 207, 212], "keepdim": [12, 13, 15, 16, 119, 120, 122, 132, 146, 148, 159, 193, 207], "bool": [12, 13, 15, 16, 17, 21, 23, 26, 29, 31, 35, 37, 41, 43, 47, 50, 58, 61, 73, 83, 87, 97, 99, 100, 102, 103, 104, 105, 106, 107, 113, 114, 115, 116, 119, 120, 122, 126, 132, 134, 141, 146, 148, 159, 164, 172, 185, 193, 202, 207], "test": [12, 13, 83, 102, 103, 104, 177, 211, 212, 213, 214], "evalu": [12, 13, 21, 28, 34, 36, 39, 42, 43, 44, 46, 49, 50, 88, 90, 108, 109, 110, 111, 124, 130, 138, 143, 174, 212], "along": [12, 13, 15, 16, 17, 75, 93, 119, 120, 122, 132, 136, 141, 145, 146, 148, 159, 160, 165, 205, 207, 209], "empti": [12, 13, 14, 132, 148, 164, 165, 212], "union": [12, 13, 14, 20, 21, 24, 26, 28, 29, 30, 31, 35, 36, 37, 39, 40, 41, 43, 45, 46, 47, 48, 49, 50, 57, 58, 73, 75, 85, 92, 93, 97, 98, 101, 107, 119, 120, 122, 127, 132, 135, 136, 144, 145, 146, 148, 151, 159, 162, 193, 195, 198, 207, 213], "ax": [12, 13, 15, 16, 18, 53, 54, 93, 119, 120, 122, 129, 132, 136, 144, 146, 148, 151, 159, 165, 193, 201, 204, 207], "logic": [12, 13, 113, 114, 115, 116, 181], "AND": [12, 65, 113], "reduct": [12, 13], "By": [12, 13, 63, 119, 120, 122, 132, 146, 148, 159, 160, 177, 209, 213], "default": [12, 13, 14, 15, 16, 17, 22, 24, 57, 58, 61, 75, 85, 86, 91, 93, 97, 98, 107, 119, 120, 121, 122, 125, 127, 128, 132, 134, 136, 141, 145, 146, 148, 151, 152, 153, 155, 156, 157, 159, 160, 162, 163, 164, 165, 177, 181, 185, 186, 188, 193, 195, 198, 199, 202, 205, 207], "entir": [12, 13, 119, 120, 122, 132, 146, 148, 159], "valid": [12, 13, 25, 89, 145, 151, 165, 177, 213], "count": [12, 13, 75, 93, 155, 156, 160, 165], "backward": [12, 13, 39, 107, 133, 160, 165, 178, 212], "last": [12, 13, 17, 18, 53, 75, 93, 136, 141, 145, 151, 160, 165, 186, 188, 193, 205], "invalid": [12, 13, 22, 89, 160, 212], "rais": [12, 13, 18, 22, 38, 45, 49, 53, 58, 72, 84, 88, 89, 107, 117, 119, 122, 125, 131, 134, 144, 145, 160, 165, 172, 174, 181, 194, 212], "wa": [12, 13, 18, 28, 95, 119, 120, 122, 132, 146, 148, 159, 172, 181, 184, 212, 214], "OR": [13, 68, 115], "start": [14, 107, 165, 184, 212, 214], "stop": [14, 107, 165, 213], "step": [14, 107, 165, 213], "evenli": [14, 107], "space": [14, 107], "half": [14, 107, 165], "open": [14, 107, 165], "inclus": [14, 165, 212], "end": [14, 63, 107, 170, 178, 212, 213, 214], "exclus": [14, 165], "distanc": 14, "between": [14, 24, 45, 49, 63, 75, 84, 92, 131, 145, 155, 156, 157, 158, 172, 178, 181, 209, 212, 214], "adjac": 14, "output": [14, 58, 75, 85, 86, 89, 91, 93, 97, 98, 107, 121, 127, 128, 134, 136, 144, 145, 162, 163, 174, 178, 181, 182, 184, 205, 212], "infer": [14, 58, 86, 97, 98, 128, 134, 163, 179, 209, 213], "place": [14, 58, 85, 86, 91, 97, 98, 107, 127, 128, 136, 162, 163, 164, 170, 172, 178, 181], "cannot": [14, 55, 179, 212], "guarante": [14, 57, 155, 157, 174, 181, 212, 214], "error": [14, 18, 22, 49, 53, 84, 119, 122, 172, 177, 200, 212], "affect": [14, 47, 178, 181], "ceil": [14, 164], "indic": [15, 16, 17, 58, 83, 107, 125, 134, 136, 138, 152, 153, 155, 157, 165, 172, 207, 212], "occur": [15, 16, 73, 155, 156, 157, 158, 213], "occurr": [15, 16, 155], "search": [15, 16, 164], "flatten": [15, 16, 75, 136, 155, 156, 157, 158, 207, 209], "descend": [17, 141, 202, 203], "stabl": [17, 141, 180], "sort": [17, 164, 189, 190, 202, 203], "ascend": [17, 141], "stabil": [17, 141], "maintain": [17, 141, 176, 212, 214], "rel": [17, 18, 53, 93, 136, 141, 188, 195, 198, 205], "compar": [17, 141, 155, 156, 157, 158, 177, 181, 213, 215], "properti": [18, 51, 52, 53, 54, 55, 56, 181, 184, 212], "transpos": [18, 53, 118, 198, 209], "instanc": [18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 53, 57, 83, 172, 174, 181], "permut": [18, 53, 129], "revers": [18, 53, 63, 93], "origin": [18, 53, 63, 134, 136, 178, 212, 213], "limit": [18, 92, 101, 177, 209], "matric": [18, 38, 53, 117, 118, 121, 152, 153, 185, 187, 188, 189, 190, 191, 193, 194, 195, 198, 199, 200, 201, 202, 203, 205, 209], "deviat": [18, 146, 177, 212, 214], "et": [18, 202, 203], "al": 18, "intent": [18, 63], "found": [18, 180, 214, 215], "problemat": [18, 176, 178], "conflict": 18, "definit": [18, 185, 213], "batch": [18, 207, 209], "cetera": [18, 202, 203], "permute_dim": [18, 164], "interfac": [18, 180, 209, 212, 214], "ab": [19, 45, 131, 164, 193, 207], "augend": 20, "addend": 20, "self_i": [21, 26, 28, 29, 31, 34, 35, 36, 37, 39, 41, 42, 43, 44, 46, 48, 49, 50], "other_i": [21, 26, 28, 29, 31, 35, 36, 37, 39, 41, 43, 45, 46, 48, 49, 50], "bitwise_and": [21, 164], "api_vers": [22, 212], "object": [22, 23, 24, 27, 32, 33, 51, 55, 57, 58, 83, 92, 96, 101, 164, 165, 172, 174, 178, 180, 181, 184, 208, 210, 213, 214], "string": [22, 210, 212], "yyyi": [22, 210], "mm": [22, 210], "form": [22, 38, 117, 118, 152, 153, 178, 185, 187, 188, 189, 190, 191, 193, 194, 195, 198, 199, 200, 201, 202, 203, 205, 210, 213], "2020": [22, 184, 210, 212], "10": [22, 25, 109, 165, 212], "latest": [22, 180], "modul": [22, 174, 210, 213, 214, 215], "It": [22, 24, 174, 178, 180, 212, 214, 215], "everi": [22, 97, 98, 212], "top": [22, 174, 212, 214], "level": [22, 172, 176, 180, 181, 209, 212, 213], "public": [22, 213, 214], "well": [22, 176, 180, 181, 201, 214, 215], "part": [22, 152, 153, 172, 180, 183, 210, 212, 214], "convert": [23, 27, 32, 33, 58, 172, 176, 180, 212, 214], "stream": [24, 57, 181], "pycapsul": 24, "export": [24, 213], "from_dlpack": [24, 25, 164, 180], "dlpack": [24, 25], "capsul": 24, "pointer": 24, "produc": [24, 214], "instruct": 24, "safe": [24, 107], "insert": [24, 89], "wait": 24, "event": 24, "signal": [24, 214], "ownership": 24, "stai": 24, "On": 24, "cpu": [24, 25, 174, 176, 180, 181, 209, 212, 214], "queue": [24, 57, 181], "similar": [24, 133, 176, 179, 212, 213, 214], "mechan": [24, 96, 174, 176, 182, 212], "most": [24, 174, 181, 189, 209, 212, 214], "yet": [24, 184, 212], "sycl": 24, "want": [24, 176, 179, 180, 212, 214, 215], "cl": 24, "allow": [24, 134, 165, 176, 177, 178, 181, 183, 209, 214], "agre": 24, "note": [24, 28, 39, 63, 95, 133, 164, 165, 180, 184, 189, 190, 202, 212, 213, 214, 215], "assum": [24, 81, 139, 149, 174, 181, 212], "legaci": 24, "per": [24, 176, 180], "thread": [24, 212, 214], "disallow": 24, "due": [24, 40, 55, 56, 107, 123, 177, 209, 212], "ambigu": [24, 28, 95, 178], "explicitli": [24, 165, 174, 185, 189, 190, 199, 201, 209, 212, 214], "handl": [24, 176, 178, 181, 212], "prefer": [24, 28, 95, 174, 209, 214], "develop": [24, 177, 212, 213, 214, 215], "who": [24, 177, 212, 213], "think": 24, "cost": 24, "interchang": [24, 96, 174, 176, 182, 212], "enum": 25, "id": 25, "format": [25, 210], "meant": 25, "device_typ": 25, "device_id": 25, "member": 25, "cuda": [25, 176, 180, 214], "cpu_pin": 25, "opencl": 25, "vulkan": 25, "metal": 25, "vpi": 25, "rocm": [25, 176], "truth": [26, 29, 31, 35, 37, 41, 83, 87, 99, 100, 105, 106, 126, 215], "divis": [28, 39, 69, 84, 95, 133], "floor": [28, 69, 95, 164], "introduc": [28, 95, 136, 184, 213], "pep": [28, 32, 38, 95, 117, 180, 210], "238": [28, 95], "goal": [28, 95, 176, 178, 209, 214], "disambigu": [28, 95], "toward": [28, 95, 136, 177, 209, 213], "former": [28, 95, 165, 213], "latter": [28, 95, 165, 174, 180, 213], "overload": [28, 95, 209], "led": [28, 95], "subtl": [28, 95], "bug": [28, 95, 214, 215], "possibl": [28, 58, 95, 119, 122, 134, 174, 176, 177, 178, 180, 181, 184, 209, 212, 213, 214, 215], "To": [28, 58, 95, 165, 177, 184, 212, 213, 215], "resolv": [28, 55, 58, 89, 95, 97, 98, 132, 148, 212], "design": [28, 95, 177, 208, 211, 212, 214, 215], "ill": [28, 95, 209], "consist": [28, 95, 107, 151, 165, 170, 181, 184, 189, 209, 212], "below": [28, 95, 152, 153, 180, 181, 188, 205], "diverg": [28, 95, 215], "strictli": [28, 95], "pair": [28, 63, 95, 186], "relat": [28, 95, 165, 181, 183, 209, 212, 214], "divid": [28, 49, 95, 164, 165, 177], "surpris": [28, 95], "unexpect": [28, 95, 212], "quotient": [28, 49, 63, 84, 95, 165], "greatest": [28, 94, 95], "closest": [28, 74, 94, 95, 137, 154], "small": [28, 40, 49, 84, 95, 123, 177, 195, 198, 200, 212, 214], "floor_divid": [28, 164], "greater_equ": [29, 164], "kei": [30, 47, 212], "slice": [30, 47, 164, 178], "ellipsi": [30, 47, 165], "access": [30, 165, 180, 210, 212], "method": [32, 39, 96, 164, 174, 178, 180, 181, 183, 184, 212, 213, 214], "also": [32, 172, 174, 178, 179, 180, 184, 214], "357": 32, "bitwise_invert": [34, 164], "less_equ": [35, 164], "bitwise_left_shift": [36, 164], "matrix": [38, 53, 117, 118, 121, 152, 153, 185, 187, 188, 189, 190, 191, 193, 194, 195, 198, 199, 200, 201, 202, 203, 205, 209, 212], "product": [38, 40, 56, 117, 123, 132, 151, 160, 186, 197, 209], "built": [38, 117, 165, 172, 212], "465": [38, 117], "least": [38, 117, 176, 177], "m": [38, 53, 117, 118, 121, 152, 153, 165, 185, 187, 188, 189, 190, 191, 193, 194, 195, 197, 198, 199, 200, 201, 202, 203, 205], "remov": [38, 117, 144, 165, 188, 205], "innermost": [38, 117, 118, 152, 153, 185, 187, 188, 189, 190, 191, 193, 194, 195, 198, 199, 200, 201, 202, 203, 205], "inner": [38, 117, 189, 209], "dure": [38, 57, 117, 146, 159, 172, 174, 212, 213], "stack": [38, 53, 117, 118, 152, 153, 164, 183, 185, 187, 188, 189, 190, 191, 193, 194, 195, 198, 199, 200, 202, 203, 205, 209], "l": [38, 117, 185, 189, 205], "gener": [39, 107, 133, 174, 176, 209, 212, 213], "That": [39, 133, 165, 174, 184, 212], "primarili": [39, 133], "reason": [39, 133, 178, 209, 212, 213], "remaind": [39, 164, 165], "alreadi": [40, 74, 94, 123, 137, 154, 180, 210, 214], "abov": [40, 123, 132, 148, 152, 153, 165, 172, 178, 180, 181, 188, 189, 205, 209, 214], "multipli": [40, 164, 177], "not_equ": [41, 164], "bitwise_or": [43, 164], "exponenti": [45, 88, 112, 131], "power": [45, 69, 88, 131, 194, 214], "expon": [45, 131, 194], "kind": [45, 49, 84, 92, 98, 101, 131, 132, 148, 172, 209], "versu": [45, 49, 84, 131], "even": [45, 131, 137, 177, 178, 209, 212, 214], "odd": [45, 131], "bitwise_right_shift": [46, 164], "mix": [47, 107, 120, 135, 146, 159, 164, 178, 181, 209, 212], "how": [47, 174, 177, 181, 183, 213, 214, 215], "govern": [48, 147, 172, 209, 210], "minuend": 48, "subtrahend": 48, "subtract": [48, 164, 177], "bitwise_xor": [50, 164], "resid": [51, 57, 89, 165, 212], "fewer": 53, "unknown": [55, 56], "graph": [55, 56, 125, 155, 156, 157, 158, 165, 179, 212], "static": [55, 179, 182], "know": [55, 125, 155, 156, 157, 158, 174, 176, 177, 179, 212, 214], "content": [55, 179], "warrant": 55, "custom": [55, 176], "immut": 55, "retriev": [55, 165, 174, 214], "behav": 55, "similarli": [55, 121], "current": [57, 170, 178, 181, 184, 212, 213, 214], "__dlpack__": [57, 96, 164], "caveat": 57, "would": [57, 58, 134, 165, 178, 209, 212, 214], "locat": [57, 178], "enqueu": 57, "asynchron": 57, "safeti": 57, "explain": [57, 176], "obj": 58, "nestedsequ": 58, "supportsbufferprotocol": 58, "possibli": [58, 183, 212], "nest": [58, 183], "sequenc": [58, 75, 107, 145, 151, 165, 204], "buffer": [58, 134, 178, 180], "protocol": [58, 174, 180, 184, 212, 214], "turn": [58, 174], "memoryview": 58, "mixtur": 58, "convers": [58, 176, 212], "obei": 58, "permit": [58, 179], "explicit": [58, 151, 181, 214], "array_api": [58, 212], "astyp": [58, 164], "exce": [58, 97, 98, 107], "never": [58, 134, 212], "valueerror": [58, 134, 144, 214], "reus": [58, 134, 178, 212], "sine": [59, 60, 139, 140], "irrespect": 61, "integr": 61, "desir": [61, 73, 177, 184], "newli": [61, 181], "alloc": [61, 152, 153, 179, 181], "tangent": [62, 63, 64, 149, 150], "notat": 63, "denot": 63, "quadrant": 63, "branch": 63, "chosen": [63, 161, 180], "angl": [63, 82, 140, 150], "rai": 63, "pass": [63, 174, 177, 181], "role": 63, "y": [63, 178, 214], "coordin": [63, 121, 183, 212], "tradit": 63, "3\u03c0": 63, "bitwis": [65, 68, 70, 164], "underli": [65, 68, 70, 177, 200, 209], "flip": [66, 164], "shift": [67, 69, 136], "right": [67, 69, 176, 202], "arithmet": [69, 120, 164, 172, 212], "propag": [69, 119, 120, 122, 132, 146, 148, 159, 177], "anoth": [71, 73, 96, 165, 174, 176, 178, 180, 181, 212, 214], "from_": 73, "smallest": [74, 92, 101, 193], "join": [75, 145, 172], "befor": [75, 132, 148, 155, 156, 157, 158, 212], "concaten": 75, "leav": [75, 145, 165, 170, 177, 178], "famili": [75, 145], "intxx": [75, 145, 172], "floatxx": [75, 145, 172], "718281828459045": 76, "euler": 76, "constant": [76, 80, 164], "71828182845904523536028747135266249775724709369995": 76, "Not": 78, "alia": [79, 192, 196, 204, 206], "141592653589793": 80, "1415926535897932384626433": 80, "dividend": [84, 95, 133], "divisor": [84, 95, 133, 146, 159], "uniniti": [85, 86], "deriv": [86, 98, 128, 163, 165, 213], "natur": [88, 108, 110, 200, 209], "logarithm": [88, 108, 109, 110, 111, 112, 200, 209], "expand": [89, 165, 214], "new": [89, 96, 97, 98, 127, 128, 134, 145, 162, 163, 174, 176, 178, 180, 181, 210, 212, 213, 214], "close": [89, 90, 107, 110, 137, 165, 212, 214], "henc": [89, 125, 155, 156, 157, 158, 165, 176, 178, 179, 180, 183, 184, 212, 214], "indexerror": [89, 165], "exp": [90, 112, 164, 177, 200], "accur": [90, 110, 177, 200], "simpli": [90, 110, 176, 184, 212, 214], "fdlibm": [90, 110, 177], "n_row": 91, "n_col": 91, "ones": [91, 128, 164, 178, 212], "h": 91, "diagon": [91, 152, 153, 205, 208, 209], "elsewher": [91, 161], "row": [91, 125, 165, 193, 201, 202], "column": [91, 189, 193, 199, 201, 202, 212], "upper": [91, 153, 185, 199], "main": [91, 152, 153, 176, 180, 188, 205, 214], "finfo_object": 92, "machin": [92, 101, 195, 198, 212], "get": [92, 101, 176, 178, 180, 181], "inform": [92, 101, 212, 213, 214, 215], "followng": 92, "occupi": [92, 101], "ep": [92, 195, 198, 212], "larger": [92, 136, 146, 159], "largest": [92, 101, 193, 202, 203], "min": [92, 101, 152, 153, 164, 193, 199, 202, 203, 207], "smallest_norm": 92, "full": [92, 164, 178, 199, 201, 202, 214], "preserv": [93, 165, 181], "reorder": 93, "fill_valu": [97, 98], "fill": [97, 98, 127, 128, 162, 163], "iinfo_object": 101, "class": [101, 184, 212, 213], "encapsul": 101, "out_i": [102, 103, 104], "num": 107, "endpoint": 107, "exclud": [107, 165, 172], "sampl": [107, 146, 159, 213], "concern": [107, 181, 183, 212], "log": [110, 112, 164, 177], "NOT": 114, "mxn": [118, 152, 153, 188, 193, 195, 198, 199, 205], "sentinel": [119, 122], "liter": [121, 193, 199, 207], "xy": 121, "ij": 121, "grid": 121, "cartesian": 121, "effect": [121, 146, 159, 181, 215], "ignor": [121, 209], "ni": 121, "n3": 121, "nn": 121, "three": [121, 181], "p": [121, 193, 207], "y_i": [124, 130], "build": [125, 155, 156, 157, 158, 165, 174, 179, 183, 212], "jax": [125, 155, 156, 157, 158, 165, 178, 179, 212, 213, 214], "dask": [125, 155, 156, 157, 158, 165, 178, 179, 183, 212, 213, 214], "etc": [125, 155, 156, 157, 158, 165, 179, 210], "find": [125, 155, 156, 157, 158, 165, 179, 212, 213], "difficult": [125, 155, 156, 157, 158, 165, 177, 179, 212], "omit": [125, 155, 156, 157, 158, 165, 179], "section": [125, 155, 156, 157, 158, 165, 176, 179, 180, 181, 184, 212, 214], "total": [125, 146, 159], "major": [125, 165, 210], "c": [125, 145, 146, 159, 165, 180, 182, 210, 212, 214], "style": [125, 165], "smaller": [132, 136, 148, 214], "rang": [132, 148, 165, 212], "int64": [132, 148, 164, 172], "int32": [132, 148, 164, 172], "uint64": [132, 148, 164, 172], "int16": [132, 148, 164, 172], "uint16": [132, 148, 164, 172], "uint32": [132, 148, 164, 172], "help": [132, 148, 176, 177, 183], "prevent": [132, 148], "modulu": 133, "One": [134, 212, 215], "arrays_and_dtyp": 135, "re": [136, 176, 178, 184, 214], "restor": 136, "squar": [142, 164, 185, 187, 189, 190, 191, 194, 200, 201, 202, 209], "root": 142, "indistinguish": [142, 165, 177], "infinit": [142, 177], "outsid": [145, 165, 172, 180], "correct": [146, 159, 178], "degre": [146, 159, 209], "freedom": [146, 159], "adjust": [146, 159, 212], "popul": [146, 159], "choic": [146, 159, 174, 177, 181, 183, 209, 210, 212, 214], "constitut": [146, 159], "commonli": [146, 159, 176, 179, 209, 212, 213], "bessel": [146, 159, 176], "tensor": [151, 209, 212, 214], "contract": [151, 209], "nonneg": [151, 165], "outer": [151, 208], "dot": [151, 160, 209], "x1_ax": 151, "x2_ax": 151, "uniqu": [151, 155, 156, 157, 158, 209], "triangular": [152, 153, 185, 199], "reconstruct": [155, 157], "x_j": [155, 156, 157, 158], "distinct": [155, 156, 157, 158, 209], "inverse_indic": [155, 157], "exact": [155, 157, 184], "aggreg": [155, 156], "namedtupl": [155, 156, 157, 189, 199, 200, 202, 209], "field": [155, 156, 157, 189, 199, 200, 202, 212], "third": [155, 202], "fourth": 155, "varianc": 159, "unbias": 159, "condit": 161, "yield": 161, "comparison": [164, 210, 213], "reflect": 164, "mt": 164, "t": [164, 176, 178, 181, 183, 184, 212, 214], "__abs__": 164, "__array_namespace__": [164, 212], "__bool__": 164, "__dlpack_device__": 164, "__float__": 164, "__getitem__": [164, 165], "__index__": 164, "__int__": 164, "__setitem__": 164, "to_devic": [164, 181], "overview": 164, "algorithm": [164, 177, 200, 214], "inf": [164, 193, 207, 212], "newaxi": 164, "pi": 164, "creation": [164, 174, 181, 212], "arang": [164, 213], "asarrai": [164, 180, 214], "empty_lik": 164, "ey": 164, "full_lik": 164, "linspac": 164, "meshgrid": 164, "ones_lik": 164, "tril": 164, "triu": 164, "zeros_lik": 164, "broadcast_arrai": 164, "broadcast_to": 164, "can_cast": 164, "finfo": 164, "iinfo": 164, "result_typ": 164, "int8": [164, 172], "uint8": [164, 172], "float32": [164, 172], "float64": [164, 172], "aco": [164, 177], "acosh": [164, 177], "asin": [164, 177], "asinh": [164, 177], "atan": [164, 177], "atan2": [164, 177], "atanh": [164, 177], "co": [164, 177], "cosh": [164, 177], "expm1": [164, 177], "isfinit": 164, "isinf": 164, "isnan": 164, "log1p": [164, 177], "log2": [164, 177], "log10": [164, 177], "logaddexp": 164, "logical_and": 164, "logical_not": 164, "logical_or": 164, "logical_xor": 164, "sin": [164, 177, 178, 184], "sinh": [164, 177], "sqrt": [164, 207], "tan": [164, 177], "tanh": [164, 177], "trunc": 164, "signatur": [164, 174, 184, 212, 213], "syntax": [164, 178, 180, 212], "multi": [164, 180, 181, 186, 214], "linear": [164, 201, 208], "algebra": [164, 208], "matrix_transpos": [164, 208, 209], "tensordot": [164, 208, 209], "vecdot": [164, 208, 209], "manipul": 164, "concat": 164, "expand_dim": [164, 165], "reshap": [164, 165], "roll": 164, "squeez": 164, "argmax": 164, "argmin": 164, "unique_al": 164, "unique_count": 164, "unique_invers": 164, "unique_valu": 164, "argsort": 164, "statist": 164, "prod": 164, "tabl": 164, "util": [164, 210, 212, 213], "bound": [165, 172, 184], "check": [165, 177, 185, 189, 190, 199, 201, 214, 215], "j": [165, 205], "syntact": 165, "sugar": 165, "shorthand": 165, "need": [165, 176, 177, 178, 180, 184, 209, 210, 212, 213, 214, 215], "term": [165, 181, 209, 213], "colon": 165, "contrast": [165, 209], "combin": [165, 178, 183, 209], "select": [165, 212], "basic": 165, "noth": 165, "side": [165, 180], "achiev": [165, 177], "perspect": 165, "item": [165, 178, 212], "2k": 165, "3k": 165, "q": [165, 189, 199], "r": [165, 199, 212, 214], "obtain": [165, 181], "qk": 165, "being": [165, 180, 181, 209, 212, 215], "clip": 165, "100": [165, 210], "junk": 165, "consider": [165, 178, 209], "extend": [165, 212], "concept": [165, 178, 212], "independ": [165, 174, 180, 186, 201, 209, 210, 212], "comma": 165, "separ": [165, 180], "exp1": 165, "exp2": 165, "expn": 165, "And": [165, 181], "so": [165, 170, 180, 209, 212, 215], "forth": 165, "decreas": [165, 209], "particular": [165, 176, 180, 181, 184, 209, 212, 214, 215], "entri": [165, 212], "retain": 165, "invoc": 165, "sympi": 165, "flat": 165, "here": [165, 172, 178, 180, 183, 184, 214], "attempt": [165, 177, 178, 181, 212, 214], "dynam": 165, "mask": [165, 212], "filter": 165, "s1": 165, "sm": 165, "s2": 165, "sn": 165, "prohibit": [165, 178], "replac": [165, 215], "begin": [165, 170, 214], "iter": 165, "reli": [170, 176, 179, 184, 214], "them": [170, 176, 178, 212, 214], "reproduc": [170, 177], "understood": 172, "high": [172, 180, 181, 209, 212], "diagram": [172, 212], "lattic": 172, "particip": 172, "matter": [172, 176], "dash": 172, "line": [172, 212, 213, 214, 215], "undefin": [172, 209], "connect": 172, "keep": [172, 176, 212], "rather": [172, 174, 176, 181, 183, 209, 212], "i2": 172, "i1": 172, "i4": 172, "i8": 172, "u1": 172, "u2": 172, "u4": 172, "u8": 172, "f8": 172, "regardless": 172, "subject": [172, 200], "becaus": [172, 176, 178, 181, 184, 212, 214, 215], "togeth": [172, 180], "met": 172, "d": 172, "hand": 172, "give": [172, 180, 181], "No": [174, 210], "made": [174, 210, 212, 214], "run": [174, 213, 214], "varieti": 174, "architectur": 174, "gpu": [174, 180, 181, 214], "distribut": [174, 177, 181, 183], "system": [174, 201, 212], "tpu": [174, 180], "emerg": [174, 180, 212], "what": [174, 180, 184, 209, 212, 213, 214, 215], "instal": [174, 212, 215], "emploi": [174, 179, 181], "parallel": [174, 182, 212, 214], "jit": [174, 176, 212], "lazi": [174, 214], "put": [174, 212, 214], "constraint": [174, 211], "predict": 174, "itself": [174, 180, 214], "motiv": 174, "importantli": 174, "awar": [174, 184, 214], "layer": [174, 183, 212, 214], "coupl": 174, "downstream": [174, 212, 213], "import": [174, 176, 181, 209, 212, 214, 215], "structur": [174, 184, 212, 213], "interoper": [174, 180], "construct": [174, 176, 212], "own": [174, 178, 212], "share": [174, 212], "done": 174, "though": [174, 184, 212, 214], "enough": [174, 176, 184, 210, 212], "soft": 174, "arraylib_nam": 174, "constrain": [174, 177], "unwil": 174, "signific": [174, 177, 178, 212], "therefor": [174, 180, 181, 184, 210, 212, 214], "adopt": [174, 180, 214], "primari": [174, 180], "write": [174, 178, 212, 214], "consequ": [174, 184, 212], "easi": 174, "written": [174, 212, 214], "unambigu": [174, 178, 180, 213], "clear": [174, 178, 180, 212, 214], "significantli": 174, "detract": 174, "experi": [174, 210], "strict": [174, 178], "typic": [174, 178, 210, 212, 214, 215], "good": [174, 176, 178, 181, 184, 212], "anyth": [174, 212], "thin": 174, "conveni": 174, "plan": [175, 212], "scope": [176, 183, 211, 213], "mention": [176, 214], "There": [176, 178, 181, 184, 212, 214, 215], "direct": [176, 212, 213], "deal": [176, 183, 184, 210], "assumpt": [176, 180, 210, 211, 212], "rest": [176, 212, 214], "work": [176, 178, 180, 184, 212, 214, 215], "ndarrai": [176, 180, 212, 214], "visual": 176, "often": [176, 209, 212, 213, 214], "difficulti": [176, 179], "relev": [176, 181, 184, 212], "question": [176, 212], "certainti": 176, "inde": 176, "project": [176, 180, 214], "statsmodel": 176, "scikit": [176, 183, 212, 213, 214], "bio": [176, 214], "qutip": 176, "strategi": [176, 181], "learn": [176, 183, 212, 213, 214], "imag": [176, 212, 213, 214], "submodul": 176, "manag": [176, 181], "doesn": [176, 181, 212], "cupi": [176, 178, 212, 213, 214], "elementwisekernel": 176, "scipi": [176, 183, 212, 213], "astropi": [176, 214], "seem": [176, 180, 214], "almost": [176, 214], "inevit": 176, "someth": [176, 178, 212], "numba": [176, 180, 212, 214], "sens": [176, 212, 214], "tend": [176, 178, 214], "reimplement": 176, "gamma": 176, "drop": [176, 184], "arraylib": 176, "abi": [176, 180], "cpython": 176, "offer": [176, 180, 181, 183, 212, 214], "backend": [176, 183, 212], "target": [176, 181], "better": [176, 214], "pypi": [176, 213, 214], "isn": 176, "quit": [176, 212, 214], "readi": 176, "mainstream": 176, "todai": [176, 178, 209], "onc": [176, 202, 210], "feasibl": [176, 212], "roundtiestoeven": 177, "ti": [177, 209, 212], "certain": [177, 209], "boundari": 177, "interest": 177, "reader": 177, "identifi": [177, 181, 213], "lack": 177, "phrase": 177, "recogn": [177, 181], "seek": [177, 209, 213], "optim": [177, 178, 209, 214], "latitud": 177, "although": [177, 200], "freeli": 177, "sun": 177, "microsystem": 177, "With": [177, 213, 214], "few": [177, 212, 214], "correctli": 177, "imposs": [177, 178, 179, 215], "align": [177, 213], "among": [177, 209], "suit": [177, 211, 212, 213], "span": 177, "report": 177, "averag": 177, "known": [177, 179], "Such": [177, 209], "aid": [177, 215], "best": [177, 180, 209, 212], "effort": [177, 213], "theoret": 177, "sound": 177, "robust": 177, "bare": 177, "summat": [177, 209], "unfortun": 177, "impos": [177, 179], "rigor": 177, "sever": [177, 178, 210, 212], "curtail": 177, "unduli": 177, "advis": [178, 209], "belong": 178, "admonit": [178, 179], "becom": [178, 180, 212, 214], "trigger": 178, "confid": 178, "stride": 178, "pytorch": [178, 181, 212, 213, 214], "mxnet": [178, 212, 213, 214], "save": 178, "faster": 178, "happen": [178, 181, 209], "simpl": [178, 210], "illustr": [178, 184], "tensorflow": [178, 212, 213, 214], "fundament": [178, 212], "abl": [178, 180, 181, 212, 214], "inplac": 178, "present": [178, 179, 181, 209, 210, 212], "update_index": 178, "idx": 178, "solut": [178, 201, 214], "read": 178, "hard": [178, 180, 181, 212], "go": [178, 210], "down": 178, "rout": 178, "onto": 178, "val": 178, "veri": [178, 200, 214], "wide": [178, 180, 212], "situat": [178, 180, 181, 212, 214], "slightli": 178, "heavili": [178, 214], "you": [178, 215], "_must_": 178, "trace": [178, 208, 209, 213], "abstract": [178, 209, 213], "interpret": [178, 215], "languag": [178, 209, 212, 214], "analysi": [178, 179, 212, 213, 214], "donat": 178, "lapack": [178, 209], "_may_": 178, "overwrit": 178, "whatev": 178, "fastest": 178, "aren": [178, 212], "longer": [178, 209], "problem": [178, 184, 213, 214], "initi": [178, 212], "care": [178, 209], "upon": [179, 212], "ahead": 179, "undu": 179, "burden": [179, 212], "omiss": 179, "demarc": 179, "instead": [180, 213, 214], "nativ": 180, "layout": 180, "manner": 180, "exchang": 180, "packag": [180, 184, 210, 212, 213, 214], "live": [180, 212], "figur": 180, "contigu": 180, "promin": [180, 212], "releas": [180, 210, 213], "candid": [180, 212], "__cuda_array_interface__": 180, "moment": 180, "tri": [180, 214], "growth": 180, "amd": 180, "undesir": 180, "pattern": [180, 181, 183, 213, 214], "widest": 180, "despit": 180, "lot": 180, "older": [180, 210, 212], "3118": 180, "hardli": 180, "mostli": [180, 183, 212], "dealt": [180, 184], "__array__": [180, 214], "attach": 180, "hold": [180, 209], "rfc": [180, 212], "preced": [180, 181], "http": [180, 210, 215], "dmlc": 180, "github": [180, 210, 215], "io": 180, "page": [180, 214], "standalon": [180, 215], "outlin": [180, 212], "control": [181, 183], "fulli": 181, "scale": 181, "exert": 181, "placement": 181, "global": 181, "fix": [181, 212, 214], "switchabl": 181, "context": [181, 213], "transfer": 181, "take": [181, 184, 212], "granular": 181, "downsid": 181, "verbos": 181, "move": [181, 214], "much": [181, 212, 215], "kept": 181, "minim": 181, "cross": [181, 208, 209, 212], "instanti": 181, "physic": 181, "revisit": 181, "revis": 181, "free": 181, "expos": [181, 209], "bewar": 181, "framework": [181, 212], "elabor": 181, "polici": 181, "highest": 181, "prioriti": 181, "topic": [181, 183, 211, 212, 214], "pin": 181, "tricki": 181, "sinc": 181, "complet": [183, 199, 210, 212, 214], "runtim": [183, 184, 210, 212, 214], "won": 183, "further": 183, "exercis": 183, "environ": [183, 209, 212, 215], "variabl": [183, 201, 215], "bla": [183, 209], "openmp": 183, "n_job": [183, 214], "worker": [183, 214], "chunk": 183, "approach": [183, 212, 213], "auto": [183, 214], "thing": 183, "improv": [183, 212, 214], "fit": [183, 212, 214], "becam": [184, 212], "progress": [184, 215], "try": [184, 212], "solv": [184, 208], "superclass": 184, "long": 184, "def": [184, 212, 213, 214], "_basearrai": 184, "subclass": [184, 212], "insid": 184, "typevar": 184, "fine": [184, 212], "variat": [184, 213], "don": [184, 214], "said": 184, "subtyp": 184, "decomposit": [185, 199, 202, 203, 209], "ll\u1d40": 185, "u\u1d40u": 185, "symmetr": [185, 189, 190], "u": [185, 202], "factor": 185, "offset": [188, 205], "off": [188, 205], "eigendecomposit": 189, "qlq\u1d40": 189, "orthogon": [189, 209], "eig": 189, "eigenvalu": [189, 190, 209], "eigenvector": [189, 209], "eigval": 190, "ord": [193, 207], "fro": 193, "nuc": 193, "norm": [193, 207, 209], "frobeniu": 193, "nuclear": 193, "singular": [193, 195, 198, 202, 203], "induc": 193, "ident": [194, 212], "rtol": [195, 198], "toler": [195, 198], "largest_singular_valu": [195, 198], "epsilon": [195, 198], "moor": 198, "penros": 198, "pseudo": 198, "orthonorm": [199, 202], "det": [200, 208], "logabsdet": 200, "real": [200, 210], "logsabsdet": 200, "again": 200, "equat": 201, "coeffici": 201, "linearli": [201, 212], "ordin": 201, "full_matric": 202, "usvh": 202, "vh": 202, "hermitian": 202, "adjoint": 202, "l1": 207, "manhattan": 207, "l2": 207, "euclidean": 207, "principl": [208, 213], "choleski": [208, 209], "eigh": [208, 209], "eigvalsh": [208, 209], "matrix_norm": 208, "matrix_pow": 208, "matrix_rank": 208, "pinv": 208, "qr": 208, "slogdet": [208, 209], "svd": 208, "svdval": 208, "vector_norm": 208, "endeavor": 209, "strai": 209, "far": 209, "restraint": 209, "address": [209, 212, 213, 214], "decis": [209, 212], "aris": [209, 212], "histor": 209, "accid": 209, "especi": 209, "arisen": 209, "been": [209, 212], "process": [209, 210, 213], "afford": 209, "opportun": 209, "subsequ": [209, 213], "codifi": [209, 213], "theme": 209, "abil": 209, "decim": 209, "restrict": 209, "overli": 209, "compel": 209, "compris": 209, "prudent": 209, "lastli": 209, "polymorph": 209, "dedic": 209, "agnostic": 209, "eschew": 209, "parameter": 209, "bias": 209, "underpin": 209, "cater": 209, "low": 209, "verbatim": 209, "poor": 209, "uplo": 209, "dai": 209, "monopoli": 209, "prolifer": 209, "conserv": [209, 214], "conservat": 209, "delin": 209, "ideal": 209, "overlap": 209, "confus": [209, 212], "regard": [209, 214], "parsimoni": 209, "einsum": 209, "einstein": 209, "vdot": 209, "conjug": 209, "multi_dot": 209, "chain": 209, "exhibit": 209, "consolid": 209, "propos": [210, 213, 214], "com": [210, 215], "blob": 210, "master": 210, "process_docu": 210, "md": 210, "summari": [210, 213], "matur": 210, "stage": 210, "reach": [210, 214], "final": 210, "world": 210, "highli": 210, "unlik": [210, 212], "strong": 210, "updat": 210, "scheme": 210, "date": 210, "12": 210, "shall": 210, "alpha": 210, "beta": 210, "rc": 210, "post": 210, "dev": 210, "__array_api_version__": 210, "dunder": 210, "440": 210, "minor": 210, "bugfix": 210, "__version__": 210, "resembl": 210, "c99": 210, "14": 210, "frequenc": [210, 213], "regular": [210, 212], "year": [210, 212], "appear": [210, 212, 215], "evolut": [211, 212], "extens": [211, 214], "verif": [211, 212], "benchmark": 211, "wealth": 212, "scienc": 212, "deep": 212, "push": 212, "forward": 212, "art": 212, "unintend": 212, "activ": 212, "creativ": 212, "fragment": 212, "multidimension": 212, "xarrai": [212, 213], "why": 212, "pick": 212, "bless": 212, "short": [212, 213], "inconsist": 212, "obviou": 212, "mind": 212, "sure": 212, "usag": 212, "rare": [212, 213], "unimport": 212, "scientif": 212, "mid": 212, "1990": 212, "earli": 212, "2000": 212, "numarrai": 212, "2005": 212, "superced": 212, "roughli": 212, "decad": 212, "past": 212, "mainli": 212, "rise": 212, "newer": 212, "inspir": [212, 214], "author": [212, 213, 214], "idea": 212, "seriou": 212, "arriv": 212, "grew": 212, "quickli": 212, "infeas": 212, "now": [212, 214], "speed": 212, "innov": [212, 213], "group": 212, "assembl": 212, "consortium": 212, "draft": 212, "presenc": 212, "meta": 212, "concret": 212, "shown": 212, "core": [212, 214], "decid": 212, "borrow": 212, "curv": 212, "steep": 212, "switch": [212, 214], "accompani": 212, "verifi": 212, "actual": 212, "v": 212, "task": [212, 214], "schedul": 212, "eager": 212, "characterist": 212, "grain": 212, "obstabl": 212, "cython": [212, 214], "bfloat16": 212, "datetim": 212, "void": 212, "uniformli": 212, "o": 212, "polynomi": 212, "routin": 212, "bind": [212, 214], "cffi": 212, "ctype": 212, "miss": 212, "ufunc": 212, "gufunc": 212, "just": [212, 214], "extra": 212, "huge": 212, "amount": [212, 213, 214], "cover": [212, 215], "merg": 212, "strength": 212, "advantag": 212, "softwar": [212, 214], "foreign": 212, "indirect": 212, "program": 212, "surfac": 212, "under": 212, "pydata": 212, "spars": 212, "weld": 212, "bohrium": 212, "arkouda": 212, "legat": 212, "taken": 212, "account": 212, "impact": 212, "grow": 212, "panda": [212, 213], "matplotlib": [212, 213], "networkx": 212, "xtensor": 212, "xnd": [212, 214], "stdlib": 212, "javascript": 212, "rust": 212, "rrai": 212, "nd4j": 212, "jvm": 212, "numsharp": 212, "dispatch": [212, 214], "pythran": 212, "transon": 212, "onnx": 212, "apach": 212, "tvm": 212, "mlir": 212, "taco": 212, "unumpi": [212, 214], "einop": 212, "arrow": 212, "understand": [212, 213], "consult": 212, "we": 212, "simplest": 212, "directli": [212, 214], "package_nam": 212, "uniform": 212, "xp": 212, "request": 212, "hinder": 212, "inter": 212, "distinguish": 212, "is_array_api_obj": 212, "hasattr": 212, "peopl": 212, "abc": 212, "inherit": 212, "isinst": 212, "prove": 212, "discov": 212, "assist": 212, "mandat": 212, "importlib": 212, "metadata": 212, "entry_point": 212, "typeerror": [212, 214], "dict": 212, "deprec": 212, "py3": 212, "supplant": 212, "load": 212, "path": 212, "haven": 212, "measur": 212, "usual": 212, "isol": 212, "referenc": 212, "indispens": 212, "institut": 212, "electr": 212, "electron": 212, "engin": [212, 214], "york": 212, "scott": 212, "bradner": 212, "1997": 212, "word": 212, "2119": 212, "doi": 212, "17487": 212, "rfc2119": 212, "technic": 213, "vacuum": 213, "sometim": 213, "compet": 213, "friction": 213, "focu": 213, "accommod": [213, 214], "foo": 213, "bar": 213, "aspir": 213, "experiment": 213, "around": 213, "establish": 213, "channel": 213, "resourc": [213, 214], "novel": 213, "thwart": 213, "reinvent": 213, "proverbi": 213, "wheel": 213, "foundat": 213, "articul": 213, "quantifi": 213, "analyz": 213, "ground": [213, 215], "empir": 213, "acquir": 213, "scrape": 213, "unifi": [213, 214], "extract": 213, "intersect": 213, "complement": 213, "suitabl": 213, "preval": 213, "eas": 213, "leverag": 213, "summar": 213, "tool": [213, 214], "explor": 213, "repositori": 213, "instrument": 213, "record": 213, "collect": 213, "transform": 213, "json": 213, "human": 213, "file": [213, 214, 215], "docstr": 213, "invok": 213, "_0": 213, "_arg": 213, "347": 213, "359": 213, "894": 213, "1173": 213, "skimag": 213, "174": 213, "sklearn": 213, "373": 213, "666": 213, "sourc": [213, 215], "publicli": 213, "publish": 213, "stori": 213, "broad": 213, "wider": 214, "wrap": 214, "familiar": 214, "survei": 214, "advanc": 214, "research": 214, "nsf": 214, "pain": 214, "brought": 214, "up": 214, "wish": 214, "multiprocess": 214, "shorten": 214, "gh": 214, "fortran": 214, "easili": [214, 215], "pure": 214, "manual": 214, "ci": 214, "Then": 214, "hoc": 214, "critic": 214, "corner": 214, "tractabl": 214, "spectral": 214, "periodogram": 214, "spectrogram": 214, "csd": 214, "welch": 214, "stft": 214, "istft": 214, "lombscargl": 214, "40": 214, "sai": [214, 215], "ineffici": 214, "x_np": 214, "asnumpi": 214, "freq": 214, "pxx": 214, "back": 214, "torch": 214, "littl": 214, "flexibl": 214, "py": [214, 215], "rearrang": 214, "_backend": 214, "glue": 214, "550": 214, "loc": 214, "some_func": 214, "get_backend": 214, "disappear": 214, "serv": 214, "50": 214, "tensorli": 214, "discontinu": 214, "kera": 214, "eagerpi": 214, "whenev": 214, "julia": 214, "notabl": 214, "suboptim": 214, "readili": 214, "translat": 214, "cpyext": 214, "previou": 214, "unsuccess": 214, "intern": 214, "xla": 214, "vta": 214, "jump": 214, "hoop": 214, "attain": 214, "suggest": 214, "got": 214, "cfunc": 214, "np": 214, "assert_array_almost_equ": 214, "pyfunc": 214, "pyarray_cancastarrayto": 214, "assertequ": 214, "spec": 215, "necessarili": 215, "aspect": 215, "clone": 215, "repo": 215, "pip": 215, "pytest": 215, "hypothesi": 215, "conda": 215, "array_api_tests_modul": 215, "edit": 215, "array_api_test": 215, "_array_modul": 215, "array_modul": 215, "command": 215, "asid": 215, "vendor": 215, "readm": 215}, "objects": {"array_api": [[8, 0, 1, "", "abs"], [9, 0, 1, "", "acos"], [10, 0, 1, "", "acosh"], [11, 0, 1, "", "add"], [12, 0, 1, "", "all"], [13, 0, 1, "", "any"], [14, 0, 1, "", "arange"], [15, 0, 1, "", "argmax"], [16, 0, 1, "", "argmin"], [17, 0, 1, "", "argsort"], [58, 0, 1, "", "asarray"], [59, 0, 1, "", "asin"], [60, 0, 1, "", "asinh"], [61, 0, 1, "", "astype"], [62, 0, 1, "", "atan"], [63, 0, 1, "", "atan2"], [64, 0, 1, "", "atanh"], [65, 0, 1, "", "bitwise_and"], [66, 0, 1, "", "bitwise_invert"], [67, 0, 1, "", "bitwise_left_shift"], [68, 0, 1, "", "bitwise_or"], [69, 0, 1, "", "bitwise_right_shift"], [70, 0, 1, "", "bitwise_xor"], [71, 0, 1, "", "broadcast_arrays"], [72, 0, 1, "", "broadcast_to"], [73, 0, 1, "", "can_cast"], [74, 0, 1, "", "ceil"], [75, 0, 1, "", "concat"], [81, 0, 1, "", "cos"], [82, 0, 1, "", "cosh"], [84, 0, 1, "", "divide"], [85, 0, 1, "", "empty"], [86, 0, 1, "", "empty_like"], [87, 0, 1, "", "equal"], [88, 0, 1, "", "exp"], [89, 0, 1, "", "expand_dims"], [90, 0, 1, "", "expm1"], [91, 0, 1, "", "eye"], [92, 0, 1, "", "finfo"], [93, 0, 1, "", "flip"], [94, 0, 1, "", "floor"], [95, 0, 1, "", "floor_divide"], [96, 0, 1, "", "from_dlpack"], [97, 0, 1, "", "full"], [98, 0, 1, "", "full_like"], [99, 0, 1, "", "greater"], [100, 0, 1, "", "greater_equal"], [101, 0, 1, "", "iinfo"], [102, 0, 1, "", "isfinite"], [103, 0, 1, "", "isinf"], [104, 0, 1, "", "isnan"], [105, 0, 1, "", "less"], [106, 0, 1, "", "less_equal"], [107, 0, 1, "", "linspace"], [108, 0, 1, "", "log"], [109, 0, 1, "", "log10"], [110, 0, 1, "", "log1p"], [111, 0, 1, "", "log2"], [112, 0, 1, "", "logaddexp"], [113, 0, 1, "", "logical_and"], [114, 0, 1, "", "logical_not"], [115, 0, 1, "", "logical_or"], [116, 0, 1, "", "logical_xor"], [117, 0, 1, "", "matmul"], [118, 0, 1, "", "matrix_transpose"], [119, 0, 1, "", "max"], [120, 0, 1, "", "mean"], [121, 0, 1, "", "meshgrid"], [122, 0, 1, "", "min"], [123, 0, 1, "", "multiply"], [124, 0, 1, "", "negative"], [125, 0, 1, "", "nonzero"], [126, 0, 1, "", "not_equal"], [127, 0, 1, "", "ones"], [128, 0, 1, "", "ones_like"], [129, 0, 1, "", "permute_dims"], [130, 0, 1, "", "positive"], [131, 0, 1, "", "pow"], [132, 0, 1, "", "prod"], [133, 0, 1, "", "remainder"], [134, 0, 1, "", "reshape"], [135, 0, 1, "", "result_type"], [136, 0, 1, "", "roll"], [137, 0, 1, "", "round"], [138, 0, 1, "", "sign"], [139, 0, 1, "", "sin"], [140, 0, 1, "", "sinh"], [141, 0, 1, "", "sort"], [142, 0, 1, "", "sqrt"], [143, 0, 1, "", "square"], [144, 0, 1, "", "squeeze"], [145, 0, 1, "", "stack"], [146, 0, 1, "", "std"], [147, 0, 1, "", "subtract"], [148, 0, 1, "", "sum"], [149, 0, 1, "", "tan"], [150, 0, 1, "", "tanh"], [151, 0, 1, "", "tensordot"], [152, 0, 1, "", "tril"], [153, 0, 1, "", "triu"], [154, 0, 1, "", "trunc"], [155, 0, 1, "", "unique_all"], [156, 0, 1, "", "unique_counts"], [157, 0, 1, "", "unique_inverse"], [158, 0, 1, "", "unique_values"], [159, 0, 1, "", "var"], [160, 0, 1, "", "vecdot"], [161, 0, 1, "", "where"], [162, 0, 1, "", "zeros"], [163, 0, 1, "", "zeros_like"]], "array_api.array": [[18, 1, 1, "", "T"], [19, 2, 1, "", "__abs__"], [20, 2, 1, "", "__add__"], [21, 2, 1, "", "__and__"], [22, 2, 1, "", "__array_namespace__"], [23, 2, 1, "", "__bool__"], [24, 2, 1, "", "__dlpack__"], [25, 2, 1, "", "__dlpack_device__"], [26, 2, 1, "", "__eq__"], [27, 2, 1, "", "__float__"], [28, 2, 1, "", "__floordiv__"], [29, 2, 1, "", "__ge__"], [30, 2, 1, "", "__getitem__"], [31, 2, 1, "", "__gt__"], [32, 2, 1, "", "__index__"], [33, 2, 1, "", "__int__"], [34, 2, 1, "", "__invert__"], [35, 2, 1, "", "__le__"], [36, 2, 1, "", "__lshift__"], [37, 2, 1, "", "__lt__"], [38, 2, 1, "", "__matmul__"], [39, 2, 1, "", "__mod__"], [40, 2, 1, "", "__mul__"], [41, 2, 1, "", "__ne__"], [42, 2, 1, "", "__neg__"], [43, 2, 1, "", "__or__"], [44, 2, 1, "", "__pos__"], [45, 2, 1, "", "__pow__"], [46, 2, 1, "", "__rshift__"], [47, 2, 1, "", "__setitem__"], [48, 2, 1, "", "__sub__"], [49, 2, 1, "", "__truediv__"], [50, 2, 1, "", "__xor__"], [51, 1, 1, "", "device"], [52, 1, 1, "", "dtype"], [53, 1, 1, "", "mT"], [54, 1, 1, "", "ndim"], [55, 1, 1, "", "shape"], [56, 1, 1, "", "size"], [57, 2, 1, "", "to_device"]], "array_api.constants": [[76, 3, 1, "", "e"], [77, 3, 1, "", "inf"], [78, 3, 1, "", "nan"], [79, 3, 1, "", "newaxis"], [80, 3, 1, "", "pi"]], "array_api.data_types": [[83, 0, 1, "", "__eq__"]], "array_api.linalg": [[185, 0, 1, "", "cholesky"], [186, 0, 1, "", "cross"], [187, 0, 1, "", "det"], [188, 0, 1, "", "diagonal"], [189, 0, 1, "", "eigh"], [190, 0, 1, "", "eigvalsh"], [191, 0, 1, "", "inv"], [192, 0, 1, "", "matmul"], [193, 0, 1, "", "matrix_norm"], [194, 0, 1, "", "matrix_power"], [195, 0, 1, "", "matrix_rank"], [196, 0, 1, "", "matrix_transpose"], [197, 0, 1, "", "outer"], [198, 0, 1, "", "pinv"], [199, 0, 1, "", "qr"], [200, 0, 1, "", "slogdet"], [201, 0, 1, "", "solve"], [202, 0, 1, "", "svd"], [203, 0, 1, "", "svdvals"], [204, 0, 1, "", "tensordot"], [205, 0, 1, "", "trace"], [206, 0, 1, "", "vecdot"], [207, 0, 1, "", "vector_norm"]]}, "objtypes": {"0": "py:function", "1": "py:property", "2": "py:method", "3": "py:data"}, "objnames": {"0": ["py", "function", "Python function"], "1": ["py", "property", "Python property"], "2": ["py", "method", "Python method"], "3": ["py", "data", "Python data"]}, "titleterms": {"arrai": [0, 165, 172, 211, 212, 214], "object": [0, 2, 3, 4, 5, 6, 166, 167, 168, 169, 170, 171, 173, 209, 212], "oper": [0, 177], "arithmet": [0, 177], "bitwis": 0, "comparison": 0, "In": [0, 1, 212], "place": [0, 1], "reflect": 0, "attribut": 0, "method": [0, 5, 7], "broadcast": 1, "overview": 1, "algorithm": 1, "exampl": [1, 176], "semant": [1, 181], "constant": 2, "api": [2, 3, 4, 6, 164, 166, 167, 168, 169, 170, 171, 173, 176, 209, 210, 211, 212, 214], "creation": 3, "function": [3, 4, 6, 7, 166, 167, 168, 169, 170, 171, 173, 177], "data": [4, 5, 125, 155, 156, 157, 158, 165, 179, 180, 213], "type": [4, 5, 172, 184, 214], "bool": 5, "int8": 5, "int16": 5, "int32": 5, "int64": 5, "uint8": 5, "uint16": 5, "uint32": 5, "uint64": 5, "float32": 5, "float64": 5, "futur": [5, 210], "extens": [5, 176, 208, 209, 210], "default": 5, "categori": 5, "numer": 5, "integ": [5, 172], "float": [5, 172], "point": [5, 172], "boolean": [5, 165], "element": 6, "wise": 6, "signatur": 7, "ab": 8, "aco": 9, "acosh": 10, "add": [11, 214], "all": 12, "ani": 13, "arang": 14, "argmax": 15, "argmin": 16, "argsort": 17, "t": 18, "__abs__": 19, "__add__": 20, "__and__": 21, "__array_namespace__": 22, "__bool__": 23, "__dlpack__": 24, "cuda": 24, "rocm": 24, "tip": [24, 58], "__dlpack_device__": 25, "__eq__": [26, 83], "__float__": 27, "__floordiv__": 28, "__ge__": 29, "__getitem__": 30, "__gt__": 31, "__index__": 32, "__int__": 33, "__invert__": 34, "__le__": 35, "__lshift__": 36, "__lt__": 37, "__matmul__": 38, "__mod__": 39, "__mul__": 40, "__ne__": 41, "__neg__": 42, "__or__": 43, "__pos__": 44, "__pow__": 45, "__rshift__": 46, "__setitem__": 47, "__sub__": 48, "__truediv__": 49, "__xor__": 50, "devic": [51, 176, 181], "dtype": 52, "mt": 53, "ndim": 54, "shape": [55, 125, 155, 156, 157, 158, 165, 179], "size": 56, "to_devic": 57, "asarrai": 58, "note": [58, 96, 172], "asin": 59, "asinh": 60, "astyp": 61, "atan": 62, "atan2": 63, "atanh": 64, "bitwise_and": 65, "bitwise_invert": 66, "bitwise_left_shift": 67, "bitwise_or": 68, "bitwise_right_shift": 69, "bitwise_xor": 70, "broadcast_arrai": 71, "broadcast_to": 72, "can_cast": 73, "ceil": 74, "concat": 75, "e": 76, "inf": 77, "nan": 78, "newaxi": 79, "pi": 80, "co": 81, "cosh": 82, "divid": 84, "empti": 85, "empty_lik": 86, "equal": 87, "exp": 88, "expand_dim": 89, "expm1": 90, "ey": 91, "finfo": 92, "flip": 93, "floor": 94, "floor_divid": 95, "from_dlpack": 96, "full": 97, "full_lik": 98, "greater": 99, "greater_equ": 100, "iinfo": 101, "isfinit": 102, "isinf": 103, "isnan": 104, "less": 105, "less_equ": 106, "linspac": 107, "log": 108, "log10": 109, "log1p": 110, "log2": 111, "logaddexp": 112, "logical_and": 113, "logical_not": 114, "logical_or": 115, "logical_xor": 116, "matmul": [117, 192], "matrix_transpos": [118, 196], "max": 119, "mean": 120, "meshgrid": 121, "min": 122, "multipli": 123, "neg": 124, "nonzero": 125, "depend": [125, 155, 156, 157, 158, 165, 174, 179], "output": [125, 155, 156, 157, 158, 165, 179], "not_equ": 126, "ones": 127, "ones_lik": 128, "permute_dim": 129, "posit": 130, "pow": 131, "prod": 132, "remaind": 133, "reshap": 134, "result_typ": 135, "roll": 136, "round": 137, "sign": [138, 172], "sin": 139, "sinh": 140, "sort": [141, 170], "sqrt": 142, "squar": 143, "squeez": 144, "stack": 145, "std": 146, "subtract": 147, "sum": 148, "tan": 149, "tanh": 150, "tensordot": [151, 204], "tril": 152, "triu": 153, "trunc": 154, "unique_al": 155, "unique_count": 156, "unique_invers": 157, "unique_valu": 158, "var": 159, "vecdot": [160, 206], "where": 161, "zero": 162, "zeros_lik": 163, "specif": 164, "index": 165, "singl": 165, "axi": 165, "slice": 165, "syntax": [165, 181], "multi": 165, "return": 165, "valu": 165, "linear": [166, 177, 209], "algebra": [166, 177, 209], "manipul": 167, "search": 168, "set": 169, "statist": [171, 177], "promot": 172, "rule": 172, "tabl": 172, "unsign": 172, "mix": 172, "python": [172, 176, 211, 214], "scalar": 172, "util": 173, "assumpt": 174, "hardwar": [174, 214], "softwar": 174, "environ": 174, "backward": [174, 210], "compat": [174, 210], "product": 174, "code": [174, 176], "interact": 174, "us": [174, 176, 213, 214], "benchmark": 175, "suit": [175, 215], "c": 176, "situat": 176, "cython": 176, "usag": [176, 181, 211, 213], "1": [176, 214], "packag": 176, "i": 176, "mostli": 176, "pure": 176, "limit": 176, "number": 176, "2": [176, 214], "contain": 176, "lot": 176, "3": [176, 214], "numpi": 176, "directli": 176, "support": [176, 181, 214], "other": 176, "longer": 176, "term": [176, 212], "approach": 176, "further": 176, "standard": [176, 210, 211, 212], "hpy": 176, "accuraci": 177, "mathemat": 177, "copi": 178, "view": 178, "behaviour": 178, "mutabl": 178, "mutat": 178, "interchang": 180, "mechan": 180, "dlpack": 180, "an": [180, 212], "memori": 180, "tensor": 180, "structur": 180, "intend": 181, "assign": 181, "out": [181, 212], "scope": [181, 210, 212], "design": [182, 209, 213], "topic": 182, "constraint": 182, "parallel": 183, "static": 184, "choleski": 185, "cross": 186, "det": 187, "diagon": 188, "eigh": 189, "eigvalsh": 190, "inv": 191, "matrix_norm": 193, "matrix_pow": 194, "matrix_rank": 195, "outer": 197, "pinv": 198, "qr": 199, "slogdet": 200, "solv": 201, "svd": 202, "svdval": 203, "trace": 205, "vector_norm": 207, "principl": 209, "evolut": 210, "version": 210, "content": 211, "context": 211, "methodologi": 211, "purpos": 212, "introduct": [212, 213], "thi": 212, "histori": 212, "includ": 212, "non": 212, "goal": 212, "implic": 212, "stakehold": 212, "how": 212, "read": 212, "document": 212, "adopt": 212, "check": 212, "complianc": 212, "discover": 212, "conform": [212, 215], "implement": 212, "option": 212, "featur": 212, "definit": 212, "norm": 212, "refer": 212, "decis": 213, "make": [213, 214], "case": 214, "concret": 214, "acceler": 214, "distribut": 214, "scipi": 214, "simplifi": 214, "einop": 214, "remov": 214, "backend": 214, "system": 214, "ad": 214, "xtensor": 214, "4": 214, "jit": 214, "compil": 214, "comput": 214, "easier": 214, "more": 214, "robust": 214, "verif": 215, "test": 215, "measur": 215, "run": 215}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.todo": 2, "sphinx": 60}, "alltitles": {"Array object": [[0, "array-object"]], "Operators": [[0, "operators"]], "Arithmetic Operators": [[0, "arithmetic-operators"], [0, "id26"], [0, "id29"]], "Array Operators": [[0, "array-operators"], [0, "id27"], [0, "id30"]], "Bitwise Operators": [[0, "bitwise-operators"], [0, "id28"], [0, "id31"]], "Comparison Operators": [[0, "comparison-operators"]], "In-place Operators": [[0, "in-place-operators"]], "Reflected Operators": [[0, "reflected-operators"]], "Attributes": [[0, "attributes"]], "Methods": [[0, "methods"], [5, "methods"]], "Broadcasting": [[1, "broadcasting"]], "Overview": [[1, "overview"]], "Algorithm": [[1, "algorithm"]], "Examples": [[1, "examples"]], "In-place Semantics": [[1, "in-place-semantics"]], "Constants": [[2, "constants"]], "Objects in API": [[2, "objects-in-api"], [3, "objects-in-api"], [4, "objects-in-api"], [6, "objects-in-api"], [166, "objects-in-api"], [167, "objects-in-api"], [168, "objects-in-api"], [169, "objects-in-api"], [170, "objects-in-api"], [171, "objects-in-api"], [173, "objects-in-api"], [209, "objects-in-api"]], "Creation Functions": [[3, "creation-functions"]], "Data Type Functions": [[4, "data-type-functions"]], "Data Types": [[5, "data-types"]], "bool": [[5, "bool"]], "int8": [[5, "int8"]], "int16": [[5, "int16"]], "int32": [[5, "int32"]], "int64": [[5, "int64"]], "uint8": [[5, "uint8"]], "uint16": [[5, "uint16"]], "uint32": [[5, "uint32"]], "uint64": [[5, "uint64"]], "float32": [[5, "float32"]], "float64": [[5, "float64"]], "Future extension": [[5, null]], "Data Type Objects": [[5, "data-type-objects"]], "Default Data Types": [[5, "default-data-types"]], "Data Type Categories": [[5, "data-type-categories"]], "Numeric Data Types": [[5, "numeric-data-types"]], "Integer Data Types": [[5, "integer-data-types"]], "Floating-point Data Types": [[5, "floating-point-data-types"]], "Boolean Data Types": [[5, "boolean-data-types"]], "Element-wise Functions": [[6, "element-wise-functions"]], "Function and method signatures": [[7, "function-and-method-signatures"]], "abs": [[8, "abs"]], "acos": [[9, "acos"]], "acosh": [[10, "acosh"]], "add": [[11, "add"]], "all": [[12, "all"]], "any": [[13, "any"]], "arange": [[14, "arange"]], "argmax": [[15, "argmax"]], "argmin": [[16, "argmin"]], "argsort": [[17, "argsort"]], "T": [[18, "t"]], "__abs__": [[19, "abs"]], "__add__": [[20, "add"]], "__and__": [[21, "and"]], "__array_namespace__": [[22, "array-namespace"]], "__bool__": [[23, "bool"]], "__dlpack__": [[24, "dlpack"]], "CUDA": [[24, null]], "ROCm": [[24, null]], "Tip": [[24, null], [58, null]], "__dlpack_device__": [[25, "dlpack-device"]], "__eq__": [[26, "eq"], [83, "eq"]], "__float__": [[27, "float"]], "__floordiv__": [[28, "floordiv"]], "__ge__": [[29, "ge"]], "__getitem__": [[30, "getitem"]], "__gt__": [[31, "gt"]], "__index__": [[32, "index"]], "__int__": [[33, "int"]], "__invert__": [[34, "invert"]], "__le__": [[35, "le"]], "__lshift__": [[36, "lshift"]], "__lt__": [[37, "lt"]], "__matmul__": [[38, "matmul"]], "__mod__": [[39, "mod"]], "__mul__": [[40, "mul"]], "__ne__": [[41, "ne"]], "__neg__": [[42, "neg"]], "__or__": [[43, "or"]], "__pos__": [[44, "pos"]], "__pow__": [[45, "pow"]], "__rshift__": [[46, "rshift"]], "__setitem__": [[47, "setitem"]], "__sub__": [[48, "sub"]], "__truediv__": [[49, "truediv"]], "__xor__": [[50, "xor"]], "device": [[51, "device"]], "dtype": [[52, "dtype"]], "mT": [[53, "mt"]], "ndim": [[54, "ndim"]], "shape": [[55, "shape"]], "size": [[56, "size"]], "to_device": [[57, "to-device"]], "asarray": [[58, "asarray"]], "Note": [[58, null], [96, null]], "asin": [[59, "asin"]], "asinh": [[60, "asinh"]], "astype": [[61, "astype"]], "atan": [[62, "atan"]], "atan2": [[63, "atan2"]], "atanh": [[64, "atanh"]], "bitwise_and": [[65, "bitwise-and"]], "bitwise_invert": [[66, "bitwise-invert"]], "bitwise_left_shift": [[67, "bitwise-left-shift"]], "bitwise_or": [[68, "bitwise-or"]], "bitwise_right_shift": [[69, "bitwise-right-shift"]], "bitwise_xor": [[70, "bitwise-xor"]], "broadcast_arrays": [[71, "broadcast-arrays"]], "broadcast_to": [[72, "broadcast-to"]], "can_cast": [[73, "can-cast"]], "ceil": [[74, "ceil"]], "concat": [[75, "concat"]], "e": [[76, "e"]], "inf": [[77, "inf"]], "nan": [[78, "nan"]], "newaxis": [[79, "newaxis"]], "pi": [[80, "pi"]], "cos": [[81, "cos"]], "cosh": [[82, "cosh"]], "divide": [[84, "divide"]], "empty": [[85, "empty"]], "empty_like": [[86, "empty-like"]], "equal": [[87, "equal"]], "exp": [[88, "exp"]], "expand_dims": [[89, "expand-dims"]], "expm1": [[90, "expm1"]], "eye": [[91, "eye"]], "finfo": [[92, "finfo"]], "flip": [[93, "flip"]], "floor": [[94, "floor"]], "floor_divide": [[95, "floor-divide"]], "from_dlpack": [[96, "from-dlpack"]], "full": [[97, "full"]], "full_like": [[98, "full-like"]], "greater": [[99, "greater"]], "greater_equal": [[100, "greater-equal"]], "iinfo": [[101, "iinfo"]], "isfinite": [[102, "isfinite"]], "isinf": [[103, "isinf"]], "isnan": [[104, "isnan"]], "less": [[105, "less"]], "less_equal": [[106, "less-equal"]], "linspace": [[107, "linspace"]], "log": [[108, "log"]], "log10": [[109, "log10"]], "log1p": [[110, "log1p"]], "log2": [[111, "log2"]], "logaddexp": [[112, "logaddexp"]], "logical_and": [[113, "logical-and"]], "logical_not": [[114, "logical-not"]], "logical_or": [[115, "logical-or"]], "logical_xor": [[116, "logical-xor"]], "matmul": [[117, "matmul"], [192, "matmul"]], "matrix_transpose": [[118, "matrix-transpose"], [196, "matrix-transpose"]], "max": [[119, "max"]], "mean": [[120, "mean"]], "meshgrid": [[121, "meshgrid"]], "min": [[122, "min"]], "multiply": [[123, "multiply"]], "negative": [[124, "negative"]], "nonzero": [[125, "nonzero"]], "Data-dependent output shape": [[125, null], [155, null], [156, null], [157, null], [158, null], [165, null], [179, null]], "not_equal": [[126, "not-equal"]], "ones": [[127, "ones"]], "ones_like": [[128, "ones-like"]], "permute_dims": [[129, "permute-dims"]], "positive": [[130, "positive"]], "pow": [[131, "pow"]], "prod": [[132, "prod"]], "remainder": [[133, "remainder"]], "reshape": [[134, "reshape"]], "result_type": [[135, "result-type"]], "roll": [[136, "roll"]], "round": [[137, "round"]], "sign": [[138, "sign"]], "sin": [[139, "sin"]], "sinh": [[140, "sinh"]], "sort": [[141, "sort"]], "sqrt": [[142, "sqrt"]], "square": [[143, "square"]], "squeeze": [[144, "squeeze"]], "stack": [[145, "stack"]], "std": [[146, "std"]], "subtract": [[147, "subtract"]], "sum": [[148, "sum"]], "tan": [[149, "tan"]], "tanh": [[150, "tanh"]], "tensordot": [[151, "tensordot"], [204, "tensordot"]], "tril": [[152, "tril"]], "triu": [[153, "triu"]], "trunc": [[154, "trunc"]], "unique_all": [[155, "unique-all"]], "unique_counts": [[156, "unique-counts"]], "unique_inverse": [[157, "unique-inverse"]], "unique_values": [[158, "unique-values"]], "var": [[159, "var"]], "vecdot": [[160, "vecdot"], [206, "vecdot"]], "where": [[161, "where"]], "zeros": [[162, "zeros"]], "zeros_like": [[163, "zeros-like"]], "API specification": [[164, "api-specification"], [164, null]], "Indexing": [[165, "indexing"]], "Single-axis Indexing": [[165, "single-axis-indexing"]], "Slice Syntax": [[165, "slice-syntax"]], "Multi-axis Indexing": [[165, "multi-axis-indexing"]], "Boolean Array Indexing": [[165, "boolean-array-indexing"]], "Return Values": [[165, "return-values"]], "Linear Algebra Functions": [[166, "linear-algebra-functions"]], "Manipulation Functions": [[167, "manipulation-functions"]], "Searching Functions": [[168, "searching-functions"]], "Set Functions": [[169, "set-functions"]], "Sorting Functions": [[170, "sorting-functions"]], "Statistical Functions": [[171, "statistical-functions"], [177, "statistical-functions"]], "Type Promotion Rules": [[172, "type-promotion-rules"]], "Rules": [[172, "rules"]], "Signed integer type promotion table": [[172, "signed-integer-type-promotion-table"]], "Unsigned integer type promotion table": [[172, "unsigned-integer-type-promotion-table"]], "Mixed unsigned and signed integer type promotion table": [[172, "mixed-unsigned-and-signed-integer-type-promotion-table"]], "Floating-point type promotion table": [[172, "floating-point-type-promotion-table"]], "Notes": [[172, "notes"]], "Mixing arrays with Python scalars": [[172, "mixing-arrays-with-python-scalars"]], "Utility Functions": [[173, "utility-functions"]], "Assumptions": [[174, "assumptions"]], "Hardware and software environments": [[174, "hardware-and-software-environments"]], "Dependencies": [[174, "dependencies"]], "Backwards compatibility": [[174, "backwards-compatibility"], [210, "backwards-compatibility"]], "Production code & interactive use": [[174, "production-code-interactive-use"]], "Benchmark suite": [[175, "benchmark-suite"]], "C API": [[176, "c-api"]], "Example situations for C/Cython usage": [[176, "example-situations-for-c-cython-usage"]], "Situation 1: a Python package that is mostly pure Python, with a limited number of Cython extensions": [[176, "situation-1-a-python-package-that-is-mostly-pure-python-with-a-limited-number-of-cython-extensions"]], "Situation 2: a Python package that contains a lot of Cython code": [[176, "situation-2-a-python-package-that-contains-a-lot-of-cython-code"]], "Situation 3: a Python package that uses the NumPy or Python C API directly": [[176, "situation-3-a-python-package-that-uses-the-numpy-or-python-c-api-directly"]], "Device support": [[176, "device-support"], [181, "device-support"]], "Other longer-term approaches": [[176, "other-longer-term-approaches"]], "Further Python API standardization": [[176, "further-python-api-standardization"]], "HPy": [[176, "hpy"]], "Accuracy": [[177, "accuracy"]], "Arithmetic Operations": [[177, "arithmetic-operations"]], "Mathematical Functions": [[177, "mathematical-functions"]], "Linear Algebra": [[177, "linear-algebra"]], "Copy-view behaviour and mutability": [[178, "copy-view-behaviour-and-mutability"]], "Mutating views": [[178, null]], "Data-dependent output shapes": [[179, "data-dependent-output-shapes"]], "Data interchange mechanisms": [[180, "data-interchange-mechanisms"]], "DLPack: An in-memory tensor structure": [[180, "dlpack-an-in-memory-tensor-structure"]], "Intended usage": [[181, "intended-usage"]], "Syntax for device assignment": [[181, "syntax-for-device-assignment"]], "Semantics": [[181, "semantics"]], "Out of scope for device support": [[181, "out-of-scope-for-device-support"]], "Design topics & constraints": [[182, "design-topics-constraints"], [182, null]], "Parallelism": [[183, "parallelism"]], "Static typing": [[184, "static-typing"]], "cholesky": [[185, "cholesky"]], "cross": [[186, "cross"]], "det": [[187, "det"]], "diagonal": [[188, "diagonal"]], "eigh": [[189, "eigh"]], "eigvalsh": [[190, "eigvalsh"]], "inv": [[191, "inv"]], "matrix_norm": [[193, "matrix-norm"]], "matrix_power": [[194, "matrix-power"]], "matrix_rank": [[195, "matrix-rank"]], "outer": [[197, "outer"]], "pinv": [[198, "pinv"]], "qr": [[199, "qr"]], "slogdet": [[200, "slogdet"]], "solve": [[201, "solve"]], "svd": [[202, "svd"]], "svdvals": [[203, "svdvals"]], "trace": [[205, "trace"]], "vector_norm": [[207, "vector-norm"]], "Extensions": [[208, "extensions"], [208, null]], "Linear Algebra Extension": [[209, "linear-algebra-extension"]], "Design Principles": [[209, "design-principles"]], "Future API standard evolution": [[210, "future-api-standard-evolution"]], "Scope extensions": [[210, "scope-extensions"]], "Versioning": [[210, "versioning"]], "Python array API standard": [[211, "python-array-api-standard"]], "Contents": [[211, "contents"]], "Context": [[211, null]], "API": [[211, null]], "Methodology and Usage": [[211, null]], "Purpose and scope": [[212, "purpose-and-scope"]], "Introduction": [[212, "introduction"], [213, "introduction"]], "This API standard": [[212, "this-api-standard"]], "History": [[212, "history"]], "Scope (includes out-of-scope / non-goals)": [[212, "scope-includes-out-of-scope-non-goals"]], "In scope": [[212, "in-scope"]], "Out of scope": [[212, "out-of-scope"]], "Implications of in/out of scope": [[212, "implications-of-in-out-of-scope"]], "Stakeholders": [[212, "stakeholders"]], "How to read this document": [[212, "how-to-read-this-document"]], "How to adopt this API": [[212, "how-to-adopt-this-api"]], "Checking an array object for Compliance": [[212, "checking-an-array-object-for-compliance"]], "Discoverability of conforming implementations": [[212, "discoverability-of-conforming-implementations"]], "Optional feature": [[212, null]], "Conformance": [[212, "conformance"]], "Terms and Definitions": [[212, "terms-and-definitions"]], "Normative References": [[212, "normative-references"]], "Usage Data": [[213, "usage-data"]], "Design": [[213, "design"]], "Usage": [[213, "usage"]], "Use in Decision-Making": [[213, "use-in-decision-making"]], "Use cases": [[214, "use-cases"]], "Types of use cases": [[214, "types-of-use-cases"]], "Concrete use cases": [[214, "concrete-use-cases"]], "Use case 1: add hardware accelerator and distributed support to SciPy": [[214, "use-case-1-add-hardware-accelerator-and-distributed-support-to-scipy"]], "Use case 2: simplify einops by removing the backend system": [[214, "use-case-2-simplify-einops-by-removing-the-backend-system"]], "Use case 3: adding a Python API to xtensor": [[214, "use-case-3-adding-a-python-api-to-xtensor"]], "Use case 4: make JIT compilation of array computations easier and more robust": [[214, "use-case-4-make-jit-compilation-of-array-computations-easier-and-more-robust"]], "Verification - test suite": [[215, "verification-test-suite"]], "Measuring conformance": [[215, "measuring-conformance"]], "Running the tests": [[215, "running-the-tests"]]}, "indexentries": {"abs() (in module array_api)": [[8, "array_api.abs"]], "acos() (in module array_api)": [[9, "array_api.acos"]], "acosh() (in module array_api)": [[10, "array_api.acosh"]], "add() (in module array_api)": [[11, "array_api.add"]], "all() (in module array_api)": [[12, "array_api.all"]], "any() (in module array_api)": [[13, "array_api.any"]], "arange() (in module array_api)": [[14, "array_api.arange"]], "argmax() (in module array_api)": [[15, "array_api.argmax"]], "argmin() (in module array_api)": [[16, "array_api.argmin"]], "argsort() (in module array_api)": [[17, "array_api.argsort"]], "t (array property)": [[18, "array_api.array.T"]], "__abs__() (array method)": [[19, "array_api.array.__abs__"]], "__add__() (array method)": [[20, "array_api.array.__add__"]], "__and__() (array method)": [[21, "array_api.array.__and__"]], "__array_namespace__() (array method)": [[22, "array_api.array.__array_namespace__"]], "__bool__() (array method)": [[23, "array_api.array.__bool__"]], "__dlpack__() (array method)": [[24, "array_api.array.__dlpack__"]], "__dlpack_device__() (array method)": [[25, "array_api.array.__dlpack_device__"]], "__eq__() (array method)": [[26, "array_api.array.__eq__"]], "__float__() (array method)": [[27, "array_api.array.__float__"]], "__floordiv__() (array method)": [[28, "array_api.array.__floordiv__"]], "__ge__() (array method)": [[29, "array_api.array.__ge__"]], "__getitem__() (array method)": [[30, "array_api.array.__getitem__"]], "__gt__() (array method)": [[31, "array_api.array.__gt__"]], "__index__() (array method)": [[32, "array_api.array.__index__"]], "__int__() (array method)": [[33, "array_api.array.__int__"]], "__invert__() (array method)": [[34, "array_api.array.__invert__"]], "__le__() (array method)": [[35, "array_api.array.__le__"]], "__lshift__() (array method)": [[36, "array_api.array.__lshift__"]], "__lt__() (array method)": [[37, "array_api.array.__lt__"]], "__matmul__() (array method)": [[38, "array_api.array.__matmul__"]], "__mod__() (array method)": [[39, "array_api.array.__mod__"]], "__mul__() (array method)": [[40, "array_api.array.__mul__"]], "__ne__() (array method)": [[41, "array_api.array.__ne__"]], "__neg__() (array method)": [[42, "array_api.array.__neg__"]], "__or__() (array method)": [[43, "array_api.array.__or__"]], "__pos__() (array method)": [[44, "array_api.array.__pos__"]], "__pow__() (array method)": [[45, "array_api.array.__pow__"]], "__rshift__() (array method)": [[46, "array_api.array.__rshift__"]], "__setitem__() (array method)": [[47, "array_api.array.__setitem__"]], "__sub__() (array method)": [[48, "array_api.array.__sub__"]], "__truediv__() (array method)": [[49, "array_api.array.__truediv__"]], "__xor__() (array method)": [[50, "array_api.array.__xor__"]], "device (array property)": [[51, "array_api.array.device"]], "dtype (array property)": [[52, "array_api.array.dtype"]], "mt (array property)": [[53, "array_api.array.mT"]], "ndim (array property)": [[54, "array_api.array.ndim"]], "shape (array property)": [[55, "array_api.array.shape"]], "size (array property)": [[56, "array_api.array.size"]], "to_device() (array method)": [[57, "array_api.array.to_device"]], "asarray() (in module array_api)": [[58, "array_api.asarray"]], "asin() (in module array_api)": [[59, "array_api.asin"]], "asinh() (in module array_api)": [[60, "array_api.asinh"]], "astype() (in module array_api)": [[61, "array_api.astype"]], "atan() (in module array_api)": [[62, "array_api.atan"]], "atan2() (in module array_api)": [[63, "array_api.atan2"]], "atanh() (in module array_api)": [[64, "array_api.atanh"]], "bitwise_and() (in module array_api)": [[65, "array_api.bitwise_and"]], "bitwise_invert() (in module array_api)": [[66, "array_api.bitwise_invert"]], "bitwise_left_shift() (in module array_api)": [[67, "array_api.bitwise_left_shift"]], "bitwise_or() (in module array_api)": [[68, "array_api.bitwise_or"]], "bitwise_right_shift() (in module array_api)": [[69, "array_api.bitwise_right_shift"]], "bitwise_xor() (in module array_api)": [[70, "array_api.bitwise_xor"]], "broadcast_arrays() (in module array_api)": [[71, "array_api.broadcast_arrays"]], "broadcast_to() (in module array_api)": [[72, "array_api.broadcast_to"]], "can_cast() (in module array_api)": [[73, "array_api.can_cast"]], "ceil() (in module array_api)": [[74, "array_api.ceil"]], "concat() (in module array_api)": [[75, "array_api.concat"]], "e (in module array_api.constants)": [[76, "array_api.constants.e"]], "inf (in module array_api.constants)": [[77, "array_api.constants.inf"]], "nan (in module array_api.constants)": [[78, "array_api.constants.nan"]], "newaxis (in module array_api.constants)": [[79, "array_api.constants.newaxis"]], "pi (in module array_api.constants)": [[80, "array_api.constants.pi"]], "cos() (in module array_api)": [[81, "array_api.cos"]], "cosh() (in module array_api)": [[82, "array_api.cosh"]], "__eq__() (in module array_api.data_types)": [[83, "array_api.data_types.__eq__"]], "divide() (in module array_api)": [[84, "array_api.divide"]], "empty() (in module array_api)": [[85, "array_api.empty"]], "empty_like() (in module array_api)": [[86, "array_api.empty_like"]], "equal() (in module array_api)": [[87, "array_api.equal"]], "exp() (in module array_api)": [[88, "array_api.exp"]], "expand_dims() (in module array_api)": [[89, "array_api.expand_dims"]], "expm1() (in module array_api)": [[90, "array_api.expm1"]], "eye() (in module array_api)": [[91, "array_api.eye"]], "finfo() (in module array_api)": [[92, "array_api.finfo"]], "flip() (in module array_api)": [[93, "array_api.flip"]], "floor() (in module array_api)": [[94, "array_api.floor"]], "floor_divide() (in module array_api)": [[95, "array_api.floor_divide"]], "from_dlpack() (in module array_api)": [[96, "array_api.from_dlpack"]], "full() (in module array_api)": [[97, "array_api.full"]], "full_like() (in module array_api)": [[98, "array_api.full_like"]], "greater() (in module array_api)": [[99, "array_api.greater"]], "greater_equal() (in module array_api)": [[100, "array_api.greater_equal"]], "iinfo() (in module array_api)": [[101, "array_api.iinfo"]], "isfinite() (in module array_api)": [[102, "array_api.isfinite"]], "isinf() (in module array_api)": [[103, "array_api.isinf"]], "isnan() (in module array_api)": [[104, "array_api.isnan"]], "less() (in module array_api)": [[105, "array_api.less"]], "less_equal() (in module array_api)": [[106, "array_api.less_equal"]], "linspace() (in module array_api)": [[107, "array_api.linspace"]], "log() (in module array_api)": [[108, "array_api.log"]], "log10() (in module array_api)": [[109, "array_api.log10"]], "log1p() (in module array_api)": [[110, "array_api.log1p"]], "log2() (in module array_api)": [[111, "array_api.log2"]], "logaddexp() (in module array_api)": [[112, "array_api.logaddexp"]], "logical_and() (in module array_api)": [[113, "array_api.logical_and"]], "logical_not() (in module array_api)": [[114, "array_api.logical_not"]], "logical_or() (in module array_api)": [[115, "array_api.logical_or"]], "logical_xor() (in module array_api)": [[116, "array_api.logical_xor"]], "matmul() (in module array_api)": [[117, "array_api.matmul"]], "matrix_transpose() (in module array_api)": [[118, "array_api.matrix_transpose"]], "max() (in module array_api)": [[119, "array_api.max"]], "mean() (in module array_api)": [[120, "array_api.mean"]], "meshgrid() (in module array_api)": [[121, "array_api.meshgrid"]], "min() (in module array_api)": [[122, "array_api.min"]], "multiply() (in module array_api)": [[123, "array_api.multiply"]], "negative() (in module array_api)": [[124, "array_api.negative"]], "nonzero() (in module array_api)": [[125, "array_api.nonzero"]], "not_equal() (in module array_api)": [[126, "array_api.not_equal"]], "ones() (in module array_api)": [[127, "array_api.ones"]], "ones_like() (in module array_api)": [[128, "array_api.ones_like"]], "permute_dims() (in module array_api)": [[129, "array_api.permute_dims"]], "positive() (in module array_api)": [[130, "array_api.positive"]], "pow() (in module array_api)": [[131, "array_api.pow"]], "prod() (in module array_api)": [[132, "array_api.prod"]], "remainder() (in module array_api)": [[133, "array_api.remainder"]], "reshape() (in module array_api)": [[134, "array_api.reshape"]], "result_type() (in module array_api)": [[135, "array_api.result_type"]], "roll() (in module array_api)": [[136, "array_api.roll"]], "round() (in module array_api)": [[137, "array_api.round"]], "sign() (in module array_api)": [[138, "array_api.sign"]], "sin() (in module array_api)": [[139, "array_api.sin"]], "sinh() (in module array_api)": [[140, "array_api.sinh"]], "sort() (in module array_api)": [[141, "array_api.sort"]], "sqrt() (in module array_api)": [[142, "array_api.sqrt"]], "square() (in module array_api)": [[143, "array_api.square"]], "squeeze() (in module array_api)": [[144, "array_api.squeeze"]], "stack() (in module array_api)": [[145, "array_api.stack"]], "std() (in module array_api)": [[146, "array_api.std"]], "subtract() (in module array_api)": [[147, "array_api.subtract"]], "sum() (in module array_api)": [[148, "array_api.sum"]], "tan() (in module array_api)": [[149, "array_api.tan"]], "tanh() (in module array_api)": [[150, "array_api.tanh"]], "tensordot() (in module array_api)": [[151, "array_api.tensordot"]], "tril() (in module array_api)": [[152, "array_api.tril"]], "triu() (in module array_api)": [[153, "array_api.triu"]], "trunc() (in module array_api)": [[154, "array_api.trunc"]], "unique_all() (in module array_api)": [[155, "array_api.unique_all"]], "unique_counts() (in module array_api)": [[156, "array_api.unique_counts"]], "unique_inverse() (in module array_api)": [[157, "array_api.unique_inverse"]], "unique_values() (in module array_api)": [[158, "array_api.unique_values"]], "var() (in module array_api)": [[159, "array_api.var"]], "vecdot() (in module array_api)": [[160, "array_api.vecdot"]], "where() (in module array_api)": [[161, "array_api.where"]], "zeros() (in module array_api)": [[162, "array_api.zeros"]], "zeros_like() (in module array_api)": [[163, "array_api.zeros_like"]], "cholesky() (in module array_api.linalg)": [[185, "array_api.linalg.cholesky"]], "cross() (in module array_api.linalg)": [[186, "array_api.linalg.cross"]], "det() (in module array_api.linalg)": [[187, "array_api.linalg.det"]], "diagonal() (in module array_api.linalg)": [[188, "array_api.linalg.diagonal"]], "eigh() (in module array_api.linalg)": [[189, "array_api.linalg.eigh"]], "eigvalsh() (in module array_api.linalg)": [[190, "array_api.linalg.eigvalsh"]], "inv() (in module array_api.linalg)": [[191, "array_api.linalg.inv"]], "matmul() (in module array_api.linalg)": [[192, "array_api.linalg.matmul"]], "matrix_norm() (in module array_api.linalg)": [[193, "array_api.linalg.matrix_norm"]], "matrix_power() (in module array_api.linalg)": [[194, "array_api.linalg.matrix_power"]], "matrix_rank() (in module array_api.linalg)": [[195, "array_api.linalg.matrix_rank"]], "matrix_transpose() (in module array_api.linalg)": [[196, "array_api.linalg.matrix_transpose"]], "outer() (in module array_api.linalg)": [[197, "array_api.linalg.outer"]], "pinv() (in module array_api.linalg)": [[198, "array_api.linalg.pinv"]], "qr() (in module array_api.linalg)": [[199, "array_api.linalg.qr"]], "slogdet() (in module array_api.linalg)": [[200, "array_api.linalg.slogdet"]], "solve() (in module array_api.linalg)": [[201, "array_api.linalg.solve"]], "svd() (in module array_api.linalg)": [[202, "array_api.linalg.svd"]], "svdvals() (in module array_api.linalg)": [[203, "array_api.linalg.svdvals"]], "tensordot() (in module array_api.linalg)": [[204, "array_api.linalg.tensordot"]], "trace() (in module array_api.linalg)": [[205, "array_api.linalg.trace"]], "vecdot() (in module array_api.linalg)": [[206, "array_api.linalg.vecdot"]], "vector_norm() (in module array_api.linalg)": [[207, "array_api.linalg.vector_norm"]]}})