Search.setIndex({"docnames": ["API_specification/array_object", "API_specification/broadcasting", "API_specification/constants", "API_specification/creation_functions", "API_specification/data_type_functions", "API_specification/data_types", "API_specification/elementwise_functions", "API_specification/function_and_method_signatures", "API_specification/generated/array_api.__array_api_version__", "API_specification/generated/array_api.abs", "API_specification/generated/array_api.acos", "API_specification/generated/array_api.acosh", "API_specification/generated/array_api.add", "API_specification/generated/array_api.all", "API_specification/generated/array_api.any", "API_specification/generated/array_api.arange", "API_specification/generated/array_api.argmax", "API_specification/generated/array_api.argmin", "API_specification/generated/array_api.argsort", "API_specification/generated/array_api.array.T", "API_specification/generated/array_api.array.__abs__", "API_specification/generated/array_api.array.__add__", "API_specification/generated/array_api.array.__and__", "API_specification/generated/array_api.array.__array_namespace__", "API_specification/generated/array_api.array.__bool__", "API_specification/generated/array_api.array.__complex__", "API_specification/generated/array_api.array.__dlpack__", "API_specification/generated/array_api.array.__dlpack_device__", "API_specification/generated/array_api.array.__eq__", "API_specification/generated/array_api.array.__float__", "API_specification/generated/array_api.array.__floordiv__", "API_specification/generated/array_api.array.__ge__", "API_specification/generated/array_api.array.__getitem__", "API_specification/generated/array_api.array.__gt__", "API_specification/generated/array_api.array.__index__", "API_specification/generated/array_api.array.__int__", "API_specification/generated/array_api.array.__invert__", "API_specification/generated/array_api.array.__le__", "API_specification/generated/array_api.array.__lshift__", "API_specification/generated/array_api.array.__lt__", "API_specification/generated/array_api.array.__matmul__", "API_specification/generated/array_api.array.__mod__", "API_specification/generated/array_api.array.__mul__", "API_specification/generated/array_api.array.__ne__", "API_specification/generated/array_api.array.__neg__", "API_specification/generated/array_api.array.__or__", "API_specification/generated/array_api.array.__pos__", "API_specification/generated/array_api.array.__pow__", "API_specification/generated/array_api.array.__rshift__", "API_specification/generated/array_api.array.__setitem__", "API_specification/generated/array_api.array.__sub__", "API_specification/generated/array_api.array.__truediv__", "API_specification/generated/array_api.array.__xor__", "API_specification/generated/array_api.array.device", "API_specification/generated/array_api.array.dtype", "API_specification/generated/array_api.array.mT", "API_specification/generated/array_api.array.ndim", "API_specification/generated/array_api.array.shape", "API_specification/generated/array_api.array.size", "API_specification/generated/array_api.array.to_device", "API_specification/generated/array_api.asarray", "API_specification/generated/array_api.asin", "API_specification/generated/array_api.asinh", "API_specification/generated/array_api.astype", "API_specification/generated/array_api.atan", "API_specification/generated/array_api.atan2", "API_specification/generated/array_api.atanh", "API_specification/generated/array_api.bitwise_and", "API_specification/generated/array_api.bitwise_invert", "API_specification/generated/array_api.bitwise_left_shift", "API_specification/generated/array_api.bitwise_or", "API_specification/generated/array_api.bitwise_right_shift", "API_specification/generated/array_api.bitwise_xor", "API_specification/generated/array_api.broadcast_arrays", "API_specification/generated/array_api.broadcast_to", "API_specification/generated/array_api.can_cast", "API_specification/generated/array_api.ceil", "API_specification/generated/array_api.clip", "API_specification/generated/array_api.concat", "API_specification/generated/array_api.conj", "API_specification/generated/array_api.constants.e", "API_specification/generated/array_api.constants.inf", "API_specification/generated/array_api.constants.nan", "API_specification/generated/array_api.constants.newaxis", "API_specification/generated/array_api.constants.pi", "API_specification/generated/array_api.copysign", "API_specification/generated/array_api.cos", "API_specification/generated/array_api.cosh", "API_specification/generated/array_api.cumulative_sum", "API_specification/generated/array_api.data_types.__eq__", "API_specification/generated/array_api.divide", "API_specification/generated/array_api.empty", "API_specification/generated/array_api.empty_like", "API_specification/generated/array_api.equal", "API_specification/generated/array_api.exp", "API_specification/generated/array_api.expand_dims", "API_specification/generated/array_api.expm1", "API_specification/generated/array_api.eye", "API_specification/generated/array_api.finfo", "API_specification/generated/array_api.flip", "API_specification/generated/array_api.floor", "API_specification/generated/array_api.floor_divide", "API_specification/generated/array_api.from_dlpack", "API_specification/generated/array_api.full", "API_specification/generated/array_api.full_like", "API_specification/generated/array_api.greater", "API_specification/generated/array_api.greater_equal", "API_specification/generated/array_api.hypot", "API_specification/generated/array_api.iinfo", "API_specification/generated/array_api.imag", "API_specification/generated/array_api.info.__array_namespace_info__", "API_specification/generated/array_api.info.capabilities", "API_specification/generated/array_api.info.default_device", "API_specification/generated/array_api.info.default_dtypes", "API_specification/generated/array_api.info.devices", "API_specification/generated/array_api.info.dtypes", "API_specification/generated/array_api.isdtype", "API_specification/generated/array_api.isfinite", "API_specification/generated/array_api.isinf", "API_specification/generated/array_api.isnan", "API_specification/generated/array_api.less", "API_specification/generated/array_api.less_equal", "API_specification/generated/array_api.linspace", "API_specification/generated/array_api.log", "API_specification/generated/array_api.log10", "API_specification/generated/array_api.log1p", "API_specification/generated/array_api.log2", "API_specification/generated/array_api.logaddexp", "API_specification/generated/array_api.logical_and", "API_specification/generated/array_api.logical_not", "API_specification/generated/array_api.logical_or", "API_specification/generated/array_api.logical_xor", "API_specification/generated/array_api.matmul", "API_specification/generated/array_api.matrix_transpose", "API_specification/generated/array_api.max", "API_specification/generated/array_api.maximum", "API_specification/generated/array_api.mean", "API_specification/generated/array_api.meshgrid", "API_specification/generated/array_api.min", "API_specification/generated/array_api.minimum", "API_specification/generated/array_api.moveaxis", "API_specification/generated/array_api.multiply", "API_specification/generated/array_api.negative", "API_specification/generated/array_api.nonzero", "API_specification/generated/array_api.not_equal", "API_specification/generated/array_api.ones", "API_specification/generated/array_api.ones_like", "API_specification/generated/array_api.permute_dims", "API_specification/generated/array_api.positive", "API_specification/generated/array_api.pow", "API_specification/generated/array_api.prod", "API_specification/generated/array_api.real", "API_specification/generated/array_api.remainder", "API_specification/generated/array_api.repeat", "API_specification/generated/array_api.reshape", "API_specification/generated/array_api.result_type", "API_specification/generated/array_api.roll", "API_specification/generated/array_api.round", "API_specification/generated/array_api.searchsorted", "API_specification/generated/array_api.sign", "API_specification/generated/array_api.signbit", "API_specification/generated/array_api.sin", "API_specification/generated/array_api.sinh", "API_specification/generated/array_api.sort", "API_specification/generated/array_api.sqrt", "API_specification/generated/array_api.square", "API_specification/generated/array_api.squeeze", "API_specification/generated/array_api.stack", "API_specification/generated/array_api.std", "API_specification/generated/array_api.subtract", "API_specification/generated/array_api.sum", "API_specification/generated/array_api.take", "API_specification/generated/array_api.tan", "API_specification/generated/array_api.tanh", "API_specification/generated/array_api.tensordot", "API_specification/generated/array_api.tile", "API_specification/generated/array_api.tril", "API_specification/generated/array_api.triu", "API_specification/generated/array_api.trunc", "API_specification/generated/array_api.unique_all", "API_specification/generated/array_api.unique_counts", "API_specification/generated/array_api.unique_inverse", "API_specification/generated/array_api.unique_values", "API_specification/generated/array_api.unstack", "API_specification/generated/array_api.var", "API_specification/generated/array_api.vecdot", "API_specification/generated/array_api.where", "API_specification/generated/array_api.zeros", "API_specification/generated/array_api.zeros_like", "API_specification/index", "API_specification/indexing", "API_specification/indexing_functions", "API_specification/inspection", "API_specification/linear_algebra_functions", "API_specification/manipulation_functions", "API_specification/searching_functions", "API_specification/set_functions", "API_specification/sorting_functions", "API_specification/statistical_functions", "API_specification/type_promotion", "API_specification/utility_functions", "API_specification/version", "assumptions", "benchmark_suite", "changelog", "design_topics/C_API", "design_topics/accuracy", "design_topics/complex_numbers", "design_topics/copies_views_and_mutation", "design_topics/data_dependent_output_shapes", "design_topics/data_interchange", "design_topics/device_support", "design_topics/exceptions", "design_topics/index", "design_topics/lazy_eager", "design_topics/parallelism", "design_topics/static_typing", "extensions/fourier_transform_functions", "extensions/generated/array_api.fft.fft", "extensions/generated/array_api.fft.fftfreq", "extensions/generated/array_api.fft.fftn", "extensions/generated/array_api.fft.fftshift", "extensions/generated/array_api.fft.hfft", "extensions/generated/array_api.fft.ifft", "extensions/generated/array_api.fft.ifftn", "extensions/generated/array_api.fft.ifftshift", "extensions/generated/array_api.fft.ihfft", "extensions/generated/array_api.fft.irfft", "extensions/generated/array_api.fft.irfftn", "extensions/generated/array_api.fft.rfft", "extensions/generated/array_api.fft.rfftfreq", "extensions/generated/array_api.fft.rfftn", "extensions/generated/array_api.linalg.cholesky", "extensions/generated/array_api.linalg.cross", "extensions/generated/array_api.linalg.det", "extensions/generated/array_api.linalg.diagonal", "extensions/generated/array_api.linalg.eigh", "extensions/generated/array_api.linalg.eigvalsh", "extensions/generated/array_api.linalg.inv", "extensions/generated/array_api.linalg.matmul", "extensions/generated/array_api.linalg.matrix_norm", "extensions/generated/array_api.linalg.matrix_power", "extensions/generated/array_api.linalg.matrix_rank", "extensions/generated/array_api.linalg.matrix_transpose", "extensions/generated/array_api.linalg.outer", "extensions/generated/array_api.linalg.pinv", "extensions/generated/array_api.linalg.qr", "extensions/generated/array_api.linalg.slogdet", "extensions/generated/array_api.linalg.solve", "extensions/generated/array_api.linalg.svd", "extensions/generated/array_api.linalg.svdvals", "extensions/generated/array_api.linalg.tensordot", "extensions/generated/array_api.linalg.trace", "extensions/generated/array_api.linalg.vecdot", "extensions/generated/array_api.linalg.vector_norm", "extensions/index", "extensions/linear_algebra_functions", "future_API_evolution", "index", "license", "purpose_and_scope", "usage_data", "use_cases", "verification_test_suite"], "filenames": ["API_specification/array_object.rst", "API_specification/broadcasting.rst", "API_specification/constants.rst", "API_specification/creation_functions.rst", "API_specification/data_type_functions.rst", "API_specification/data_types.rst", "API_specification/elementwise_functions.rst", "API_specification/function_and_method_signatures.rst", "API_specification/generated/array_api.__array_api_version__.rst", "API_specification/generated/array_api.abs.rst", "API_specification/generated/array_api.acos.rst", "API_specification/generated/array_api.acosh.rst", "API_specification/generated/array_api.add.rst", "API_specification/generated/array_api.all.rst", "API_specification/generated/array_api.any.rst", "API_specification/generated/array_api.arange.rst", "API_specification/generated/array_api.argmax.rst", "API_specification/generated/array_api.argmin.rst", "API_specification/generated/array_api.argsort.rst", "API_specification/generated/array_api.array.T.rst", "API_specification/generated/array_api.array.__abs__.rst", "API_specification/generated/array_api.array.__add__.rst", "API_specification/generated/array_api.array.__and__.rst", "API_specification/generated/array_api.array.__array_namespace__.rst", "API_specification/generated/array_api.array.__bool__.rst", "API_specification/generated/array_api.array.__complex__.rst", "API_specification/generated/array_api.array.__dlpack__.rst", "API_specification/generated/array_api.array.__dlpack_device__.rst", "API_specification/generated/array_api.array.__eq__.rst", "API_specification/generated/array_api.array.__float__.rst", "API_specification/generated/array_api.array.__floordiv__.rst", "API_specification/generated/array_api.array.__ge__.rst", "API_specification/generated/array_api.array.__getitem__.rst", "API_specification/generated/array_api.array.__gt__.rst", "API_specification/generated/array_api.array.__index__.rst", "API_specification/generated/array_api.array.__int__.rst", "API_specification/generated/array_api.array.__invert__.rst", "API_specification/generated/array_api.array.__le__.rst", "API_specification/generated/array_api.array.__lshift__.rst", "API_specification/generated/array_api.array.__lt__.rst", "API_specification/generated/array_api.array.__matmul__.rst", "API_specification/generated/array_api.array.__mod__.rst", "API_specification/generated/array_api.array.__mul__.rst", "API_specification/generated/array_api.array.__ne__.rst", "API_specification/generated/array_api.array.__neg__.rst", "API_specification/generated/array_api.array.__or__.rst", "API_specification/generated/array_api.array.__pos__.rst", "API_specification/generated/array_api.array.__pow__.rst", "API_specification/generated/array_api.array.__rshift__.rst", "API_specification/generated/array_api.array.__setitem__.rst", "API_specification/generated/array_api.array.__sub__.rst", "API_specification/generated/array_api.array.__truediv__.rst", "API_specification/generated/array_api.array.__xor__.rst", "API_specification/generated/array_api.array.device.rst", "API_specification/generated/array_api.array.dtype.rst", "API_specification/generated/array_api.array.mT.rst", "API_specification/generated/array_api.array.ndim.rst", "API_specification/generated/array_api.array.shape.rst", "API_specification/generated/array_api.array.size.rst", "API_specification/generated/array_api.array.to_device.rst", "API_specification/generated/array_api.asarray.rst", "API_specification/generated/array_api.asin.rst", "API_specification/generated/array_api.asinh.rst", "API_specification/generated/array_api.astype.rst", "API_specification/generated/array_api.atan.rst", "API_specification/generated/array_api.atan2.rst", "API_specification/generated/array_api.atanh.rst", "API_specification/generated/array_api.bitwise_and.rst", "API_specification/generated/array_api.bitwise_invert.rst", "API_specification/generated/array_api.bitwise_left_shift.rst", "API_specification/generated/array_api.bitwise_or.rst", "API_specification/generated/array_api.bitwise_right_shift.rst", "API_specification/generated/array_api.bitwise_xor.rst", "API_specification/generated/array_api.broadcast_arrays.rst", "API_specification/generated/array_api.broadcast_to.rst", "API_specification/generated/array_api.can_cast.rst", "API_specification/generated/array_api.ceil.rst", "API_specification/generated/array_api.clip.rst", "API_specification/generated/array_api.concat.rst", "API_specification/generated/array_api.conj.rst", "API_specification/generated/array_api.constants.e.rst", "API_specification/generated/array_api.constants.inf.rst", "API_specification/generated/array_api.constants.nan.rst", "API_specification/generated/array_api.constants.newaxis.rst", "API_specification/generated/array_api.constants.pi.rst", "API_specification/generated/array_api.copysign.rst", "API_specification/generated/array_api.cos.rst", "API_specification/generated/array_api.cosh.rst", "API_specification/generated/array_api.cumulative_sum.rst", "API_specification/generated/array_api.data_types.__eq__.rst", "API_specification/generated/array_api.divide.rst", "API_specification/generated/array_api.empty.rst", "API_specification/generated/array_api.empty_like.rst", "API_specification/generated/array_api.equal.rst", "API_specification/generated/array_api.exp.rst", "API_specification/generated/array_api.expand_dims.rst", "API_specification/generated/array_api.expm1.rst", "API_specification/generated/array_api.eye.rst", "API_specification/generated/array_api.finfo.rst", "API_specification/generated/array_api.flip.rst", "API_specification/generated/array_api.floor.rst", "API_specification/generated/array_api.floor_divide.rst", "API_specification/generated/array_api.from_dlpack.rst", "API_specification/generated/array_api.full.rst", "API_specification/generated/array_api.full_like.rst", "API_specification/generated/array_api.greater.rst", "API_specification/generated/array_api.greater_equal.rst", "API_specification/generated/array_api.hypot.rst", "API_specification/generated/array_api.iinfo.rst", "API_specification/generated/array_api.imag.rst", "API_specification/generated/array_api.info.__array_namespace_info__.rst", "API_specification/generated/array_api.info.capabilities.rst", "API_specification/generated/array_api.info.default_device.rst", "API_specification/generated/array_api.info.default_dtypes.rst", "API_specification/generated/array_api.info.devices.rst", "API_specification/generated/array_api.info.dtypes.rst", "API_specification/generated/array_api.isdtype.rst", "API_specification/generated/array_api.isfinite.rst", "API_specification/generated/array_api.isinf.rst", "API_specification/generated/array_api.isnan.rst", "API_specification/generated/array_api.less.rst", "API_specification/generated/array_api.less_equal.rst", "API_specification/generated/array_api.linspace.rst", "API_specification/generated/array_api.log.rst", "API_specification/generated/array_api.log10.rst", "API_specification/generated/array_api.log1p.rst", "API_specification/generated/array_api.log2.rst", "API_specification/generated/array_api.logaddexp.rst", "API_specification/generated/array_api.logical_and.rst", "API_specification/generated/array_api.logical_not.rst", "API_specification/generated/array_api.logical_or.rst", "API_specification/generated/array_api.logical_xor.rst", "API_specification/generated/array_api.matmul.rst", "API_specification/generated/array_api.matrix_transpose.rst", "API_specification/generated/array_api.max.rst", "API_specification/generated/array_api.maximum.rst", "API_specification/generated/array_api.mean.rst", "API_specification/generated/array_api.meshgrid.rst", "API_specification/generated/array_api.min.rst", "API_specification/generated/array_api.minimum.rst", "API_specification/generated/array_api.moveaxis.rst", "API_specification/generated/array_api.multiply.rst", "API_specification/generated/array_api.negative.rst", "API_specification/generated/array_api.nonzero.rst", "API_specification/generated/array_api.not_equal.rst", "API_specification/generated/array_api.ones.rst", "API_specification/generated/array_api.ones_like.rst", "API_specification/generated/array_api.permute_dims.rst", "API_specification/generated/array_api.positive.rst", "API_specification/generated/array_api.pow.rst", "API_specification/generated/array_api.prod.rst", "API_specification/generated/array_api.real.rst", "API_specification/generated/array_api.remainder.rst", "API_specification/generated/array_api.repeat.rst", "API_specification/generated/array_api.reshape.rst", "API_specification/generated/array_api.result_type.rst", "API_specification/generated/array_api.roll.rst", "API_specification/generated/array_api.round.rst", "API_specification/generated/array_api.searchsorted.rst", "API_specification/generated/array_api.sign.rst", "API_specification/generated/array_api.signbit.rst", "API_specification/generated/array_api.sin.rst", "API_specification/generated/array_api.sinh.rst", "API_specification/generated/array_api.sort.rst", "API_specification/generated/array_api.sqrt.rst", "API_specification/generated/array_api.square.rst", "API_specification/generated/array_api.squeeze.rst", "API_specification/generated/array_api.stack.rst", "API_specification/generated/array_api.std.rst", "API_specification/generated/array_api.subtract.rst", "API_specification/generated/array_api.sum.rst", "API_specification/generated/array_api.take.rst", "API_specification/generated/array_api.tan.rst", "API_specification/generated/array_api.tanh.rst", "API_specification/generated/array_api.tensordot.rst", "API_specification/generated/array_api.tile.rst", "API_specification/generated/array_api.tril.rst", "API_specification/generated/array_api.triu.rst", "API_specification/generated/array_api.trunc.rst", "API_specification/generated/array_api.unique_all.rst", "API_specification/generated/array_api.unique_counts.rst", "API_specification/generated/array_api.unique_inverse.rst", "API_specification/generated/array_api.unique_values.rst", "API_specification/generated/array_api.unstack.rst", "API_specification/generated/array_api.var.rst", "API_specification/generated/array_api.vecdot.rst", "API_specification/generated/array_api.where.rst", "API_specification/generated/array_api.zeros.rst", "API_specification/generated/array_api.zeros_like.rst", "API_specification/index.rst", "API_specification/indexing.rst", "API_specification/indexing_functions.rst", "API_specification/inspection.rst", "API_specification/linear_algebra_functions.rst", "API_specification/manipulation_functions.rst", "API_specification/searching_functions.rst", "API_specification/set_functions.rst", "API_specification/sorting_functions.rst", "API_specification/statistical_functions.rst", "API_specification/type_promotion.rst", "API_specification/utility_functions.rst", "API_specification/version.rst", "assumptions.md", "benchmark_suite.md", "changelog.rst", "design_topics/C_API.rst", "design_topics/accuracy.rst", "design_topics/complex_numbers.rst", "design_topics/copies_views_and_mutation.rst", "design_topics/data_dependent_output_shapes.rst", "design_topics/data_interchange.rst", "design_topics/device_support.rst", "design_topics/exceptions.rst", "design_topics/index.rst", "design_topics/lazy_eager.rst", "design_topics/parallelism.rst", "design_topics/static_typing.rst", "extensions/fourier_transform_functions.rst", "extensions/generated/array_api.fft.fft.rst", "extensions/generated/array_api.fft.fftfreq.rst", "extensions/generated/array_api.fft.fftn.rst", "extensions/generated/array_api.fft.fftshift.rst", "extensions/generated/array_api.fft.hfft.rst", "extensions/generated/array_api.fft.ifft.rst", "extensions/generated/array_api.fft.ifftn.rst", "extensions/generated/array_api.fft.ifftshift.rst", "extensions/generated/array_api.fft.ihfft.rst", "extensions/generated/array_api.fft.irfft.rst", "extensions/generated/array_api.fft.irfftn.rst", "extensions/generated/array_api.fft.rfft.rst", "extensions/generated/array_api.fft.rfftfreq.rst", "extensions/generated/array_api.fft.rfftn.rst", "extensions/generated/array_api.linalg.cholesky.rst", "extensions/generated/array_api.linalg.cross.rst", "extensions/generated/array_api.linalg.det.rst", "extensions/generated/array_api.linalg.diagonal.rst", "extensions/generated/array_api.linalg.eigh.rst", "extensions/generated/array_api.linalg.eigvalsh.rst", "extensions/generated/array_api.linalg.inv.rst", "extensions/generated/array_api.linalg.matmul.rst", "extensions/generated/array_api.linalg.matrix_norm.rst", "extensions/generated/array_api.linalg.matrix_power.rst", "extensions/generated/array_api.linalg.matrix_rank.rst", "extensions/generated/array_api.linalg.matrix_transpose.rst", "extensions/generated/array_api.linalg.outer.rst", "extensions/generated/array_api.linalg.pinv.rst", "extensions/generated/array_api.linalg.qr.rst", "extensions/generated/array_api.linalg.slogdet.rst", "extensions/generated/array_api.linalg.solve.rst", "extensions/generated/array_api.linalg.svd.rst", "extensions/generated/array_api.linalg.svdvals.rst", "extensions/generated/array_api.linalg.tensordot.rst", "extensions/generated/array_api.linalg.trace.rst", "extensions/generated/array_api.linalg.vecdot.rst", "extensions/generated/array_api.linalg.vector_norm.rst", "extensions/index.rst", "extensions/linear_algebra_functions.rst", "future_API_evolution.md", "index.rst", "license.rst", "purpose_and_scope.md", "usage_data.md", "use_cases.md", "verification_test_suite.md"], "titles": ["Array object", "Broadcasting", "Constants", "Creation Functions", "Data Type Functions", "Data Types", "Element-wise Functions", "Function and method signatures", "__array_api_version__", "abs", "acos", "acosh", "add", "all", "any", "arange", "argmax", "argmin", "argsort", "T", "__abs__", "__add__", "__and__", "__array_namespace__", "__bool__", "__complex__", "__dlpack__", "__dlpack_device__", "__eq__", "__float__", "__floordiv__", "__ge__", "__getitem__", "__gt__", "__index__", "__int__", "__invert__", "__le__", "__lshift__", "__lt__", "__matmul__", "__mod__", "__mul__", "__ne__", "__neg__", "__or__", "__pos__", "__pow__", "__rshift__", "__setitem__", "__sub__", "__truediv__", "__xor__", "device", "dtype", "mT", "ndim", "shape", "size", "to_device", "asarray", "asin", "asinh", "astype", "atan", "atan2", "atanh", "bitwise_and", "bitwise_invert", "bitwise_left_shift", "bitwise_or", "bitwise_right_shift", "bitwise_xor", "broadcast_arrays", "broadcast_to", "can_cast", "ceil", "clip", "concat", "conj", "e", "inf", "nan", "newaxis", "pi", "copysign", "cos", "cosh", "cumulative_sum", "__eq__", "divide", "empty", "empty_like", "equal", "exp", "expand_dims", "expm1", "eye", "finfo", "flip", "floor", "floor_divide", "from_dlpack", "full", "full_like", "greater", "greater_equal", "hypot", "iinfo", "imag", "__array_namespace_info__", "capabilities", "default_device", "default_dtypes", "devices", "dtypes", "isdtype", "isfinite", "isinf", "isnan", "less", "less_equal", "linspace", "log", "log10", "log1p", "log2", "logaddexp", "logical_and", "logical_not", "logical_or", "logical_xor", "matmul", "matrix_transpose", "max", "maximum", "mean", "meshgrid", "min", "minimum", "moveaxis", "multiply", "negative", "nonzero", "not_equal", "ones", "ones_like", "permute_dims", "positive", "pow", "prod", "real", "remainder", "repeat", "reshape", "result_type", "roll", "round", "searchsorted", "sign", "signbit", "sin", "sinh", "sort", "sqrt", "square", "squeeze", "stack", "std", "subtract", "sum", "take", "tan", "tanh", "tensordot", "tile", "tril", "triu", "trunc", "unique_all", "unique_counts", "unique_inverse", "unique_values", "unstack", "var", "vecdot", "where", "zeros", "zeros_like", "API specification", "Indexing", "Indexing Functions", "Inspection", "Linear Algebra Functions", "Manipulation Functions", "Searching Functions", "Set Functions", "Sorting Functions", "Statistical Functions", "Type Promotion Rules", "Utility Functions", "Version", "Assumptions", "Benchmark suite", "Changelog per API standard version", "C API", "Accuracy", "Complex Numbers", "Copy-view behaviour and mutability", "Data-dependent output shapes", "Data interchange mechanisms", "Device support", "Exceptions", "Design topics &amp; constraints", "Lazy vs. eager execution", "Parallelism", "Static typing", "Fourier transform Functions", "fft", "fftfreq", "fftn", "fftshift", "hfft", "ifft", "ifftn", "ifftshift", "ihfft", "irfft", "irfftn", "rfft", "rfftfreq", "rfftn", "cholesky", "cross", "det", "diagonal", "eigh", "eigvalsh", "inv", "matmul", "matrix_norm", "matrix_power", "matrix_rank", "matrix_transpose", "outer", "pinv", "qr", "slogdet", "solve", "svd", "svdvals", "tensordot", "trace", "vecdot", "vector_norm", "Extensions", "Linear Algebra Extension", "Future API standard evolution", "Python array API standard", "License", "Purpose and scope", "Usage Data", "Use cases", "Verification - test suite"], "terms": {"api": [0, 1, 5, 7, 8, 23, 26, 63, 102, 110, 111, 115, 116, 190, 199, 202, 206, 207, 208, 210, 211, 212, 213, 214, 215, 216, 255, 259, 261, 263], "specif": [0, 1, 2, 3, 4, 5, 6, 8, 19, 23, 26, 49, 51, 59, 63, 78, 90, 101, 111, 113, 115, 116, 122, 128, 129, 130, 131, 134, 135, 136, 138, 139, 149, 153, 155, 158, 167, 168, 171, 174, 179, 180, 184, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 204, 205, 206, 207, 208, 209, 210, 211, 212, 214, 216, 217, 236, 237, 255, 256, 257, 258, 260, 261, 262, 263], "A": [0, 1, 2, 3, 4, 5, 7, 13, 14, 26, 57, 97, 102, 116, 153, 167, 183, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 205, 208, 210, 211, 214, 215, 216, 217, 218, 220, 222, 223, 224, 226, 227, 228, 229, 231, 245, 248, 256, 259, 260, 261, 262], "conform": [0, 2, 3, 4, 5, 8, 9, 16, 17, 18, 31, 33, 37, 39, 59, 60, 96, 105, 106, 107, 111, 115, 116, 120, 121, 122, 125, 134, 135, 138, 139, 149, 153, 158, 163, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 204, 206, 207, 210, 217, 256], "implement": [0, 2, 3, 4, 5, 8, 9, 10, 11, 16, 17, 18, 20, 23, 24, 25, 26, 29, 30, 31, 33, 34, 35, 37, 39, 40, 41, 44, 47, 49, 51, 59, 60, 61, 62, 63, 64, 65, 66, 77, 86, 87, 88, 90, 94, 96, 101, 102, 103, 104, 105, 106, 107, 111, 116, 120, 121, 122, 123, 124, 125, 126, 132, 134, 135, 136, 138, 139, 141, 142, 143, 149, 150, 152, 153, 155, 158, 161, 162, 163, 165, 168, 170, 172, 173, 179, 180, 181, 182, 184, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 204, 205, 206, 207, 208, 209, 210, 211, 212, 214, 216, 217, 220, 221, 224, 225, 228, 231, 232, 236, 237, 246, 248, 252, 255, 256, 257, 261, 262], "standard": [0, 2, 3, 4, 5, 7, 26, 98, 102, 116, 124, 126, 168, 173, 184, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 206, 207, 208, 210, 211, 212, 214, 215, 216, 255, 256, 259, 261, 262], "must": [0, 1, 2, 3, 4, 5, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 76, 77, 78, 79, 85, 86, 87, 88, 90, 91, 92, 93, 94, 95, 96, 97, 99, 100, 101, 102, 103, 104, 105, 106, 107, 109, 111, 113, 114, 115, 116, 117, 118, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 204, 206, 207, 208, 210, 212, 214, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 240, 241, 242, 244, 245, 246, 247, 248, 249, 250, 252, 254, 255, 256, 257, 260, 261], "provid": [0, 2, 3, 4, 5, 13, 14, 26, 59, 88, 95, 99, 102, 114, 116, 137, 140, 150, 153, 155, 167, 168, 170, 171, 183, 184, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 204, 205, 207, 208, 210, 211, 212, 215, 216, 217, 218, 220, 223, 224, 227, 228, 229, 231, 241, 252, 255, 256, 257, 259, 260, 261, 262], "support": [0, 1, 2, 3, 4, 5, 7, 9, 10, 11, 12, 13, 14, 16, 17, 18, 20, 21, 24, 26, 28, 29, 31, 32, 33, 35, 37, 39, 40, 42, 43, 44, 46, 47, 49, 50, 51, 53, 57, 59, 60, 61, 62, 63, 64, 66, 86, 87, 88, 89, 90, 93, 94, 96, 97, 98, 101, 102, 103, 104, 105, 106, 107, 111, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 128, 129, 130, 131, 132, 134, 135, 137, 138, 139, 141, 142, 143, 144, 145, 146, 148, 149, 150, 153, 157, 159, 161, 162, 163, 164, 165, 169, 170, 171, 172, 173, 174, 179, 180, 181, 182, 185, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 202, 206, 207, 208, 213, 216, 217, 232, 233, 234, 236, 237, 238, 240, 241, 242, 244, 245, 246, 247, 248, 249, 250, 252, 254, 255, 256, 260, 261], "an": [0, 1, 5, 7, 9, 10, 11, 12, 13, 14, 15, 18, 19, 20, 21, 22, 23, 26, 28, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 76, 77, 78, 79, 83, 85, 86, 87, 88, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 114, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 190, 197, 199, 202, 204, 205, 206, 207, 208, 209, 211, 212, 214, 215, 216, 218, 219, 220, 222, 223, 224, 226, 227, 228, 229, 230, 231, 232, 233, 235, 236, 237, 238, 240, 241, 242, 245, 246, 247, 248, 249, 250, 252, 254, 255, 256, 257, 259, 261, 262], "have": [0, 1, 2, 5, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 55, 57, 58, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 76, 77, 78, 79, 85, 86, 87, 88, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 103, 104, 105, 106, 107, 108, 109, 111, 113, 115, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 190, 202, 204, 205, 207, 208, 211, 214, 216, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 240, 241, 242, 244, 245, 246, 247, 248, 249, 250, 252, 254, 256, 257, 260, 261, 262], "follow": [0, 1, 2, 3, 4, 5, 7, 10, 11, 12, 26, 44, 49, 61, 62, 64, 66, 88, 90, 98, 101, 103, 108, 110, 111, 113, 115, 116, 123, 125, 141, 142, 149, 152, 157, 164, 174, 179, 180, 181, 182, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 202, 204, 206, 207, 209, 210, 211, 212, 217, 218, 220, 222, 223, 224, 226, 227, 228, 229, 231, 240, 246, 254, 256, 257, 259, 260, 261, 262], "furthermor": [0, 260, 263], "minimum": [0, 9, 17, 20, 44, 134, 138, 142, 189, 204, 206], "rank": [0, 1, 13, 14, 95, 137, 140, 143, 167, 171, 174, 175, 183, 185, 190, 204, 218, 220, 222, 223, 224, 226, 227, 228, 229, 231, 233, 240, 242, 246, 248, 252, 254, 260], "i": [0, 1, 2, 5, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 23, 24, 25, 26, 29, 30, 31, 33, 34, 35, 37, 39, 40, 41, 42, 43, 44, 47, 49, 51, 55, 57, 59, 60, 61, 62, 63, 64, 65, 66, 69, 71, 74, 76, 77, 78, 79, 83, 85, 86, 87, 88, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 109, 113, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 132, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 197, 199, 202, 203, 204, 206, 207, 208, 210, 211, 212, 214, 215, 216, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 240, 241, 242, 244, 245, 246, 247, 248, 249, 250, 252, 254, 255, 256, 257, 259, 260, 261, 262, 263], "e": [0, 1, 2, 5, 7, 9, 10, 11, 18, 19, 20, 26, 40, 43, 47, 49, 51, 55, 57, 62, 63, 65, 66, 69, 71, 76, 77, 78, 86, 87, 88, 90, 93, 94, 95, 100, 101, 102, 107, 109, 115, 116, 122, 123, 124, 125, 126, 132, 134, 136, 137, 138, 140, 141, 142, 143, 144, 145, 146, 148, 149, 150, 151, 152, 153, 155, 157, 158, 160, 161, 162, 163, 164, 166, 167, 168, 170, 171, 172, 173, 174, 175, 179, 180, 181, 182, 184, 189, 190, 197, 199, 204, 205, 206, 207, 208, 209, 210, 211, 214, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231, 233, 236, 237, 240, 242, 245, 247, 248, 249, 250, 252, 254, 255, 256, 257, 260, 261, 262], "number": [0, 1, 5, 9, 10, 11, 12, 13, 14, 16, 17, 18, 25, 26, 31, 33, 35, 37, 39, 44, 56, 58, 60, 61, 62, 63, 64, 65, 66, 73, 76, 79, 82, 87, 88, 90, 93, 94, 95, 96, 97, 98, 100, 101, 103, 105, 106, 107, 108, 109, 117, 118, 120, 121, 122, 123, 125, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 150, 151, 152, 153, 155, 156, 157, 158, 159, 160, 162, 163, 164, 165, 167, 168, 170, 171, 173, 174, 175, 178, 179, 180, 183, 184, 185, 190, 197, 199, 210, 213, 218, 220, 222, 223, 224, 226, 227, 228, 229, 231, 232, 236, 237, 238, 242, 246, 247, 248, 249, 252, 256, 260, 261], "dimens": [0, 1, 13, 14, 16, 17, 19, 40, 55, 56, 57, 58, 78, 88, 95, 99, 132, 133, 134, 136, 138, 140, 143, 147, 150, 153, 154, 156, 166, 167, 168, 170, 171, 174, 175, 176, 177, 179, 180, 181, 182, 183, 184, 185, 190, 199, 218, 220, 221, 222, 223, 224, 226, 227, 228, 229, 231, 232, 233, 234, 235, 236, 237, 238, 240, 241, 242, 245, 246, 247, 248, 249, 250, 252, 254, 260], "0": [0, 1, 5, 9, 10, 11, 12, 15, 24, 25, 26, 29, 35, 38, 48, 57, 61, 62, 63, 64, 65, 66, 69, 71, 76, 78, 85, 86, 87, 90, 93, 94, 95, 96, 97, 98, 100, 101, 107, 123, 124, 125, 126, 134, 135, 136, 138, 139, 141, 147, 149, 150, 152, 157, 158, 159, 160, 161, 162, 164, 167, 168, 170, 172, 173, 174, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 190, 197, 199, 207, 208, 219, 221, 230, 235, 240, 247, 249, 250, 252, 254, 260, 262], "1": [0, 1, 7, 10, 11, 13, 14, 15, 18, 25, 26, 27, 29, 35, 40, 61, 62, 63, 64, 65, 66, 85, 86, 87, 88, 94, 95, 96, 97, 98, 101, 122, 123, 124, 125, 126, 132, 145, 146, 147, 149, 150, 153, 154, 158, 159, 160, 163, 167, 168, 172, 173, 174, 175, 176, 177, 184, 185, 190, 207, 208, 215, 218, 219, 220, 222, 223, 224, 226, 227, 228, 229, 230, 231, 233, 236, 238, 240, 248, 249, 250, 253, 254], "2": [0, 1, 5, 7, 9, 10, 11, 26, 27, 40, 61, 62, 64, 65, 66, 80, 86, 87, 90, 123, 125, 126, 132, 162, 165, 172, 173, 174, 175, 190, 207, 208, 216, 219, 222, 226, 227, 228, 229, 230, 231, 240, 242, 245, 246, 247, 248, 249, 250, 251, 252, 254], "3": [0, 1, 5, 7, 27, 84, 171, 175, 202, 207, 208, 211, 233], "4": [0, 1, 5, 10, 11, 27, 62, 65, 123, 125, 175, 190, 215, 261], "explicitli": [0, 26, 40, 63, 111, 132, 171, 174, 190, 202, 204, 232, 236, 237, 246, 248, 256, 260, 262], "document": [0, 5, 7, 59, 101, 116, 153, 192, 197, 205, 207, 210, 212, 255, 257, 259, 261, 262, 263], "maximum": [0, 1, 16, 26, 122, 134, 138, 189, 204, 206, 240], "n": [0, 1, 13, 14, 40, 55, 86, 88, 95, 122, 132, 133, 136, 137, 140, 143, 147, 150, 153, 167, 168, 170, 172, 173, 174, 175, 176, 177, 183, 184, 185, 190, 204, 218, 219, 220, 222, 223, 224, 226, 227, 228, 229, 230, 231, 232, 233, 235, 236, 237, 238, 240, 241, 242, 244, 245, 246, 249, 250, 252, 254, 260], "zero": [0, 5, 13, 14, 16, 17, 24, 25, 29, 30, 34, 35, 40, 41, 47, 63, 65, 69, 88, 90, 95, 96, 97, 101, 107, 125, 128, 129, 130, 131, 132, 134, 135, 136, 137, 138, 139, 141, 143, 145, 146, 149, 150, 152, 158, 160, 168, 170, 176, 177, 178, 179, 180, 181, 182, 184, 185, 188, 189, 190, 197, 199, 204, 205, 207, 210, 218, 220, 221, 222, 223, 224, 226, 227, 228, 229, 231, 234, 241, 242, 245, 246, 247, 254, 262], "dimension": [0, 13, 14, 15, 16, 17, 19, 24, 25, 29, 34, 35, 40, 88, 97, 122, 132, 134, 136, 137, 138, 143, 150, 153, 158, 168, 170, 171, 179, 180, 181, 182, 184, 185, 190, 199, 204, 216, 218, 220, 222, 223, 224, 226, 227, 228, 229, 231, 233, 234, 237, 238, 242, 244, 245, 254, 256, 260], "apart": 0, "from": [0, 5, 13, 14, 15, 19, 26, 44, 59, 60, 63, 75, 78, 88, 92, 99, 101, 102, 103, 104, 107, 122, 123, 125, 137, 142, 146, 149, 150, 154, 155, 164, 166, 168, 170, 171, 173, 179, 181, 184, 185, 186, 188, 190, 199, 202, 204, 205, 206, 207, 210, 211, 212, 214, 218, 220, 222, 223, 224, 226, 227, 228, 229, 231, 233, 236, 247, 249, 252, 256, 257, 259, 260, 261, 262, 263], "ndim": [0, 185, 189, 233, 246, 249, 250], "devic": [0, 5, 15, 26, 27, 59, 60, 63, 91, 92, 97, 102, 103, 104, 110, 112, 113, 115, 122, 145, 146, 153, 176, 177, 187, 188, 189, 190, 192, 204, 210, 213, 219, 230, 246, 256, 260, 262], "dtype": [0, 5, 15, 26, 60, 63, 73, 75, 88, 89, 91, 92, 97, 98, 102, 103, 104, 108, 110, 116, 122, 145, 146, 150, 155, 170, 187, 188, 189, 199, 202, 204, 210, 216, 252, 260, 261, 262], "all": [0, 5, 15, 19, 23, 26, 60, 63, 87, 90, 97, 99, 102, 111, 115, 141, 156, 158, 162, 173, 175, 176, 177, 183, 185, 189, 190, 202, 204, 205, 207, 208, 209, 210, 211, 212, 214, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231, 233, 245, 247, 248, 254, 255, 256, 259, 260, 262, 263], "thi": [0, 1, 5, 7, 15, 19, 26, 34, 58, 59, 63, 71, 78, 96, 101, 102, 107, 111, 115, 116, 122, 125, 128, 129, 130, 131, 136, 143, 149, 152, 153, 167, 168, 171, 179, 180, 181, 182, 184, 189, 190, 197, 199, 202, 204, 205, 206, 207, 208, 209, 210, 211, 212, 214, 215, 216, 217, 218, 220, 221, 223, 224, 227, 228, 229, 231, 246, 247, 248, 249, 255, 256, 257, 259, 261, 262, 263], "return": [0, 5, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 192, 197, 204, 205, 206, 208, 210, 211, 214, 216, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 240, 241, 242, 244, 245, 246, 247, 248, 249, 250, 252, 254, 256, 260, 262], "tupl": [0, 1, 13, 14, 26, 27, 32, 49, 57, 74, 78, 91, 99, 103, 115, 116, 134, 136, 138, 140, 143, 145, 147, 150, 154, 156, 166, 167, 168, 170, 174, 175, 179, 180, 181, 183, 184, 187, 190, 202, 236, 246, 247, 249, 251, 254, 260], "includ": [0, 1, 7, 9, 13, 14, 15, 16, 17, 20, 21, 23, 28, 30, 40, 41, 42, 43, 47, 51, 88, 107, 111, 115, 116, 118, 122, 132, 134, 136, 138, 150, 153, 164, 168, 170, 184, 189, 190, 199, 204, 205, 206, 207, 208, 209, 210, 211, 215, 240, 254, 256, 257, 259, 261, 262], "those": [0, 5, 7, 15, 23, 88, 90, 113, 115, 141, 143, 150, 153, 170, 199, 204, 207, 208, 211, 212, 214, 246, 249, 250, 252, 255, 256, 257, 260, 261, 262], "mean": [0, 26, 189, 202, 208, 210, 211, 216, 257, 260], "var": [0, 189], "std": [0, 189], "which": [0, 1, 5, 7, 8, 13, 14, 15, 16, 17, 18, 19, 26, 30, 40, 41, 44, 59, 60, 63, 75, 77, 78, 83, 88, 91, 92, 95, 97, 98, 99, 101, 102, 103, 104, 107, 108, 111, 113, 114, 115, 122, 132, 134, 136, 138, 142, 143, 145, 146, 150, 152, 153, 156, 158, 163, 167, 168, 170, 171, 172, 176, 177, 179, 180, 181, 182, 183, 184, 185, 187, 188, 190, 204, 205, 206, 207, 208, 209, 210, 211, 212, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 233, 240, 248, 249, 250, 252, 254, 255, 256, 257, 260, 261, 262], "some": [0, 96, 101, 113, 115, 125, 190, 205, 206, 207, 208, 211, 216, 260, 262, 263], "common": [0, 190, 199, 202, 211, 214, 215, 256, 260, 261, 262], "librari": [0, 5, 7, 26, 51, 57, 58, 59, 60, 63, 90, 96, 101, 102, 111, 113, 115, 116, 122, 125, 128, 129, 130, 131, 134, 135, 136, 138, 139, 143, 153, 158, 168, 173, 179, 180, 181, 182, 184, 189, 190, 202, 204, 205, 206, 207, 208, 209, 210, 211, 212, 214, 215, 216, 232, 236, 237, 246, 248, 255, 256, 257, 260, 261, 262, 263], "g": [0, 5, 9, 19, 20, 26, 47, 51, 57, 77, 88, 90, 102, 107, 109, 115, 116, 122, 134, 138, 141, 143, 150, 151, 153, 155, 157, 170, 175, 179, 180, 181, 182, 190, 197, 199, 204, 205, 206, 207, 208, 209, 210, 211, 214, 222, 226, 227, 228, 229, 231, 236, 237, 240, 247, 249, 250, 252, 254, 255, 256, 257, 260, 261, 262], "numpi": [0, 19, 63, 190, 202, 207, 208, 210, 211, 256, 260, 261, 262, 263], "scalar": [0, 2, 49, 60, 189, 190, 204, 214, 254, 262], "valu": [0, 1, 2, 5, 7, 9, 10, 11, 12, 15, 16, 17, 18, 20, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 37, 39, 41, 43, 49, 51, 57, 58, 60, 61, 62, 63, 64, 65, 66, 76, 77, 78, 85, 86, 87, 88, 89, 90, 91, 93, 94, 96, 97, 98, 100, 101, 103, 104, 105, 106, 107, 111, 113, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 134, 135, 136, 138, 139, 141, 143, 144, 145, 149, 150, 152, 153, 157, 158, 159, 160, 161, 162, 163, 164, 168, 170, 171, 172, 173, 178, 179, 180, 181, 182, 184, 185, 187, 189, 197, 199, 202, 204, 206, 208, 209, 210, 214, 216, 219, 222, 226, 227, 228, 229, 230, 231, 232, 236, 237, 238, 240, 241, 242, 245, 246, 247, 248, 249, 250, 252, 254, 256, 260, 262], "rational": [0, 7, 88, 150, 170, 190, 210, 211, 252, 255, 257, 260], "alwai": [0, 12, 26, 42, 60, 63, 98, 102, 141, 154, 190, 202, 207, 208, 211, 236], "necessari": [0, 26, 60, 90, 102, 141, 154, 175, 190, 208, 260], "acceler": [0, 5, 107, 153, 202, 210], "where": [0, 1, 7, 13, 14, 15, 26, 47, 57, 65, 86, 87, 90, 94, 96, 97, 101, 103, 104, 124, 125, 126, 137, 141, 143, 147, 149, 153, 158, 159, 161, 162, 167, 168, 172, 173, 175, 183, 184, 185, 189, 190, 199, 205, 207, 210, 211, 214, 218, 220, 222, 223, 224, 226, 227, 228, 229, 231, 232, 233, 236, 237, 238, 240, 242, 245, 246, 247, 248, 249, 250, 252, 256, 260, 261, 262], "non": [0, 1, 7, 13, 14, 16, 17, 63, 128, 129, 130, 131, 134, 136, 138, 143, 150, 168, 174, 184, 185, 190, 199, 204, 205, 211, 218, 220, 223, 224, 227, 228, 229, 231, 233, 234, 236, 240, 242, 249, 254, 262], "could": [0, 26, 179, 180, 181, 182, 202, 208, 215, 256, 260, 262], "forc": 0, "synchron": [0, 26, 59, 153, 260], "delai": [0, 24, 25, 29, 34, 35, 202, 214, 260], "execut": [0, 199, 202, 211, 213, 215, 260, 262], "model": [0, 57, 58, 90, 141, 207, 214, 262], "repres": [0, 8, 11, 12, 23, 24, 25, 26, 29, 34, 35, 62, 66, 87, 90, 101, 137, 141, 162, 172, 173, 204, 206, 210, 211, 247, 261, 262], "futur": [0, 26, 102, 203, 207, 208, 211, 215, 216, 236, 237, 258, 260, 262], "python": [0, 2, 5, 7, 24, 25, 26, 29, 34, 35, 49, 60, 101, 102, 152, 189, 190, 202, 204, 207, 210, 212, 214, 215, 216, 257, 259, 260, 261], "x": [0, 1, 5, 7, 9, 10, 11, 13, 14, 16, 17, 18, 20, 26, 61, 62, 63, 64, 65, 66, 68, 74, 76, 77, 79, 85, 86, 87, 88, 92, 94, 95, 96, 99, 100, 102, 104, 109, 117, 118, 119, 123, 124, 125, 126, 129, 133, 134, 136, 138, 140, 142, 143, 146, 147, 148, 150, 151, 153, 154, 156, 157, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 170, 171, 172, 173, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 188, 190, 207, 208, 216, 217, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231, 232, 234, 235, 236, 237, 238, 240, 241, 242, 243, 245, 246, 247, 248, 249, 250, 252, 254, 256, 260, 262], "__pos__": [0, 189, 204], "po": 0, "__neg__": [0, 189, 204], "neg": [0, 13, 14, 15, 44, 47, 65, 78, 88, 90, 95, 97, 99, 101, 118, 123, 125, 141, 149, 152, 156, 160, 164, 171, 174, 185, 189, 190, 204, 207, 218, 220, 222, 223, 224, 226, 227, 228, 229, 231, 233, 254, 260], "x1": [0, 7, 12, 40, 65, 67, 69, 70, 71, 72, 85, 90, 93, 101, 105, 106, 107, 120, 121, 127, 128, 130, 131, 132, 135, 139, 141, 144, 149, 152, 158, 169, 174, 185, 186, 204, 233, 239, 244, 248, 251, 253], "x2": [0, 7, 12, 40, 65, 67, 69, 70, 71, 72, 85, 90, 93, 101, 105, 106, 107, 120, 121, 127, 128, 130, 131, 132, 135, 139, 141, 144, 149, 152, 158, 169, 174, 185, 186, 204, 233, 239, 244, 248, 251, 253], "__add__": [0, 50, 189, 204], "add": [0, 7, 21, 88, 169, 170, 189, 190, 204, 205, 206, 211, 252], "__sub__": [0, 189, 204], "sub": [0, 190], "__mul__": [0, 189, 204], "mul": 0, "__truediv__": [0, 189, 204], "truediv": 0, "__floordiv__": [0, 189], "floordiv": 0, "__mod__": [0, 189], "mod": 0, "__pow__": [0, 189, 204], "pow": [0, 47, 189, 204, 206], "should": [0, 1, 5, 7, 9, 10, 11, 12, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 29, 30, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 50, 51, 52, 55, 57, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 76, 77, 79, 85, 86, 87, 88, 90, 94, 95, 96, 98, 100, 101, 102, 105, 106, 107, 109, 113, 115, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 134, 135, 136, 137, 138, 139, 141, 142, 148, 149, 150, 151, 152, 154, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 168, 169, 170, 172, 173, 174, 176, 177, 178, 179, 180, 181, 182, 184, 185, 186, 190, 197, 204, 205, 206, 207, 210, 211, 212, 216, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231, 232, 233, 234, 236, 237, 238, 240, 241, 242, 245, 246, 247, 248, 249, 250, 252, 254, 255, 256, 260, 262, 263], "defin": [0, 5, 12, 23, 30, 41, 49, 60, 65, 79, 90, 101, 103, 104, 115, 122, 134, 135, 136, 138, 139, 140, 141, 152, 159, 164, 165, 168, 176, 177, 184, 185, 189, 192, 197, 204, 206, 207, 216, 220, 221, 224, 225, 228, 231, 232, 236, 237, 238, 245, 246, 248, 256, 261, 262, 263], "real": [0, 5, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 24, 25, 29, 30, 31, 33, 35, 37, 39, 41, 44, 51, 60, 61, 62, 63, 64, 65, 66, 76, 77, 85, 86, 87, 88, 90, 91, 93, 94, 96, 97, 98, 100, 101, 103, 105, 106, 107, 113, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 134, 135, 136, 138, 139, 141, 142, 143, 144, 145, 146, 149, 150, 152, 157, 158, 159, 160, 161, 162, 163, 164, 168, 170, 172, 173, 178, 184, 185, 187, 189, 199, 204, 207, 219, 222, 226, 227, 228, 229, 230, 231, 232, 236, 237, 238, 240, 242, 245, 246, 247, 248, 249, 250, 252, 254, 257], "data": [0, 1, 2, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76, 77, 78, 79, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 111, 113, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 144, 145, 146, 147, 148, 149, 150, 151, 152, 154, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 184, 185, 186, 187, 188, 189, 192, 199, 202, 205, 207, 208, 211, 213, 214, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 240, 241, 242, 244, 245, 246, 247, 248, 249, 250, 252, 254, 256, 257, 258, 259, 260, 263], "type": [0, 2, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 55, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76, 77, 78, 79, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 113, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 184, 185, 186, 187, 188, 189, 190, 192, 202, 205, 207, 208, 210, 212, 213, 214, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 240, 241, 242, 244, 245, 246, 247, 248, 249, 250, 252, 254, 256, 257, 260, 261], "__matmul__": [0, 189, 204], "matmul": [0, 40, 189, 199, 204, 256], "The": [0, 1, 5, 7, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 22, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 55, 57, 58, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 76, 77, 78, 79, 85, 86, 87, 88, 90, 93, 94, 96, 99, 100, 101, 102, 105, 106, 107, 109, 110, 111, 113, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 138, 139, 140, 141, 142, 143, 144, 147, 148, 149, 150, 151, 152, 153, 157, 158, 159, 160, 161, 162, 163, 164, 165, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 184, 185, 186, 190, 199, 202, 204, 205, 206, 208, 209, 210, 211, 214, 215, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 240, 241, 242, 244, 245, 246, 247, 248, 249, 250, 252, 254, 255, 256, 257, 259, 260, 261, 262, 263], "numer": [0, 5, 9, 12, 20, 21, 40, 42, 44, 46, 47, 50, 51, 88, 90, 101, 115, 116, 117, 118, 119, 132, 137, 141, 142, 148, 149, 150, 157, 159, 165, 169, 170, 174, 199, 206, 218, 220, 223, 224, 227, 228, 229, 231, 233, 244, 245, 247, 252, 256, 260, 262], "__invert__": [0, 189], "inv": [0, 204, 256], "invert": [0, 68, 238, 241, 248], "__inv__": 0, "__and__": [0, 189], "__or__": [0, 189], "__xor__": [0, 189], "xor": [0, 72, 131], "__lshift__": [0, 189], "lshift": 0, "__rshift__": [0, 189], "rshift": 0, "integ": [0, 5, 9, 13, 14, 15, 20, 22, 26, 29, 30, 34, 35, 36, 38, 41, 44, 45, 47, 48, 51, 52, 60, 67, 68, 69, 70, 71, 72, 76, 77, 88, 90, 100, 101, 103, 104, 108, 115, 116, 122, 134, 136, 138, 142, 149, 150, 152, 153, 155, 157, 158, 168, 170, 171, 178, 184, 185, 189, 190, 204, 206, 207, 218, 220, 222, 223, 224, 226, 227, 228, 229, 231, 233, 241, 242, 252, 254, 260], "boolean": [0, 5, 22, 24, 25, 26, 29, 35, 36, 43, 45, 52, 57, 60, 63, 67, 68, 70, 72, 88, 89, 102, 103, 104, 111, 115, 116, 122, 128, 129, 130, 131, 143, 186, 189, 199, 204], "__lt__": [0, 189, 204], "lt": 0, "__le__": [0, 189, 204], "le": 0, "__gt__": [0, 189, 204], "gt": [0, 246, 249], "__ge__": [0, 189, 204], "ge": 0, "__eq__": [0, 189, 204, 211], "eq": 0, "__ne__": [0, 189, 204], "ne": 0, "ar": [0, 1, 5, 7, 15, 16, 17, 19, 23, 24, 25, 26, 27, 29, 34, 35, 40, 49, 55, 58, 60, 77, 85, 86, 89, 90, 94, 97, 98, 99, 101, 102, 107, 114, 115, 122, 128, 129, 130, 131, 132, 141, 143, 149, 153, 156, 157, 161, 172, 173, 175, 179, 181, 185, 190, 199, 202, 204, 205, 206, 207, 208, 209, 210, 211, 212, 214, 215, 216, 218, 219, 220, 221, 223, 224, 225, 227, 228, 229, 230, 231, 233, 236, 237, 242, 245, 246, 249, 255, 256, 257, 260, 261, 262, 263], "onli": [0, 1, 5, 7, 16, 17, 23, 26, 40, 57, 58, 63, 99, 102, 107, 113, 115, 116, 122, 128, 129, 130, 131, 132, 136, 168, 184, 185, 189, 190, 199, 202, 204, 205, 207, 208, 210, 211, 212, 214, 216, 221, 233, 238, 245, 246, 248, 256, 257, 260, 261, 262, 263], "other": [0, 5, 21, 22, 23, 26, 28, 30, 31, 33, 37, 38, 39, 40, 41, 42, 43, 45, 47, 48, 50, 51, 52, 63, 89, 90, 96, 101, 102, 125, 140, 141, 168, 184, 190, 192, 202, 204, 206, 207, 208, 209, 210, 211, 212, 216, 233, 245, 255, 256, 259, 260, 262], "ani": [0, 1, 9, 10, 11, 23, 24, 25, 26, 28, 29, 34, 35, 43, 59, 61, 62, 66, 89, 93, 107, 117, 118, 144, 164, 189, 190, 199, 204, 207, 208, 210, 216, 249, 257, 259, 260, 263], "For": [0, 1, 5, 7, 9, 10, 11, 12, 16, 17, 18, 20, 24, 25, 26, 29, 30, 31, 33, 35, 37, 39, 41, 44, 57, 58, 61, 62, 64, 65, 66, 76, 79, 85, 86, 87, 88, 90, 93, 94, 96, 100, 101, 105, 106, 107, 113, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 134, 135, 137, 138, 139, 141, 142, 144, 149, 150, 152, 153, 157, 158, 159, 160, 161, 162, 163, 164, 165, 167, 170, 172, 173, 178, 179, 180, 181, 182, 190, 197, 202, 206, 207, 209, 211, 214, 219, 228, 230, 247, 249, 250, 252, 260, 262, 263], "backward": [0, 13, 14, 16, 17, 18, 31, 33, 37, 39, 105, 106, 120, 121, 122, 134, 135, 138, 139, 152, 163, 185, 190, 204, 207, 208, 212, 218, 220, 222, 223, 224, 226, 227, 228, 229, 231, 233, 260], "compat": [0, 1, 12, 13, 14, 16, 17, 18, 21, 22, 26, 28, 30, 31, 33, 37, 38, 39, 40, 41, 42, 43, 45, 47, 48, 49, 50, 51, 52, 65, 67, 69, 70, 71, 72, 74, 77, 85, 90, 93, 101, 105, 106, 107, 120, 121, 122, 127, 128, 130, 131, 132, 134, 135, 136, 138, 139, 141, 144, 149, 150, 152, 153, 154, 163, 168, 169, 170, 184, 185, 186, 199, 204, 207, 208, 212, 233, 240, 242, 245, 248, 254, 260, 262], "mai": [0, 5, 7, 15, 16, 17, 18, 23, 26, 28, 31, 33, 37, 39, 43, 51, 57, 58, 59, 60, 89, 90, 93, 101, 102, 105, 106, 107, 110, 115, 116, 120, 121, 122, 128, 129, 130, 131, 134, 135, 136, 138, 139, 141, 143, 144, 153, 154, 158, 163, 168, 173, 179, 180, 181, 182, 184, 189, 190, 197, 199, 202, 205, 206, 207, 208, 209, 210, 211, 212, 214, 215, 216, 236, 246, 247, 249, 255, 256, 260, 261, 262], "complex": [0, 5, 9, 10, 11, 12, 13, 14, 16, 17, 18, 20, 21, 24, 25, 28, 29, 31, 33, 35, 37, 39, 40, 42, 43, 44, 46, 47, 49, 50, 51, 60, 61, 62, 63, 64, 66, 79, 86, 87, 88, 90, 93, 94, 96, 97, 98, 103, 104, 105, 106, 107, 109, 113, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 132, 134, 135, 137, 138, 139, 141, 142, 143, 144, 145, 146, 148, 149, 150, 151, 157, 159, 161, 162, 163, 164, 165, 169, 170, 172, 173, 174, 179, 180, 181, 182, 185, 199, 206, 210, 211, 213, 214, 218, 220, 222, 223, 224, 226, 227, 228, 229, 231, 232, 233, 234, 236, 237, 238, 240, 241, 242, 244, 245, 246, 247, 248, 249, 250, 252, 254, 256, 260, 261], "howev": [0, 5, 16, 17, 18, 31, 33, 37, 39, 57, 88, 101, 105, 106, 107, 116, 120, 121, 122, 134, 135, 138, 139, 153, 158, 163, 171, 172, 173, 202, 205, 206, 207, 208, 209, 211, 256, 257, 260, 262], "inequ": [0, 16, 17, 18, 31, 33, 37, 39, 105, 106, 120, 121, 134, 135, 138, 139, 163], "unspecifi": [0, 5, 10, 11, 16, 17, 18, 30, 31, 33, 37, 39, 41, 47, 51, 60, 62, 66, 77, 78, 87, 90, 94, 96, 101, 103, 104, 105, 106, 120, 121, 122, 134, 135, 138, 139, 149, 152, 158, 162, 163, 164, 167, 171, 173, 190, 197, 199, 204, 220, 221, 224, 225, 228, 231, 236, 237, 260], "thu": [0, 5, 16, 17, 18, 30, 31, 33, 37, 39, 41, 47, 57, 60, 71, 77, 101, 103, 104, 105, 106, 120, 121, 122, 134, 135, 138, 139, 149, 152, 158, 163, 172, 173, 190, 197, 206, 207, 220, 221, 224, 225, 228, 231, 236, 237, 249, 256], "depend": [0, 5, 9, 10, 11, 16, 17, 18, 20, 26, 29, 31, 33, 37, 39, 44, 47, 51, 57, 58, 59, 61, 62, 63, 64, 65, 66, 77, 86, 87, 90, 94, 96, 105, 106, 111, 120, 121, 122, 123, 124, 125, 126, 141, 142, 149, 158, 161, 162, 163, 172, 173, 186, 197, 199, 206, 207, 210, 213, 214, 216, 236, 237, 246, 247, 248, 249, 256, 260, 262, 263], "see": [0, 5, 10, 11, 12, 13, 14, 16, 17, 18, 21, 22, 26, 28, 30, 31, 32, 33, 34, 37, 38, 39, 40, 41, 42, 43, 45, 47, 48, 49, 50, 51, 52, 53, 59, 61, 62, 64, 65, 66, 67, 69, 70, 71, 72, 74, 77, 85, 90, 93, 96, 101, 102, 104, 105, 106, 107, 110, 111, 114, 120, 121, 123, 125, 127, 128, 130, 131, 132, 134, 135, 136, 138, 139, 141, 143, 144, 149, 150, 152, 153, 155, 158, 159, 163, 164, 165, 168, 169, 170, 179, 180, 181, 182, 184, 185, 186, 189, 190, 199, 201, 202, 205, 207, 209, 210, 211, 216, 233, 240, 242, 245, 248, 254, 255, 260, 261, 262, 263], "order": [0, 5, 7, 16, 17, 18, 19, 26, 31, 33, 37, 39, 55, 60, 63, 65, 89, 99, 101, 102, 105, 106, 120, 121, 134, 135, 138, 139, 143, 153, 158, 163, 172, 173, 174, 179, 180, 181, 182, 190, 197, 199, 204, 206, 209, 210, 212, 227, 228, 236, 237, 240, 249, 250, 254, 256, 257, 260, 261], "chang": [0, 1, 9, 10, 11, 12, 13, 14, 20, 21, 24, 25, 26, 28, 29, 34, 35, 40, 42, 43, 44, 46, 47, 50, 51, 59, 60, 61, 62, 63, 64, 66, 86, 87, 90, 93, 94, 96, 97, 98, 102, 103, 104, 117, 118, 119, 122, 123, 124, 125, 126, 132, 134, 137, 138, 141, 142, 143, 144, 145, 146, 148, 149, 150, 154, 157, 159, 161, 162, 164, 165, 169, 170, 171, 172, 173, 174, 179, 180, 181, 182, 185, 202, 218, 219, 220, 222, 223, 224, 227, 228, 230, 232, 233, 234, 236, 237, 238, 240, 241, 242, 244, 245, 246, 247, 248, 249, 250, 252, 254, 257, 260, 262, 263], "shape": [0, 1, 18, 40, 55, 63, 73, 74, 78, 88, 91, 92, 95, 99, 103, 104, 111, 132, 133, 137, 145, 146, 154, 156, 158, 163, 167, 171, 174, 175, 176, 177, 183, 185, 187, 188, 189, 204, 213, 214, 216, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 234, 235, 236, 237, 238, 240, 241, 242, 244, 245, 246, 247, 248, 249, 250, 252, 260, 262], "result": [0, 1, 5, 9, 10, 11, 12, 13, 14, 15, 16, 17, 20, 21, 22, 24, 25, 28, 29, 30, 31, 33, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 76, 77, 79, 85, 86, 87, 90, 93, 94, 96, 100, 101, 105, 106, 107, 109, 117, 118, 119, 120, 121, 123, 124, 125, 126, 127, 128, 129, 130, 131, 134, 135, 136, 138, 139, 141, 142, 144, 148, 149, 150, 151, 152, 153, 155, 157, 158, 159, 160, 161, 162, 164, 165, 167, 168, 169, 170, 172, 173, 174, 178, 179, 184, 190, 197, 199, 204, 206, 207, 208, 214, 232, 233, 235, 240, 241, 247, 248, 254, 260, 261, 262, 263], "promot": [0, 1, 5, 10, 11, 12, 21, 22, 30, 40, 41, 42, 44, 45, 47, 49, 50, 51, 52, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 75, 78, 85, 86, 87, 90, 94, 96, 101, 104, 107, 122, 123, 124, 125, 126, 127, 132, 135, 136, 139, 141, 142, 149, 152, 155, 161, 162, 164, 165, 167, 168, 169, 172, 173, 174, 184, 185, 186, 189, 204, 232, 233, 238, 240, 241, 242, 244, 245, 246, 247, 248, 254, 256], "rule": [0, 5, 7, 10, 11, 12, 21, 22, 30, 40, 41, 42, 44, 45, 47, 49, 50, 51, 52, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 75, 78, 85, 86, 87, 88, 90, 94, 96, 101, 103, 104, 107, 122, 123, 124, 125, 126, 127, 132, 135, 139, 141, 142, 149, 152, 155, 159, 161, 162, 164, 165, 167, 169, 172, 173, 174, 185, 186, 189, 190, 204, 207, 210, 232, 233, 238, 240, 241, 242, 244, 245, 246, 247, 248, 254, 256, 260, 262], "broadcast": [0, 12, 13, 14, 16, 17, 21, 22, 28, 30, 31, 33, 37, 38, 39, 40, 41, 42, 43, 45, 47, 48, 49, 50, 51, 52, 65, 67, 69, 70, 71, 72, 73, 74, 77, 85, 90, 93, 101, 105, 106, 107, 120, 121, 127, 128, 130, 131, 132, 134, 135, 136, 138, 139, 141, 144, 149, 150, 152, 153, 168, 169, 170, 174, 184, 185, 186, 189, 204, 233, 240, 242, 245, 248, 254, 260], "same": [0, 5, 7, 9, 12, 15, 18, 19, 20, 26, 32, 36, 38, 40, 41, 46, 48, 50, 55, 59, 63, 68, 73, 74, 76, 77, 78, 79, 88, 90, 92, 95, 98, 99, 100, 101, 102, 104, 109, 132, 133, 134, 136, 137, 138, 140, 141, 146, 147, 148, 149, 150, 151, 152, 153, 154, 156, 157, 158, 159, 163, 166, 167, 168, 169, 170, 171, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 188, 190, 199, 202, 204, 207, 208, 210, 211, 216, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231, 232, 234, 235, 236, 238, 241, 245, 246, 247, 249, 250, 252, 255, 256, 260, 262], "behavior": [0, 5, 47, 49, 59, 60, 63, 77, 90, 101, 103, 104, 107, 122, 141, 149, 152, 158, 171, 179, 180, 181, 182, 189, 190, 192, 199, 202, 204, 206, 207, 214, 215, 220, 221, 224, 225, 228, 231, 256, 257, 260, 261, 262, 263], "special": [0, 9, 10, 11, 12, 20, 21, 24, 25, 28, 29, 30, 35, 41, 42, 43, 47, 51, 61, 62, 64, 65, 66, 76, 77, 85, 86, 87, 88, 90, 93, 94, 96, 100, 101, 107, 117, 118, 119, 123, 124, 125, 126, 127, 134, 135, 136, 138, 139, 141, 144, 149, 150, 152, 157, 159, 160, 161, 162, 164, 165, 168, 170, 172, 173, 178, 184, 204, 205, 207, 247, 252], "case": [0, 1, 5, 7, 9, 10, 11, 12, 15, 20, 21, 24, 25, 26, 28, 29, 30, 35, 41, 42, 43, 47, 51, 60, 61, 62, 64, 65, 66, 76, 77, 85, 86, 87, 88, 90, 93, 94, 96, 100, 101, 102, 107, 117, 118, 119, 123, 124, 125, 126, 127, 134, 135, 136, 137, 138, 139, 141, 144, 149, 150, 152, 157, 159, 160, 161, 162, 164, 165, 168, 170, 172, 173, 178, 184, 190, 202, 204, 205, 206, 207, 208, 211, 212, 214, 246, 247, 249, 252, 256, 258, 260, 263], "its": [0, 5, 26, 40, 73, 90, 98, 132, 141, 154, 156, 206, 207, 210, 211, 255, 260, 261, 262], "respect": [0, 9, 12, 20, 21, 22, 28, 30, 31, 33, 37, 38, 39, 41, 42, 43, 45, 48, 50, 51, 52, 65, 67, 69, 70, 71, 72, 77, 87, 90, 93, 101, 105, 106, 107, 113, 120, 121, 122, 127, 128, 130, 131, 135, 137, 139, 140, 141, 144, 152, 162, 169, 172, 173, 174, 179, 180, 185, 204, 206, 209, 211, 236, 246, 249], "binari": [0, 5, 67, 70, 72, 172, 173, 205], "two": [0, 1, 5, 15, 19, 40, 55, 65, 71, 97, 102, 132, 133, 137, 157, 174, 176, 177, 179, 180, 181, 182, 185, 190, 199, 210, 211, 214, 215, 220, 221, 224, 225, 228, 231, 232, 234, 235, 236, 237, 238, 240, 241, 242, 244, 245, 246, 247, 248, 249, 250, 252, 256, 260, 261, 262, 263], "operand": [0, 1, 9, 10, 11, 12, 24, 25, 29, 35, 61, 62, 64, 65, 66, 76, 85, 86, 87, 88, 90, 93, 94, 96, 100, 101, 107, 117, 118, 119, 123, 124, 125, 126, 127, 134, 135, 138, 139, 141, 144, 149, 150, 152, 157, 159, 160, 161, 162, 164, 165, 170, 172, 173, 178, 199, 204, 206, 247, 252], "assign": [0, 208], "exampl": [0, 5, 12, 23, 26, 115, 116, 167, 189, 190, 202, 207, 208, 209, 211, 214, 215, 216, 252, 256, 260, 262, 263], "after": [0, 1, 26, 40, 132, 164, 175], "addit": [0, 5, 7, 12, 26, 50, 59, 88, 115, 169, 189, 190, 199, 205, 207, 210, 256, 260, 261, 263], "modifi": [0, 26, 208, 259], "equal": [0, 1, 9, 10, 11, 18, 20, 21, 22, 26, 28, 30, 31, 33, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 58, 61, 62, 63, 64, 65, 66, 69, 71, 77, 87, 89, 94, 96, 97, 103, 104, 107, 116, 118, 123, 124, 125, 126, 136, 143, 144, 145, 146, 149, 150, 157, 162, 163, 164, 168, 170, 171, 173, 174, 175, 179, 180, 181, 182, 184, 189, 190, 197, 204, 207, 211, 218, 220, 222, 223, 224, 226, 227, 228, 229, 231, 233, 235, 241, 242, 245, 246, 247, 248, 252, 260], "equival": [0, 20, 21, 22, 28, 30, 31, 33, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 71, 101, 107, 128, 129, 130, 131, 152, 157, 171, 190, 199, 207, 208, 242, 245, 248, 254, 260], "discuss": [0, 93, 144, 204, 210, 211, 215, 260, 261, 262], "copi": [0, 1, 26, 59, 60, 63, 102, 154, 163, 204, 205, 210, 211, 213, 259, 260], "view": [0, 102, 213], "behaviour": [0, 213, 260, 262], "mutabl": [0, 213], "via": [0, 26, 101, 102, 171, 190, 205, 210, 211, 215, 217, 245, 255, 256, 257, 260], "__iadd__": 0, "__isub__": 0, "__imul__": 0, "__itruediv__": 0, "__ifloordiv__": 0, "__ipow__": 0, "__imod__": 0, "__imatmul__": 0, "__iand__": 0, "__ior__": 0, "__ixor__": 0, "__ilshift__": 0, "__irshift__": 0, "appli": [0, 12, 77, 78, 85, 90, 141, 155, 157, 167, 174, 190, 199, 202, 207, 218, 220, 223, 224, 227, 228, 229, 231, 242, 245, 256, 260, 262], "match": [0, 1, 5, 9, 20, 26, 63, 101, 152, 174, 179, 180, 212, 222, 226, 227, 228, 229, 231, 236, 237, 240, 254, 262], "op": [0, 199], "__radd__": 0, "__rsub__": 0, "__rmul__": 0, "__rtruediv__": 0, "__rfloordiv__": 0, "__rpow__": 0, "__rmod__": 0, "__rmatmul__": 0, "__rand__": 0, "__ror__": 0, "__rxor__": 0, "__rlshift__": 0, "__rrshift__": 0, "arrai": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 83, 85, 86, 87, 88, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 191, 192, 193, 194, 195, 196, 197, 198, 200, 201, 202, 204, 205, 206, 207, 208, 209, 210, 211, 212, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 261, 263], "refer": [1, 13, 14, 96, 97, 125, 158, 168, 174, 175, 184, 185, 190, 207, 208, 216, 218, 220, 222, 223, 224, 226, 227, 228, 229, 231, 233, 248], "automat": [1, 260], "implicit": [1, 210, 211, 214, 260], "expans": [1, 260], "size": [1, 13, 14, 88, 95, 122, 143, 156, 166, 171, 174, 185, 189, 190, 209, 215, 218, 220, 222, 223, 224, 226, 227, 228, 229, 231, 233, 235, 244, 246, 249, 260], "without": [1, 7, 26, 57, 102, 113, 115, 143, 153, 154, 179, 180, 181, 182, 202, 205, 206, 209, 259, 260, 262], "purpos": [1, 5, 96, 107, 125, 202, 247, 256, 258, 259, 262], "make": [1, 7, 202, 205, 206, 208, 210, 214, 218, 220, 222, 223, 224, 226, 227, 228, 229, 231, 255, 257, 260], "differ": [1, 12, 26, 49, 50, 77, 78, 88, 90, 98, 101, 102, 141, 150, 167, 169, 170, 190, 202, 208, 211, 212, 214, 225, 236, 246, 247, 249, 252, 256, 260, 261, 262], "element": [1, 9, 10, 11, 12, 13, 14, 15, 20, 21, 22, 24, 25, 28, 29, 30, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 54, 58, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 76, 77, 79, 85, 86, 87, 88, 90, 93, 94, 96, 97, 99, 100, 101, 103, 104, 105, 106, 107, 109, 117, 118, 119, 120, 121, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 134, 135, 136, 138, 139, 141, 142, 143, 144, 148, 149, 150, 151, 152, 153, 154, 156, 157, 158, 159, 160, 161, 162, 164, 165, 166, 168, 169, 170, 171, 172, 173, 175, 176, 177, 178, 179, 180, 181, 182, 184, 186, 189, 190, 204, 206, 218, 220, 222, 223, 224, 226, 227, 228, 229, 231, 233, 236, 245, 246, 247, 249, 252, 260], "wise": [1, 9, 10, 12, 20, 21, 22, 28, 30, 31, 33, 36, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 61, 64, 65, 67, 68, 69, 70, 71, 72, 77, 79, 85, 90, 93, 101, 105, 106, 107, 109, 120, 121, 127, 128, 129, 130, 131, 135, 139, 141, 144, 149, 151, 152, 169, 189, 204, 206, 260], "oper": [1, 12, 19, 24, 26, 34, 40, 57, 58, 59, 61, 64, 71, 86, 88, 90, 101, 124, 126, 132, 141, 149, 150, 152, 155, 161, 165, 170, 172, 174, 189, 190, 196, 199, 204, 207, 208, 209, 210, 211, 252, 256, 257, 260, 261, 262], "facilit": [1, 197, 202], "user": [1, 7, 26, 110, 173, 202, 205, 206, 208, 211, 215, 256, 260, 261, 262], "ergonom": 1, "encourag": [1, 260, 261], "avoid": [1, 9, 63, 90, 96, 101, 107, 125, 141, 154, 205, 208, 211, 214, 256, 260, 262], "unnecessari": [1, 256], "can": [1, 7, 26, 60, 75, 110, 114, 116, 190, 199, 202, 205, 207, 208, 210, 211, 216, 245, 246, 249, 255, 256, 260, 261, 262, 263], "potenti": [1, 26, 96, 125, 153, 208, 260], "enabl": [1, 26, 102, 211, 215, 216, 260], "more": [1, 5, 7, 15, 19, 26, 40, 58, 60, 63, 73, 88, 96, 99, 101, 125, 132, 143, 149, 153, 171, 179, 180, 181, 182, 190, 199, 202, 205, 206, 207, 208, 209, 210, 211, 212, 215, 216, 220, 221, 224, 225, 228, 231, 247, 256, 257, 260, 261, 263], "memori": [1, 26, 60, 102, 202, 208, 209, 211, 260, 262], "effici": [1, 202, 208], "through": [1, 60, 65, 255, 257, 261, 262], "vector": [1, 40, 132, 137, 185, 233, 244, 249, 250, 254, 256, 260], "reduc": [1, 13, 14, 16, 17, 134, 136, 138, 150, 168, 170, 184, 190, 246, 249, 256, 261, 262], "consumpt": [1, 26, 261], "cach": 1, "local": [1, 211], "given": [1, 23, 99, 122, 156, 158, 183, 199, 204, 207, 208, 211, 212, 216, 237, 247, 256, 257, 260, 262], "involv": [1, 12, 90, 101, 141, 149, 155, 199, 206, 207, 211, 215], "singleton": [1, 13, 14, 16, 17, 95, 134, 136, 138, 150, 166, 168, 170, 175, 184, 240, 254, 260], "whose": [1, 5, 9, 11, 19, 20, 26, 47, 55, 62, 66, 85, 86, 87, 97, 99, 102, 133, 149, 156, 160, 161, 162, 171, 172, 173, 174, 176, 177, 179, 180, 181, 190, 208, 222, 226, 227, 228, 229, 231, 232, 234, 235, 236, 237, 238, 240, 241, 242, 244, 245, 246, 247, 248, 249, 250, 252, 254, 260, 262], "one": [1, 15, 19, 26, 40, 51, 58, 60, 63, 73, 75, 88, 90, 95, 97, 99, 101, 102, 115, 116, 122, 132, 137, 141, 143, 145, 146, 153, 158, 166, 171, 179, 180, 181, 182, 185, 190, 202, 205, 207, 208, 210, 211, 214, 215, 216, 218, 220, 222, 223, 224, 225, 226, 227, 228, 229, 231, 244, 245, 246, 254, 256, 257, 260, 262], "virtual": 1, "repeat": [1, 189, 190, 204, 262], "across": [1, 5, 90, 101, 141, 173, 204, 206, 207, 211, 255, 260], "correspond": [1, 16, 17, 23, 47, 59, 65, 73, 77, 102, 111, 112, 113, 149, 154, 156, 158, 168, 174, 179, 180, 181, 182, 184, 185, 190, 204, 206, 220, 224, 228, 231, 233, 236, 240, 259, 260], "If": [1, 5, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 23, 24, 25, 26, 29, 34, 35, 40, 44, 47, 51, 55, 57, 59, 60, 61, 62, 63, 64, 65, 66, 74, 76, 77, 78, 85, 86, 87, 88, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 107, 111, 113, 115, 116, 117, 118, 119, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 149, 150, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 166, 167, 168, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 187, 188, 190, 205, 207, 211, 217, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231, 232, 233, 236, 237, 238, 240, 241, 242, 245, 246, 247, 248, 249, 252, 254, 255, 256, 260, 262], "unequ": 1, "lower": [1, 77, 97, 176, 232], "higher": [1, 5, 26, 190, 205, 256, 261], "prepend": [1, 40, 95, 132, 175], "until": [1, 26, 175], "store": [1, 26, 211, 252], "determin": [1, 10, 11, 12, 13, 14, 21, 22, 26, 30, 40, 41, 42, 44, 45, 47, 50, 51, 52, 61, 62, 64, 65, 66, 67, 69, 70, 71, 72, 75, 78, 85, 86, 87, 88, 90, 94, 96, 101, 107, 117, 118, 119, 123, 124, 125, 126, 127, 132, 135, 139, 141, 142, 149, 152, 160, 161, 162, 164, 165, 169, 171, 172, 173, 174, 179, 180, 181, 182, 185, 186, 199, 204, 207, 210, 211, 218, 220, 222, 223, 224, 226, 227, 228, 229, 231, 232, 233, 234, 235, 238, 240, 241, 242, 244, 245, 246, 247, 248, 252, 254, 256, 260], "let": [1, 9, 10, 11, 12, 62, 66, 85, 87, 88, 93, 94, 96, 102, 117, 118, 119, 122, 123, 125, 136, 144, 150, 153, 158, 159, 162, 164, 168, 170, 173, 175, 184, 185, 190, 215, 218, 220, 222, 223, 224, 226, 227, 228, 229, 231, 232, 236, 237, 238, 246, 248, 249, 252], "b": [1, 9, 10, 11, 12, 57, 62, 66, 87, 90, 93, 94, 96, 101, 117, 118, 119, 122, 123, 125, 141, 144, 159, 162, 164, 167, 173, 185, 190, 204, 207, 208, 212, 245, 248, 262], "both": [1, 40, 44, 47, 51, 65, 77, 88, 90, 98, 101, 102, 107, 122, 132, 142, 149, 150, 170, 173, 174, 185, 190, 207, 208, 210, 214, 216, 233, 252, 256, 260, 261], "shape1": 1, "describ": [1, 5, 12, 88, 90, 93, 115, 116, 141, 144, 149, 150, 170, 192, 199, 207, 210, 214, 219, 230, 252, 260], "shape2": 1, "n1": [1, 137], "len": [1, 137, 175], "n2": [1, 137], "max": [1, 26, 77, 98, 108, 175, 189, 190, 204, 240, 242, 245], "temporari": 1, "list": [1, 73, 78, 110, 114, 137, 167, 190, 202, 204, 211, 260, 262], "length": [1, 15, 107, 137, 154, 174, 190, 219, 221, 222, 225, 230, 249, 250], "while": [1, 101, 115, 122, 128, 129, 130, 131, 136, 140, 158, 168, 179, 180, 184, 189, 190, 197, 202, 204, 207, 208, 209, 211, 214, 245, 256, 261, 262, 263], "d1": 1, "els": [1, 26, 202, 261], "d2": 1, "set": [1, 18, 26, 49, 65, 102, 160, 163, 168, 176, 177, 179, 181, 182, 184, 189, 190, 204, 205, 206, 207, 208, 211, 212, 215, 216, 218, 220, 222, 223, 224, 226, 227, 228, 229, 231, 232, 236, 237, 238, 242, 245, 246, 248, 249, 255, 256, 260, 262, 263], "th": [1, 97, 175, 190, 220, 224, 228, 231], "throw": 1, "except": [1, 7, 13, 14, 26, 74, 78, 88, 97, 102, 122, 143, 153, 167, 171, 183, 190, 199, 202, 204, 206, 208, 211, 213, 214, 218, 220, 222, 223, 224, 226, 227, 228, 229, 231, 245, 257, 260, 261, 262], "demonstr": 1, "applic": [1, 26, 88, 150, 153, 170, 199, 252, 256, 260, 261], "4d": 1, "8": [1, 5, 7, 27, 175, 199, 202], "6": [1, 7, 175], "3d": 1, "7": [1, 7, 27, 216], "5": [1, 190, 260], "2d": 1, "1d": 1, "15": 1, "do": [1, 26, 90, 141, 152, 197, 202, 205, 207, 208, 210, 211, 212, 256, 257, 259, 260, 262, 263], "doe": [1, 15, 26, 102, 144, 171, 190, 199, 202, 205, 206, 207, 208, 209, 211, 212, 214, 216, 256, 260, 262, 263], "second": [1, 12, 65, 67, 69, 70, 71, 72, 93, 105, 106, 107, 120, 121, 127, 128, 130, 131, 132, 135, 139, 141, 144, 149, 167, 169, 174, 179, 180, 181, 185, 186, 233, 236, 244, 246, 247, 249, 250, 260], "append": [1, 40, 69, 95, 132, 235], "As": [1, 122, 149, 179, 180, 181, 182, 202, 210, 216, 262], "impli": [1, 179, 180, 181, 182, 259, 260], "__setitem__": [1, 171, 189, 204], "Such": [1, 206, 256], "right": [1, 69, 71, 107, 158, 164, 205, 249, 259], "hand": [1, 199], "left": [1, 5, 60, 69, 101, 103, 158, 171, 190, 199, 236, 237, 249, 260], "index": [1, 5, 16, 17, 18, 32, 34, 49, 57, 83, 97, 111, 113, 137, 140, 143, 158, 167, 171, 174, 179, 180, 181, 189, 204, 220, 224, 228, 231, 260, 262], "perform": [1, 5, 13, 14, 26, 40, 59, 60, 90, 107, 132, 141, 153, 174, 190, 205, 206, 207, 208, 209, 210, 218, 220, 223, 224, 225, 227, 228, 229, 231, 249, 250, 256, 260, 261, 262], "empti": [1, 13, 14, 15, 150, 170, 189, 190, 204, 252, 260], "ok": 1, "allow": [1, 24, 25, 26, 29, 34, 35, 113, 115, 149, 154, 174, 190, 204, 205, 206, 208, 211, 214, 215, 256, 262], "NOT": [1, 129, 259], "adher": [2, 7, 8, 189, 190, 202, 255, 260], "convent": [2, 7, 10, 11, 26, 40, 61, 62, 64, 65, 66, 88, 123, 125, 132, 149, 164, 189, 190, 197, 207, 211, 255, 256, 261], "each": [2, 9, 10, 11, 12, 20, 21, 22, 26, 28, 30, 31, 33, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 76, 77, 79, 85, 86, 87, 90, 93, 94, 96, 100, 101, 105, 106, 107, 109, 114, 117, 118, 119, 120, 121, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 135, 137, 139, 140, 141, 142, 143, 144, 148, 149, 151, 152, 153, 156, 157, 158, 159, 160, 161, 162, 164, 165, 167, 169, 172, 173, 174, 175, 178, 179, 180, 190, 202, 204, 206, 210, 214, 216, 228, 232, 233, 234, 238, 240, 241, 242, 245, 246, 247, 248, 249, 250, 255, 256, 260, 261, 262], "float": [2, 5, 9, 10, 11, 12, 13, 14, 15, 20, 21, 24, 25, 28, 29, 30, 31, 33, 34, 35, 37, 39, 40, 41, 42, 43, 44, 47, 49, 50, 51, 60, 61, 62, 63, 64, 65, 66, 76, 77, 79, 80, 81, 82, 84, 85, 86, 87, 88, 90, 91, 93, 94, 96, 97, 98, 100, 101, 103, 104, 107, 109, 113, 115, 116, 117, 118, 119, 122, 123, 124, 125, 126, 127, 132, 134, 135, 136, 138, 139, 141, 142, 143, 144, 145, 146, 149, 150, 151, 152, 155, 157, 158, 159, 160, 161, 162, 164, 165, 168, 169, 170, 172, 173, 174, 178, 179, 180, 181, 182, 184, 185, 187, 189, 197, 204, 206, 207, 214, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 234, 236, 237, 238, 240, 241, 242, 245, 246, 247, 248, 249, 250, 252, 254, 256, 260, 261], "point": [2, 5, 9, 10, 11, 12, 13, 14, 15, 20, 24, 25, 26, 29, 34, 35, 40, 41, 42, 44, 47, 50, 51, 60, 61, 62, 63, 64, 65, 66, 76, 77, 79, 80, 81, 82, 84, 85, 86, 87, 88, 90, 91, 93, 94, 96, 97, 98, 100, 101, 103, 104, 107, 109, 113, 115, 116, 117, 118, 119, 122, 123, 124, 125, 126, 127, 132, 134, 135, 136, 138, 139, 141, 142, 143, 144, 145, 146, 149, 150, 151, 152, 155, 157, 158, 159, 160, 161, 162, 164, 165, 168, 169, 170, 172, 173, 174, 178, 179, 180, 181, 182, 184, 185, 187, 189, 197, 204, 206, 207, 211, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 234, 236, 237, 238, 240, 241, 242, 245, 246, 247, 248, 249, 250, 252, 254, 256, 260, 262], "creat": [3, 15, 60, 91, 92, 97, 102, 103, 104, 122, 145, 146, 187, 188, 196, 202, 211, 219, 230, 256, 260], "main": [5, 97, 176, 177, 205, 210, 235, 252, 255, 262], "namespac": [5, 7, 23, 110, 192, 202, 204, 217, 255, 256, 257, 260, 263], "under": [5, 255, 259, 260], "specifi": [5, 13, 14, 15, 16, 17, 18, 26, 29, 59, 60, 63, 74, 78, 88, 91, 95, 98, 99, 103, 113, 115, 116, 122, 145, 150, 152, 153, 156, 166, 167, 170, 171, 175, 176, 177, 179, 180, 181, 182, 185, 187, 190, 199, 204, 206, 207, 208, 210, 211, 212, 216, 218, 220, 221, 222, 223, 224, 226, 227, 228, 229, 231, 235, 252, 254, 256, 257, 260, 262, 263], "name": [5, 7, 23, 26, 101, 115, 179, 180, 181, 190, 207, 236, 245, 246, 247, 249, 255, 260, 261], "descript": [5, 7, 204, 206, 240, 254], "bool": [5, 13, 14, 16, 17, 18, 22, 24, 26, 28, 31, 33, 37, 39, 43, 45, 49, 52, 60, 63, 75, 88, 89, 93, 102, 103, 104, 105, 106, 115, 116, 117, 118, 119, 120, 121, 122, 128, 129, 130, 131, 134, 136, 138, 144, 150, 154, 160, 163, 168, 170, 184, 199, 204, 214, 232, 240, 249, 254], "true": [5, 13, 14, 16, 17, 18, 24, 25, 26, 29, 35, 60, 63, 75, 88, 93, 98, 101, 102, 111, 117, 118, 119, 122, 128, 129, 130, 131, 134, 136, 138, 143, 144, 150, 154, 160, 163, 168, 170, 179, 180, 181, 182, 184, 186, 190, 204, 232, 240, 249, 254, 256], "fals": [5, 13, 14, 16, 17, 18, 24, 25, 26, 29, 35, 60, 63, 75, 88, 93, 102, 111, 117, 118, 119, 122, 128, 129, 130, 131, 134, 136, 138, 144, 150, 154, 160, 163, 168, 170, 179, 180, 181, 182, 184, 190, 232, 240, 249, 254], "int8": [5, 115, 116, 199], "bit": [5, 68, 69, 71, 85, 88, 98, 108, 150, 160, 170, 199, 204, 206, 252], "sign": [5, 9, 10, 11, 12, 15, 20, 41, 44, 62, 65, 66, 71, 85, 87, 88, 90, 94, 96, 101, 115, 116, 123, 125, 134, 135, 138, 139, 141, 142, 149, 150, 152, 158, 160, 162, 164, 170, 173, 179, 180, 181, 182, 189, 197, 204, 207, 246, 247, 252], "exist": [5, 7, 26, 60, 78, 102, 202, 204, 207, 210, 211, 212, 238, 257, 260, 261], "interv": [5, 10, 11, 13, 14, 15, 61, 62, 64, 66, 95, 122, 123, 125, 140, 167, 174, 176, 177, 183, 185, 190, 218, 220, 222, 223, 224, 226, 227, 228, 229, 231, 233, 257], "128": 5, "127": 5, "int16": [5, 88, 115, 116, 150, 170, 199, 252], "16": [5, 199], "32": [5, 199], "767": 5, "int32": [5, 88, 115, 116, 150, 170, 199, 252], "147": 5, "483": 5, "647": 5, "int64": [5, 88, 115, 116, 150, 170, 199, 252], "64": [5, 199], "9": [5, 27], "223": 5, "372": 5, "036": 5, "854": 5, "775": 5, "807": 5, "uint8": [5, 115, 116, 199], "unsign": [5, 88, 115, 116, 150, 170, 189, 252], "255": 5, "uint16": [5, 88, 115, 116, 150, 170, 199, 252], "65": 5, "535": [5, 204], "uint32": [5, 88, 115, 116, 150, 170, 199, 252], "294": 5, "967": 5, "295": 5, "uint64": [5, 115, 116, 199], "18": 5, "446": [5, 204], "744": [5, 204], "073": 5, "709": [5, 204], "551": [5, 204], "615": 5, "float32": [5, 109, 115, 116, 151, 199, 247, 249, 250], "ieee": [5, 12, 65, 80, 81, 82, 84, 90, 96, 98, 107, 125, 141, 152, 164, 172, 173, 189, 197, 206, 207, 260], "754": [5, 12, 65, 80, 81, 82, 84, 90, 96, 98, 107, 125, 141, 152, 164, 172, 173, 189, 197, 206, 207, 260], "singl": [5, 7, 24, 25, 29, 34, 35, 113, 115, 179, 180, 189, 199, 204, 205, 207, 210, 211, 216, 256, 260, 261, 262], "precis": [5, 9, 20, 42, 60, 98, 103, 104, 109, 141, 151, 164, 199, 204, 206, 222, 226, 227, 228, 229, 231, 236, 237, 240, 247, 249, 250, 254, 260], "2019": [5, 12, 90, 96, 107, 125, 141, 189, 206, 260, 262], "float64": [5, 9, 20, 115, 116, 199, 222, 226, 227, 228, 229, 231, 236, 237, 240, 254], "doubl": [5, 174, 199, 204], "complex64": [5, 109, 115, 116, 151, 199, 204, 247, 249, 250], "imaginari": [5, 10, 11, 12, 13, 14, 44, 61, 62, 63, 64, 66, 79, 87, 90, 93, 94, 96, 98, 109, 123, 125, 141, 142, 143, 144, 145, 146, 149, 157, 162, 164, 173, 204, 207], "compon": [5, 10, 11, 12, 13, 14, 44, 62, 63, 66, 79, 87, 90, 93, 94, 96, 98, 109, 123, 125, 141, 142, 143, 144, 145, 146, 149, 151, 157, 162, 164, 172, 173, 179, 180, 181, 182, 204, 207, 221, 230], "complex128": [5, 9, 20, 115, 116, 199, 204, 222, 226, 227, 228, 229, 231, 236, 237, 240, 254], "method": [5, 26, 34, 102, 189, 192, 202, 208, 210, 211, 214, 215, 216, 260, 261, 262], "attribut": [5, 23, 98, 108, 189, 201, 204, 257, 260, 261, 262], "requir": [5, 10, 11, 24, 25, 29, 34, 35, 59, 61, 62, 63, 64, 66, 88, 102, 107, 116, 150, 164, 167, 170, 171, 173, 179, 180, 182, 183, 189, 190, 197, 199, 202, 204, 205, 206, 207, 208, 209, 210, 211, 214, 216, 218, 219, 220, 222, 223, 224, 227, 228, 230, 233, 252, 255, 256, 260, 261, 262], "beyond": [5, 156, 199, 260], "It": [5, 23, 26, 102, 202, 208, 210, 260, 262, 263], "also": [5, 7, 26, 34, 102, 107, 159, 199, 202, 207, 208, 209, 210, 216, 220, 224, 228, 231, 249, 255, 262], "subnorm": [5, 107], "k": [5, 40, 97, 107, 132, 143, 176, 177, 190, 232, 236, 237, 238, 246, 248, 249, 250, 252, 260], "denorm": [5, 107], "gradual": [5, 107, 260], "underflow": [5, 9, 90, 101, 107, 247], "hardwar": [5, 53, 107, 153, 206, 210, 211, 236, 249, 256, 260], "univers": [5, 107, 205, 211, 256, 260], "mani": [5, 107, 175, 260, 262], "platform": [5, 26, 107], "compil": [5, 107, 173, 202, 205, 209, 260], "toggl": [5, 107], "daz": [5, 107], "flush": [5, 107], "ftz": [5, 107], "increas": [5, 107, 206, 261], "guard": [5, 107], "against": [5, 40, 73, 107, 132, 173, 190, 242, 245, 263], "time": [5, 7, 16, 17, 26, 107, 153, 179, 180, 202, 204, 209, 210, 215, 232, 236, 237, 238, 246, 248, 249, 256, 260, 262], "attack": [5, 107], "accordingli": [5, 10, 11, 13, 14, 16, 17, 59, 61, 62, 64, 66, 90, 96, 101, 107, 122, 123, 125, 134, 136, 137, 138, 141, 143, 150, 153, 158, 164, 168, 170, 179, 180, 181, 182, 184, 190, 199, 206, 207, 208, 209, 211, 240, 246, 254, 256], "vari": [5, 107, 158, 173, 179, 180, 181, 182, 199, 206], "function": [5, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 26, 28, 29, 30, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 60, 61, 62, 64, 65, 66, 74, 78, 86, 87, 88, 94, 96, 99, 102, 107, 114, 115, 116, 122, 123, 125, 128, 129, 130, 131, 132, 136, 143, 149, 150, 152, 153, 154, 159, 161, 162, 163, 164, 167, 168, 170, 171, 172, 173, 174, 175, 179, 180, 181, 182, 183, 184, 185, 189, 192, 202, 204, 205, 207, 208, 209, 210, 211, 214, 215, 216, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231, 232, 233, 236, 237, 238, 242, 245, 246, 247, 248, 249, 250, 252, 255, 256, 257, 260, 261, 262], "access": [5, 26, 32, 102, 110, 190, 204, 210, 255, 257, 260], "variou": [5, 204], "cast": [5, 29, 49, 60, 63, 75, 88, 150, 170, 199, 207, 252, 260, 262], "introspect": 5, "isdtyp": [5, 189, 204], "integr": [5, 63, 77, 113, 115, 116], "keyword": [5, 7, 26, 63, 88, 114, 137, 150, 170, 189, 204, 208, 211, 215, 216, 252, 256, 257, 260, 261, 262], "affect": [5, 15, 49, 208, 211], "intermedi": [5, 9, 107], "calcul": [5, 9, 10, 11, 12, 20, 21, 42, 47, 50, 61, 62, 64, 65, 66, 86, 87, 88, 90, 94, 96, 123, 124, 125, 126, 127, 134, 136, 138, 141, 149, 150, 161, 162, 164, 168, 169, 170, 172, 173, 184, 204, 247], "implementor": [5, 255], "free": [5, 211, 259], "when": [5, 7, 12, 16, 17, 26, 47, 49, 59, 63, 90, 96, 101, 102, 107, 113, 115, 122, 125, 134, 135, 138, 139, 141, 149, 150, 153, 154, 158, 168, 170, 173, 184, 186, 189, 190, 199, 204, 205, 207, 208, 209, 210, 212, 214, 215, 216, 218, 220, 222, 223, 224, 226, 227, 228, 229, 231, 232, 236, 238, 242, 245, 246, 247, 248, 249, 250, 252, 256, 260, 261, 262], "accumul": 5, "reduct": [5, 13, 14], "long": [5, 110, 216], "ha": [5, 9, 13, 14, 20, 23, 29, 34, 35, 40, 44, 47, 55, 77, 86, 87, 88, 90, 94, 95, 96, 101, 104, 132, 136, 137, 140, 141, 142, 143, 149, 150, 161, 162, 166, 168, 170, 171, 172, 173, 174, 175, 179, 180, 181, 182, 184, 190, 199, 202, 207, 210, 211, 214, 215, 233, 240, 248, 249, 252, 254, 256, 257, 260, 262, 263], "wai": [5, 26, 63, 102, 202, 205, 211, 212, 257, 260, 261, 262, 263], "f4": [5, 199], "ensur": [5, 26, 158, 202, 206, 256, 260, 261, 262], "portabl": [5, 59, 122, 206, 208, 211, 212, 260], "consum": [5, 26, 63, 113, 115, 202, 207, 208, 216, 255, 260, 261], "recommend": [5, 7, 19, 23, 26, 122, 128, 129, 130, 131, 136, 152, 168, 184, 197, 204, 206, 210, 211, 260], "guidanc": [5, 7, 49, 204, 205, 212, 260], "govern": [5, 50, 169, 199, 256, 257], "interact": [5, 207], "either": [5, 9, 10, 11, 12, 24, 26, 35, 40, 65, 77, 87, 88, 90, 93, 94, 96, 98, 101, 102, 107, 110, 116, 117, 118, 122, 123, 124, 125, 126, 127, 132, 134, 135, 138, 139, 141, 150, 152, 159, 160, 161, 164, 170, 172, 173, 174, 190, 206, 207, 208, 212, 216, 247, 252, 260, 261, 263], "whether": [5, 13, 14, 26, 59, 60, 63, 88, 89, 102, 111, 116, 119, 122, 154, 160, 204, 211, 232, 236, 237, 246, 248, 255, 259, 260, 262], "otherwis": [5, 13, 14, 15, 16, 17, 26, 59, 60, 63, 75, 102, 111, 113, 115, 134, 136, 138, 150, 153, 154, 158, 159, 168, 170, 184, 185, 186, 189, 190, 202, 211, 232, 234, 240, 247, 248, 254, 259], "note": [5, 7, 9, 10, 11, 12, 13, 14, 20, 21, 24, 25, 26, 29, 34, 35, 40, 42, 43, 44, 46, 47, 50, 51, 59, 61, 62, 63, 64, 65, 66, 76, 77, 79, 85, 86, 87, 88, 90, 93, 94, 96, 97, 98, 100, 101, 103, 104, 107, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 123, 124, 125, 126, 127, 132, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 149, 150, 151, 152, 153, 157, 158, 159, 160, 161, 162, 164, 165, 168, 169, 170, 171, 172, 173, 174, 175, 178, 179, 180, 181, 182, 183, 184, 185, 189, 190, 204, 210, 214, 216, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 236, 237, 238, 240, 241, 242, 244, 245, 246, 247, 248, 249, 250, 252, 254, 260, 261, 262, 263], "possibl": [5, 26, 60, 101, 102, 134, 138, 154, 172, 173, 202, 205, 206, 207, 208, 210, 211, 212, 214, 216, 256, 260, 261, 262, 263], "multipl": [5, 7, 13, 14, 16, 17, 40, 42, 44, 132, 134, 136, 138, 141, 142, 150, 168, 170, 184, 190, 202, 205, 207, 210, 211, 215, 216, 237, 238, 256, 257, 260, 262], "In": [5, 12, 19, 26, 59, 88, 90, 93, 101, 116, 118, 119, 141, 144, 150, 152, 159, 170, 189, 190, 192, 199, 206, 207, 210, 212, 227, 228, 246, 247, 249, 252, 256, 257, 261, 262, 263], "clearli": [5, 59, 116, 197, 207, 256, 257], "warn": [5, 153, 212], "about": [5, 7, 26, 98, 108, 208, 256, 260, 262, 263], "": [5, 26, 29, 32, 49, 58, 59, 60, 80, 101, 102, 137, 152, 168, 175, 176, 177, 184, 190, 197, 202, 204, 205, 206, 207, 208, 210, 211, 214, 216, 220, 224, 228, 231, 245, 249, 250, 256, 257, 260, 262], "organ": [5, 204, 256, 261, 262], "within": [5, 15, 27, 190, 199, 202, 204, 207, 211, 218, 220, 223, 224, 227, 228, 229, 231, 260], "accord": [5, 12, 60, 71, 75, 88, 90, 98, 101, 103, 122, 141, 149, 158, 159, 168, 184, 185, 190, 206, 207], "These": [5, 208, 236, 261], "intend": [5, 88, 150, 170, 202, 252], "posit": [7, 9, 10, 11, 13, 14, 20, 46, 62, 65, 66, 81, 90, 95, 97, 98, 101, 118, 123, 125, 140, 141, 143, 152, 156, 160, 162, 164, 173, 189, 190, 202, 204, 206, 216, 230, 232, 246, 261], "paramet": [7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 113, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 202, 204, 216, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 240, 241, 242, 244, 245, 246, 247, 248, 249, 250, 252, 254, 256], "extern": [7, 262], "usabl": 7, "accept": [7, 26, 128, 129, 130, 131, 136, 152, 168, 184, 202, 257], "call": [7, 34, 210, 211, 214, 247, 260, 261, 262], "argument": [7, 10, 11, 26, 40, 61, 62, 63, 64, 65, 66, 86, 88, 107, 114, 123, 125, 132, 150, 155, 158, 161, 164, 170, 172, 173, 174, 189, 199, 204, 206, 208, 210, 211, 218, 220, 223, 224, 227, 228, 229, 231, 252, 256, 260, 261, 262], "map": [7, 207, 208], "base": [7, 47, 57, 58, 94, 95, 123, 124, 125, 126, 149, 179, 180, 181, 182, 190, 204, 208, 214, 216, 256, 257, 260, 261, 262], "sole": [7, 190, 197, 256], "incompat": [7, 26, 74, 102, 202, 257, 260], "us": [7, 19, 26, 27, 59, 60, 83, 98, 102, 107, 122, 124, 126, 156, 179, 181, 189, 190, 199, 204, 206, 207, 208, 209, 211, 212, 215, 216, 217, 218, 220, 222, 223, 224, 226, 227, 228, 229, 231, 255, 256, 257, 258, 259, 260, 263], "normal": [7, 78, 167, 218, 220, 222, 223, 224, 226, 227, 228, 229, 231], "practic": [7, 19, 190, 256, 261], "avail": [7, 102, 114, 202, 210, 255, 257, 261], "still": [7, 26, 216, 256, 261, 262, 263], "consid": [7, 26, 63, 102, 128, 129, 130, 131, 179, 180, 181, 182, 207, 211, 230, 245, 256, 260, 262, 263], "compliant": [7, 26, 51, 90, 96, 102, 122, 125, 128, 129, 130, 131, 134, 135, 136, 138, 139, 168, 184, 206, 209, 211, 257, 260], "altern": [7, 208, 210, 263], "thei": [7, 26, 199, 205, 210, 211, 215, 216, 255, 256, 257, 260, 262, 263], "were": [7, 101, 153, 158, 204, 260], "option": [7, 13, 14, 15, 16, 17, 23, 26, 57, 58, 59, 60, 63, 77, 78, 88, 91, 92, 97, 99, 102, 103, 104, 113, 115, 122, 134, 136, 138, 145, 146, 150, 153, 154, 156, 158, 168, 170, 171, 184, 187, 188, 189, 204, 215, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 240, 242, 245, 252, 254, 256, 261, 262], "lead": [7, 101, 207, 246, 249, 260], "readabl": [7, 199, 256, 261], "code": [7, 59, 199, 208, 209, 211, 214, 216, 256, 260, 261, 262], "easier": [7, 202, 208, 256], "evolv": [7, 202, 256], "over": [7, 13, 14, 26, 122, 134, 136, 138, 150, 168, 170, 171, 174, 184, 185, 206, 207, 208, 210, 211, 215, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231, 233, 252, 254, 256, 260], "ad": [7, 9, 10, 11, 12, 13, 14, 20, 21, 24, 26, 28, 29, 35, 40, 42, 43, 44, 46, 47, 50, 51, 60, 61, 62, 63, 64, 66, 86, 87, 90, 93, 94, 96, 97, 98, 102, 103, 104, 117, 118, 119, 122, 123, 124, 125, 126, 132, 137, 141, 142, 143, 144, 145, 146, 148, 149, 150, 157, 159, 161, 162, 164, 165, 169, 170, 172, 173, 174, 179, 180, 181, 182, 185, 190, 203, 204, 205, 211, 232, 233, 234, 236, 237, 238, 240, 241, 242, 244, 245, 246, 247, 248, 249, 250, 252, 254, 257], "worri": 7, "xi": [7, 137], "annot": [7, 204, 216, 260], "individu": [7, 211, 214, 215, 216, 219, 230, 260, 261], "aim": [7, 205, 216, 255, 256, 257, 260, 261, 262, 263], "strongli": [7, 208, 262], "look": [7, 262], "like": [7, 202, 205, 207, 208, 214, 216, 257, 260, 261, 262], "funcnam": 7, "key1": 7, "key2": 7, "none": [7, 13, 14, 15, 16, 17, 23, 26, 32, 49, 57, 58, 59, 60, 63, 77, 78, 83, 88, 91, 92, 97, 99, 102, 103, 104, 113, 115, 122, 134, 136, 138, 145, 146, 150, 153, 154, 156, 158, 168, 170, 171, 184, 187, 188, 190, 204, 211, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 240, 242, 245, 252, 254, 260, 261, 263], "out": [7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 190, 204, 205, 208, 210, 214, 215, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 240, 241, 242, 244, 245, 246, 247, 248, 249, 250, 252, 254, 259, 262], "int": [7, 13, 14, 15, 16, 17, 18, 21, 22, 26, 27, 28, 30, 31, 32, 33, 34, 35, 37, 38, 39, 41, 42, 43, 45, 47, 48, 49, 50, 51, 52, 56, 57, 58, 59, 60, 74, 77, 78, 88, 91, 95, 97, 98, 99, 101, 103, 104, 108, 122, 134, 136, 138, 140, 145, 147, 150, 153, 154, 156, 163, 166, 167, 168, 170, 171, 174, 175, 176, 177, 183, 184, 185, 187, 190, 199, 214, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 233, 235, 240, 241, 251, 252, 253, 254, 261], "str": [7, 8, 23, 115, 116, 137, 261], "modulo": 7, "self": [7, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 59, 89, 204, 262], "few": [7, 206, 214, 260, 262], "enhanc": 7, "default": [7, 13, 14, 15, 16, 17, 18, 23, 26, 59, 60, 63, 77, 78, 88, 91, 92, 97, 99, 102, 103, 104, 112, 113, 115, 122, 134, 136, 137, 138, 143, 145, 146, 150, 153, 154, 156, 158, 163, 167, 168, 170, 174, 176, 177, 179, 180, 181, 183, 184, 185, 187, 188, 189, 190, 204, 206, 211, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 235, 240, 242, 245, 246, 249, 252, 254], "form": [7, 23, 26, 40, 79, 132, 133, 176, 177, 208, 232, 234, 235, 236, 237, 238, 240, 241, 242, 245, 246, 247, 248, 249, 250, 252, 257, 261], "question": [7, 205, 260], "commonli": [7, 168, 184, 205, 207, 209, 255, 256, 260, 261], "written": [7, 202, 260, 262], "yyyi": [8, 23, 257], "mm": [8, 23, 257], "string": [8, 23, 115, 116, 204, 257, 260], "version": [8, 9, 10, 11, 12, 13, 14, 20, 21, 23, 24, 25, 26, 28, 29, 34, 35, 40, 42, 43, 44, 46, 47, 50, 51, 59, 60, 61, 62, 63, 64, 66, 77, 79, 85, 86, 87, 88, 90, 93, 94, 96, 97, 98, 102, 103, 104, 107, 108, 109, 116, 117, 118, 119, 122, 123, 124, 125, 126, 132, 134, 135, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 149, 150, 151, 153, 157, 158, 159, 160, 161, 162, 164, 165, 169, 170, 171, 172, 173, 174, 175, 179, 180, 181, 182, 183, 185, 189, 202, 205, 211, 215, 216, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 236, 237, 238, 240, 241, 242, 244, 245, 246, 247, 248, 249, 250, 252, 254, 258, 260, 262], "absolut": [9, 20, 85, 159, 206, 208, 240, 241, 247, 256], "x_i": [9, 10, 11, 61, 62, 64, 66, 68, 76, 77, 79, 86, 87, 94, 96, 100, 109, 117, 118, 119, 123, 124, 125, 126, 129, 134, 136, 138, 142, 148, 151, 157, 159, 160, 161, 162, 164, 165, 168, 172, 173, 178, 184], "input": [9, 10, 11, 12, 13, 14, 16, 17, 18, 20, 26, 30, 41, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 75, 76, 77, 78, 79, 85, 86, 87, 88, 90, 92, 93, 94, 95, 96, 99, 100, 101, 102, 104, 105, 106, 107, 109, 116, 117, 118, 119, 120, 121, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 188, 189, 197, 202, 204, 207, 209, 211, 212, 216, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 240, 241, 242, 244, 245, 246, 247, 249, 250, 252, 254, 256, 260, 262], "magnitud": [9, 12, 20, 85, 90, 101, 107, 141, 204, 249, 250], "represent": [9, 12, 20, 29, 44, 67, 70, 72, 80, 81, 82, 84, 90, 98, 101, 108, 141, 142, 172, 173, 206, 210, 261], "known": [9, 159, 206, 209, 210], "norm": [9, 218, 220, 222, 223, 224, 226, 227, 228, 229, 231, 240, 254, 256], "modulu": [9, 152], "z": [9, 10, 11, 61, 62, 64, 66, 123, 207], "bj": [9, 12, 79, 90, 141], "comput": [9, 12, 28, 31, 33, 37, 39, 40, 43, 57, 58, 67, 70, 72, 79, 88, 89, 90, 93, 95, 101, 105, 106, 107, 120, 121, 128, 129, 130, 131, 132, 134, 135, 136, 138, 139, 141, 142, 143, 144, 148, 150, 153, 168, 170, 174, 179, 180, 181, 182, 184, 185, 190, 204, 206, 209, 214, 218, 219, 220, 222, 223, 224, 226, 227, 228, 229, 230, 231, 232, 233, 236, 237, 238, 240, 242, 245, 246, 247, 248, 249, 250, 252, 254, 256, 260], "operatornam": [9, 10, 11, 61, 62, 64, 66, 86, 87, 159, 161, 162, 172, 173, 207, 236, 237, 247, 249], "sqrt": [9, 10, 11, 61, 62, 189, 204, 207, 218, 220, 222, 223, 224, 226, 227, 228, 229, 231, 254], "take": [9, 123, 125, 149, 164, 189, 204, 211, 216, 260], "care": [9, 208, 256], "undu": [9, 209], "overflow": [9, 12, 88, 90, 101, 107, 122, 150, 170, 199, 247, 252, 256], "dure": [9, 40, 59, 107, 132, 168, 184, 199, 202, 245, 260, 261], "stage": [9, 107, 257], "contain": [9, 10, 11, 12, 13, 14, 15, 16, 17, 20, 21, 22, 23, 26, 28, 30, 31, 32, 33, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 76, 77, 78, 79, 85, 86, 87, 88, 90, 91, 92, 93, 94, 96, 100, 101, 102, 105, 106, 107, 109, 110, 111, 113, 115, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 157, 158, 159, 160, 161, 162, 164, 165, 168, 169, 170, 172, 173, 174, 176, 177, 178, 179, 180, 181, 182, 184, 185, 187, 190, 204, 206, 207, 208, 210, 214, 215, 219, 220, 221, 224, 225, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 240, 241, 242, 244, 245, 246, 247, 248, 249, 250, 252, 254, 260, 262], "nan": [9, 10, 11, 12, 13, 14, 24, 25, 35, 61, 62, 63, 64, 65, 66, 76, 77, 85, 86, 87, 90, 93, 94, 96, 100, 101, 107, 117, 118, 119, 123, 124, 125, 126, 127, 134, 135, 136, 138, 139, 141, 144, 149, 152, 157, 158, 159, 160, 161, 162, 164, 168, 172, 173, 178, 179, 180, 181, 182, 184, 189, 197, 207, 260], "infin": [9, 10, 11, 12, 13, 14, 24, 25, 35, 62, 63, 64, 65, 66, 76, 81, 86, 87, 90, 93, 94, 96, 100, 101, 107, 117, 118, 123, 124, 125, 126, 127, 134, 138, 141, 144, 149, 152, 157, 160, 161, 162, 164, 172, 173, 178, 207, 247, 254], "imag": [9, 10, 11, 12, 24, 62, 63, 66, 87, 93, 94, 96, 117, 118, 119, 122, 123, 125, 144, 157, 159, 162, 164, 173, 189, 204, 205, 260, 261, 262], "finit": [9, 10, 11, 12, 25, 35, 42, 62, 65, 66, 87, 90, 93, 94, 96, 101, 107, 117, 118, 123, 125, 141, 144, 149, 152, 160, 162, 164, 173, 206], "2022": [9, 10, 11, 12, 13, 14, 20, 21, 24, 25, 26, 28, 29, 35, 40, 42, 43, 44, 46, 47, 50, 51, 60, 61, 62, 63, 64, 66, 79, 86, 87, 90, 93, 94, 96, 97, 98, 103, 104, 108, 109, 116, 117, 118, 119, 122, 123, 124, 125, 126, 132, 137, 141, 142, 143, 144, 145, 146, 148, 149, 150, 151, 157, 159, 161, 162, 164, 165, 169, 170, 171, 172, 173, 174, 179, 180, 181, 182, 185, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 236, 237, 238, 240, 241, 242, 244, 245, 246, 247, 248, 249, 250, 252, 254], "12": [9, 10, 11, 12, 13, 14, 20, 21, 24, 25, 26, 28, 29, 34, 35, 40, 42, 43, 44, 46, 47, 50, 51, 59, 60, 61, 62, 63, 64, 66, 77, 79, 85, 86, 87, 88, 90, 93, 94, 96, 97, 98, 102, 103, 104, 107, 108, 109, 116, 117, 118, 119, 122, 123, 124, 125, 126, 132, 134, 135, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 149, 150, 151, 153, 157, 158, 159, 160, 161, 162, 164, 165, 169, 170, 171, 172, 173, 174, 175, 179, 180, 181, 182, 183, 185, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 236, 237, 238, 240, 241, 242, 244, 245, 246, 247, 248, 249, 250, 252, 254, 257], "approxim": [10, 11, 47, 61, 62, 64, 65, 66, 86, 87, 94, 96, 101, 123, 124, 125, 126, 149, 161, 162, 172, 173, 206, 242, 245], "princip": [10, 11, 61, 62, 64, 66, 123, 164, 207, 256], "invers": [10, 11, 61, 62, 64, 65, 66, 207, 218, 220, 223, 224, 225, 226, 227, 228, 229, 231, 238, 241, 245, 256], "cosin": [10, 11, 86, 87, 173], "express": [10, 61, 63, 64, 65, 86, 161, 172, 190, 199, 208, 256, 259], "radian": [10, 61, 64, 65, 86, 161, 172], "arc": [10, 61, 64], "frac": [10, 11, 61, 62, 64, 66, 86, 87, 90, 122, 124, 126, 159, 161, 162, 172, 173, 207, 247], "pi": [10, 11, 61, 62, 64, 66, 87, 123, 125, 162, 172, 173, 189], "j": [10, 11, 12, 25, 61, 62, 64, 66, 87, 90, 94, 96, 122, 123, 125, 141, 158, 159, 161, 162, 164, 172, 173, 190, 207, 236, 249, 252], "ln": [10, 11, 61, 62, 64, 66, 123], "zj": [10, 61, 62, 64, 66], "conj": [10, 11, 61, 62, 64, 66, 87, 94, 96, 123, 124, 125, 126, 162, 164, 173, 189, 204], "multi": [10, 11, 61, 62, 64, 66, 189, 207, 210, 211, 233, 262], "branch": [10, 11, 61, 62, 64, 65, 66, 86, 87, 90, 94, 96, 123, 125, 141, 149, 161, 162, 164, 172, 173, 260], "cut": [10, 11, 61, 62, 64, 66, 86, 87, 94, 96, 123, 125, 149, 161, 162, 164, 172, 173, 260], "plane": [10, 11, 61, 62, 64, 66, 86, 87, 90, 94, 96, 141, 161, 162, 164, 172, 173, 260], "By": [10, 11, 13, 14, 61, 62, 64, 65, 66, 88, 123, 125, 134, 136, 138, 149, 150, 164, 168, 170, 184, 185, 206, 207, 233, 256, 261], "place": [10, 11, 15, 60, 61, 62, 63, 64, 66, 91, 92, 97, 102, 103, 104, 122, 145, 146, 156, 187, 188, 189, 197, 199, 204, 208, 211, 219, 230, 245], "line": [10, 11, 61, 62, 64, 66, 172, 173, 199, 207, 260, 261, 262, 263], "segment": [10, 11, 61, 62, 64, 66, 207], "infti": [10, 11, 61, 62, 64, 66, 86, 123, 125, 149, 164, 207], "axi": [10, 11, 13, 14, 16, 17, 18, 61, 62, 64, 66, 78, 88, 95, 99, 123, 125, 134, 136, 138, 140, 149, 150, 153, 156, 163, 164, 166, 167, 168, 170, 171, 174, 175, 183, 184, 185, 189, 204, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231, 233, 240, 253, 254, 260], "rang": [10, 61, 62, 64, 66, 77, 88, 123, 125, 150, 164, 170, 190, 204, 210, 252, 260], "strip": [10, 61, 62, 64, 66, 123, 125], "unbound": [10, 61, 62, 64, 66, 123, 125], "along": [10, 11, 13, 14, 16, 17, 18, 61, 62, 64, 66, 78, 88, 97, 99, 123, 125, 134, 136, 138, 150, 153, 156, 163, 164, 167, 168, 170, 171, 172, 173, 175, 183, 184, 185, 190, 204, 218, 220, 222, 223, 224, 226, 227, 228, 229, 231, 233, 252, 254, 256], "c99": [10, 11, 61, 62, 64, 66, 90, 123, 125, 141, 149, 164, 207, 257], "provision": [10, 11, 61, 62, 64, 66, 123, 125, 149, 164, 207], "statu": [10, 11, 61, 62, 64, 66, 123, 125, 149, 164, 207], "greater": [10, 11, 33, 38, 48, 61, 62, 65, 66, 69, 71, 77, 85, 90, 100, 101, 123, 125, 149, 152, 158, 159, 160, 162, 164, 166, 173, 189, 190, 218, 220, 222, 223, 224, 226, 227, 228, 229, 231, 233, 241], "than": [10, 11, 19, 26, 38, 40, 47, 48, 49, 55, 61, 62, 63, 65, 66, 69, 71, 76, 77, 85, 88, 90, 98, 99, 100, 101, 102, 123, 124, 125, 126, 132, 141, 149, 150, 152, 158, 159, 160, 162, 164, 166, 168, 170, 171, 173, 178, 179, 180, 181, 182, 184, 190, 199, 202, 205, 208, 211, 212, 215, 218, 220, 222, 223, 224, 226, 227, 228, 229, 231, 233, 240, 241, 242, 245, 252, 254, 256, 257, 260, 262], "less": [10, 11, 39, 47, 61, 65, 66, 76, 85, 90, 101, 123, 124, 125, 126, 149, 152, 158, 159, 160, 164, 168, 184, 189, 190, 208, 218, 220, 222, 223, 224, 226, 227, 228, 229, 231, 240, 241, 242, 245, 254, 260], "\u03c0": [10, 64, 65, 84], "0j": [10, 11, 12, 25, 62, 63, 66, 87, 94, 96, 97, 123, 125, 145, 146, 159, 162, 164, 173, 207, 247], "nonzero": [10, 11, 12, 62, 66, 87, 90, 94, 96, 101, 141, 162, 173, 189, 190, 204, 245], "3\u03c0": [10, 65], "hyperbol": [11, 62, 66, 86, 87, 161, 162, 172, 173, 207], "aco": [11, 61, 189, 204, 206], "simpli": [11, 96, 125, 205, 216, 260, 262], "upper": [11, 77, 97, 177, 204, 232, 246], "half": [11, 15, 66, 122, 140, 164, 174, 190, 221], "area": [11, 62, 66], "sector": [11, 62, 66], "\u03c0j": [11, 62, 66, 123, 125], "3\u03c0j": [11, 123, 125], "sum": [12, 21, 88, 107, 127, 150, 189, 204, 240, 252, 254, 256], "x1_i": [12, 65, 67, 69, 70, 71, 72, 85, 90, 93, 101, 105, 106, 107, 120, 121, 127, 128, 130, 131, 135, 139, 141, 144, 149, 152, 169, 186, 204], "x2_i": [12, 65, 67, 69, 70, 71, 72, 85, 90, 93, 101, 105, 106, 107, 120, 121, 127, 128, 130, 131, 135, 139, 141, 144, 149, 152, 169, 186, 204], "first": [12, 16, 17, 19, 65, 67, 69, 70, 71, 72, 88, 93, 105, 106, 107, 120, 121, 127, 128, 130, 131, 132, 135, 139, 141, 144, 149, 156, 167, 169, 172, 173, 174, 179, 180, 181, 185, 186, 190, 207, 233, 236, 244, 246, 247, 249, 250, 256, 260, 261, 262, 263], "remain": [12, 90, 93, 101, 116, 118, 119, 141, 144, 152, 154, 159, 190, 208, 231], "neither": [12, 40, 90, 101, 132, 141, 174, 249, 261], "nor": [12, 90, 101, 141, 249, 261], "mathemat": [12, 19, 65, 84, 86, 87, 90, 96, 101, 123, 125, 141, 161, 162, 172, 173, 189, 207, 240, 254], "round": [12, 15, 76, 90, 100, 101, 141, 164, 178, 189, 204, 206], "nearest": [12, 90, 141, 157, 178, 206], "mode": [12, 90, 141, 206, 218, 220, 222, 223, 224, 226, 227, 228, 229, 231, 246], "too": [12, 26, 90, 101, 141, 256, 260], "larg": [12, 90, 101, 141, 210, 216, 247, 260], "appropri": [12, 26, 90, 101, 141, 207, 212], "commut": 12, "associ": [12, 42, 141, 192, 199, 242, 245, 248, 256, 259, 261], "tabl": [12, 90, 141, 189], "c": [12, 90, 93, 122, 141, 143, 144, 153, 167, 168, 173, 184, 190, 204, 207, 210, 213, 232, 236, 237, 238, 246, 248, 249, 257, 259, 260, 262], "d": [12, 90, 93, 122, 141, 144, 199, 219, 230], "dj": [12, 90, 141], "independ": [12, 90, 141, 157, 190, 202, 210, 233, 246, 248, 256, 257, 260], "abov": [12, 88, 90, 93, 123, 125, 141, 144, 149, 150, 164, 170, 176, 177, 190, 199, 207, 208, 210, 211, 214, 235, 236, 252, 256, 259, 262], "similarli": [12, 57, 116, 137, 199, 232, 249], "henc": [12, 79, 95, 143, 153, 179, 180, 181, 182, 190, 205, 207, 208, 209, 210, 214, 215, 216, 260, 262], "z1": 12, "z2": 12, "keepdim": [13, 14, 16, 17, 134, 136, 138, 150, 168, 170, 184, 240, 254], "test": [13, 14, 89, 117, 118, 119, 204, 206, 258, 260, 261, 262], "evalu": [13, 14, 22, 30, 36, 38, 41, 44, 45, 46, 48, 51, 52, 94, 96, 123, 124, 125, 126, 142, 148, 159, 160, 165, 202, 260], "union": [13, 14, 15, 21, 22, 26, 28, 30, 31, 32, 33, 37, 38, 39, 41, 42, 43, 45, 47, 48, 49, 50, 51, 52, 59, 60, 75, 77, 78, 91, 98, 99, 103, 104, 108, 115, 116, 122, 134, 136, 138, 140, 145, 150, 153, 155, 156, 166, 167, 168, 170, 174, 184, 187, 221, 225, 240, 242, 245, 254, 261], "ax": [13, 14, 16, 17, 19, 55, 56, 99, 134, 136, 138, 140, 147, 150, 156, 166, 168, 170, 174, 175, 184, 185, 190, 204, 220, 221, 224, 225, 228, 231, 233, 240, 245, 248, 251, 254], "logic": [13, 14, 24, 26, 90, 93, 128, 129, 130, 131, 141, 144, 211, 214, 220, 224, 228, 231], "AND": [13, 67, 93, 128, 259], "entir": [13, 14, 86, 87, 94, 96, 134, 136, 138, 150, 161, 162, 168, 170, 184], "valid": [13, 14, 26, 27, 95, 114, 140, 158, 167, 174, 183, 190, 206, 214, 218, 220, 222, 223, 224, 226, 227, 228, 229, 231, 236, 246, 249, 261], "count": [13, 14, 78, 88, 99, 171, 179, 180, 185, 190, 204, 218, 220, 222, 223, 224, 226, 227, 228, 229, 231, 233, 237], "last": [13, 14, 18, 19, 55, 78, 88, 99, 156, 163, 167, 171, 174, 185, 190, 218, 220, 222, 223, 224, 226, 227, 228, 229, 231, 233, 235, 240, 246, 249, 252], "invalid": [13, 14, 23, 95, 212, 260], "rais": [13, 14, 19, 23, 24, 25, 26, 29, 34, 35, 40, 47, 51, 55, 60, 74, 90, 94, 95, 102, 122, 132, 134, 138, 143, 149, 154, 166, 167, 183, 185, 190, 199, 202, 204, 210, 211, 212, 214, 233, 241, 260], "wa": [13, 14, 19, 26, 101, 134, 136, 138, 150, 168, 170, 184, 199, 211, 216, 260, 262], "OR": [14, 24, 70, 130, 144, 259], "start": [15, 122, 190, 204, 216, 260, 262], "stop": [15, 122, 190, 204, 261], "step": [15, 122, 190, 261], "evenli": [15, 122], "space": [15, 122, 219, 221, 230], "open": [15, 122, 140, 174, 190], "inclus": [15, 190, 260], "end": [15, 65, 86, 122, 159, 161, 172, 173, 197, 208, 247, 260, 261, 262], "exclus": [15, 190], "distanc": [15, 107], "between": [15, 26, 47, 51, 65, 78, 90, 93, 98, 122, 134, 135, 138, 139, 144, 149, 167, 179, 180, 181, 182, 199, 207, 208, 211, 219, 230, 256, 260, 262], "adjac": 15, "output": [15, 60, 63, 78, 88, 91, 92, 95, 97, 99, 102, 103, 104, 111, 122, 137, 145, 146, 154, 156, 158, 166, 167, 171, 175, 187, 188, 202, 204, 207, 208, 211, 213, 214, 216, 218, 219, 220, 222, 223, 224, 227, 228, 229, 230, 231, 252, 260], "infer": [15, 60, 63, 92, 103, 104, 146, 154, 188, 209, 256, 261], "cannot": [15, 26, 57, 102, 172, 173, 204, 207, 209, 260], "guarante": [15, 59, 179, 181, 202, 207, 211, 260, 262], "error": [15, 19, 23, 24, 25, 26, 29, 34, 35, 51, 55, 90, 102, 134, 138, 172, 173, 199, 206, 247, 260], "ceil": [15, 189], "indic": [16, 17, 18, 26, 60, 88, 89, 102, 111, 116, 122, 140, 143, 156, 158, 159, 171, 174, 176, 177, 179, 181, 190, 199, 204, 254, 260], "occur": [16, 17, 75, 107, 172, 173, 179, 180, 181, 182, 207, 261], "occurr": [16, 17, 179], "comparison": [16, 17, 18, 31, 33, 37, 39, 93, 105, 106, 120, 121, 134, 135, 138, 139, 144, 163, 189, 207, 257, 261], "search": [16, 17, 158, 189], "flatten": [16, 17, 78, 153, 156, 179, 180, 181, 182, 254, 256], "descend": [18, 163, 249, 250], "stabl": [18, 163, 210], "sort": [18, 158, 189, 204, 236, 237, 249, 250], "ascend": [18, 158, 163, 204], "stabil": [18, 163], "maintain": [18, 163, 205, 260, 262], "rel": [18, 19, 55, 99, 135, 139, 156, 163, 204, 235, 242, 245, 252], "compar": [18, 163, 179, 180, 181, 182, 206, 211, 261, 263], "properti": [19, 53, 54, 55, 56, 57, 58, 115, 204, 207, 211, 216, 260], "transpos": [19, 40, 55, 132, 133, 174, 232, 236, 245, 249, 256], "instanc": [19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 55, 59, 89, 199, 202, 204, 211], "permut": [19, 55, 147], "revers": [19, 55, 65, 99], "origin": [19, 55, 65, 107, 140, 154, 156, 204, 208, 218, 220, 223, 224, 227, 228, 229, 231, 260, 261], "limit": [19, 98, 108, 116, 206, 256, 259], "matric": [19, 40, 55, 132, 133, 137, 176, 177, 232, 234, 235, 236, 237, 238, 240, 241, 242, 245, 246, 247, 248, 249, 250, 252, 256], "deviat": [19, 168, 206, 212, 260, 262], "et": [19, 249, 250], "al": 19, "intent": [19, 65], "found": [19, 207, 210, 262, 263], "problemat": [19, 63, 205, 208], "conflict": 19, "definit": [19, 86, 87, 161, 162, 172, 173, 204, 232, 261], "batch": [19, 254, 256], "cetera": [19, 249, 250], "permute_dim": [19, 189], "interfac": [19, 210, 256, 260, 262], "ab": [20, 107, 149, 189, 204, 240, 254], "augend": 21, "addend": 21, "self_i": [22, 28, 30, 31, 33, 36, 37, 38, 39, 41, 43, 44, 45, 46, 48, 50, 51, 52], "other_i": [22, 28, 30, 31, 33, 37, 38, 39, 41, 43, 45, 47, 48, 50, 51, 52], "bitwise_and": [22, 189], "api_vers": [23, 260], "object": [23, 24, 25, 26, 29, 34, 35, 53, 57, 59, 60, 89, 98, 102, 108, 110, 112, 113, 114, 189, 190, 199, 202, 204, 208, 210, 211, 214, 216, 255, 257, 261, 262], "2020": [23, 216, 257, 259, 260], "10": [23, 27, 124, 190, 260], "latest": [23, 210], "modul": [23, 202, 257, 261, 262, 263], "everi": [23, 103, 104, 246, 260], "top": [23, 202, 260, 262], "level": [23, 199, 205, 210, 211, 255, 256, 260, 261], "public": [23, 255, 261, 262], "well": [23, 205, 207, 210, 211, 246, 262, 263], "part": [23, 35, 176, 177, 199, 204, 210, 215, 257, 260, 262], "convert": [24, 25, 29, 34, 35, 60, 102, 199, 204, 205, 207, 210, 260, 262], "handl": [24, 26, 61, 64, 86, 88, 102, 124, 126, 149, 150, 159, 161, 165, 170, 172, 204, 205, 207, 208, 211, 212, 252, 260], "lazi": [24, 25, 29, 34, 35, 202, 204, 213, 262], "languag": [24, 25, 29, 34, 35, 208, 212, 214, 256, 260, 262], "therefor": [24, 25, 29, 34, 35, 202, 210, 211, 212, 214, 216, 257, 260, 262], "abl": [24, 25, 29, 34, 35, 102, 208, 210, 211, 260, 262], "kind": [24, 25, 26, 29, 34, 35, 47, 51, 77, 90, 98, 102, 104, 108, 113, 115, 116, 149, 199, 204, 214, 256, 259], "here": [24, 25, 26, 29, 34, 35, 190, 199, 208, 210, 215, 216, 262], "valueerror": [24, 25, 29, 34, 35, 60, 102, 154, 166, 262], "instead": [24, 25, 29, 34, 35, 63, 207, 210, 214, 261, 262], "2023": [24, 25, 26, 29, 34, 35, 59, 63, 77, 85, 88, 102, 107, 134, 135, 138, 139, 140, 150, 153, 158, 160, 170, 171, 174, 175, 179, 180, 181, 182, 183, 185, 218, 219, 220, 222, 223, 224, 227, 228, 230, 233, 252], "new": [25, 26, 77, 79, 85, 88, 95, 98, 102, 103, 104, 107, 108, 109, 116, 135, 139, 140, 145, 146, 151, 153, 154, 158, 160, 167, 171, 175, 183, 187, 188, 202, 204, 205, 208, 210, 211, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 257, 260, 261, 262], "stream": [26, 59, 211], "max_vers": [26, 204], "dl_devic": [26, 204], "enum": [26, 27], "pycapsul": 26, "export": [26, 102, 204, 210, 261], "from_dlpack": [26, 27, 189, 204, 210], "dlpack": [26, 27, 102, 204], "capsul": 26, "cuda": [26, 27, 205, 210, 262], "rocm": [26, 27, 205], "pointer": 26, "produc": [26, 236, 246, 249, 262], "instruct": 26, "safe": [26, 122], "insert": [26, 95, 158, 204], "wait": 26, "event": [26, 259], "larger": [26, 98, 156, 168, 184, 245], "below": [26, 101, 102, 176, 177, 192, 210, 211, 235, 252], "signal": [26, 222, 226, 262], "ownership": 26, "stai": 26, "On": 26, "cpu": [26, 27, 202, 205, 210, 211, 256, 260, 262], "queue": [26, 59, 211], "similar": [26, 152, 190, 205, 207, 209, 260, 261, 262], "mechan": [26, 102, 202, 204, 205, 213, 255, 260], "most": [26, 202, 211, 236, 256, 260, 262], "yet": [26, 216, 260], "sycl": 26, "want": [26, 90, 141, 205, 209, 210, 260, 262, 263], "cl": 26, "agre": 26, "assum": [26, 86, 102, 161, 172, 202, 207, 211, 255, 260], "legaci": 26, "per": [26, 153, 205, 210, 258], "thread": [26, 260, 262], "disallow": 26, "due": [26, 42, 57, 58, 122, 141, 153, 171, 206, 207, 256, 260], "ambigu": [26, 63, 101, 208], "construct": [26, 175, 202, 204, 205, 214, 260], "particular": [26, 190, 205, 207, 210, 211, 216, 256, 259, 260, 262, 263], "kdlcpu": 26, "safeti": [26, 59], "prefer": [26, 101, 202, 256, 262], "develop": [26, 206, 260, 261, 262, 263], "who": [26, 206, 260, 261], "think": 26, "cost": 26, "caller": 26, "major": [26, 143, 153, 190, 257], "minor": [26, 257], "verifi": [26, 260], "even": [26, 90, 141, 149, 157, 206, 207, 208, 219, 221, 225, 230, 246, 256, 260, 262], "pass": [26, 65, 202, 206, 211], "format": [26, 27, 257], "__dlpack_device__": [26, 102, 189, 210], "buffererror": [26, 102, 204, 210], "v2023": [26, 102], "mandat": [26, 102, 260], "offer": [26, 102, 205, 210, 211, 215, 260, 262], "referenc": [26, 260], "underli": [26, 67, 70, 72, 102, 206, 247, 256], "interpret": [26, 102, 107, 207, 208, 263], "enumer": 26, "made": [26, 102, 202, 207, 255, 257, 260, 262], "never": [26, 60, 102, 154, 210, 260], "deem": [26, 102], "cross": [26, 102, 204, 211, 256, 260], "movement": [26, 102], "request": [26, 102, 260], "reus": [26, 60, 102, 208, 260], "buffer": [26, 60, 102, 208, 210], "happen": [26, 102, 208, 211, 214, 256], "dlpack_flag_bitmask_is_copi": 26, "flag": 26, "understood": [26, 199], "interchang": [26, 102, 202, 205, 213, 260], "detail": [26, 32, 49, 102, 143, 153, 179, 180, 181, 182, 189, 190, 201, 202, 209, 211, 215, 256, 260, 262], "stride": [26, 102, 208, 210], "fail": [26, 102, 260], "reason": [26, 102, 152, 173, 208, 210, 212, 256, 260, 261], "incorrect": 26, "scheme": [26, 257], "semver": 26, "abi": [26, 205, 210], "break": [26, 212], "introduc": [26, 63, 101, 156, 216, 261], "goe": 26, "togeth": [26, 199, 210], "dlmanagedtensorvers": 26, "struct": 26, "later": 26, "introduct": 26, "becaus": [26, 199, 205, 208, 211, 212, 214, 216, 236, 249, 260, 262, 263], "keep": [26, 199, 205, 260], "march": 26, "2025": 26, "onward": 26, "ideal": [26, 256], "late": 26, "okai": 26, "we": [26, 207, 249, 260], "get": [26, 98, 108, 205, 208, 210, 211], "now": [26, 102, 214, 260, 262], "our_own_dlpack_vers": 26, "fill": [26, 103, 104, 145, 146, 187, 188, 204], "field": [26, 179, 180, 181, 207, 236, 246, 247, 249, 260], "understand": [26, 245, 260, 261], "u": [26, 232, 245, 249], "just": [26, 260, 262], "our": 26, "elif": 26, "fine": [26, 216, 260], "own": [26, 202, 208, 260], "re": [26, 156, 205, 208, 216, 262], "intern": [26, 262], "did": 26, "older": [26, 173, 210, 257, 260], "around": [26, 261], "y": [26, 65, 102, 207, 208, 262], "dlmanagedtensor": 26, "so": [26, 98, 102, 110, 190, 197, 210, 256, 259, 260, 263], "tell": 26, "old": 26, "exchang": [26, 102, 210], "And": [26, 190, 211], "try": [26, 216, 260], "succe": 26, "info": [26, 110], "dltensor_vers": 26, "need": [26, 190, 205, 206, 208, 210, 212, 216, 256, 257, 260, 261, 262, 263], "used_dltensor_vers": 26, "done": [26, 202], "typeerror": [26, 29, 34, 35, 260, 262], "read": [26, 204, 208], "dlpack_flag_bitmask_read_onli": 26, "ignor": [26, 137, 256], "respons": 26, "isn": [26, 205], "t": [26, 189, 205, 208, 211, 215, 216, 260, 262], "id": 27, "meant": 27, "device_typ": 27, "device_id": 27, "member": 27, "cpu_pin": 27, "opencl": 27, "vulkan": 27, "metal": 27, "vpi": 27, "cuda_manag": 27, "13": 27, "one_api": 27, "14": [27, 257], "truth": [28, 31, 33, 37, 39, 43, 89, 93, 105, 106, 120, 121, 144, 263], "outsid": [29, 77, 167, 183, 190, 199, 204, 210], "bound": [29, 77, 171, 190, 199, 204, 216], "divis": [30, 41, 71, 90, 101, 152, 159, 207], "floor_divid": [30, 189], "greater_equ": [31, 189], "kei": [32, 49, 111, 113, 115, 260], "slice": [32, 49, 183, 189, 208], "ellipsi": [32, 49, 190], "semant": [32, 40, 49, 101, 132, 152, 171, 189, 190, 202, 208, 210, 212, 214, 215, 256, 260, 261, 262], "pep": [34, 40, 101, 132, 210, 257], "357": 34, "overflowerror": 35, "bitwise_invert": [36, 189], "less_equ": [37, 189], "bitwise_left_shift": [38, 189], "matrix": [40, 55, 132, 133, 137, 174, 176, 177, 232, 234, 235, 236, 237, 238, 240, 241, 242, 245, 246, 247, 248, 249, 250, 252, 256, 260], "product": [40, 42, 58, 132, 141, 150, 174, 185, 204, 233, 244, 256], "built": [40, 132, 190, 199, 260], "465": [40, 132], "least": [40, 90, 115, 116, 132, 141, 143, 179, 180, 181, 182, 205, 206, 245], "m": [40, 55, 132, 133, 137, 153, 158, 174, 175, 176, 177, 190, 218, 220, 222, 223, 224, 226, 227, 228, 229, 231, 232, 234, 235, 236, 237, 238, 240, 241, 242, 244, 245, 246, 247, 248, 249, 250, 252], "remov": [40, 132, 166, 190, 207, 235, 252], "innermost": [40, 132, 133, 176, 177, 232, 234, 235, 236, 237, 238, 240, 241, 242, 245, 246, 247, 248, 249, 250, 252], "conjug": [40, 79, 132, 174, 185, 204, 232, 236, 249, 256], "transposit": [40, 132, 174], "desir": [40, 63, 75, 132, 140, 174, 206, 207, 210, 216], "prior": [40, 132, 174], "inner": [40, 132, 204, 236, 256], "stack": [40, 55, 132, 133, 176, 177, 189, 215, 232, 234, 235, 236, 237, 238, 240, 241, 242, 245, 246, 247, 248, 249, 250, 252, 256], "l": [40, 132, 232, 252], "remaind": [41, 189, 190], "multipli": [42, 150, 165, 189, 204, 206, 236, 249], "not_equ": [43, 189, 204], "negat": [44, 79, 142], "bitwise_or": [45, 189], "exponenti": [47, 94, 96, 127, 149, 207], "power": [47, 71, 94, 149, 207, 241, 262], "expon": [47, 149, 241], "versu": [47, 51, 63, 77, 90, 141, 149, 204], "bitwise_right_shift": [48, 189], "mix": [49, 122, 136, 155, 168, 184, 189, 204, 208, 211, 256, 260], "how": [49, 90, 141, 202, 206, 211, 215, 261, 262, 263], "minuend": 50, "subtrahend": 50, "subtract": [50, 189, 204, 206], "choos": [51, 57, 59, 90, 101, 122, 128, 129, 130, 131, 134, 135, 136, 138, 139, 141, 143, 153, 168, 179, 180, 181, 182, 184, 189, 190, 197, 207, 208, 209, 211, 214, 260, 262], "divid": [51, 101, 159, 189, 190, 204, 206], "bitwise_xor": [52, 189], "resid": [53, 59, 95, 140, 174, 190, 204, 210, 260], "fewer": 55, "unknown": [57, 58, 153], "graph": [57, 58, 143, 153, 179, 180, 181, 182, 190, 209, 214, 260], "static": [57, 209, 213], "resolv": [57, 60, 88, 95, 101, 103, 104, 150, 170, 220, 221, 224, 225, 228, 231, 252, 260], "know": [57, 143, 153, 179, 180, 181, 182, 202, 205, 206, 209, 260, 262], "content": [57, 209, 259], "warrant": 57, "custom": [57, 205, 212], "immut": 57, "retriev": [57, 190, 202, 217, 256, 262], "behav": [57, 207], "current": [59, 113, 115, 171, 197, 208, 211, 216, 260, 261, 262], "__dlpack__": [59, 102, 189, 204, 210], "caveat": 59, "would": [59, 60, 154, 158, 190, 204, 208, 214, 256, 260, 262], "locat": [59, 208], "explicit": [59, 60, 102, 171, 174, 211, 262], "enqueu": 59, "asynchron": 59, "explain": [59, 205], "clarifi": [59, 134, 138, 179, 180, 181, 204], "obj": 60, "nestedsequ": 60, "supportsbufferprotocol": 60, "possibli": [60, 215, 260], "nest": [60, 215], "sequenc": [60, 78, 122, 167, 174, 183, 190, 204, 220, 221, 224, 225, 228, 231, 251], "protocol": [60, 202, 210, 216, 260, 262], "turn": [60, 202, 255], "memoryview": 60, "preced": [60, 207, 210, 211], "mixtur": 60, "convers": [60, 122, 204, 205, 260], "obei": [60, 122], "permit": [60, 63, 122, 209, 259], "To": [60, 101, 190, 204, 206, 207, 216, 260, 261, 263], "array_api": [60, 260], "astyp": [60, 189, 204], "exce": [60, 103, 104, 122], "sine": [61, 62, 161, 162, 173], "1j": [61, 64, 86, 87, 94, 96, 107, 161, 162, 172], "asinh": [61, 189, 204, 206], "asin": [62, 189, 204, 206], "irrespect": [63, 207], "histor": [63, 173, 256], "discard": 63, "choic": [63, 168, 184, 202, 206, 207, 211, 212, 214, 215, 256, 257, 260, 262], "arbitrari": [63, 73, 137, 155, 206], "achiev": [63, 190, 206], "outcom": 63, "clariti": 63, "newli": [63, 211], "alloc": [63, 176, 177, 209, 211], "tangent": [64, 65, 66, 172, 173], "atanh": [64, 189, 204, 206], "quotient": [65, 90, 101, 190], "domain": [65, 204, 206, 207, 260, 262], "notat": 65, "denot": [65, 185, 245], "pair": [65, 101, 233, 249], "codomain": 65, "quadrant": 65, "chosen": [65, 186, 210], "angl": [65, 87, 107, 162, 173], "rai": 65, "role": 65, "coordin": [65, 123, 137, 172, 173, 215, 260], "tradit": 65, "atan": [66, 189, 204, 206], "bitwis": [67, 70, 72, 189], "flip": [68, 189], "shift": [69, 71, 156, 221, 225], "arithmet": [71, 90, 136, 141, 189, 199, 207, 260], "propag": [71, 102, 134, 136, 138, 168, 184, 206], "floor": [71, 101, 189], "anoth": [73, 75, 102, 190, 202, 204, 205, 207, 208, 210, 211, 214, 236, 249, 260, 262], "from_": 75, "smallest": [76, 98, 108, 240], "closest": [76, 100, 101, 157], "alreadi": [76, 100, 141, 157, 178, 210, 212, 257, 262], "min": [77, 98, 108, 176, 177, 185, 189, 204, 233, 240, 246, 249, 250, 254], "clamp": [77, 204], "min_i": 77, "max_i": 77, "join": [78, 167, 199], "befor": [78, 88, 150, 158, 170, 179, 180, 181, 182, 185, 204, 207, 233, 252, 260], "concaten": 78, "leav": [78, 140, 167, 190, 197, 204, 206, 208, 245], "famili": [78, 167], "intxx": [78, 167, 199], "floatxx": [78, 167, 199], "718281828459045": 80, "euler": 80, "constant": [80, 84, 189, 190, 204], "71828182845904523536028747135266249775724709369995": 80, "Not": 82, "alia": [83, 115, 190, 204, 239, 243, 251, 253], "141592653589793": 84, "1415926535897932384626433": 84, "compos": [85, 199, 204], "begin": [86, 159, 161, 172, 173, 190, 197, 247, 262], "align": [86, 161, 172, 173, 204, 206, 261], "sum_": [86, 185], "2n": [86, 123], "jx": [86, 161, 172], "cosh": [86, 173, 189, 204, 206], "period": [87, 162, 172, 173], "ci": [87, 94, 96, 162, 262], "v": [87, 94, 96, 158, 162, 213, 245, 249, 260], "co": [87, 94, 96, 162, 189, 204, 206], "sin": [87, 94, 96, 162, 189, 204, 206, 208, 216], "include_initi": 88, "cumul": [88, 204], "unless": [88, 141, 150, 170, 189, 252], "smaller": [88, 150, 156, 170, 252, 262], "latter": [88, 101, 150, 170, 190, 202, 207, 210, 252, 261], "help": [88, 150, 170, 205, 206, 215, 252], "prevent": [88, 150, 170, 252], "initi": [88, 208, 260], "ident": [88, 185, 207, 225, 237, 238, 241, 260], "success": [88, 150, 170, 252], "dividend": [90, 101, 152], "divisor": [90, 101, 152, 168, 184], "small": [90, 101, 141, 206, 242, 245, 247, 260, 262], "gener": [90, 122, 141, 152, 174, 202, 205, 207, 212, 256, 260, 261], "textbook": [90, 141], "formula": [90, 124, 126, 141], "ac": [90, 141, 207], "bd": [90, 141], "bc": [90, 141, 207], "riemann": [90, 141, 207], "sphere": [90, 141, 207], "infinit": [90, 141, 164, 206, 207], "usual": [90, 141, 260], "interest": [90, 141, 206], "unlik": [90, 141, 257, 260], "consist": [90, 101, 115, 116, 122, 141, 158, 174, 190, 197, 207, 211, 216, 227, 228, 229, 231, 236, 245, 256, 260], "uniniti": [91, 92], "deriv": [92, 104, 146, 188, 190, 212, 261], "natur": [94, 123, 124, 125, 126, 149, 247, 256], "logarithm": [94, 123, 124, 125, 126, 127, 149, 247, 256], "expand": [95, 190, 262], "close": [95, 96, 122, 125, 157, 190, 260, 262], "indexerror": [95, 190], "exp": [96, 127, 149, 189, 204, 206, 247], "accur": [96, 125, 206, 247], "fdlibm": [96, 125, 206], "n_row": 97, "n_col": 97, "ones": [97, 146, 175, 189, 204, 208, 212, 260], "diagon": [97, 176, 177, 236, 245, 246, 252, 256], "elsewher": [97, 186, 207], "row": [97, 143, 153, 190, 240, 246, 248, 249], "column": [97, 236, 240, 246, 248, 249, 260], "finfo_object": [98, 204], "machin": [98, 108, 242, 245, 260], "inform": [98, 108, 260, 261, 262, 263], "occupi": [98, 108], "ep": [98, 242, 245, 260], "next": [98, 260], "largest": [98, 108, 240, 249, 250], "smallest_norm": 98, "full": [98, 189, 204, 208, 246, 248, 249, 262], "preserv": [99, 158, 190, 204, 207, 211], "reorder": [99, 140], "greatest": [100, 101], "238": 101, "goal": [101, 205, 208, 256, 262], "disambigu": 101, "toward": [101, 156, 206, 256, 261], "former": [101, 190, 207, 261], "overload": [101, 256], "led": 101, "subtl": 101, "bug": [101, 262, 263], "expect": [101, 115, 173, 199, 204, 206, 207, 209, 210, 211, 212, 216, 260], "design": [101, 204, 206, 258, 260, 262, 263], "ill": [101, 256], "diverg": [101, 263], "strictli": 101, "relat": [101, 190, 207, 211, 215, 256, 260, 262], "surpris": [101, 207], "unexpect": [101, 207, 212, 260], "enough": [102, 202, 205, 216, 255, 257, 260], "materi": [102, 210], "attributeerror": [102, 210], "present": [102, 115, 208, 209, 211, 255, 256, 257, 260], "suggest": [102, 262], "correctli": [102, 206], "move": [102, 140, 204, 211, 262], "agnost": 102, "fashion": 102, "illustr": [102, 208, 216], "def": [102, 216, 260, 261, 262], "func": 102, "xp_x": 102, "__array_namespace__": [102, 189, 217, 256, 260], "xp_y": 102, "work": [102, 205, 208, 210, 216, 260, 262, 263], "xxxxx": 102, "address": [102, 204, 256, 260, 261, 262], "unsupport": [102, 204], "fill_valu": [103, 104], "squar": [107, 164, 189, 204, 207, 232, 234, 236, 237, 238, 241, 245, 247, 248, 256], "root": [107, 164, 204, 207, 237], "hypotenus": 107, "triangl": 107, "side": [107, 158, 190, 210], "naiv": 107, "correct": [107, 168, 184, 208], "iinfo_object": [108, 204], "inspect": [110, 189], "util": [110, 189, 192, 204, 257, 260, 261], "class": [110, 192, 216, 260, 261], "xp": [110, 217, 255, 256, 260], "capabl": [110, 189, 192, 204], "default_dtyp": [110, 189, 204], "dictionari": [111, 113, 115, 204], "fulli": [111, 211], "complianc": 111, "exclud": [111, 122, 190, 199], "demarc": [111, 209], "throughout": 111, "defaultdatatyp": 113, "concept": [113, 115, 190, 208, 260], "context": [113, 115, 207, 211, 261], "manag": [113, 115, 205, 211], "runtim": [114, 215, 216, 257, 260, 262], "creation": [114, 189, 202, 211, 260], "datatyp": 115, "decid": [115, 260], "belong": [115, 116, 208], "shorthand": [115, 116, 190], "canon": 115, "float16": 116, "bfloat16": [116, 260], "int128": 116, "short": [116, 207, 260, 261], "extend": [116, 190, 207, 260], "extens": [116, 258, 262], "num": 122, "endpoint": 122, "delta_": 122, "textrm": [122, 159, 247], "sampl": [122, 168, 184, 219, 225, 230, 261], "nonneg": [122, 174, 190], "concern": [122, 153, 171, 204, 211, 215, 260], "polar": 123, "r": [123, 175, 190, 232, 236, 237, 238, 246, 248, 249, 260, 262], "theta": 123, "continu": [123, 125, 149, 164, 207, 236, 249, 260], "account": [123, 125, 149, 164, 260], "log_": [124, 126], "log": [124, 125, 126, 127, 149, 189, 204, 206], "mxn": [133, 176, 177, 235, 240, 242, 245, 246, 252], "sentinel": [134, 138], "xy": 137, "grid": 137, "cartesian": 137, "ij": 137, "effect": [137, 168, 184, 211, 263], "ni": 137, "n3": 137, "nn": 137, "three": [137, 211], "p": [137, 237, 240, 254], "sourc": [140, 261, 263], "destin": 140, "uniqu": [140, 174, 179, 180, 181, 182, 204, 207, 220, 221, 224, 225, 228, 231, 236, 238, 246, 248, 249, 256], "state": [141, 189, 190, 260], "cdot": [141, 161, 165, 172, 185], "y_i": [142, 148], "build": [143, 153, 179, 180, 181, 182, 190, 202, 209, 215, 260], "jax": [143, 153, 179, 180, 181, 182, 190, 208, 209, 260, 261, 262], "dask": [143, 153, 179, 180, 181, 182, 190, 208, 209, 215, 260, 261, 262], "etc": [143, 153, 179, 180, 181, 182, 190, 209, 257], "find": [143, 153, 158, 179, 180, 181, 182, 190, 204, 209, 260, 261], "difficult": [143, 153, 179, 180, 181, 182, 190, 206, 209, 260], "omit": [143, 153, 179, 180, 181, 182, 190, 209, 210, 214], "section": [143, 153, 179, 180, 181, 182, 190, 204, 205, 209, 210, 211, 212, 216, 260, 262], "total": [143, 168, 184, 207], "style": [143, 153, 190], "odd": [149, 219, 225, 227, 228, 230], "treat": [149, 175], "carefulli": 149, "That": [152, 190, 202, 212, 216, 260], "primarili": 152, "basi": 153, "liter": [153, 158, 218, 220, 222, 223, 224, 226, 227, 228, 229, 231, 240, 246, 254], "repetit": [153, 175], "prod": [153, 189, 204, 220, 224, 228, 231], "caus": 153, "advis": [153, 173, 208, 256], "regard": [153, 171, 204, 212, 256, 262], "degrad": 153, "One": [154, 214, 260, 263], "arrays_and_dtyp": 155, "restor": 156, "counterpart": 157, "sorter": 158, "control": [158, 211, 214, 215], "land": 158, "exactli": [158, 172, 173], "edg": 158, "satisfi": [158, 175, 189, 190, 206, 207, 261], "condit": [158, 186, 214, 259], "what": [158, 202, 210, 212, 216, 256, 260, 261, 262, 263], "constitut": [158, 168, 184], "among": [158, 206, 207, 256], "argsort": [158, 189], "invok": [158, 261], "signum": 159, "whenev": [160, 262], "2j": 161, "sinh": [161, 173, 189, 204, 206], "indistinguish": [164, 190, 206], "degre": [168, 184, 237, 256], "freedom": [168, 184], "adjust": [168, 184, 260], "popul": [168, 184], "bessel": [168, 184, 205], "conceptu": 171, "mutat": 171, "check": [171, 190, 206, 232, 236, 237, 246, 248, 255, 262, 263], "select": [171, 190, 260], "analyt": [172, 173, 207], "pole": [172, 173], "tanh": [172, 189, 204, 206], "stem": [173, 236, 249], "patch": 173, "tensor": [174, 256, 260, 262], "contract": [174, 185, 256, 259], "outer": [174, 204], "dot": [174, 185, 256], "x1_ax": 174, "x2_ax": 174, "triangular": [176, 177, 232, 246], "closer": 178, "reconstruct": [179, 181], "distinct": [179, 180, 181, 182, 207, 256], "inverse_indic": [179, 181], "exact": [179, 181, 216], "aggreg": [179, 180], "namedtupl": [179, 180, 181, 236, 246, 247, 249, 256], "third": [179, 249], "fourth": 179, "split": [183, 204], "varianc": 184, "unbias": 184, "mathbf": 185, "overlin": [185, 245], "a_i": 185, "b_i": 185, "restrict": [185, 233, 256, 259], "yield": [186, 207], "signatur": [189, 202, 216, 260, 261], "subset": [189, 206, 261, 262], "categori": 189, "accuraci": [189, 213, 218, 220, 223, 224, 227, 228, 229, 231], "reflect": 189, "mt": 189, "__abs__": [189, 204], "__bool__": [189, 204, 214], "__complex__": [189, 204, 214], "__float__": [189, 204, 214], "__getitem__": [189, 190, 204], "__index__": [189, 204, 214], "__int__": [189, 204, 214], "to_devic": [189, 204, 211], "overview": 189, "algorithm": [189, 206, 247, 262], "inf": [189, 240, 254, 260], "newaxi": [189, 190, 204], "arang": [189, 261], "asarrai": [189, 204, 210, 262], "empty_lik": 189, "ey": [189, 204], "full_lik": [189, 204], "linspac": [189, 204], "meshgrid": [189, 204], "ones_lik": [189, 204], "tril": 189, "triu": 189, "zeros_lik": 189, "can_cast": 189, "finfo": [189, 204], "iinfo": [189, 204], "result_typ": 189, "acosh": [189, 204, 206], "atan2": [189, 206], "clip": [189, 190, 204], "copysign": [189, 204], "expm1": [189, 204, 206], "hypot": [189, 204], "isfinit": [189, 204], "isinf": [189, 204], "isnan": [189, 204], "log1p": [189, 204, 206], "log2": [189, 204, 206], "log10": [189, 204, 206], "logaddexp": 189, "logical_and": 189, "logical_not": 189, "logical_or": 189, "logical_xor": 189, "signbit": [189, 204], "tan": [189, 204, 206], "trunc": [189, 204], "syntax": [189, 208, 210, 212, 260], "__array_namespace_info__": [189, 192, 204], "default_devic": [189, 204], "linear": [189, 207, 248, 255], "algebra": [189, 207, 245, 255], "matrix_transpos": [189, 256], "tensordot": [189, 204, 256], "vecdot": [189, 204, 256], "manipul": 189, "broadcast_arrai": 189, "broadcast_to": 189, "concat": 189, "expand_dim": [189, 190], "moveaxi": [189, 204], "reshap": [189, 190], "roll": 189, "squeez": 189, "tile": [189, 204], "unstack": [189, 204], "argmax": 189, "argmin": 189, "searchsort": [189, 204], "unique_al": [189, 204], "unique_count": [189, 204], "unique_invers": [189, 204], "unique_valu": [189, 204], "statist": 189, "cumulative_sum": [189, 204], "__array_api_version__": [189, 201, 204, 257], "syntact": 190, "sugar": 190, "term": [190, 211, 256, 261], "colon": 190, "contrast": [190, 207, 214, 256], "combin": [190, 208, 215, 256], "basic": 190, "noth": 190, "perspect": 190, "item": [190, 208, 260], "2k": 190, "3k": 190, "q": [190, 236, 246], "obtain": [190, 259], "qk": 190, "being": [190, 210, 211, 256, 260, 263], "100": [190, 214, 257], "junk": 190, "consider": [190, 208, 256], "comma": 190, "separ": [190, 204, 210, 255], "exp1": 190, "exp2": 190, "expn": 190, "forth": 190, "decreas": [190, 256], "entri": [190, 220, 221, 224, 225, 228, 231, 260], "retain": 190, "invoc": 190, "manner": [190, 210, 212], "sympi": 190, "flat": 190, "attempt": [190, 206, 207, 208, 211, 212, 260, 262], "dynam": 190, "mask": [190, 260], "filter": 190, "s1": 190, "sm": 190, "s2": 190, "sn": 190, "prohibit": [190, 208], "replac": [190, 214, 245, 263], "iter": 190, "programmat": 192, "queri": 192, "reli": [197, 205, 207, 209, 216, 262], "them": [197, 205, 208, 212, 260, 262], "reproduc": [197, 206], "high": [199, 210, 211, 256, 260], "diagram": [199, 260], "lattic": 199, "particip": [199, 207], "matter": [199, 205, 207], "dash": 199, "undefin": [199, 256], "connect": [199, 259], "rather": [199, 202, 205, 211, 212, 215, 256, 260], "i2": 199, "i1": 199, "i4": 199, "i8": 199, "u1": 199, "u2": 199, "u4": 199, "u8": 199, "f8": 199, "c8": 199, "c16": 199, "regardless": 199, "subject": [199, 247, 259], "met": 199, "give": [199, 207, 210, 211], "No": [202, 257], "run": [202, 261, 262], "varieti": 202, "architectur": 202, "gpu": [202, 210, 211, 262], "distribut": [202, 206, 210, 211, 215, 259], "system": [202, 248, 260], "tpu": [202, 210], "emerg": [202, 210, 260], "instal": [202, 260, 263], "emploi": [202, 209, 211], "parallel": [202, 213, 260, 262], "jit": [202, 205, 260], "put": [202, 260, 262], "constraint": [202, 207, 258], "predict": 202, "itself": [202, 210, 214, 262], "motiv": 202, "importantli": 202, "awar": [202, 216, 262], "layer": [202, 215, 260, 262], "coupl": 202, "downstream": [202, 255, 260, 261], "import": [202, 205, 211, 214, 255, 256, 260, 262, 263], "structur": [202, 216, 260, 261], "interoper": [202, 210], "share": [202, 260], "though": [202, 216, 260, 262], "soft": 202, "arraylib_nam": 202, "constrain": [202, 206], "unwil": 202, "signific": [202, 206, 208, 260], "adopt": [202, 207, 210, 262], "primari": [202, 210], "write": [202, 208, 260, 262], "consequ": [202, 216, 260], "easi": [202, 255], "unambigu": [202, 208, 210, 261], "clear": [202, 208, 210, 260, 262], "significantli": 202, "detract": 202, "experi": [202, 257], "strict": [202, 208], "typic": [202, 208, 210, 212, 257, 260, 262, 263], "good": [202, 205, 208, 211, 216, 260], "anyth": [202, 260], "thin": 202, "conveni": 202, "plan": [203, 260], "previou": [204, 262], "gh": [204, 262], "613": 204, "687": 204, "eager": [204, 213, 260], "708": 204, "revis": [204, 207, 211], "702": 204, "relax": 204, "730": 204, "749": 204, "intrins": 204, "652": 204, "602": 204, "741": 204, "665": 204, "751": 204, "701": 204, "625": 204, "742": 204, "752": 204, "fft": [204, 217, 220, 222, 223, 224, 226, 227, 228, 229, 231], "720": 204, "746": 204, "backport": 204, "689": 204, "715": 204, "693": 204, "653": 204, "703": 204, "713": 204, "656": 204, "690": 204, "699": 204, "705": 204, "692": 204, "604": 204, "740": 204, "fftn": [204, 224], "hfft": 204, "ifft": [204, 218], "ifftn": [204, 220], "irfft": [204, 229, 230], "irfftn": [204, 231], "fftfreq": 204, "rfftfreq": 204, "linalg": [204, 255, 256], "trace": [204, 208, 256, 261], "fix": [204, 211, 260, 262], "clarif": 204, "674": 204, "736": 204, "typo": 204, "633": 204, "681": 204, "706": 204, "miss": [204, 260], "639": 204, "issu": [204, 205, 207, 208, 210, 211, 215, 260, 262], "qr": 204, "661": 204, "choleski": [204, 256], "677": 204, "svd": [204, 245], "619": 204, "666": [204, 261], "644": 204, "622": 204, "723": 204, "497": 204, "498": 204, "546": 204, "525": 204, "528": 204, "557": 204, "529": 204, "448": 204, "447": 204, "537": 204, "526": 204, "554": 204, "517": 204, "520": 204, "521": 204, "522": 204, "523": 204, "524": 204, "442": 204, "434": 204, "445": 204, "454": 204, "453": 204, "436": 204, "451": 204, "452": 204, "484": 204, "435": 204, "531": 204, "530": 204, "532": 204, "568": 204, "514": 204, "534": 204, "536": 204, "437": 204, "441": 204, "438": 204, "553": 204, "440": [204, 257], "556": 204, "457": 204, "456": 204, "552": 204, "461": 204, "538": 204, "459": 204, "458": 204, "558": 204, "540": 204, "512": 204, "470": 204, "417": 204, "502": 204, "443": 204, "559": 204, "det": [204, 237, 247], "542": 204, "eigh": [204, 256], "543": 204, "eigvalsh": [204, 256], "547": 204, "matrix_norm": 204, "565": 204, "matrix_pow": 204, "549": 204, "matrix_rank": 204, "563": 204, "560": 204, "pinv": 204, "564": 204, "548": 204, "slogdet": [204, 256], "567": 204, "solv": [204, 216, 245], "566": 204, "561": 204, "svdval": 204, "562": 204, "541": 204, "vector_norm": 204, "550": [204, 262], "418": 204, "491": 204, "513": 204, "variabl": [204, 215, 248, 263], "515": 204, "527": 204, "573": 204, "480": 204, "485": 204, "496": 204, "503": 204, "427": 204, "416": 204, "fast": 204, "fourier": [204, 218, 219, 220, 222, 223, 224, 226, 227, 228, 229, 230, 231, 255], "transform": [204, 218, 219, 220, 222, 223, 224, 226, 227, 228, 229, 230, 231, 255, 261], "189": 204, "rfft": [204, 227, 230], "rfftn": [204, 228], "irfttn": 204, "fftshift": [204, 225], "ifftshift": 204, "464": 204, "429": 204, "439": 204, "572": 204, "510": 204, "511": 204, "473": 204, "scope": [205, 214, 215, 258, 261], "mention": [205, 212, 262], "There": [205, 208, 210, 211, 216, 260, 262, 263], "direct": [205, 260, 261], "deal": [205, 215, 216, 257, 259], "assumpt": [205, 210, 257, 258, 260], "rest": [205, 260, 262], "ndarrai": [205, 210, 260, 262], "visual": 205, "often": [205, 207, 212, 256, 260, 261, 262], "difficulti": [205, 209], "relev": [205, 211, 216, 260], "certainti": 205, "inde": 205, "project": [205, 207, 210, 262], "statsmodel": 205, "scikit": [205, 215, 260, 261, 262], "bio": [205, 262], "qutip": 205, "strategi": [205, 211], "learn": [205, 215, 260, 261, 262], "submodul": [205, 255], "doesn": [205, 211, 260], "cupi": [205, 208, 260, 261, 262], "elementwisekernel": 205, "scipi": [205, 215, 260, 261], "astropi": [205, 262], "seem": [205, 210, 262], "almost": [205, 262], "inevit": 205, "someth": [205, 208, 260], "numba": [205, 210, 260, 262], "sens": [205, 214, 260, 262], "tend": [205, 208, 262], "reimplement": 205, "gamma": 205, "drop": [205, 216, 246, 249], "arraylib": 205, "cpython": 205, "backend": [205, 215, 260], "target": [205, 211], "better": [205, 262], "pypi": [205, 261, 262], "quit": [205, 260, 262], "readi": 205, "mainstream": 205, "todai": [205, 208, 256], "onc": [205, 257], "feasibl": [205, 260], "roundtiestoeven": 206, "ti": [206, 256, 260], "certain": [206, 207, 256], "boundari": 206, "reader": 206, "identifi": [206, 211, 261], "lack": 206, "phrase": [206, 212], "recogn": [206, 211], "seek": [206, 256, 261], "optim": [206, 208, 256, 262], "latitud": 206, "although": [206, 225, 247], "freeli": 206, "sun": 206, "microsystem": 206, "With": [206, 261, 262], "imposs": [206, 208, 209, 263], "suit": [206, 258, 260, 261], "span": 206, "report": 206, "averag": 206, "aid": [206, 263], "best": [206, 210, 256, 260], "effort": [206, 261], "theoret": 206, "sound": 206, "robust": 206, "bare": 206, "summat": [206, 256], "unfortun": 206, "impos": [206, 209], "rigor": 206, "sever": [206, 208, 257, 260], "curtail": 206, "unduli": 206, "topologi": 207, "continuum": 207, "onto": [207, 208], "surfac": [207, 260], "stereograph": 207, "coalesc": 207, "3j": 207, "4j": 207, "convei": 207, "niceti": 207, "translat": [207, 262], "neq": 207, "arriv": [207, 260], "opposit": 207, "subtleti": 207, "craft": 207, "intuit": 207, "julia": [207, 262], "minim": [207, 211], "imperfect": 207, "balanc": 207, "appear": [207, 257, 260, 263], "embrac": 207, "transcendent": 207, "wholli": 207, "analysi": [207, 208, 209, 260, 261, 262], "curv": [207, 260], "discontinu": [207, 262], "taken": [207, 260], "pm": 207, "whole": 207, "simpl": [207, 208, 257], "aris": [207, 256, 259, 260], "trigonometr": 207, "domin": 207, "a_1": 207, "ldot": 207, "a_n": 207, "reflex": 207, "leq": 207, "transit": 207, "antisymmetr": 207, "partial": 207, "establish": [207, 261], "six": 207, "lexicograph": 207, "principl": [207, 261], "situat": [207, 208, 210, 211, 212, 260, 262], "unit": [207, 219, 230], "despit": [207, 210], "admonit": [208, 209], "becom": [208, 210, 260, 262], "trigger": [208, 214], "confid": 208, "pytorch": [208, 211, 260, 261, 262], "mxnet": [208, 260, 261, 262], "save": 208, "faster": 208, "tensorflow": [208, 260, 261, 262], "fundament": [208, 260], "inplac": 208, "update_index": 208, "idx": 208, "solut": [208, 245, 248, 262], "hard": [208, 210, 211, 214, 260], "go": [208, 257], "down": 208, "rout": 208, "val": [208, 214], "veri": [208, 247, 262], "wide": [208, 210, 246, 249, 260], "slightli": 208, "heavili": [208, 262], "you": [208, 263], "_must_": 208, "abstract": [208, 256, 261], "donat": 208, "lapack": [208, 256], "_may_": 208, "overwrit": 208, "whatev": 208, "fastest": 208, "aren": [208, 260], "longer": [208, 256], "problem": [208, 216, 245, 261, 262], "upon": [209, 260], "ahead": 209, "burden": [209, 260], "omiss": 209, "nativ": 210, "layout": 210, "packag": [210, 216, 257, 260, 261, 262], "live": [210, 260], "figur": 210, "contigu": 210, "promin": [210, 260], "releas": [210, 257, 261], "candid": [210, 260], "__cuda_array_interface__": 210, "moment": 210, "tri": [210, 262], "growth": 210, "amd": 210, "undesir": 210, "pattern": [210, 211, 215, 261, 262], "widest": 210, "lot": 210, "3118": 210, "hardli": 210, "mostli": [210, 214, 215, 260], "dealt": [210, 216], "__array__": [210, 262], "attach": 210, "hold": [210, 256], "rfc": [210, 260], "http": [210, 257, 263], "dmlc": 210, "github": [210, 257, 259, 263], "io": 210, "page": [210, 262], "standalon": [210, 263], "outlin": [210, 260], "cover": [210, 260, 263], "usag": [210, 255, 260], "node": 210, "spars": [210, 260], "why": [210, 260], "complet": [210, 215, 246, 257, 260, 262], "scale": 211, "exert": 211, "placement": 211, "global": 211, "switchabl": 211, "transfer": 211, "granular": 211, "downsid": 211, "verbos": 211, "much": [211, 260, 263], "kept": 211, "instanti": 211, "physic": 211, "revisit": 211, "themselv": 211, "expos": [211, 256], "bewar": 211, "framework": [211, 260], "elabor": 211, "polici": 211, "highest": 211, "prioriti": 211, "topic": [211, 215, 258, 260, 262], "pin": 211, "tricki": 211, "sinc": 211, "emit": 212, "misbehav": 212, "forese": 212, "extent": 212, "builtin": 212, "author": [212, 259, 260, 261, 262], "worth": 212, "compli": 212, "aspect": [214, 263], "impact": [214, 260], "prescrib": 214, "show": 214, "up": [214, 246, 255, 262], "five": 214, "dunder": [214, 257], "serial": 214, "compute_someth": 214, "statement": 214, "do_something_els": 214, "flow": 214, "cond": 214, "won": 215, "further": 215, "exercis": 215, "environ": [215, 256, 260, 263], "bla": [215, 256], "openmp": 215, "n_job": [215, 262], "worker": [215, 262], "chunk": 215, "approach": [215, 260, 261], "auto": [215, 262], "thing": 215, "improv": [215, 260, 262], "fit": [215, 259, 260, 262], "becam": [216, 260], "progress": [216, 263], "superclass": 216, "_basearrai": 216, "subclass": [216, 260], "insid": [216, 255], "typevar": 216, "variat": [216, 261], "don": [216, 262], "said": 216, "subtyp": 216, "hasattr": [217, 255, 256, 260], "ortho": [218, 220, 222, 223, 224, 226, 227, 228, 229, 231], "forward": [218, 220, 222, 223, 224, 226, 227, 228, 229, 231, 260], "discret": [218, 219, 220, 222, 223, 224, 226, 227, 228, 229, 230, 231], "pad": [218, 220, 222, 223, 224, 226, 227, 228, 229, 231], "trim": [218, 220, 222, 223, 224, 226, 227, 228, 229, 231], "orthonorm": [218, 220, 222, 223, 224, 226, 227, 228, 229, 231, 246, 249], "frequenc": [219, 221, 230, 257, 261], "f": [219, 230], "window": [219, 230], "center": 221, "spectrum": 221, "swap": 221, "nyquist": [221, 230], "hermitian": [222, 226, 232, 236, 237], "symmetri": [222, 226], "decomposit": [232, 236, 245, 246, 249, 250, 256], "symmetr": [232, 236, 237], "mathbb": [232, 236, 237, 238, 246, 248, 249], "ll": 232, "h": [232, 236, 245, 249], "qquad": 232, "text": 232, "factor": [232, 249], "offset": [235, 252], "off": [235, 252], "eigenvalu": [236, 237, 256], "lambda": [236, 237], "orthogon": [236, 245, 246, 249, 256], "unitari": [236, 246, 249], "eigenvector": [236, 256], "softwar": [236, 249, 259, 260, 262], "fact": [236, 249], "phi": [236, 249], "eig": 236, "diag": [236, 249], "polynomi": [237, 260], "i_n": [237, 238], "eigval": 237, "xx": 238, "ord": [240, 254], "fro": 240, "nuc": 240, "frobeniu": 240, "nuclear": 240, "singular": [240, 242, 245, 249, 250], "induc": 240, "rtol": [242, 245], "toler": [242, 245], "largest_singular_valu": [242, 245], "epsilon": [242, 245], "moor": 245, "penros": 245, "pseudo": 245, "sigma": [245, 249], "reciproc": 245, "tall": [246, 249], "geq": 246, "necessarili": [246, 263], "linearli": [246, 248, 260], "logabsdet": 247, "again": 247, "equat": 248, "coeffici": 248, "ordin": 248, "full_matric": 249, "u_k": 249, "v_k": 249, "vh": 249, "adjoint": 249, "l1": 254, "manhattan": 254, "l2": 254, "euclidean": 254, "coher": 255, "extension_nam": 255, "regular": [255, 257, 260], "__getattr__": 255, "endeavor": 256, "strai": 256, "far": 256, "restraint": 256, "decis": [256, 260], "accid": 256, "especi": 256, "arisen": 256, "been": [256, 260], "process": [256, 257, 261], "afford": 256, "opportun": 256, "subsequ": [256, 261], "codifi": [256, 261], "theme": 256, "abil": 256, "decim": 256, "overli": 256, "compel": 256, "compris": 256, "prudent": 256, "lastli": 256, "polymorph": 256, "dedic": 256, "agnostic": 256, "eschew": 256, "parameter": 256, "bias": 256, "underpin": 256, "cater": 256, "low": 256, "verbatim": 256, "poor": 256, "uplo": 256, "dai": 256, "monopoli": 256, "prolifer": 256, "conserv": [256, 262], "conservat": 256, "delin": 256, "overlap": 256, "confus": [256, 260], "parsimoni": 256, "einsum": 256, "einstein": 256, "vdot": 256, "multi_dot": 256, "chain": 256, "exhibit": 256, "consolid": 256, "propos": [257, 261, 262], "com": [257, 263], "blob": 257, "master": 257, "process_docu": 257, "md": 257, "summari": [257, 261], "matur": 257, "reach": [257, 262], "final": 257, "world": 257, "highli": 257, "strong": 257, "updat": 257, "date": 257, "shall": [257, 259], "alpha": 257, "beta": 257, "rc": 257, "post": 257, "dev": 257, "bugfix": 257, "__version__": 257, "resembl": 257, "year": [257, 260], "evolut": [258, 260], "verif": [258, 260], "benchmark": 258, "changelog": 258, "licens": 258, "websit": 259, "repositori": [259, 261], "mit": 259, "copyright": 259, "2024": 259, "consortium": [259, 260], "contributor": 259, "permiss": 259, "herebi": 259, "grant": 259, "charg": 259, "person": 259, "file": [259, 261, 262, 263], "merg": [259, 260], "publish": [259, 261], "sublicens": 259, "sell": 259, "whom": 259, "furnish": 259, "notic": 259, "substanti": 259, "portion": 259, "THE": 259, "AS": 259, "warranti": 259, "OF": 259, "BUT": 259, "TO": 259, "merchant": 259, "FOR": 259, "noninfring": 259, "IN": 259, "NO": 259, "holder": 259, "BE": 259, "liabl": 259, "claim": 259, "damag": 259, "liabil": 259, "action": 259, "tort": 259, "WITH": 259, "wealth": 260, "scienc": 260, "deep": 260, "push": 260, "art": 260, "unintend": 260, "activ": 260, "creativ": 260, "fragment": 260, "multidimension": 260, "xarrai": [260, 261], "pick": 260, "bless": 260, "inconsist": 260, "obviou": 260, "mind": 260, "sure": 260, "rare": [260, 261], "unimport": 260, "scientif": 260, "mid": 260, "1990": 260, "earli": 260, "2000": 260, "numarrai": 260, "2005": 260, "superced": 260, "roughli": 260, "decad": 260, "past": 260, "mainli": 260, "rise": 260, "newer": 260, "inspir": [260, 262], "idea": 260, "seriou": 260, "grew": 260, "quickli": 260, "infeas": 260, "speed": 260, "innov": [260, 261], "group": 260, "assembl": 260, "draft": 260, "presenc": 260, "meta": 260, "concret": 260, "shown": 260, "core": [260, 262], "borrow": 260, "steep": 260, "switch": [260, 262], "accompani": 260, "actual": 260, "task": [260, 262], "schedul": 260, "characterist": 260, "grain": 260, "obstacl": 260, "cython": [260, 262], "datetim": 260, "void": 260, "uniformli": 260, "o": 260, "routin": 260, "bind": [260, 262], "cffi": 260, "ctype": 260, "ufunc": 260, "gufunc": 260, "extra": 260, "huge": 260, "amount": [260, 261, 262], "strength": 260, "advantag": 260, "foreign": 260, "indirect": 260, "program": 260, "pydata": 260, "weld": 260, "bohrium": 260, "arkouda": 260, "legat": 260, "grow": 260, "panda": [260, 261], "matplotlib": [260, 261], "networkx": 260, "xtensor": 260, "xnd": [260, 262], "stdlib": 260, "javascript": 260, "rust": 260, "rrai": 260, "nd4j": 260, "jvm": 260, "numsharp": 260, "dispatch": [260, 262], "pythran": 260, "transon": 260, "onnx": 260, "apach": 260, "tvm": 260, "mlir": 260, "taco": 260, "unumpi": [260, 262], "einop": 260, "arrow": 260, "consult": 260, "simplest": 260, "directli": [260, 262], "package_nam": 260, "uniform": 260, "hinder": 260, "inter": 260, "distinguish": 260, "is_array_api_obj": 260, "peopl": 260, "abc": 260, "inherit": 260, "isinst": 260, "prove": 260, "discov": 260, "assist": 260, "importlib": 260, "metadata": 260, "entry_point": 260, "dict": 260, "deprec": 260, "py3": 260, "supplant": 260, "load": 260, "path": 260, "haven": 260, "measur": 260, "isol": 260, "indispens": 260, "institut": 260, "electr": 260, "electron": 260, "engin": [260, 262], "york": 260, "scott": 260, "bradner": 260, "1997": 260, "word": 260, "2119": 260, "doi": 260, "17487": 260, "rfc2119": 260, "technic": 261, "vacuum": 261, "sometim": 261, "compet": 261, "friction": 261, "focu": 261, "accommod": [261, 262], "foo": 261, "bar": 261, "aspir": 261, "experiment": 261, "channel": 261, "resourc": [261, 262], "novel": 261, "thwart": 261, "reinvent": 261, "proverbi": 261, "wheel": 261, "foundat": 261, "articul": 261, "quantifi": 261, "analyz": 261, "ground": [261, 263], "empir": 261, "acquir": 261, "scrape": 261, "unifi": [261, 262], "extract": 261, "intersect": 261, "complement": 261, "suitabl": 261, "preval": 261, "eas": 261, "leverag": 261, "summar": 261, "tool": [261, 262], "explor": 261, "instrument": 261, "record": 261, "collect": 261, "json": 261, "human": 261, "docstr": 261, "_0": 261, "_arg": 261, "347": 261, "359": 261, "894": 261, "1173": 261, "skimag": 261, "174": 261, "sklearn": 261, "373": 261, "publicli": 261, "stori": 261, "broad": 261, "wider": 262, "wrap": 262, "familiar": 262, "survei": 262, "advanc": 262, "research": 262, "nsf": 262, "pain": 262, "brought": 262, "wish": 262, "multiprocess": 262, "shorten": 262, "fortran": 262, "easili": [262, 263], "pure": 262, "manual": 262, "Then": 262, "hoc": 262, "critic": 262, "corner": 262, "tractabl": 262, "spectral": 262, "periodogram": 262, "spectrogram": 262, "csd": 262, "welch": 262, "stft": 262, "istft": 262, "lombscargl": 262, "40": 262, "sai": [262, 263], "ineffici": 262, "x_np": 262, "asnumpi": 262, "freq": 262, "pxx": 262, "back": 262, "torch": 262, "littl": 262, "flexibl": 262, "py": [262, 263], "rearrang": 262, "_backend": 262, "glue": 262, "loc": 262, "some_func": 262, "get_backend": 262, "disappear": 262, "serv": 262, "50": 262, "tensorli": 262, "kera": 262, "eagerpi": 262, "notabl": 262, "suboptim": 262, "readili": 262, "cpyext": 262, "unsuccess": 262, "xla": 262, "vta": 262, "jump": 262, "hoop": 262, "attain": 262, "got": 262, "cfunc": 262, "np": 262, "assert_array_almost_equ": 262, "pyfunc": 262, "pyarray_cancastarrayto": 262, "assertequ": 262, "spec": 263, "clone": 263, "repo": 263, "pip": 263, "pytest": 263, "hypothesi": 263, "conda": 263, "array_api_tests_modul": 263, "edit": 263, "array_api_test": 263, "_array_modul": 263, "array_modul": 263, "command": 263, "asid": 263, "vendor": 263, "readm": 263}, "objects": {"array_api": [[8, 0, 1, "", "__array_api_version__"], [9, 1, 1, "", "abs"], [10, 1, 1, "", "acos"], [11, 1, 1, "", "acosh"], [12, 1, 1, "", "add"], [13, 1, 1, "", "all"], [14, 1, 1, "", "any"], [15, 1, 1, "", "arange"], [16, 1, 1, "", "argmax"], [17, 1, 1, "", "argmin"], [18, 1, 1, "", "argsort"], [60, 1, 1, "", "asarray"], [61, 1, 1, "", "asin"], [62, 1, 1, "", "asinh"], [63, 1, 1, "", "astype"], [64, 1, 1, "", "atan"], [65, 1, 1, "", "atan2"], [66, 1, 1, "", "atanh"], [67, 1, 1, "", "bitwise_and"], [68, 1, 1, "", "bitwise_invert"], [69, 1, 1, "", "bitwise_left_shift"], [70, 1, 1, "", "bitwise_or"], [71, 1, 1, "", "bitwise_right_shift"], [72, 1, 1, "", "bitwise_xor"], [73, 1, 1, "", "broadcast_arrays"], [74, 1, 1, "", "broadcast_to"], [75, 1, 1, "", "can_cast"], [76, 1, 1, "", "ceil"], [77, 1, 1, "", "clip"], [78, 1, 1, "", "concat"], [79, 1, 1, "", "conj"], [85, 1, 1, "", "copysign"], [86, 1, 1, "", "cos"], [87, 1, 1, "", "cosh"], [88, 1, 1, "", "cumulative_sum"], [90, 1, 1, "", "divide"], [91, 1, 1, "", "empty"], [92, 1, 1, "", "empty_like"], [93, 1, 1, "", "equal"], [94, 1, 1, "", "exp"], [95, 1, 1, "", "expand_dims"], [96, 1, 1, "", "expm1"], [97, 1, 1, "", "eye"], [98, 1, 1, "", "finfo"], [99, 1, 1, "", "flip"], [100, 1, 1, "", "floor"], [101, 1, 1, "", "floor_divide"], [102, 1, 1, "", "from_dlpack"], [103, 1, 1, "", "full"], [104, 1, 1, "", "full_like"], [105, 1, 1, "", "greater"], [106, 1, 1, "", "greater_equal"], [107, 1, 1, "", "hypot"], [108, 1, 1, "", "iinfo"], [109, 1, 1, "", "imag"], [116, 1, 1, "", "isdtype"], [117, 1, 1, "", "isfinite"], [118, 1, 1, "", "isinf"], [119, 1, 1, "", "isnan"], [120, 1, 1, "", "less"], [121, 1, 1, "", "less_equal"], [122, 1, 1, "", "linspace"], [123, 1, 1, "", "log"], [124, 1, 1, "", "log10"], [125, 1, 1, "", "log1p"], [126, 1, 1, "", "log2"], [127, 1, 1, "", "logaddexp"], [128, 1, 1, "", "logical_and"], [129, 1, 1, "", "logical_not"], [130, 1, 1, "", "logical_or"], [131, 1, 1, "", "logical_xor"], [132, 1, 1, "", "matmul"], [133, 1, 1, "", "matrix_transpose"], [134, 1, 1, "", "max"], [135, 1, 1, "", "maximum"], [136, 1, 1, "", "mean"], [137, 1, 1, "", "meshgrid"], [138, 1, 1, "", "min"], [139, 1, 1, "", "minimum"], [140, 1, 1, "", "moveaxis"], [141, 1, 1, "", "multiply"], [142, 1, 1, "", "negative"], [143, 1, 1, "", "nonzero"], [144, 1, 1, "", "not_equal"], [145, 1, 1, "", "ones"], [146, 1, 1, "", "ones_like"], [147, 1, 1, "", "permute_dims"], [148, 1, 1, "", "positive"], [149, 1, 1, "", "pow"], [150, 1, 1, "", "prod"], [151, 1, 1, "", "real"], [152, 1, 1, "", "remainder"], [153, 1, 1, "", "repeat"], [154, 1, 1, "", "reshape"], [155, 1, 1, "", "result_type"], [156, 1, 1, "", "roll"], [157, 1, 1, "", "round"], [158, 1, 1, "", "searchsorted"], [159, 1, 1, "", "sign"], [160, 1, 1, "", "signbit"], [161, 1, 1, "", "sin"], [162, 1, 1, "", "sinh"], [163, 1, 1, "", "sort"], [164, 1, 1, "", "sqrt"], [165, 1, 1, "", "square"], [166, 1, 1, "", "squeeze"], [167, 1, 1, "", "stack"], [168, 1, 1, "", "std"], [169, 1, 1, "", "subtract"], [170, 1, 1, "", "sum"], [171, 1, 1, "", "take"], [172, 1, 1, "", "tan"], [173, 1, 1, "", "tanh"], [174, 1, 1, "", "tensordot"], [175, 1, 1, "", "tile"], [176, 1, 1, "", "tril"], [177, 1, 1, "", "triu"], [178, 1, 1, "", "trunc"], [179, 1, 1, "", "unique_all"], [180, 1, 1, "", "unique_counts"], [181, 1, 1, "", "unique_inverse"], [182, 1, 1, "", "unique_values"], [183, 1, 1, "", "unstack"], [184, 1, 1, "", "var"], [185, 1, 1, "", "vecdot"], [186, 1, 1, "", "where"], [187, 1, 1, "", "zeros"], [188, 1, 1, "", "zeros_like"]], "array_api.array": [[19, 2, 1, "", "T"], [20, 3, 1, "", "__abs__"], [21, 3, 1, "", "__add__"], [22, 3, 1, "", "__and__"], [23, 3, 1, "", "__array_namespace__"], [24, 3, 1, "", "__bool__"], [25, 3, 1, "", "__complex__"], [26, 3, 1, "", "__dlpack__"], [27, 3, 1, "", "__dlpack_device__"], [28, 3, 1, "", "__eq__"], [29, 3, 1, "", "__float__"], [30, 3, 1, "", "__floordiv__"], [31, 3, 1, "", "__ge__"], [32, 3, 1, "", "__getitem__"], [33, 3, 1, "", "__gt__"], [34, 3, 1, "", "__index__"], [35, 3, 1, "", "__int__"], [36, 3, 1, "", "__invert__"], [37, 3, 1, "", "__le__"], [38, 3, 1, "", "__lshift__"], [39, 3, 1, "", "__lt__"], [40, 3, 1, "", "__matmul__"], [41, 3, 1, "", "__mod__"], [42, 3, 1, "", "__mul__"], [43, 3, 1, "", "__ne__"], [44, 3, 1, "", "__neg__"], [45, 3, 1, "", "__or__"], [46, 3, 1, "", "__pos__"], [47, 3, 1, "", "__pow__"], [48, 3, 1, "", "__rshift__"], [49, 3, 1, "", "__setitem__"], [50, 3, 1, "", "__sub__"], [51, 3, 1, "", "__truediv__"], [52, 3, 1, "", "__xor__"], [53, 2, 1, "", "device"], [54, 2, 1, "", "dtype"], [55, 2, 1, "", "mT"], [56, 2, 1, "", "ndim"], [57, 2, 1, "", "shape"], [58, 2, 1, "", "size"], [59, 3, 1, "", "to_device"]], "array_api.constants": [[80, 0, 1, "", "e"], [81, 0, 1, "", "inf"], [82, 0, 1, "", "nan"], [83, 0, 1, "", "newaxis"], [84, 0, 1, "", "pi"]], "array_api.data_types": [[89, 1, 1, "", "__eq__"]], "array_api.fft": [[218, 1, 1, "", "fft"], [219, 1, 1, "", "fftfreq"], [220, 1, 1, "", "fftn"], [221, 1, 1, "", "fftshift"], [222, 1, 1, "", "hfft"], [223, 1, 1, "", "ifft"], [224, 1, 1, "", "ifftn"], [225, 1, 1, "", "ifftshift"], [226, 1, 1, "", "ihfft"], [227, 1, 1, "", "irfft"], [228, 1, 1, "", "irfftn"], [229, 1, 1, "", "rfft"], [230, 1, 1, "", "rfftfreq"], [231, 1, 1, "", "rfftn"]], "array_api.info": [[110, 1, 1, "", "__array_namespace_info__"], [111, 1, 1, "", "capabilities"], [112, 1, 1, "", "default_device"], [113, 1, 1, "", "default_dtypes"], [114, 1, 1, "", "devices"], [115, 1, 1, "", "dtypes"]], "array_api.linalg": [[232, 1, 1, "", "cholesky"], [233, 1, 1, "", "cross"], [234, 1, 1, "", "det"], [235, 1, 1, "", "diagonal"], [236, 1, 1, "", "eigh"], [237, 1, 1, "", "eigvalsh"], [238, 1, 1, "", "inv"], [239, 1, 1, "", "matmul"], [240, 1, 1, "", "matrix_norm"], [241, 1, 1, "", "matrix_power"], [242, 1, 1, "", "matrix_rank"], [243, 1, 1, "", "matrix_transpose"], [244, 1, 1, "", "outer"], [245, 1, 1, "", "pinv"], [246, 1, 1, "", "qr"], [247, 1, 1, "", "slogdet"], [248, 1, 1, "", "solve"], [249, 1, 1, "", "svd"], [250, 1, 1, "", "svdvals"], [251, 1, 1, "", "tensordot"], [252, 1, 1, "", "trace"], [253, 1, 1, "", "vecdot"], [254, 1, 1, "", "vector_norm"]]}, "objtypes": {"0": "py:data", "1": "py:function", "2": "py:property", "3": "py:method"}, "objnames": {"0": ["py", "data", "Python data"], "1": ["py", "function", "Python function"], "2": ["py", "property", "Python property"], "3": ["py", "method", "Python method"]}, "titleterms": {"arrai": [0, 190, 199, 258, 260, 262], "object": [0, 2, 3, 4, 5, 6, 191, 192, 193, 194, 195, 196, 197, 198, 200, 201, 217, 256, 260], "oper": [0, 206], "arithmet": [0, 206], "bitwis": 0, "comparison": 0, "In": [0, 1, 260], "place": [0, 1], "reflect": 0, "attribut": 0, "method": [0, 7], "broadcast": 1, "overview": 1, "algorithm": 1, "exampl": [1, 205], "semant": [1, 211], "constant": 2, "api": [2, 3, 4, 6, 189, 191, 192, 193, 194, 195, 196, 197, 198, 200, 201, 204, 205, 217, 256, 257, 258, 260, 262], "creation": 3, "function": [3, 4, 6, 7, 191, 193, 194, 195, 196, 197, 198, 200, 206, 217], "data": [4, 5, 143, 153, 179, 180, 181, 182, 190, 204, 209, 210, 261], "type": [4, 5, 199, 204, 216, 262], "us": [5, 202, 205, 210, 261, 262], "default": 5, "categori": 5, "element": 6, "wise": 6, "signatur": 7, "__array_api_version__": 8, "ab": 9, "aco": 10, "acosh": 11, "add": [12, 262], "all": 13, "ani": 14, "arang": 15, "argmax": 16, "argmin": 17, "argsort": 18, "t": 19, "__abs__": 20, "__add__": 21, "__and__": 22, "__array_namespace__": 23, "__bool__": 24, "__complex__": 25, "__dlpack__": 26, "tip": [26, 60], "__dlpack_device__": 27, "__eq__": [28, 89], "__float__": 29, "__floordiv__": 30, "__ge__": 31, "__getitem__": 32, "__gt__": 33, "__index__": 34, "__int__": 35, "__invert__": 36, "__le__": 37, "__lshift__": 38, "__lt__": 39, "__matmul__": 40, "__mod__": 41, "__mul__": 42, "__ne__": 43, "__neg__": 44, "__or__": 45, "__pos__": 46, "__pow__": 47, "__rshift__": 48, "__setitem__": 49, "__sub__": 50, "__truediv__": 51, "__xor__": 52, "devic": [53, 114, 205, 211], "dtype": [54, 115], "mt": 55, "ndim": 56, "shape": [57, 143, 153, 179, 180, 181, 182, 190, 209], "size": 58, "to_devic": 59, "asarrai": 60, "note": [60, 102, 122, 199], "asin": 61, "asinh": 62, "astyp": 63, "atan": 64, "atan2": 65, "atanh": 66, "bitwise_and": 67, "bitwise_invert": 68, "bitwise_left_shift": 69, "bitwise_or": 70, "bitwise_right_shift": 71, "bitwise_xor": 72, "broadcast_arrai": 73, "broadcast_to": 74, "can_cast": 75, "ceil": 76, "clip": 77, "concat": 78, "conj": 79, "e": 80, "inf": 81, "nan": 82, "newaxi": 83, "pi": 84, "copysign": 85, "co": 86, "cosh": 87, "cumulative_sum": 88, "divid": 90, "empti": 91, "empty_lik": 92, "equal": 93, "exp": 94, "expand_dim": 95, "expm1": 96, "ey": 97, "finfo": 98, "flip": 99, "floor": 100, "floor_divid": 101, "from_dlpack": 102, "full": 103, "full_lik": 104, "greater": 105, "greater_equ": 106, "hypot": 107, "iinfo": 108, "imag": 109, "__array_namespace_info__": 110, "capabl": 111, "default_devic": 112, "default_dtyp": 113, "isdtyp": 116, "isfinit": 117, "isinf": 118, "isnan": 119, "less": 120, "less_equ": 121, "linspac": 122, "log": 123, "log10": 124, "log1p": 125, "log2": 126, "logaddexp": 127, "logical_and": 128, "logical_not": 129, "logical_or": 130, "logical_xor": 131, "matmul": [132, 239], "matrix_transpos": [133, 243], "max": 134, "maximum": 135, "mean": 136, "meshgrid": 137, "min": 138, "minimum": 139, "moveaxi": 140, "multipli": 141, "neg": 142, "nonzero": 143, "depend": [143, 153, 179, 180, 181, 182, 190, 202, 209], "output": [143, 153, 179, 180, 181, 182, 190, 209], "not_equ": 144, "ones": 145, "ones_lik": 146, "permute_dim": 147, "posit": 148, "pow": 149, "prod": 150, "real": 151, "remaind": 152, "repeat": 153, "reshap": 154, "result_typ": 155, "roll": 156, "round": 157, "searchsort": 158, "sign": [159, 199], "signbit": 160, "sin": 161, "sinh": 162, "sort": [163, 197], "sqrt": 164, "squar": 165, "squeez": 166, "stack": 167, "std": 168, "subtract": 169, "sum": 170, "take": 171, "tan": 172, "tanh": 173, "tensordot": [174, 251], "tile": 175, "tril": 176, "triu": 177, "trunc": 178, "unique_al": 179, "unique_count": 180, "unique_invers": 181, "unique_valu": 182, "unstack": 183, "var": 184, "vecdot": [185, 253], "where": 186, "zero": 187, "zeros_lik": 188, "specif": 189, "index": [190, 191], "singl": 190, "axi": 190, "slice": 190, "syntax": [190, 211], "multi": 190, "boolean": 190, "return": 190, "valu": [190, 207], "inspect": [192, 204], "linear": [193, 206, 256], "algebra": [193, 206, 256], "manipul": 194, "search": 195, "set": 196, "statist": [198, 206], "promot": [199, 207], "rule": 199, "integ": 199, "tabl": 199, "unsign": 199, "mix": 199, "float": 199, "point": 199, "python": [199, 205, 258, 262], "scalar": 199, "util": 200, "version": [201, 204, 257], "assumpt": 202, "hardwar": [202, 262], "softwar": 202, "environ": 202, "backward": [202, 257], "compat": [202, 257], "product": 202, "code": [202, 205], "interact": 202, "benchmark": 203, "suit": [203, 263], "changelog": 204, "per": 204, "standard": [204, 205, 257, 258, 260], "v2023": 204, "12": 204, "updat": 204, "norm": [204, 260], "extens": [204, 205, 217, 255, 256, 257], "addit": 204, "break": 204, "chang": 204, "errata": 204, "v2022": 204, "complex": [204, 207], "number": [204, 205, 207], "support": [204, 205, 210, 211, 262], "c": 205, "situat": 205, "cython": 205, "usag": [205, 211, 217, 256, 258, 261], "1": [205, 262], "packag": 205, "i": 205, "mostli": 205, "pure": 205, "limit": 205, "2": [205, 262], "contain": 205, "lot": 205, "3": [205, 262], "numpi": 205, "directli": 205, "other": [205, 258], "longer": 205, "term": [205, 260], "approach": 205, "further": 205, "hpy": 205, "accuraci": 206, "mathemat": 206, "The": 207, "plane": 207, "branch": 207, "cut": 207, "order": 207, "base": 207, "copi": 208, "view": 208, "behaviour": 208, "mutabl": 208, "mutat": 208, "interchang": 210, "mechan": 210, "dlpack": 210, "an": [210, 260], "memori": 210, "tensor": 210, "structur": 210, "non": [210, 260], "case": [210, 262], "intend": 211, "assign": 211, "out": [211, 260], "scope": [211, 257, 260], "except": 212, "design": [213, 256, 261], "topic": 213, "constraint": 213, "lazi": 214, "v": 214, "eager": 214, "execut": 214, "parallel": 215, "static": 216, "fourier": 217, "transform": 217, "name": [217, 256], "fft": 218, "fftfreq": 219, "fftn": 220, "fftshift": 221, "hfft": 222, "ifft": 223, "ifftn": 224, "ifftshift": 225, "ihfft": 226, "irfft": 227, "irfftn": 228, "rfft": 229, "rfftfreq": 230, "rfftn": 231, "choleski": 232, "cross": 233, "det": 234, "diagon": 235, "eigh": 236, "eigvalsh": 237, "inv": 238, "matrix_norm": 240, "matrix_pow": 241, "matrix_rank": 242, "outer": 244, "pinv": 245, "qr": 246, "slogdet": 247, "solv": 248, "svd": 249, "svdval": 250, "trace": 252, "vector_norm": 254, "modul": 255, "principl": 256, "futur": 257, "evolut": 257, "content": 258, "context": 258, "methodologi": 258, "licens": 259, "purpos": 260, "introduct": [260, 261], "thi": 260, "histori": 260, "includ": 260, "goal": 260, "implic": 260, "stakehold": 260, "how": 260, "read": 260, "document": 260, "adopt": 260, "check": 260, "complianc": 260, "discover": 260, "conform": [260, 263], "implement": 260, "option": 260, "featur": 260, "definit": 260, "refer": 260, "decis": 261, "make": [261, 262], "concret": 262, "acceler": 262, "distribut": 262, "scipi": 262, "simplifi": 262, "einop": 262, "remov": 262, "backend": 262, "system": 262, "ad": 262, "xtensor": 262, "4": 262, "jit": 262, "compil": 262, "comput": 262, "easier": 262, "more": 262, "robust": 262, "verif": 263, "test": 263, "measur": 263, "run": 263}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.todo": 2, "sphinx": 60}, "alltitles": {"Array object": [[0, "array-object"]], "Operators": [[0, "operators"]], "Arithmetic Operators": [[0, "arithmetic-operators"], [0, "id26"], [0, "id29"]], "Array Operators": [[0, "array-operators"], [0, "id27"], [0, "id30"]], "Bitwise Operators": [[0, "bitwise-operators"], [0, "id28"], [0, "id31"]], "Comparison Operators": [[0, "comparison-operators"]], "In-place Operators": [[0, "in-place-operators"]], "Reflected Operators": [[0, "reflected-operators"]], "Attributes": [[0, "attributes"]], "Methods": [[0, "methods"]], "Broadcasting": [[1, "broadcasting"]], "Overview": [[1, "overview"]], "Algorithm": [[1, "algorithm"]], "Examples": [[1, "examples"]], "In-place Semantics": [[1, "in-place-semantics"]], "Constants": [[2, "constants"]], "Objects in API": [[2, "objects-in-api"], [3, "objects-in-api"], [4, "objects-in-api"], [6, "objects-in-api"], [191, "objects-in-api"], [192, "objects-in-api"], [193, "objects-in-api"], [194, "objects-in-api"], [195, "objects-in-api"], [196, "objects-in-api"], [197, "objects-in-api"], [198, "objects-in-api"], [200, "objects-in-api"], [201, "objects-in-api"], [217, "objects-in-api"], [256, "objects-in-api"]], "Creation Functions": [[3, "creation-functions"]], "Data Type Functions": [[4, "data-type-functions"]], "Data Types": [[5, "data-types"], [204, "data-types"]], "Use of data type objects": [[5, "use-of-data-type-objects"]], "Default Data Types": [[5, "default-data-types"]], "Data Type Categories": [[5, "data-type-categories"]], "Element-wise Functions": [[6, "element-wise-functions"]], "Function and method signatures": [[7, "function-and-method-signatures"]], "__array_api_version__": [[8, "array-api-version"]], "abs": [[9, "abs"]], "acos": [[10, "acos"]], "acosh": [[11, "acosh"]], "add": [[12, "add"]], "all": [[13, "all"]], "any": [[14, "any"]], "arange": [[15, "arange"]], "argmax": [[16, "argmax"]], "argmin": [[17, "argmin"]], "argsort": [[18, "argsort"]], "T": [[19, "t"]], "__abs__": [[20, "abs"]], "__add__": [[21, "add"]], "__and__": [[22, "and"]], "__array_namespace__": [[23, "array-namespace"]], "__bool__": [[24, "bool"]], "__complex__": [[25, "complex"]], "__dlpack__": [[26, "dlpack"]], "Tip": [[26, null], [60, null]], "__dlpack_device__": [[27, "dlpack-device"]], "__eq__": [[28, "eq"], [89, "eq"]], "__float__": [[29, "float"]], "__floordiv__": [[30, "floordiv"]], "__ge__": [[31, "ge"]], "__getitem__": [[32, "getitem"]], "__gt__": [[33, "gt"]], "__index__": [[34, "index"]], "__int__": [[35, "int"]], "__invert__": [[36, "invert"]], "__le__": [[37, "le"]], "__lshift__": [[38, "lshift"]], "__lt__": [[39, "lt"]], "__matmul__": [[40, "matmul"]], "__mod__": [[41, "mod"]], "__mul__": [[42, "mul"]], "__ne__": [[43, "ne"]], "__neg__": [[44, "neg"]], "__or__": [[45, "or"]], "__pos__": [[46, "pos"]], "__pow__": [[47, "pow"]], "__rshift__": [[48, "rshift"]], "__setitem__": [[49, "setitem"]], "__sub__": [[50, "sub"]], "__truediv__": [[51, "truediv"]], "__xor__": [[52, "xor"]], "device": [[53, "device"]], "dtype": [[54, "dtype"]], "mT": [[55, "mt"]], "ndim": [[56, "ndim"]], "shape": [[57, "shape"]], "size": [[58, "size"]], "to_device": [[59, "to-device"]], "asarray": [[60, "asarray"]], "Note": [[60, null], [102, null], [122, null]], "asin": [[61, "asin"]], "asinh": [[62, "asinh"]], "astype": [[63, "astype"]], "atan": [[64, "atan"]], "atan2": [[65, "atan2"]], "atanh": [[66, "atanh"]], "bitwise_and": [[67, "bitwise-and"]], "bitwise_invert": [[68, "bitwise-invert"]], "bitwise_left_shift": [[69, "bitwise-left-shift"]], "bitwise_or": [[70, "bitwise-or"]], "bitwise_right_shift": [[71, "bitwise-right-shift"]], "bitwise_xor": [[72, "bitwise-xor"]], "broadcast_arrays": [[73, "broadcast-arrays"]], "broadcast_to": [[74, "broadcast-to"]], "can_cast": [[75, "can-cast"]], "ceil": [[76, "ceil"]], "clip": [[77, "clip"]], "concat": [[78, "concat"]], "conj": [[79, "conj"]], "e": [[80, "e"]], "inf": [[81, "inf"]], "nan": [[82, "nan"]], "newaxis": [[83, "newaxis"]], "pi": [[84, "pi"]], "copysign": [[85, "copysign"]], "cos": [[86, "cos"]], "cosh": [[87, "cosh"]], "cumulative_sum": [[88, "cumulative-sum"]], "divide": [[90, "divide"]], "empty": [[91, "empty"]], "empty_like": [[92, "empty-like"]], "equal": [[93, "equal"]], "exp": [[94, "exp"]], "expand_dims": [[95, "expand-dims"]], "expm1": [[96, "expm1"]], "eye": [[97, "eye"]], "finfo": [[98, "finfo"]], "flip": [[99, "flip"]], "floor": [[100, "floor"]], "floor_divide": [[101, "floor-divide"]], "from_dlpack": [[102, "from-dlpack"]], "full": [[103, "full"]], "full_like": [[104, "full-like"]], "greater": [[105, "greater"]], "greater_equal": [[106, "greater-equal"]], "hypot": [[107, "hypot"]], "iinfo": [[108, "iinfo"]], "imag": [[109, "imag"]], "__array_namespace_info__": [[110, "array-namespace-info"]], "capabilities": [[111, "capabilities"]], "default_device": [[112, "default-device"]], "default_dtypes": [[113, "default-dtypes"]], "devices": [[114, "devices"]], "dtypes": [[115, "dtypes"]], "isdtype": [[116, "isdtype"]], "isfinite": [[117, "isfinite"]], "isinf": [[118, "isinf"]], "isnan": [[119, "isnan"]], "less": [[120, "less"]], "less_equal": [[121, "less-equal"]], "linspace": [[122, "linspace"]], "log": [[123, "log"]], "log10": [[124, "log10"]], "log1p": [[125, "log1p"]], "log2": [[126, "log2"]], "logaddexp": [[127, "logaddexp"]], "logical_and": [[128, "logical-and"]], "logical_not": [[129, "logical-not"]], "logical_or": [[130, "logical-or"]], "logical_xor": [[131, "logical-xor"]], "matmul": [[132, "matmul"], [239, "matmul"]], "matrix_transpose": [[133, "matrix-transpose"], [243, "matrix-transpose"]], "max": [[134, "max"]], "maximum": [[135, "maximum"]], "mean": [[136, "mean"]], "meshgrid": [[137, "meshgrid"]], "min": [[138, "min"]], "minimum": [[139, "minimum"]], "moveaxis": [[140, "moveaxis"]], "multiply": [[141, "multiply"]], "negative": [[142, "negative"]], "nonzero": [[143, "nonzero"]], "Data-dependent output shape": [[143, null], [153, null], [179, null], [180, null], [181, null], [182, null], [190, null], [209, null]], "not_equal": [[144, "not-equal"]], "ones": [[145, "ones"]], "ones_like": [[146, "ones-like"]], "permute_dims": [[147, "permute-dims"]], "positive": [[148, "positive"]], "pow": [[149, "pow"]], "prod": [[150, "prod"]], "real": [[151, "real"]], "remainder": [[152, "remainder"]], "repeat": [[153, "repeat"]], "reshape": [[154, "reshape"]], "result_type": [[155, "result-type"]], "roll": [[156, "roll"]], "round": [[157, "round"]], "searchsorted": [[158, "searchsorted"]], "sign": [[159, "sign"]], "signbit": [[160, "signbit"]], "sin": [[161, "sin"]], "sinh": [[162, "sinh"]], "sort": [[163, "sort"]], "sqrt": [[164, "sqrt"]], "square": [[165, "square"]], "squeeze": [[166, "squeeze"]], "stack": [[167, "stack"]], "std": [[168, "std"]], "subtract": [[169, "subtract"]], "sum": [[170, "sum"]], "take": [[171, "take"]], "tan": [[172, "tan"]], "tanh": [[173, "tanh"]], "tensordot": [[174, "tensordot"], [251, "tensordot"]], "tile": [[175, "tile"]], "tril": [[176, "tril"]], "triu": [[177, "triu"]], "trunc": [[178, "trunc"]], "unique_all": [[179, "unique-all"]], "unique_counts": [[180, "unique-counts"]], "unique_inverse": [[181, "unique-inverse"]], "unique_values": [[182, "unique-values"]], "unstack": [[183, "unstack"]], "var": [[184, "var"]], "vecdot": [[185, "vecdot"], [253, "vecdot"]], "where": [[186, "where"]], "zeros": [[187, "zeros"]], "zeros_like": [[188, "zeros-like"]], "API specification": [[189, "api-specification"], [189, null]], "Indexing": [[190, "indexing"]], "Single-axis Indexing": [[190, "single-axis-indexing"]], "Slice Syntax": [[190, "slice-syntax"]], "Multi-axis Indexing": [[190, "multi-axis-indexing"]], "Boolean Array Indexing": [[190, "boolean-array-indexing"]], "Return Values": [[190, "return-values"]], "Indexing Functions": [[191, "indexing-functions"]], "Inspection": [[192, "inspection"]], "Inspection APIs": [[192, "inspection-apis"], [204, "inspection-apis"]], "Linear Algebra Functions": [[193, "linear-algebra-functions"]], "Manipulation Functions": [[194, "manipulation-functions"]], "Searching Functions": [[195, "searching-functions"]], "Set Functions": [[196, "set-functions"]], "Sorting Functions": [[197, "sorting-functions"]], "Statistical Functions": [[198, "statistical-functions"], [206, "statistical-functions"]], "Type Promotion Rules": [[199, "type-promotion-rules"]], "Rules": [[199, "rules"]], "Signed integer type promotion table": [[199, "signed-integer-type-promotion-table"]], "Unsigned integer type promotion table": [[199, "unsigned-integer-type-promotion-table"]], "Mixed unsigned and signed integer type promotion table": [[199, "mixed-unsigned-and-signed-integer-type-promotion-table"]], "Floating-point type promotion table": [[199, "floating-point-type-promotion-table"]], "Notes": [[199, "notes"]], "Mixing arrays with Python scalars": [[199, "mixing-arrays-with-python-scalars"]], "Utility Functions": [[200, "utility-functions"]], "Version": [[201, "version"]], "Assumptions": [[202, "assumptions"]], "Hardware and software environments": [[202, "hardware-and-software-environments"]], "Dependencies": [[202, "dependencies"]], "Backwards compatibility": [[202, "backwards-compatibility"], [257, "backwards-compatibility"]], "Production code & interactive use": [[202, "production-code-interactive-use"]], "Benchmark suite": [[203, "benchmark-suite"]], "Changelog per API standard version": [[204, "changelog-per-api-standard-version"]], "Changelog": [[204, "changelog"]], "v2023.12": [[204, "v2023-12"]], "Updates": [[204, "updates"], [204, "id3"]], "Normative": [[204, "normative"]], "APIs": [[204, "apis"], [204, "id1"], [204, "id4"], [204, "id8"]], "Extensions": [[204, "extensions"], [204, "id2"], [204, "id5"], [204, "id9"], [255, "extensions"]], "Additions": [[204, "additions"], [204, "id7"]], "Breaking Changes": [[204, "breaking-changes"]], "Errata": [[204, "errata"], [204, "id10"]], "v2022.12": [[204, "v2022-12"]], "Complex Number Support": [[204, "complex-number-support"], [204, "id6"]], "C API": [[205, "c-api"]], "Example situations for C/Cython usage": [[205, "example-situations-for-c-cython-usage"]], "Situation 1: a Python package that is mostly pure Python, with a limited number of Cython extensions": [[205, "situation-1-a-python-package-that-is-mostly-pure-python-with-a-limited-number-of-cython-extensions"]], "Situation 2: a Python package that contains a lot of Cython code": [[205, "situation-2-a-python-package-that-contains-a-lot-of-cython-code"]], "Situation 3: a Python package that uses the NumPy or Python C API directly": [[205, "situation-3-a-python-package-that-uses-the-numpy-or-python-c-api-directly"]], "Device support": [[205, "device-support"], [211, "device-support"]], "Other longer-term approaches": [[205, "other-longer-term-approaches"]], "Further Python API standardization": [[205, "further-python-api-standardization"]], "HPy": [[205, "hpy"]], "Accuracy": [[206, "accuracy"]], "Arithmetic Operations": [[206, "arithmetic-operations"]], "Mathematical Functions": [[206, "mathematical-functions"]], "Linear Algebra": [[206, "linear-algebra"]], "Complex Numbers": [[207, "complex-numbers"]], "The Complex Plane": [[207, "the-complex-plane"]], "Branch Cuts": [[207, "branch-cuts"]], "Complex Number Ordering": [[207, "complex-number-ordering"]], "Valued-based Promotion": [[207, "valued-based-promotion"]], "Copy-view behaviour and mutability": [[208, "copy-view-behaviour-and-mutability"]], "Mutating views": [[208, null]], "Data-dependent output shapes": [[209, "data-dependent-output-shapes"]], "Data interchange mechanisms": [[210, "data-interchange-mechanisms"]], "DLPack: An in-memory tensor structure": [[210, "dlpack-an-in-memory-tensor-structure"]], "Non-supported use cases": [[210, "non-supported-use-cases"]], "Intended usage": [[211, "intended-usage"]], "Syntax for device assignment": [[211, "syntax-for-device-assignment"]], "Semantics": [[211, "semantics"]], "Out of scope for device support": [[211, "out-of-scope-for-device-support"]], "Exceptions": [[212, "exceptions"]], "Design topics & constraints": [[213, "design-topics-constraints"], [213, null]], "Lazy vs. eager execution": [[214, "lazy-vs-eager-execution"]], "Parallelism": [[215, "parallelism"]], "Static typing": [[216, "static-typing"]], "Fourier transform Functions": [[217, "fourier-transform-functions"]], "Extension name and usage": [[217, "extension-name-and-usage"], [256, "extension-name-and-usage"]], "fft": [[218, "fft"]], "fftfreq": [[219, "fftfreq"]], "fftn": [[220, "fftn"]], "fftshift": [[221, "fftshift"]], "hfft": [[222, "hfft"]], "ifft": [[223, "ifft"]], "ifftn": [[224, "ifftn"]], "ifftshift": [[225, "ifftshift"]], "ihfft": [[226, "ihfft"]], "irfft": [[227, "irfft"]], "irfftn": [[228, "irfftn"]], "rfft": [[229, "rfft"]], "rfftfreq": [[230, "rfftfreq"]], "rfftn": [[231, "rfftn"]], "cholesky": [[232, "cholesky"]], "cross": [[233, "cross"]], "det": [[234, "det"]], "diagonal": [[235, "diagonal"]], "eigh": [[236, "eigh"]], "eigvalsh": [[237, "eigvalsh"]], "inv": [[238, "inv"]], "matrix_norm": [[240, "matrix-norm"]], "matrix_power": [[241, "matrix-power"]], "matrix_rank": [[242, "matrix-rank"]], "outer": [[244, "outer"]], "pinv": [[245, "pinv"]], "qr": [[246, "qr"]], "slogdet": [[247, "slogdet"]], "solve": [[248, "solve"]], "svd": [[249, "svd"]], "svdvals": [[250, "svdvals"]], "trace": [[252, "trace"]], "vector_norm": [[254, "vector-norm"]], "Extension modules:": [[255, null]], "Linear Algebra Extension": [[256, "linear-algebra-extension"]], "Design Principles": [[256, "design-principles"]], "Future API standard evolution": [[257, "future-api-standard-evolution"]], "Scope extensions": [[257, "scope-extensions"]], "Versioning": [[257, "versioning"]], "Python array API standard": [[258, "python-array-api-standard"]], "Contents": [[258, "contents"]], "Context": [[258, null]], "API": [[258, null]], "Methodology and Usage": [[258, null]], "Other": [[258, null]], "License": [[259, "license"]], "Purpose and scope": [[260, "purpose-and-scope"]], "Introduction": [[260, "introduction"], [261, "introduction"]], "This API standard": [[260, "this-api-standard"]], "History": [[260, "history"]], "Scope (includes out-of-scope / non-goals)": [[260, "scope-includes-out-of-scope-non-goals"]], "In scope": [[260, "in-scope"]], "Out of scope": [[260, "out-of-scope"]], "Implications of in/out of scope": [[260, "implications-of-in-out-of-scope"]], "Stakeholders": [[260, "stakeholders"]], "How to read this document": [[260, "how-to-read-this-document"]], "How to adopt this API": [[260, "how-to-adopt-this-api"]], "Checking an array object for Compliance": [[260, "checking-an-array-object-for-compliance"]], "Discoverability of conforming implementations": [[260, "discoverability-of-conforming-implementations"]], "Optional feature": [[260, null]], "Conformance": [[260, "conformance"]], "Terms and Definitions": [[260, "terms-and-definitions"]], "Normative References": [[260, "normative-references"]], "Usage Data": [[261, "usage-data"]], "Design": [[261, "design"]], "Usage": [[261, "usage"]], "Use in Decision-Making": [[261, "use-in-decision-making"]], "Use cases": [[262, "use-cases"]], "Types of use cases": [[262, "types-of-use-cases"]], "Concrete use cases": [[262, "concrete-use-cases"]], "Use case 1: add hardware accelerator and distributed support to SciPy": [[262, "use-case-1-add-hardware-accelerator-and-distributed-support-to-scipy"]], "Use case 2: simplify einops by removing the backend system": [[262, "use-case-2-simplify-einops-by-removing-the-backend-system"]], "Use case 3: adding a Python API to xtensor": [[262, "use-case-3-adding-a-python-api-to-xtensor"]], "Use case 4: make JIT compilation of array computations easier and more robust": [[262, "use-case-4-make-jit-compilation-of-array-computations-easier-and-more-robust"]], "Verification - test suite": [[263, "verification-test-suite"]], "Measuring conformance": [[263, "measuring-conformance"]], "Running the tests": [[263, "running-the-tests"]]}, "indexentries": {"__array_api_version__ (in module array_api)": [[8, "array_api.__array_api_version__"]], "abs() (in module array_api)": [[9, "array_api.abs"]], "acos() (in module array_api)": [[10, "array_api.acos"]], "acosh() (in module array_api)": [[11, "array_api.acosh"]], "add() (in module array_api)": [[12, "array_api.add"]], "all() (in module array_api)": [[13, "array_api.all"]], "any() (in module array_api)": [[14, "array_api.any"]], "arange() (in module array_api)": [[15, "array_api.arange"]], "argmax() (in module array_api)": [[16, "array_api.argmax"]], "argmin() (in module array_api)": [[17, "array_api.argmin"]], "argsort() (in module array_api)": [[18, "array_api.argsort"]], "t (array property)": [[19, "array_api.array.T"]], "__abs__() (array method)": [[20, "array_api.array.__abs__"]], "__add__() (array method)": [[21, "array_api.array.__add__"]], "__and__() (array method)": [[22, "array_api.array.__and__"]], "__array_namespace__() (array method)": [[23, "array_api.array.__array_namespace__"]], "__bool__() (array method)": [[24, "array_api.array.__bool__"]], "__complex__() (array method)": [[25, "array_api.array.__complex__"]], "__dlpack__() (array method)": [[26, "array_api.array.__dlpack__"]], "__dlpack_device__() (array method)": [[27, "array_api.array.__dlpack_device__"]], "__eq__() (array method)": [[28, "array_api.array.__eq__"]], "__float__() (array method)": [[29, "array_api.array.__float__"]], "__floordiv__() (array method)": [[30, "array_api.array.__floordiv__"]], "__ge__() (array method)": [[31, "array_api.array.__ge__"]], "__getitem__() (array method)": [[32, "array_api.array.__getitem__"]], "__gt__() (array method)": [[33, "array_api.array.__gt__"]], "__index__() (array method)": [[34, "array_api.array.__index__"]], "__int__() (array method)": [[35, "array_api.array.__int__"]], "__invert__() (array method)": [[36, "array_api.array.__invert__"]], "__le__() (array method)": [[37, "array_api.array.__le__"]], "__lshift__() (array method)": [[38, "array_api.array.__lshift__"]], "__lt__() (array method)": [[39, "array_api.array.__lt__"]], "__matmul__() (array method)": [[40, "array_api.array.__matmul__"]], "__mod__() (array method)": [[41, "array_api.array.__mod__"]], "__mul__() (array method)": [[42, "array_api.array.__mul__"]], "__ne__() (array method)": [[43, "array_api.array.__ne__"]], "__neg__() (array method)": [[44, "array_api.array.__neg__"]], "__or__() (array method)": [[45, "array_api.array.__or__"]], "__pos__() (array method)": [[46, "array_api.array.__pos__"]], "__pow__() (array method)": [[47, "array_api.array.__pow__"]], "__rshift__() (array method)": [[48, "array_api.array.__rshift__"]], "__setitem__() (array method)": [[49, "array_api.array.__setitem__"]], "__sub__() (array method)": [[50, "array_api.array.__sub__"]], "__truediv__() (array method)": [[51, "array_api.array.__truediv__"]], "__xor__() (array method)": [[52, "array_api.array.__xor__"]], "device (array property)": [[53, "array_api.array.device"]], "dtype (array property)": [[54, "array_api.array.dtype"]], "mt (array property)": [[55, "array_api.array.mT"]], "ndim (array property)": [[56, "array_api.array.ndim"]], "shape (array property)": [[57, "array_api.array.shape"]], "size (array property)": [[58, "array_api.array.size"]], "to_device() (array method)": [[59, "array_api.array.to_device"]], "asarray() (in module array_api)": [[60, "array_api.asarray"]], "asin() (in module array_api)": [[61, "array_api.asin"]], "asinh() (in module array_api)": [[62, "array_api.asinh"]], "astype() (in module array_api)": [[63, "array_api.astype"]], "atan() (in module array_api)": [[64, "array_api.atan"]], "atan2() (in module array_api)": [[65, "array_api.atan2"]], "atanh() (in module array_api)": [[66, "array_api.atanh"]], "bitwise_and() (in module array_api)": [[67, "array_api.bitwise_and"]], "bitwise_invert() (in module array_api)": [[68, "array_api.bitwise_invert"]], "bitwise_left_shift() (in module array_api)": [[69, "array_api.bitwise_left_shift"]], "bitwise_or() (in module array_api)": [[70, "array_api.bitwise_or"]], "bitwise_right_shift() (in module array_api)": [[71, "array_api.bitwise_right_shift"]], "bitwise_xor() (in module array_api)": [[72, "array_api.bitwise_xor"]], "broadcast_arrays() (in module array_api)": [[73, "array_api.broadcast_arrays"]], "broadcast_to() (in module array_api)": [[74, "array_api.broadcast_to"]], "can_cast() (in module array_api)": [[75, "array_api.can_cast"]], "ceil() (in module array_api)": [[76, "array_api.ceil"]], "clip() (in module array_api)": [[77, "array_api.clip"]], "concat() (in module array_api)": [[78, "array_api.concat"]], "conj() (in module array_api)": [[79, "array_api.conj"]], "e (in module array_api.constants)": [[80, "array_api.constants.e"]], "inf (in module array_api.constants)": [[81, "array_api.constants.inf"]], "nan (in module array_api.constants)": [[82, "array_api.constants.nan"]], "newaxis (in module array_api.constants)": [[83, "array_api.constants.newaxis"]], "pi (in module array_api.constants)": [[84, "array_api.constants.pi"]], "copysign() (in module array_api)": [[85, "array_api.copysign"]], "cos() (in module array_api)": [[86, "array_api.cos"]], "cosh() (in module array_api)": [[87, "array_api.cosh"]], "cumulative_sum() (in module array_api)": [[88, "array_api.cumulative_sum"]], "__eq__() (in module array_api.data_types)": [[89, "array_api.data_types.__eq__"]], "divide() (in module array_api)": [[90, "array_api.divide"]], "empty() (in module array_api)": [[91, "array_api.empty"]], "empty_like() (in module array_api)": [[92, "array_api.empty_like"]], "equal() (in module array_api)": [[93, "array_api.equal"]], "exp() (in module array_api)": [[94, "array_api.exp"]], "expand_dims() (in module array_api)": [[95, "array_api.expand_dims"]], "expm1() (in module array_api)": [[96, "array_api.expm1"]], "eye() (in module array_api)": [[97, "array_api.eye"]], "finfo() (in module array_api)": [[98, "array_api.finfo"]], "flip() (in module array_api)": [[99, "array_api.flip"]], "floor() (in module array_api)": [[100, "array_api.floor"]], "floor_divide() (in module array_api)": [[101, "array_api.floor_divide"]], "from_dlpack() (in module array_api)": [[102, "array_api.from_dlpack"]], "full() (in module array_api)": [[103, "array_api.full"]], "full_like() (in module array_api)": [[104, "array_api.full_like"]], "greater() (in module array_api)": [[105, "array_api.greater"]], "greater_equal() (in module array_api)": [[106, "array_api.greater_equal"]], "hypot() (in module array_api)": [[107, "array_api.hypot"]], "iinfo() (in module array_api)": [[108, "array_api.iinfo"]], "imag() (in module array_api)": [[109, "array_api.imag"]], "__array_namespace_info__() (in module array_api.info)": [[110, "array_api.info.__array_namespace_info__"]], "capabilities() (in module array_api.info)": [[111, "array_api.info.capabilities"]], "default_device() (in module array_api.info)": [[112, "array_api.info.default_device"]], "default_dtypes() (in module array_api.info)": [[113, "array_api.info.default_dtypes"]], "devices() (in module array_api.info)": [[114, "array_api.info.devices"]], "dtypes() (in module array_api.info)": [[115, "array_api.info.dtypes"]], "isdtype() (in module array_api)": [[116, "array_api.isdtype"]], "isfinite() (in module array_api)": [[117, "array_api.isfinite"]], "isinf() (in module array_api)": [[118, "array_api.isinf"]], "isnan() (in module array_api)": [[119, "array_api.isnan"]], "less() (in module array_api)": [[120, "array_api.less"]], "less_equal() (in module array_api)": [[121, "array_api.less_equal"]], "linspace() (in module array_api)": [[122, "array_api.linspace"]], "log() (in module array_api)": [[123, "array_api.log"]], "log10() (in module array_api)": [[124, "array_api.log10"]], "log1p() (in module array_api)": [[125, "array_api.log1p"]], "log2() (in module array_api)": [[126, "array_api.log2"]], "logaddexp() (in module array_api)": [[127, "array_api.logaddexp"]], "logical_and() (in module array_api)": [[128, "array_api.logical_and"]], "logical_not() (in module array_api)": [[129, "array_api.logical_not"]], "logical_or() (in module array_api)": [[130, "array_api.logical_or"]], "logical_xor() (in module array_api)": [[131, "array_api.logical_xor"]], "matmul() (in module array_api)": [[132, "array_api.matmul"]], "matrix_transpose() (in module array_api)": [[133, "array_api.matrix_transpose"]], "max() (in module array_api)": [[134, "array_api.max"]], "maximum() (in module array_api)": [[135, "array_api.maximum"]], "mean() (in module array_api)": [[136, "array_api.mean"]], "meshgrid() (in module array_api)": [[137, "array_api.meshgrid"]], "min() (in module array_api)": [[138, "array_api.min"]], "minimum() (in module array_api)": [[139, "array_api.minimum"]], "moveaxis() (in module array_api)": [[140, "array_api.moveaxis"]], "multiply() (in module array_api)": [[141, "array_api.multiply"]], "negative() (in module array_api)": [[142, "array_api.negative"]], "nonzero() (in module array_api)": [[143, "array_api.nonzero"]], "not_equal() (in module array_api)": [[144, "array_api.not_equal"]], "ones() (in module array_api)": [[145, "array_api.ones"]], "ones_like() (in module array_api)": [[146, "array_api.ones_like"]], "permute_dims() (in module array_api)": [[147, "array_api.permute_dims"]], "positive() (in module array_api)": [[148, "array_api.positive"]], "pow() (in module array_api)": [[149, "array_api.pow"]], "prod() (in module array_api)": [[150, "array_api.prod"]], "real() (in module array_api)": [[151, "array_api.real"]], "remainder() (in module array_api)": [[152, "array_api.remainder"]], "repeat() (in module array_api)": [[153, "array_api.repeat"]], "reshape() (in module array_api)": [[154, "array_api.reshape"]], "result_type() (in module array_api)": [[155, "array_api.result_type"]], "roll() (in module array_api)": [[156, "array_api.roll"]], "round() (in module array_api)": [[157, "array_api.round"]], "searchsorted() (in module array_api)": [[158, "array_api.searchsorted"]], "sign() (in module array_api)": [[159, "array_api.sign"]], "signbit() (in module array_api)": [[160, "array_api.signbit"]], "sin() (in module array_api)": [[161, "array_api.sin"]], "sinh() (in module array_api)": [[162, "array_api.sinh"]], "sort() (in module array_api)": [[163, "array_api.sort"]], "sqrt() (in module array_api)": [[164, "array_api.sqrt"]], "square() (in module array_api)": [[165, "array_api.square"]], "squeeze() (in module array_api)": [[166, "array_api.squeeze"]], "stack() (in module array_api)": [[167, "array_api.stack"]], "std() (in module array_api)": [[168, "array_api.std"]], "subtract() (in module array_api)": [[169, "array_api.subtract"]], "sum() (in module array_api)": [[170, "array_api.sum"]], "take() (in module array_api)": [[171, "array_api.take"]], "tan() (in module array_api)": [[172, "array_api.tan"]], "tanh() (in module array_api)": [[173, "array_api.tanh"]], "tensordot() (in module array_api)": [[174, "array_api.tensordot"]], "tile() (in module array_api)": [[175, "array_api.tile"]], "tril() (in module array_api)": [[176, "array_api.tril"]], "triu() (in module array_api)": [[177, "array_api.triu"]], "trunc() (in module array_api)": [[178, "array_api.trunc"]], "unique_all() (in module array_api)": [[179, "array_api.unique_all"]], "unique_counts() (in module array_api)": [[180, "array_api.unique_counts"]], "unique_inverse() (in module array_api)": [[181, "array_api.unique_inverse"]], "unique_values() (in module array_api)": [[182, "array_api.unique_values"]], "unstack() (in module array_api)": [[183, "array_api.unstack"]], "var() (in module array_api)": [[184, "array_api.var"]], "vecdot() (in module array_api)": [[185, "array_api.vecdot"]], "where() (in module array_api)": [[186, "array_api.where"]], "zeros() (in module array_api)": [[187, "array_api.zeros"]], "zeros_like() (in module array_api)": [[188, "array_api.zeros_like"]], "fft() (in module array_api.fft)": [[218, "array_api.fft.fft"]], "fftfreq() (in module array_api.fft)": [[219, "array_api.fft.fftfreq"]], "fftn() (in module array_api.fft)": [[220, "array_api.fft.fftn"]], "fftshift() (in module array_api.fft)": [[221, "array_api.fft.fftshift"]], "hfft() (in module array_api.fft)": [[222, "array_api.fft.hfft"]], "ifft() (in module array_api.fft)": [[223, "array_api.fft.ifft"]], "ifftn() (in module array_api.fft)": [[224, "array_api.fft.ifftn"]], "ifftshift() (in module array_api.fft)": [[225, "array_api.fft.ifftshift"]], "ihfft() (in module array_api.fft)": [[226, "array_api.fft.ihfft"]], "irfft() (in module array_api.fft)": [[227, "array_api.fft.irfft"]], "irfftn() (in module array_api.fft)": [[228, "array_api.fft.irfftn"]], "rfft() (in module array_api.fft)": [[229, "array_api.fft.rfft"]], "rfftfreq() (in module array_api.fft)": [[230, "array_api.fft.rfftfreq"]], "rfftn() (in module array_api.fft)": [[231, "array_api.fft.rfftn"]], "cholesky() (in module array_api.linalg)": [[232, "array_api.linalg.cholesky"]], "cross() (in module array_api.linalg)": [[233, "array_api.linalg.cross"]], "det() (in module array_api.linalg)": [[234, "array_api.linalg.det"]], "diagonal() (in module array_api.linalg)": [[235, "array_api.linalg.diagonal"]], "eigh() (in module array_api.linalg)": [[236, "array_api.linalg.eigh"]], "eigvalsh() (in module array_api.linalg)": [[237, "array_api.linalg.eigvalsh"]], "inv() (in module array_api.linalg)": [[238, "array_api.linalg.inv"]], "matmul() (in module array_api.linalg)": [[239, "array_api.linalg.matmul"]], "matrix_norm() (in module array_api.linalg)": [[240, "array_api.linalg.matrix_norm"]], "matrix_power() (in module array_api.linalg)": [[241, "array_api.linalg.matrix_power"]], "matrix_rank() (in module array_api.linalg)": [[242, "array_api.linalg.matrix_rank"]], "matrix_transpose() (in module array_api.linalg)": [[243, "array_api.linalg.matrix_transpose"]], "outer() (in module array_api.linalg)": [[244, "array_api.linalg.outer"]], "pinv() (in module array_api.linalg)": [[245, "array_api.linalg.pinv"]], "qr() (in module array_api.linalg)": [[246, "array_api.linalg.qr"]], "slogdet() (in module array_api.linalg)": [[247, "array_api.linalg.slogdet"]], "solve() (in module array_api.linalg)": [[248, "array_api.linalg.solve"]], "svd() (in module array_api.linalg)": [[249, "array_api.linalg.svd"]], "svdvals() (in module array_api.linalg)": [[250, "array_api.linalg.svdvals"]], "tensordot() (in module array_api.linalg)": [[251, "array_api.linalg.tensordot"]], "trace() (in module array_api.linalg)": [[252, "array_api.linalg.trace"]], "vecdot() (in module array_api.linalg)": [[253, "array_api.linalg.vecdot"]], "vector_norm() (in module array_api.linalg)": [[254, "array_api.linalg.vector_norm"]]}})