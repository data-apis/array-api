Search.setIndex({"docnames": ["API_specification/array_object", "API_specification/broadcasting", "API_specification/constants", "API_specification/creation_functions", "API_specification/data_type_functions", "API_specification/data_types", "API_specification/elementwise_functions", "API_specification/function_and_method_signatures", "API_specification/generated/array_api.__array_api_version__", "API_specification/generated/array_api.abs", "API_specification/generated/array_api.acos", "API_specification/generated/array_api.acosh", "API_specification/generated/array_api.add", "API_specification/generated/array_api.all", "API_specification/generated/array_api.any", "API_specification/generated/array_api.arange", "API_specification/generated/array_api.argmax", "API_specification/generated/array_api.argmin", "API_specification/generated/array_api.argsort", "API_specification/generated/array_api.array.T", "API_specification/generated/array_api.array.__abs__", "API_specification/generated/array_api.array.__add__", "API_specification/generated/array_api.array.__and__", "API_specification/generated/array_api.array.__array_namespace__", "API_specification/generated/array_api.array.__bool__", "API_specification/generated/array_api.array.__complex__", "API_specification/generated/array_api.array.__dlpack__", "API_specification/generated/array_api.array.__dlpack_device__", "API_specification/generated/array_api.array.__eq__", "API_specification/generated/array_api.array.__float__", "API_specification/generated/array_api.array.__floordiv__", "API_specification/generated/array_api.array.__ge__", "API_specification/generated/array_api.array.__getitem__", "API_specification/generated/array_api.array.__gt__", "API_specification/generated/array_api.array.__index__", "API_specification/generated/array_api.array.__int__", "API_specification/generated/array_api.array.__invert__", "API_specification/generated/array_api.array.__le__", "API_specification/generated/array_api.array.__lshift__", "API_specification/generated/array_api.array.__lt__", "API_specification/generated/array_api.array.__matmul__", "API_specification/generated/array_api.array.__mod__", "API_specification/generated/array_api.array.__mul__", "API_specification/generated/array_api.array.__ne__", "API_specification/generated/array_api.array.__neg__", "API_specification/generated/array_api.array.__or__", "API_specification/generated/array_api.array.__pos__", "API_specification/generated/array_api.array.__pow__", "API_specification/generated/array_api.array.__rshift__", "API_specification/generated/array_api.array.__setitem__", "API_specification/generated/array_api.array.__sub__", "API_specification/generated/array_api.array.__truediv__", "API_specification/generated/array_api.array.__xor__", "API_specification/generated/array_api.array.device", "API_specification/generated/array_api.array.dtype", "API_specification/generated/array_api.array.mT", "API_specification/generated/array_api.array.ndim", "API_specification/generated/array_api.array.shape", "API_specification/generated/array_api.array.size", "API_specification/generated/array_api.array.to_device", "API_specification/generated/array_api.asarray", "API_specification/generated/array_api.asin", "API_specification/generated/array_api.asinh", "API_specification/generated/array_api.astype", "API_specification/generated/array_api.atan", "API_specification/generated/array_api.atan2", "API_specification/generated/array_api.atanh", "API_specification/generated/array_api.bitwise_and", "API_specification/generated/array_api.bitwise_invert", "API_specification/generated/array_api.bitwise_left_shift", "API_specification/generated/array_api.bitwise_or", "API_specification/generated/array_api.bitwise_right_shift", "API_specification/generated/array_api.bitwise_xor", "API_specification/generated/array_api.broadcast_arrays", "API_specification/generated/array_api.broadcast_to", "API_specification/generated/array_api.can_cast", "API_specification/generated/array_api.ceil", "API_specification/generated/array_api.concat", "API_specification/generated/array_api.conj", "API_specification/generated/array_api.constants.e", "API_specification/generated/array_api.constants.inf", "API_specification/generated/array_api.constants.nan", "API_specification/generated/array_api.constants.newaxis", "API_specification/generated/array_api.constants.pi", "API_specification/generated/array_api.cos", "API_specification/generated/array_api.cosh", "API_specification/generated/array_api.data_types.__eq__", "API_specification/generated/array_api.divide", "API_specification/generated/array_api.empty", "API_specification/generated/array_api.empty_like", "API_specification/generated/array_api.equal", "API_specification/generated/array_api.exp", "API_specification/generated/array_api.expand_dims", "API_specification/generated/array_api.expm1", "API_specification/generated/array_api.eye", "API_specification/generated/array_api.finfo", "API_specification/generated/array_api.flip", "API_specification/generated/array_api.floor", "API_specification/generated/array_api.floor_divide", "API_specification/generated/array_api.from_dlpack", "API_specification/generated/array_api.full", "API_specification/generated/array_api.full_like", "API_specification/generated/array_api.greater", "API_specification/generated/array_api.greater_equal", "API_specification/generated/array_api.iinfo", "API_specification/generated/array_api.imag", "API_specification/generated/array_api.isdtype", "API_specification/generated/array_api.isfinite", "API_specification/generated/array_api.isinf", "API_specification/generated/array_api.isnan", "API_specification/generated/array_api.less", "API_specification/generated/array_api.less_equal", "API_specification/generated/array_api.linspace", "API_specification/generated/array_api.log", "API_specification/generated/array_api.log10", "API_specification/generated/array_api.log1p", "API_specification/generated/array_api.log2", "API_specification/generated/array_api.logaddexp", "API_specification/generated/array_api.logical_and", "API_specification/generated/array_api.logical_not", "API_specification/generated/array_api.logical_or", "API_specification/generated/array_api.logical_xor", "API_specification/generated/array_api.matmul", "API_specification/generated/array_api.matrix_transpose", "API_specification/generated/array_api.max", "API_specification/generated/array_api.mean", "API_specification/generated/array_api.meshgrid", "API_specification/generated/array_api.min", "API_specification/generated/array_api.multiply", "API_specification/generated/array_api.negative", "API_specification/generated/array_api.nonzero", "API_specification/generated/array_api.not_equal", "API_specification/generated/array_api.ones", "API_specification/generated/array_api.ones_like", "API_specification/generated/array_api.permute_dims", "API_specification/generated/array_api.positive", "API_specification/generated/array_api.pow", "API_specification/generated/array_api.prod", "API_specification/generated/array_api.real", "API_specification/generated/array_api.remainder", "API_specification/generated/array_api.reshape", "API_specification/generated/array_api.result_type", "API_specification/generated/array_api.roll", "API_specification/generated/array_api.round", "API_specification/generated/array_api.sign", "API_specification/generated/array_api.sin", "API_specification/generated/array_api.sinh", "API_specification/generated/array_api.sort", "API_specification/generated/array_api.sqrt", "API_specification/generated/array_api.square", "API_specification/generated/array_api.squeeze", "API_specification/generated/array_api.stack", "API_specification/generated/array_api.std", "API_specification/generated/array_api.subtract", "API_specification/generated/array_api.sum", "API_specification/generated/array_api.take", "API_specification/generated/array_api.tan", "API_specification/generated/array_api.tanh", "API_specification/generated/array_api.tensordot", "API_specification/generated/array_api.tril", "API_specification/generated/array_api.triu", "API_specification/generated/array_api.trunc", "API_specification/generated/array_api.unique_all", "API_specification/generated/array_api.unique_counts", "API_specification/generated/array_api.unique_inverse", "API_specification/generated/array_api.unique_values", "API_specification/generated/array_api.var", "API_specification/generated/array_api.vecdot", "API_specification/generated/array_api.where", "API_specification/generated/array_api.zeros", "API_specification/generated/array_api.zeros_like", "API_specification/index", "API_specification/indexing", "API_specification/indexing_functions", "API_specification/linear_algebra_functions", "API_specification/manipulation_functions", "API_specification/searching_functions", "API_specification/set_functions", "API_specification/sorting_functions", "API_specification/statistical_functions", "API_specification/type_promotion", "API_specification/utility_functions", "API_specification/version", "assumptions", "benchmark_suite", "changelog", "design_topics/C_API", "design_topics/accuracy", "design_topics/complex_numbers", "design_topics/copies_views_and_mutation", "design_topics/data_dependent_output_shapes", "design_topics/data_interchange", "design_topics/device_support", "design_topics/index", "design_topics/parallelism", "design_topics/static_typing", "extensions/fourier_transform_functions", "extensions/generated/array_api.fft.fft", "extensions/generated/array_api.fft.fftfreq", "extensions/generated/array_api.fft.fftn", "extensions/generated/array_api.fft.fftshift", "extensions/generated/array_api.fft.hfft", "extensions/generated/array_api.fft.ifft", "extensions/generated/array_api.fft.ifftn", "extensions/generated/array_api.fft.ifftshift", "extensions/generated/array_api.fft.ihfft", "extensions/generated/array_api.fft.irfft", "extensions/generated/array_api.fft.irfftn", "extensions/generated/array_api.fft.rfft", "extensions/generated/array_api.fft.rfftfreq", "extensions/generated/array_api.fft.rfftn", "extensions/generated/array_api.linalg.cholesky", "extensions/generated/array_api.linalg.cross", "extensions/generated/array_api.linalg.det", "extensions/generated/array_api.linalg.diagonal", "extensions/generated/array_api.linalg.eigh", "extensions/generated/array_api.linalg.eigvalsh", "extensions/generated/array_api.linalg.inv", "extensions/generated/array_api.linalg.matmul", "extensions/generated/array_api.linalg.matrix_norm", "extensions/generated/array_api.linalg.matrix_power", "extensions/generated/array_api.linalg.matrix_rank", "extensions/generated/array_api.linalg.matrix_transpose", "extensions/generated/array_api.linalg.outer", "extensions/generated/array_api.linalg.pinv", "extensions/generated/array_api.linalg.qr", "extensions/generated/array_api.linalg.slogdet", "extensions/generated/array_api.linalg.solve", "extensions/generated/array_api.linalg.svd", "extensions/generated/array_api.linalg.svdvals", "extensions/generated/array_api.linalg.tensordot", "extensions/generated/array_api.linalg.trace", "extensions/generated/array_api.linalg.vecdot", "extensions/generated/array_api.linalg.vector_norm", "extensions/index", "extensions/linear_algebra_functions", "future_API_evolution", "index", "license", "purpose_and_scope", "usage_data", "use_cases", "verification_test_suite"], "filenames": ["API_specification/array_object.rst", "API_specification/broadcasting.rst", "API_specification/constants.rst", "API_specification/creation_functions.rst", "API_specification/data_type_functions.rst", "API_specification/data_types.rst", "API_specification/elementwise_functions.rst", "API_specification/function_and_method_signatures.rst", "API_specification/generated/array_api.__array_api_version__.rst", "API_specification/generated/array_api.abs.rst", "API_specification/generated/array_api.acos.rst", "API_specification/generated/array_api.acosh.rst", "API_specification/generated/array_api.add.rst", "API_specification/generated/array_api.all.rst", "API_specification/generated/array_api.any.rst", "API_specification/generated/array_api.arange.rst", "API_specification/generated/array_api.argmax.rst", "API_specification/generated/array_api.argmin.rst", "API_specification/generated/array_api.argsort.rst", "API_specification/generated/array_api.array.T.rst", "API_specification/generated/array_api.array.__abs__.rst", "API_specification/generated/array_api.array.__add__.rst", "API_specification/generated/array_api.array.__and__.rst", "API_specification/generated/array_api.array.__array_namespace__.rst", "API_specification/generated/array_api.array.__bool__.rst", "API_specification/generated/array_api.array.__complex__.rst", "API_specification/generated/array_api.array.__dlpack__.rst", "API_specification/generated/array_api.array.__dlpack_device__.rst", "API_specification/generated/array_api.array.__eq__.rst", "API_specification/generated/array_api.array.__float__.rst", "API_specification/generated/array_api.array.__floordiv__.rst", "API_specification/generated/array_api.array.__ge__.rst", "API_specification/generated/array_api.array.__getitem__.rst", "API_specification/generated/array_api.array.__gt__.rst", "API_specification/generated/array_api.array.__index__.rst", "API_specification/generated/array_api.array.__int__.rst", "API_specification/generated/array_api.array.__invert__.rst", "API_specification/generated/array_api.array.__le__.rst", "API_specification/generated/array_api.array.__lshift__.rst", "API_specification/generated/array_api.array.__lt__.rst", "API_specification/generated/array_api.array.__matmul__.rst", "API_specification/generated/array_api.array.__mod__.rst", "API_specification/generated/array_api.array.__mul__.rst", "API_specification/generated/array_api.array.__ne__.rst", "API_specification/generated/array_api.array.__neg__.rst", "API_specification/generated/array_api.array.__or__.rst", "API_specification/generated/array_api.array.__pos__.rst", "API_specification/generated/array_api.array.__pow__.rst", "API_specification/generated/array_api.array.__rshift__.rst", "API_specification/generated/array_api.array.__setitem__.rst", "API_specification/generated/array_api.array.__sub__.rst", "API_specification/generated/array_api.array.__truediv__.rst", "API_specification/generated/array_api.array.__xor__.rst", "API_specification/generated/array_api.array.device.rst", "API_specification/generated/array_api.array.dtype.rst", "API_specification/generated/array_api.array.mT.rst", "API_specification/generated/array_api.array.ndim.rst", "API_specification/generated/array_api.array.shape.rst", "API_specification/generated/array_api.array.size.rst", "API_specification/generated/array_api.array.to_device.rst", "API_specification/generated/array_api.asarray.rst", "API_specification/generated/array_api.asin.rst", "API_specification/generated/array_api.asinh.rst", "API_specification/generated/array_api.astype.rst", "API_specification/generated/array_api.atan.rst", "API_specification/generated/array_api.atan2.rst", "API_specification/generated/array_api.atanh.rst", "API_specification/generated/array_api.bitwise_and.rst", "API_specification/generated/array_api.bitwise_invert.rst", "API_specification/generated/array_api.bitwise_left_shift.rst", "API_specification/generated/array_api.bitwise_or.rst", "API_specification/generated/array_api.bitwise_right_shift.rst", "API_specification/generated/array_api.bitwise_xor.rst", "API_specification/generated/array_api.broadcast_arrays.rst", "API_specification/generated/array_api.broadcast_to.rst", "API_specification/generated/array_api.can_cast.rst", "API_specification/generated/array_api.ceil.rst", "API_specification/generated/array_api.concat.rst", "API_specification/generated/array_api.conj.rst", "API_specification/generated/array_api.constants.e.rst", "API_specification/generated/array_api.constants.inf.rst", "API_specification/generated/array_api.constants.nan.rst", "API_specification/generated/array_api.constants.newaxis.rst", "API_specification/generated/array_api.constants.pi.rst", "API_specification/generated/array_api.cos.rst", "API_specification/generated/array_api.cosh.rst", "API_specification/generated/array_api.data_types.__eq__.rst", "API_specification/generated/array_api.divide.rst", "API_specification/generated/array_api.empty.rst", "API_specification/generated/array_api.empty_like.rst", "API_specification/generated/array_api.equal.rst", "API_specification/generated/array_api.exp.rst", "API_specification/generated/array_api.expand_dims.rst", "API_specification/generated/array_api.expm1.rst", "API_specification/generated/array_api.eye.rst", "API_specification/generated/array_api.finfo.rst", "API_specification/generated/array_api.flip.rst", "API_specification/generated/array_api.floor.rst", "API_specification/generated/array_api.floor_divide.rst", "API_specification/generated/array_api.from_dlpack.rst", "API_specification/generated/array_api.full.rst", "API_specification/generated/array_api.full_like.rst", "API_specification/generated/array_api.greater.rst", "API_specification/generated/array_api.greater_equal.rst", "API_specification/generated/array_api.iinfo.rst", "API_specification/generated/array_api.imag.rst", "API_specification/generated/array_api.isdtype.rst", "API_specification/generated/array_api.isfinite.rst", "API_specification/generated/array_api.isinf.rst", "API_specification/generated/array_api.isnan.rst", "API_specification/generated/array_api.less.rst", "API_specification/generated/array_api.less_equal.rst", "API_specification/generated/array_api.linspace.rst", "API_specification/generated/array_api.log.rst", "API_specification/generated/array_api.log10.rst", "API_specification/generated/array_api.log1p.rst", "API_specification/generated/array_api.log2.rst", "API_specification/generated/array_api.logaddexp.rst", "API_specification/generated/array_api.logical_and.rst", "API_specification/generated/array_api.logical_not.rst", "API_specification/generated/array_api.logical_or.rst", "API_specification/generated/array_api.logical_xor.rst", "API_specification/generated/array_api.matmul.rst", "API_specification/generated/array_api.matrix_transpose.rst", "API_specification/generated/array_api.max.rst", "API_specification/generated/array_api.mean.rst", "API_specification/generated/array_api.meshgrid.rst", "API_specification/generated/array_api.min.rst", "API_specification/generated/array_api.multiply.rst", "API_specification/generated/array_api.negative.rst", "API_specification/generated/array_api.nonzero.rst", "API_specification/generated/array_api.not_equal.rst", "API_specification/generated/array_api.ones.rst", "API_specification/generated/array_api.ones_like.rst", "API_specification/generated/array_api.permute_dims.rst", "API_specification/generated/array_api.positive.rst", "API_specification/generated/array_api.pow.rst", "API_specification/generated/array_api.prod.rst", "API_specification/generated/array_api.real.rst", "API_specification/generated/array_api.remainder.rst", "API_specification/generated/array_api.reshape.rst", "API_specification/generated/array_api.result_type.rst", "API_specification/generated/array_api.roll.rst", "API_specification/generated/array_api.round.rst", "API_specification/generated/array_api.sign.rst", "API_specification/generated/array_api.sin.rst", "API_specification/generated/array_api.sinh.rst", "API_specification/generated/array_api.sort.rst", "API_specification/generated/array_api.sqrt.rst", "API_specification/generated/array_api.square.rst", "API_specification/generated/array_api.squeeze.rst", "API_specification/generated/array_api.stack.rst", "API_specification/generated/array_api.std.rst", "API_specification/generated/array_api.subtract.rst", "API_specification/generated/array_api.sum.rst", "API_specification/generated/array_api.take.rst", "API_specification/generated/array_api.tan.rst", "API_specification/generated/array_api.tanh.rst", "API_specification/generated/array_api.tensordot.rst", "API_specification/generated/array_api.tril.rst", "API_specification/generated/array_api.triu.rst", "API_specification/generated/array_api.trunc.rst", "API_specification/generated/array_api.unique_all.rst", "API_specification/generated/array_api.unique_counts.rst", "API_specification/generated/array_api.unique_inverse.rst", "API_specification/generated/array_api.unique_values.rst", "API_specification/generated/array_api.var.rst", "API_specification/generated/array_api.vecdot.rst", "API_specification/generated/array_api.where.rst", "API_specification/generated/array_api.zeros.rst", "API_specification/generated/array_api.zeros_like.rst", "API_specification/index.rst", "API_specification/indexing.rst", "API_specification/indexing_functions.rst", "API_specification/linear_algebra_functions.rst", "API_specification/manipulation_functions.rst", "API_specification/searching_functions.rst", "API_specification/set_functions.rst", "API_specification/sorting_functions.rst", "API_specification/statistical_functions.rst", "API_specification/type_promotion.rst", "API_specification/utility_functions.rst", "API_specification/version.rst", "assumptions.md", "benchmark_suite.md", "changelog.rst", "design_topics/C_API.rst", "design_topics/accuracy.rst", "design_topics/complex_numbers.rst", "design_topics/copies_views_and_mutation.rst", "design_topics/data_dependent_output_shapes.rst", "design_topics/data_interchange.rst", "design_topics/device_support.rst", "design_topics/index.rst", "design_topics/parallelism.rst", "design_topics/static_typing.rst", "extensions/fourier_transform_functions.rst", "extensions/generated/array_api.fft.fft.rst", "extensions/generated/array_api.fft.fftfreq.rst", "extensions/generated/array_api.fft.fftn.rst", "extensions/generated/array_api.fft.fftshift.rst", "extensions/generated/array_api.fft.hfft.rst", "extensions/generated/array_api.fft.ifft.rst", "extensions/generated/array_api.fft.ifftn.rst", "extensions/generated/array_api.fft.ifftshift.rst", "extensions/generated/array_api.fft.ihfft.rst", "extensions/generated/array_api.fft.irfft.rst", "extensions/generated/array_api.fft.irfftn.rst", "extensions/generated/array_api.fft.rfft.rst", "extensions/generated/array_api.fft.rfftfreq.rst", "extensions/generated/array_api.fft.rfftn.rst", "extensions/generated/array_api.linalg.cholesky.rst", "extensions/generated/array_api.linalg.cross.rst", "extensions/generated/array_api.linalg.det.rst", "extensions/generated/array_api.linalg.diagonal.rst", "extensions/generated/array_api.linalg.eigh.rst", "extensions/generated/array_api.linalg.eigvalsh.rst", "extensions/generated/array_api.linalg.inv.rst", "extensions/generated/array_api.linalg.matmul.rst", "extensions/generated/array_api.linalg.matrix_norm.rst", "extensions/generated/array_api.linalg.matrix_power.rst", "extensions/generated/array_api.linalg.matrix_rank.rst", "extensions/generated/array_api.linalg.matrix_transpose.rst", "extensions/generated/array_api.linalg.outer.rst", "extensions/generated/array_api.linalg.pinv.rst", "extensions/generated/array_api.linalg.qr.rst", "extensions/generated/array_api.linalg.slogdet.rst", "extensions/generated/array_api.linalg.solve.rst", "extensions/generated/array_api.linalg.svd.rst", "extensions/generated/array_api.linalg.svdvals.rst", "extensions/generated/array_api.linalg.tensordot.rst", "extensions/generated/array_api.linalg.trace.rst", "extensions/generated/array_api.linalg.vecdot.rst", "extensions/generated/array_api.linalg.vector_norm.rst", "extensions/index.rst", "extensions/linear_algebra_functions.rst", "future_API_evolution.md", "index.rst", "license.rst", "purpose_and_scope.md", "usage_data.md", "use_cases.md", "verification_test_suite.md"], "titles": ["Array object", "Broadcasting", "Constants", "Creation Functions", "Data Type Functions", "Data Types", "Element-wise Functions", "Function and method signatures", "__array_api_version__", "abs", "acos", "acosh", "add", "all", "any", "arange", "argmax", "argmin", "argsort", "T", "__abs__", "__add__", "__and__", "__array_namespace__", "__bool__", "__complex__", "__dlpack__", "__dlpack_device__", "__eq__", "__float__", "__floordiv__", "__ge__", "__getitem__", "__gt__", "__index__", "__int__", "__invert__", "__le__", "__lshift__", "__lt__", "__matmul__", "__mod__", "__mul__", "__ne__", "__neg__", "__or__", "__pos__", "__pow__", "__rshift__", "__setitem__", "__sub__", "__truediv__", "__xor__", "device", "dtype", "mT", "ndim", "shape", "size", "to_device", "asarray", "asin", "asinh", "astype", "atan", "atan2", "atanh", "bitwise_and", "bitwise_invert", "bitwise_left_shift", "bitwise_or", "bitwise_right_shift", "bitwise_xor", "broadcast_arrays", "broadcast_to", "can_cast", "ceil", "concat", "conj", "e", "inf", "nan", "newaxis", "pi", "cos", "cosh", "__eq__", "divide", "empty", "empty_like", "equal", "exp", "expand_dims", "expm1", "eye", "finfo", "flip", "floor", "floor_divide", "from_dlpack", "full", "full_like", "greater", "greater_equal", "iinfo", "imag", "isdtype", "isfinite", "isinf", "isnan", "less", "less_equal", "linspace", "log", "log10", "log1p", "log2", "logaddexp", "logical_and", "logical_not", "logical_or", "logical_xor", "matmul", "matrix_transpose", "max", "mean", "meshgrid", "min", "multiply", "negative", "nonzero", "not_equal", "ones", "ones_like", "permute_dims", "positive", "pow", "prod", "real", "remainder", "reshape", "result_type", "roll", "round", "sign", "sin", "sinh", "sort", "sqrt", "square", "squeeze", "stack", "std", "subtract", "sum", "take", "tan", "tanh", "tensordot", "tril", "triu", "trunc", "unique_all", "unique_counts", "unique_inverse", "unique_values", "var", "vecdot", "where", "zeros", "zeros_like", "API specification", "Indexing", "Indexing Functions", "Linear Algebra Functions", "Manipulation Functions", "Searching Functions", "Set Functions", "Sorting Functions", "Statistical Functions", "Type Promotion Rules", "Utility Functions", "Version", "Assumptions", "Benchmark suite", "Changelog per API standard version", "C API", "Accuracy", "Complex Numbers", "Copy-view behaviour and mutability", "Data-dependent output shapes", "Data interchange mechanisms", "Device support", "Design topics &amp; constraints", "Parallelism", "Static typing", "Fourier transform Functions", "fft", "fftfreq", "fftn", "fftshift", "hfft", "ifft", "ifftn", "ifftshift", "ihfft", "irfft", "irfftn", "rfft", "rfftfreq", "rfftn", "cholesky", "cross", "det", "diagonal", "eigh", "eigvalsh", "inv", "matmul", "matrix_norm", "matrix_power", "matrix_rank", "matrix_transpose", "outer", "pinv", "qr", "slogdet", "solve", "svd", "svdvals", "tensordot", "trace", "vecdot", "vector_norm", "Extensions", "Linear Algebra Extension", "Future API standard evolution", "Python array API standard", "License", "Purpose and scope", "Usage Data", "Use cases", "Verification - test suite"], "terms": {"api": [0, 1, 5, 7, 8, 23, 26, 63, 106, 172, 180, 183, 187, 188, 189, 191, 192, 193, 194, 195, 234, 238, 240, 242], "specif": [0, 1, 2, 3, 4, 5, 6, 8, 19, 23, 26, 49, 51, 59, 63, 77, 87, 98, 106, 112, 118, 119, 120, 121, 124, 125, 127, 136, 141, 151, 152, 155, 158, 166, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 189, 190, 191, 192, 195, 196, 215, 216, 234, 235, 236, 237, 239, 240, 241, 242], "A": [0, 1, 2, 3, 4, 5, 7, 13, 14, 57, 94, 106, 151, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 186, 189, 191, 192, 194, 195, 196, 197, 199, 201, 202, 203, 205, 206, 207, 208, 210, 224, 227, 235, 238, 239, 240, 241], "conform": [0, 2, 3, 4, 5, 8, 9, 16, 17, 18, 31, 33, 37, 39, 59, 60, 93, 102, 103, 106, 110, 111, 112, 115, 124, 127, 136, 147, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 185, 187, 188, 191, 196, 235], "implement": [0, 2, 3, 4, 5, 8, 9, 10, 11, 16, 17, 18, 20, 23, 24, 26, 29, 30, 31, 33, 34, 37, 39, 40, 41, 44, 47, 49, 51, 59, 60, 61, 62, 63, 64, 65, 66, 84, 85, 87, 91, 93, 98, 100, 101, 102, 103, 106, 110, 111, 112, 113, 114, 115, 116, 122, 124, 125, 127, 128, 129, 130, 136, 137, 139, 141, 145, 146, 147, 149, 152, 154, 156, 157, 162, 163, 164, 165, 166, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 185, 186, 187, 188, 189, 190, 191, 192, 195, 196, 199, 200, 203, 204, 207, 210, 211, 215, 216, 225, 227, 231, 234, 235, 236, 240, 241], "standard": [0, 2, 3, 4, 5, 7, 26, 95, 106, 114, 116, 152, 157, 166, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 187, 188, 189, 191, 192, 194, 195, 234, 235, 238, 240, 241], "must": [0, 1, 2, 3, 4, 5, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 76, 77, 78, 84, 85, 87, 88, 89, 90, 91, 92, 93, 94, 96, 97, 98, 100, 101, 102, 103, 105, 106, 107, 108, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 185, 187, 188, 189, 191, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 219, 220, 221, 223, 224, 225, 226, 227, 228, 229, 231, 233, 234, 235, 236, 239, 240], "provid": [0, 2, 3, 4, 5, 13, 14, 26, 59, 92, 96, 106, 126, 141, 151, 152, 155, 166, 167, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 185, 186, 188, 189, 191, 192, 194, 195, 196, 197, 199, 202, 203, 206, 207, 208, 210, 212, 220, 234, 235, 236, 238, 239, 240, 241], "support": [0, 1, 2, 3, 4, 5, 7, 9, 10, 11, 12, 13, 14, 16, 17, 18, 20, 21, 24, 26, 29, 31, 33, 35, 37, 39, 40, 42, 43, 44, 45, 47, 50, 51, 53, 57, 59, 60, 61, 62, 63, 64, 66, 84, 85, 86, 87, 90, 91, 93, 94, 95, 98, 100, 101, 102, 103, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 118, 119, 120, 121, 122, 124, 126, 127, 128, 129, 130, 131, 132, 133, 135, 136, 137, 143, 144, 145, 146, 147, 148, 149, 153, 154, 155, 156, 157, 158, 162, 163, 164, 165, 167, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 183, 187, 188, 189, 191, 193, 195, 196, 211, 212, 213, 215, 216, 217, 219, 220, 221, 223, 224, 225, 226, 227, 228, 229, 231, 233, 234, 235, 239, 240], "an": [0, 1, 5, 7, 9, 10, 11, 12, 13, 14, 15, 18, 19, 20, 21, 22, 23, 26, 28, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 76, 77, 78, 82, 84, 85, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 172, 178, 180, 183, 185, 186, 187, 188, 189, 190, 192, 194, 195, 197, 198, 199, 201, 202, 203, 205, 206, 207, 208, 209, 210, 211, 212, 214, 215, 216, 217, 219, 220, 221, 224, 225, 226, 227, 228, 229, 231, 233, 234, 235, 236, 238, 240, 241], "have": [0, 1, 2, 5, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 55, 57, 58, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 76, 77, 78, 84, 85, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 100, 101, 102, 103, 104, 105, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 172, 183, 185, 186, 188, 189, 192, 195, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 219, 220, 221, 223, 224, 225, 226, 227, 228, 229, 231, 233, 235, 236, 239, 240, 241], "follow": [0, 1, 2, 3, 4, 5, 7, 10, 11, 12, 44, 49, 61, 62, 64, 66, 87, 95, 98, 100, 104, 106, 113, 115, 128, 129, 136, 139, 143, 148, 158, 162, 163, 164, 165, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 183, 185, 187, 188, 190, 191, 192, 196, 197, 199, 201, 202, 203, 205, 206, 207, 208, 210, 219, 225, 233, 235, 236, 238, 239, 240, 241], "furthermor": [0, 239, 242], "arbitrari": [0, 63, 73, 126, 141, 187], "rank": [0, 1, 13, 14, 92, 126, 130, 151, 155, 167, 172, 185, 197, 199, 201, 202, 203, 205, 206, 207, 208, 210, 212, 219, 221, 225, 227, 231, 233, 239], "n": [0, 1, 13, 14, 40, 55, 84, 92, 112, 122, 123, 125, 126, 130, 134, 137, 151, 152, 154, 156, 157, 158, 159, 160, 166, 167, 172, 185, 197, 198, 199, 201, 202, 203, 205, 206, 207, 208, 209, 210, 211, 212, 214, 215, 216, 217, 219, 220, 221, 223, 224, 225, 228, 229, 231, 233, 239], "i": [0, 1, 2, 5, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 23, 24, 25, 26, 29, 30, 31, 33, 34, 35, 37, 39, 40, 41, 42, 43, 44, 47, 49, 51, 55, 57, 59, 60, 61, 62, 63, 64, 65, 66, 69, 71, 74, 76, 77, 78, 82, 84, 85, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 100, 101, 102, 103, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 122, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 142, 143, 144, 145, 146, 147, 148, 149, 151, 152, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 178, 180, 183, 184, 185, 187, 188, 189, 191, 192, 194, 195, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 219, 220, 221, 223, 224, 225, 226, 227, 228, 229, 231, 233, 234, 235, 236, 238, 239, 240, 241, 242], "e": [0, 1, 2, 5, 7, 9, 10, 11, 18, 19, 20, 26, 40, 43, 47, 49, 51, 55, 57, 62, 63, 65, 66, 69, 71, 76, 77, 84, 85, 87, 90, 91, 92, 97, 98, 105, 106, 112, 113, 114, 115, 116, 122, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 135, 136, 137, 138, 139, 141, 143, 145, 146, 147, 148, 151, 152, 154, 155, 156, 157, 162, 163, 164, 165, 166, 171, 172, 178, 180, 185, 186, 187, 188, 189, 190, 191, 192, 197, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 210, 212, 215, 216, 219, 221, 224, 226, 227, 228, 229, 231, 233, 234, 235, 236, 239, 240, 241], "number": [0, 1, 5, 9, 10, 11, 12, 13, 14, 16, 17, 18, 25, 26, 31, 33, 35, 37, 39, 44, 56, 58, 60, 61, 62, 63, 64, 65, 66, 73, 76, 78, 81, 85, 87, 90, 91, 92, 93, 94, 95, 97, 98, 100, 102, 103, 104, 105, 107, 108, 110, 111, 112, 113, 115, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 136, 137, 138, 139, 141, 142, 143, 144, 146, 147, 148, 149, 151, 152, 154, 155, 157, 158, 161, 162, 163, 166, 167, 172, 178, 180, 191, 193, 197, 199, 201, 202, 203, 205, 206, 207, 208, 210, 211, 212, 215, 216, 217, 221, 225, 226, 227, 228, 231, 235, 239, 240], "dimens": [0, 1, 13, 14, 16, 17, 19, 40, 55, 56, 57, 58, 77, 92, 96, 122, 123, 124, 125, 127, 130, 134, 137, 140, 142, 150, 151, 152, 154, 155, 158, 159, 160, 162, 163, 164, 165, 166, 167, 172, 180, 197, 199, 200, 201, 202, 203, 205, 206, 207, 208, 210, 211, 212, 213, 214, 215, 216, 217, 219, 220, 221, 224, 225, 226, 227, 228, 229, 231, 233, 239], "where": [0, 1, 13, 14, 15, 47, 57, 65, 84, 85, 87, 91, 93, 94, 98, 100, 101, 114, 115, 116, 126, 128, 130, 134, 136, 144, 145, 146, 151, 152, 156, 157, 166, 167, 171, 172, 180, 186, 188, 191, 192, 197, 199, 201, 202, 203, 205, 206, 207, 208, 210, 211, 212, 215, 216, 217, 219, 221, 224, 225, 226, 227, 228, 229, 231, 235, 239, 240, 241], "greater": [0, 10, 11, 33, 38, 48, 61, 62, 65, 66, 69, 71, 87, 97, 98, 113, 115, 136, 139, 144, 146, 148, 150, 157, 171, 172, 197, 199, 201, 202, 203, 205, 206, 207, 208, 210, 212, 220], "than": [0, 10, 11, 19, 26, 38, 40, 47, 48, 49, 55, 61, 62, 63, 65, 66, 69, 71, 76, 87, 95, 96, 97, 98, 113, 114, 115, 116, 122, 128, 136, 137, 139, 144, 146, 148, 150, 152, 154, 155, 157, 161, 162, 163, 164, 165, 166, 172, 180, 183, 186, 189, 192, 194, 197, 199, 201, 202, 203, 205, 206, 207, 208, 210, 212, 219, 220, 221, 224, 231, 233, 235, 236, 239, 241], "equal": [0, 1, 9, 10, 11, 18, 20, 21, 22, 28, 30, 31, 33, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 58, 61, 62, 63, 64, 65, 66, 69, 71, 85, 86, 91, 93, 94, 100, 101, 106, 108, 113, 114, 115, 116, 125, 130, 131, 132, 133, 136, 137, 143, 146, 147, 148, 152, 154, 155, 157, 158, 162, 163, 164, 165, 166, 171, 172, 178, 185, 188, 192, 197, 199, 201, 202, 203, 205, 206, 207, 208, 210, 212, 214, 220, 221, 224, 225, 226, 227, 231, 239], "zero": [0, 5, 13, 14, 16, 17, 24, 25, 29, 30, 34, 35, 40, 41, 47, 63, 65, 69, 87, 92, 93, 94, 98, 115, 118, 119, 120, 121, 122, 124, 125, 126, 127, 128, 130, 132, 133, 136, 137, 139, 152, 154, 159, 160, 161, 162, 163, 164, 165, 166, 167, 170, 171, 172, 178, 180, 185, 186, 188, 191, 197, 199, 200, 201, 202, 203, 205, 206, 207, 208, 210, 213, 220, 221, 224, 225, 226, 233, 241], "dimension": [0, 13, 14, 15, 16, 17, 19, 24, 25, 29, 34, 35, 40, 94, 112, 122, 124, 125, 126, 127, 130, 137, 152, 154, 155, 166, 167, 172, 180, 185, 195, 197, 199, 201, 202, 203, 205, 206, 207, 208, 210, 212, 213, 216, 217, 221, 223, 224, 233, 235, 239], "apart": 0, "from": [0, 13, 14, 15, 19, 44, 59, 60, 75, 77, 89, 96, 98, 99, 100, 101, 112, 113, 115, 126, 129, 133, 136, 137, 140, 141, 148, 150, 152, 154, 155, 157, 162, 164, 166, 167, 168, 170, 172, 180, 183, 185, 186, 187, 188, 191, 192, 197, 199, 201, 202, 203, 205, 206, 207, 208, 210, 212, 215, 226, 228, 231, 235, 236, 238, 239, 240, 241, 242], "ndim": [0, 171, 225, 228, 229], "devic": [0, 5, 15, 26, 27, 59, 60, 88, 89, 94, 100, 101, 112, 132, 133, 159, 160, 169, 170, 171, 172, 185, 191, 193, 198, 209, 225, 235, 239, 241], "dtype": [0, 5, 15, 26, 60, 63, 73, 75, 86, 88, 89, 94, 95, 100, 101, 104, 106, 112, 132, 133, 137, 141, 154, 169, 170, 171, 180, 183, 185, 191, 195, 231, 239, 240, 241], "all": [0, 5, 15, 19, 23, 26, 60, 63, 85, 87, 94, 96, 128, 142, 146, 157, 159, 160, 167, 171, 172, 183, 185, 186, 188, 189, 190, 191, 192, 197, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 210, 212, 224, 226, 227, 233, 234, 235, 238, 239, 241, 242], "thi": [0, 1, 5, 7, 15, 19, 26, 34, 58, 59, 63, 71, 77, 93, 98, 106, 112, 115, 118, 119, 120, 121, 125, 130, 136, 137, 139, 151, 152, 155, 162, 163, 164, 165, 166, 171, 172, 178, 180, 183, 185, 186, 187, 188, 189, 190, 191, 192, 194, 195, 196, 197, 199, 200, 202, 203, 206, 207, 208, 210, 225, 226, 227, 228, 234, 235, 236, 238, 240, 241, 242], "return": [0, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 178, 185, 186, 187, 189, 191, 192, 195, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 219, 220, 221, 223, 224, 225, 226, 227, 228, 229, 231, 233, 235, 239, 241], "tupl": [0, 1, 13, 14, 27, 32, 49, 57, 74, 77, 88, 96, 100, 106, 124, 125, 127, 130, 132, 134, 137, 140, 142, 150, 151, 152, 154, 158, 162, 163, 164, 166, 169, 172, 183, 215, 225, 226, 228, 230, 233, 239], "includ": [0, 1, 9, 13, 14, 15, 16, 17, 20, 21, 23, 28, 30, 40, 41, 42, 43, 47, 51, 106, 108, 112, 122, 124, 125, 127, 137, 148, 152, 154, 166, 171, 172, 180, 185, 186, 187, 188, 189, 190, 192, 194, 219, 233, 235, 236, 238, 240, 241], "those": [0, 5, 7, 15, 23, 87, 128, 130, 180, 185, 188, 189, 192, 225, 228, 229, 234, 235, 236, 239, 240, 241], "mean": [0, 26, 171, 183, 189, 191, 192, 195, 236, 239], "var": [0, 171], "std": [0, 171], "which": [0, 1, 5, 7, 8, 13, 14, 15, 16, 17, 18, 19, 26, 30, 40, 41, 44, 59, 60, 63, 75, 77, 82, 88, 89, 92, 94, 95, 96, 98, 100, 101, 104, 112, 122, 124, 125, 127, 129, 130, 132, 133, 137, 139, 142, 147, 151, 152, 154, 155, 156, 159, 160, 162, 163, 164, 165, 166, 167, 169, 170, 172, 185, 186, 187, 188, 189, 190, 191, 192, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 212, 219, 227, 228, 229, 231, 233, 234, 235, 236, 239, 240, 241], "some": [0, 93, 98, 115, 172, 186, 187, 188, 189, 192, 195, 239, 241, 242], "common": [0, 172, 180, 183, 192, 194, 235, 239, 240, 241], "librari": [0, 5, 7, 26, 51, 57, 58, 59, 60, 63, 87, 93, 98, 106, 112, 115, 118, 119, 120, 121, 124, 125, 127, 130, 152, 157, 162, 163, 164, 165, 166, 171, 172, 183, 185, 186, 187, 188, 189, 190, 191, 192, 194, 195, 211, 215, 216, 225, 227, 234, 235, 236, 239, 240, 241, 242], "g": [0, 5, 9, 19, 20, 26, 47, 51, 57, 87, 105, 106, 112, 124, 127, 128, 130, 137, 138, 141, 143, 154, 162, 163, 164, 165, 172, 178, 180, 185, 186, 187, 188, 189, 190, 191, 192, 201, 205, 206, 207, 208, 210, 215, 216, 219, 226, 228, 229, 231, 233, 234, 235, 236, 239, 240, 241], "numpi": [0, 19, 63, 172, 183, 188, 189, 191, 192, 235, 239, 240, 241, 242], "scalar": [0, 2, 49, 60, 171, 172, 185, 233, 241], "valu": [0, 1, 2, 9, 10, 11, 12, 15, 16, 17, 18, 20, 24, 25, 26, 28, 29, 30, 31, 32, 33, 35, 37, 39, 41, 43, 49, 51, 57, 58, 60, 61, 62, 63, 64, 65, 66, 76, 77, 84, 85, 86, 87, 88, 90, 91, 93, 94, 95, 97, 98, 100, 101, 102, 103, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 124, 125, 127, 128, 130, 131, 132, 136, 137, 139, 143, 144, 145, 146, 147, 148, 152, 154, 155, 156, 157, 161, 162, 163, 164, 165, 166, 167, 169, 171, 178, 180, 183, 185, 187, 189, 190, 195, 198, 201, 205, 206, 207, 208, 209, 210, 211, 215, 216, 217, 219, 220, 221, 224, 225, 226, 227, 228, 229, 231, 233, 235, 239, 241], "rational": [0, 7, 172, 191, 192, 234, 236, 239], "alwai": [0, 12, 42, 60, 63, 95, 128, 140, 172, 183, 188, 189, 192, 215], "necessari": [0, 26, 60, 87, 128, 140, 172, 189, 239], "1": [0, 1, 7, 10, 11, 13, 14, 15, 18, 25, 26, 27, 29, 35, 40, 61, 62, 63, 64, 65, 66, 84, 85, 91, 92, 93, 94, 95, 98, 112, 113, 114, 115, 116, 122, 132, 133, 134, 136, 137, 140, 144, 147, 151, 152, 156, 157, 158, 159, 160, 166, 167, 172, 188, 189, 194, 197, 198, 199, 201, 202, 203, 205, 206, 207, 208, 209, 210, 212, 215, 217, 219, 227, 228, 229, 233], "acceler": [0, 5, 183, 191], "non": [0, 1, 13, 14, 16, 17, 63, 118, 119, 120, 121, 124, 125, 127, 130, 137, 152, 158, 166, 167, 172, 180, 185, 186, 192, 197, 199, 202, 203, 206, 207, 208, 210, 212, 213, 215, 219, 221, 228, 233, 241], "could": [0, 26, 162, 163, 164, 165, 183, 189, 194, 235, 239, 241], "forc": 0, "synchron": [0, 26, 59, 239], "2": [0, 1, 5, 7, 9, 10, 11, 26, 27, 40, 61, 62, 64, 65, 66, 79, 84, 85, 87, 113, 115, 116, 122, 146, 149, 156, 157, 158, 172, 188, 189, 195, 198, 201, 205, 206, 207, 208, 209, 210, 219, 221, 224, 225, 226, 227, 228, 229, 230, 231, 233], "delai": [0, 183, 239], "execut": [0, 180, 183, 192, 194, 239, 241], "model": [0, 57, 58, 87, 128, 188, 241], "repres": [0, 8, 11, 12, 23, 24, 25, 26, 29, 34, 35, 62, 66, 85, 87, 98, 126, 128, 146, 156, 157, 185, 187, 192, 226, 240, 241], "futur": [0, 26, 184, 188, 189, 192, 194, 195, 215, 216, 237, 239, 241], "python": [0, 2, 5, 7, 24, 25, 26, 29, 34, 35, 49, 60, 98, 139, 171, 172, 183, 185, 188, 191, 194, 195, 236, 238, 239, 240], "x": [0, 1, 7, 9, 10, 11, 13, 14, 16, 17, 18, 20, 61, 62, 63, 64, 65, 66, 68, 74, 76, 78, 84, 85, 89, 91, 92, 93, 96, 97, 99, 101, 105, 107, 108, 109, 113, 114, 115, 116, 119, 123, 124, 125, 127, 129, 130, 133, 134, 135, 137, 138, 140, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 154, 155, 156, 157, 159, 160, 161, 162, 163, 164, 165, 166, 170, 172, 188, 189, 195, 196, 197, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 210, 211, 213, 214, 215, 216, 217, 219, 220, 221, 222, 224, 225, 226, 227, 228, 229, 231, 233, 235, 239, 241], "__pos__": [0, 171, 185], "po": 0, "__neg__": [0, 171, 185], "neg": [0, 13, 14, 15, 44, 47, 65, 77, 87, 92, 94, 96, 98, 108, 113, 115, 128, 136, 139, 142, 148, 155, 167, 171, 172, 185, 188, 197, 199, 201, 202, 203, 205, 206, 207, 208, 210, 212, 233, 239], "x1": [0, 7, 12, 40, 65, 67, 69, 70, 71, 72, 87, 90, 98, 102, 103, 110, 111, 117, 118, 120, 121, 122, 128, 131, 136, 139, 153, 158, 167, 168, 185, 212, 218, 223, 227, 230, 232], "x2": [0, 7, 12, 40, 65, 67, 69, 70, 71, 72, 87, 90, 98, 102, 103, 110, 111, 117, 118, 120, 121, 122, 128, 131, 136, 139, 153, 158, 167, 168, 185, 212, 218, 223, 227, 230, 232], "__add__": [0, 50, 171, 185], "add": [0, 5, 7, 21, 153, 154, 171, 172, 185, 186, 187, 192, 231], "__sub__": [0, 171, 185], "sub": [0, 172], "__mul__": [0, 171, 185], "mul": 0, "__truediv__": [0, 171, 185], "truediv": 0, "__floordiv__": [0, 171], "floordiv": 0, "__mod__": [0, 171], "mod": 0, "__pow__": [0, 171, 185], "pow": [0, 47, 171, 185, 187], "should": [0, 1, 5, 9, 10, 11, 12, 16, 17, 18, 19, 20, 21, 22, 23, 26, 29, 30, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 50, 51, 52, 55, 57, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 76, 78, 84, 85, 87, 91, 93, 95, 97, 98, 102, 103, 105, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 124, 125, 126, 127, 128, 129, 135, 136, 137, 138, 139, 143, 144, 145, 146, 147, 148, 149, 152, 153, 154, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 172, 178, 185, 186, 187, 188, 191, 192, 195, 197, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 210, 211, 213, 215, 216, 217, 219, 220, 221, 224, 225, 226, 227, 228, 229, 231, 233, 234, 235, 239, 241, 242], "defin": [0, 5, 12, 23, 30, 41, 49, 60, 65, 78, 87, 98, 100, 101, 112, 124, 125, 127, 128, 139, 144, 148, 149, 152, 159, 160, 166, 167, 171, 178, 185, 187, 188, 195, 199, 200, 203, 204, 207, 210, 211, 215, 216, 217, 224, 225, 227, 235, 240, 241, 242], "real": [0, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 24, 25, 29, 30, 31, 33, 35, 37, 39, 41, 44, 51, 60, 61, 62, 63, 64, 65, 66, 76, 84, 85, 87, 88, 90, 91, 93, 94, 95, 97, 98, 100, 102, 103, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 124, 125, 127, 128, 129, 130, 131, 132, 133, 136, 137, 139, 143, 144, 145, 146, 147, 148, 152, 154, 156, 157, 161, 166, 167, 169, 171, 180, 185, 188, 198, 201, 205, 206, 207, 208, 209, 210, 211, 215, 216, 217, 219, 221, 224, 225, 226, 227, 228, 229, 231, 233, 236], "data": [0, 1, 2, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76, 77, 78, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 166, 167, 168, 169, 170, 171, 180, 183, 186, 188, 189, 192, 193, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 219, 220, 221, 223, 224, 225, 226, 227, 228, 229, 231, 233, 235, 236, 237, 238, 239, 242], "type": [0, 2, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 55, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76, 77, 78, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 183, 186, 188, 189, 191, 193, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 219, 220, 221, 223, 224, 225, 226, 227, 228, 229, 231, 233, 235, 236, 239, 240], "__matmul__": [0, 171, 185], "matmul": [0, 40, 171, 180, 185, 235], "The": [0, 1, 5, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 22, 26, 28, 30, 31, 32, 33, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 55, 57, 58, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 76, 77, 78, 84, 85, 87, 90, 91, 93, 96, 97, 98, 99, 102, 103, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 127, 128, 129, 130, 131, 134, 135, 136, 137, 138, 139, 143, 144, 145, 146, 147, 148, 149, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 172, 180, 183, 185, 186, 187, 189, 190, 191, 192, 194, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 219, 220, 221, 223, 224, 225, 226, 227, 228, 229, 231, 233, 234, 235, 236, 238, 239, 240, 241, 242], "__invert__": [0, 171], "inv": [0, 185, 235], "invert": [0, 68, 217, 220, 227], "__inv__": 0, "__and__": [0, 171], "__or__": [0, 171], "__xor__": [0, 171], "xor": [0, 72, 121], "__lshift__": [0, 171], "lshift": 0, "__rshift__": [0, 171], "rshift": 0, "integ": [0, 9, 13, 14, 15, 20, 22, 26, 29, 30, 34, 35, 36, 38, 41, 44, 45, 47, 48, 51, 52, 60, 67, 68, 69, 70, 71, 72, 76, 87, 97, 98, 100, 101, 104, 106, 112, 124, 125, 127, 129, 136, 137, 139, 141, 143, 152, 154, 155, 158, 161, 166, 167, 171, 172, 185, 187, 188, 197, 199, 201, 202, 203, 205, 206, 207, 208, 210, 212, 220, 221, 231, 233, 239], "boolean": [0, 22, 24, 25, 29, 35, 36, 43, 45, 52, 57, 60, 63, 67, 68, 70, 72, 86, 100, 101, 106, 112, 118, 119, 120, 121, 130, 140, 171, 180, 185], "__lt__": [0, 171, 185], "lt": 0, "__le__": [0, 171, 185], "le": 0, "__gt__": [0, 171, 185], "gt": [0, 225, 228], "__ge__": [0, 171, 185], "ge": 0, "__eq__": [0, 171, 185, 192], "eq": 0, "__ne__": [0, 171, 185], "ne": 0, "ar": [0, 1, 5, 7, 15, 16, 17, 19, 23, 26, 27, 40, 49, 55, 58, 60, 84, 86, 87, 91, 94, 95, 96, 98, 112, 118, 119, 120, 121, 122, 128, 130, 136, 142, 143, 145, 156, 157, 162, 164, 167, 172, 180, 183, 185, 186, 187, 188, 189, 190, 191, 192, 194, 195, 197, 198, 199, 200, 202, 203, 204, 206, 207, 208, 209, 210, 212, 215, 216, 221, 224, 225, 228, 234, 235, 236, 239, 240, 241, 242], "onli": [0, 1, 5, 7, 16, 17, 23, 26, 40, 57, 58, 63, 96, 106, 112, 118, 119, 120, 121, 122, 125, 152, 166, 171, 172, 180, 183, 185, 186, 188, 189, 191, 192, 195, 200, 217, 224, 225, 227, 235, 236, 239, 240, 241, 242], "other": [0, 5, 21, 22, 23, 26, 28, 30, 31, 33, 37, 38, 39, 40, 41, 42, 43, 45, 47, 48, 50, 51, 52, 63, 86, 87, 93, 98, 115, 128, 152, 166, 172, 183, 185, 187, 188, 189, 190, 191, 192, 195, 224, 234, 235, 238, 239, 241], "ani": [0, 1, 9, 10, 11, 23, 26, 28, 43, 59, 61, 62, 66, 86, 90, 107, 108, 131, 148, 171, 172, 180, 185, 188, 189, 191, 195, 228, 236, 238, 239, 242], "For": [0, 1, 5, 7, 9, 10, 11, 12, 16, 17, 18, 20, 24, 25, 26, 29, 30, 31, 33, 35, 37, 39, 41, 44, 57, 58, 61, 62, 64, 65, 66, 76, 78, 84, 85, 87, 90, 91, 93, 97, 98, 102, 103, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 124, 126, 127, 128, 129, 131, 136, 137, 139, 143, 144, 145, 146, 147, 148, 149, 151, 154, 156, 157, 161, 162, 163, 164, 165, 172, 178, 183, 187, 188, 190, 192, 198, 207, 209, 226, 228, 229, 231, 239, 241, 242], "backward": [0, 13, 14, 16, 17, 18, 31, 33, 37, 39, 102, 103, 110, 111, 112, 124, 127, 139, 147, 167, 172, 185, 188, 189, 197, 199, 201, 202, 203, 205, 206, 207, 208, 210, 212, 239], "compat": [0, 1, 12, 13, 14, 16, 17, 18, 21, 22, 28, 30, 31, 33, 37, 38, 39, 40, 41, 42, 43, 45, 47, 48, 49, 50, 51, 52, 65, 67, 69, 70, 71, 72, 74, 87, 90, 98, 102, 103, 110, 111, 112, 117, 118, 120, 121, 122, 124, 125, 127, 128, 131, 136, 137, 139, 140, 147, 152, 153, 154, 166, 167, 168, 180, 185, 188, 189, 212, 219, 221, 224, 227, 233, 239, 241], "mai": [0, 5, 7, 15, 16, 17, 18, 23, 26, 28, 31, 33, 37, 39, 43, 51, 57, 58, 59, 60, 86, 87, 90, 98, 99, 102, 103, 106, 110, 111, 112, 118, 119, 120, 121, 124, 125, 127, 128, 130, 131, 147, 152, 157, 162, 163, 164, 165, 166, 171, 172, 178, 180, 183, 186, 187, 188, 189, 190, 192, 194, 195, 215, 225, 226, 228, 234, 235, 239, 240, 241], "complex": [0, 9, 10, 11, 12, 13, 14, 16, 17, 18, 20, 21, 24, 25, 29, 31, 33, 35, 37, 39, 40, 42, 43, 44, 45, 47, 50, 51, 60, 61, 62, 63, 64, 66, 78, 84, 85, 87, 90, 91, 93, 94, 95, 100, 101, 102, 103, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 122, 124, 126, 127, 128, 129, 130, 131, 132, 133, 135, 136, 137, 138, 143, 144, 145, 146, 147, 148, 149, 153, 154, 156, 157, 158, 162, 163, 164, 165, 167, 171, 180, 187, 191, 192, 193, 197, 199, 201, 202, 203, 205, 206, 207, 208, 210, 211, 212, 213, 215, 216, 217, 219, 220, 221, 223, 224, 225, 226, 227, 228, 229, 231, 233, 235, 239, 240], "howev": [0, 5, 7, 16, 17, 18, 31, 33, 37, 39, 57, 98, 102, 103, 106, 110, 111, 112, 124, 127, 147, 155, 156, 157, 183, 186, 187, 188, 189, 190, 192, 235, 236, 239, 241], "inequ": [0, 16, 17, 18, 31, 33, 37, 39, 102, 103, 110, 111, 124, 127, 147], "unspecifi": [0, 5, 10, 11, 16, 17, 18, 30, 31, 33, 37, 39, 41, 47, 51, 60, 62, 66, 77, 85, 87, 91, 93, 98, 100, 101, 102, 103, 110, 111, 112, 124, 127, 136, 139, 146, 147, 148, 151, 157, 172, 178, 180, 185, 199, 200, 203, 204, 207, 210, 215, 216, 239], "thu": [0, 5, 16, 17, 18, 30, 31, 33, 37, 39, 41, 47, 57, 60, 71, 98, 100, 101, 102, 103, 110, 111, 112, 124, 127, 136, 139, 147, 156, 157, 178, 187, 188, 199, 200, 203, 204, 207, 210, 215, 216, 228, 235], "depend": [0, 5, 9, 10, 11, 16, 17, 18, 20, 26, 29, 31, 33, 37, 39, 44, 47, 51, 57, 58, 59, 61, 62, 63, 64, 65, 66, 84, 85, 87, 91, 93, 102, 103, 110, 111, 112, 113, 114, 115, 116, 124, 127, 128, 129, 136, 145, 146, 147, 156, 157, 168, 178, 180, 187, 188, 191, 193, 195, 215, 216, 225, 226, 227, 228, 235, 239, 241, 242], "see": [0, 5, 10, 11, 12, 13, 14, 16, 17, 18, 21, 22, 26, 28, 30, 31, 33, 34, 37, 38, 39, 40, 41, 42, 43, 45, 47, 48, 49, 50, 51, 52, 53, 59, 61, 62, 64, 65, 66, 67, 69, 70, 71, 72, 74, 87, 90, 93, 98, 99, 101, 102, 103, 110, 111, 113, 115, 117, 118, 120, 121, 122, 124, 125, 127, 128, 130, 131, 136, 137, 139, 141, 144, 147, 148, 149, 152, 153, 154, 162, 163, 164, 165, 166, 167, 168, 171, 172, 180, 182, 183, 186, 188, 190, 191, 192, 195, 212, 219, 221, 224, 227, 233, 234, 239, 240, 241, 242], "order": [0, 5, 7, 16, 17, 18, 19, 26, 31, 33, 37, 39, 55, 60, 63, 65, 86, 96, 98, 102, 103, 110, 111, 124, 127, 130, 147, 156, 157, 158, 162, 163, 164, 165, 172, 178, 180, 185, 187, 190, 191, 206, 207, 215, 216, 219, 228, 229, 233, 235, 236, 239, 240], "chang": [0, 1, 9, 10, 11, 12, 13, 14, 20, 21, 24, 26, 29, 35, 40, 42, 43, 44, 45, 47, 50, 51, 60, 61, 62, 63, 64, 66, 84, 85, 87, 90, 91, 93, 94, 95, 100, 101, 107, 108, 109, 112, 113, 114, 115, 116, 122, 126, 128, 129, 130, 131, 132, 133, 135, 136, 137, 140, 143, 144, 145, 146, 148, 149, 153, 154, 156, 157, 158, 162, 163, 164, 165, 167, 183, 211, 212, 213, 215, 216, 217, 219, 220, 221, 223, 224, 225, 226, 227, 228, 229, 231, 233, 236, 239, 241, 242], "shape": [0, 1, 18, 40, 55, 63, 73, 74, 77, 88, 89, 92, 96, 100, 101, 122, 123, 126, 132, 133, 140, 142, 147, 151, 155, 158, 159, 160, 167, 169, 170, 171, 185, 193, 195, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 219, 220, 221, 223, 224, 225, 226, 227, 228, 229, 231, 239, 241], "result": [0, 1, 9, 10, 11, 12, 13, 14, 15, 16, 17, 20, 21, 22, 24, 25, 28, 29, 30, 31, 33, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 76, 78, 84, 85, 87, 90, 91, 93, 97, 98, 102, 103, 105, 107, 108, 109, 110, 111, 113, 114, 115, 116, 117, 118, 119, 120, 121, 124, 125, 127, 128, 129, 131, 135, 136, 137, 138, 139, 141, 143, 144, 145, 146, 148, 149, 151, 152, 153, 154, 156, 157, 158, 161, 162, 166, 172, 178, 180, 185, 187, 188, 189, 211, 212, 214, 219, 220, 226, 227, 233, 239, 240, 241, 242], "promot": [0, 1, 10, 11, 12, 21, 22, 30, 40, 41, 42, 44, 45, 47, 49, 50, 51, 52, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 75, 77, 84, 85, 87, 91, 93, 98, 101, 112, 113, 114, 115, 116, 117, 122, 125, 128, 129, 136, 139, 141, 145, 146, 148, 149, 151, 152, 153, 156, 157, 158, 166, 167, 168, 171, 185, 211, 212, 217, 219, 220, 221, 223, 224, 225, 226, 227, 233, 235], "rule": [0, 10, 11, 12, 21, 22, 30, 40, 41, 42, 44, 45, 47, 49, 50, 51, 52, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 75, 77, 84, 85, 87, 91, 93, 98, 100, 101, 112, 113, 114, 115, 116, 117, 122, 128, 129, 136, 139, 141, 144, 145, 146, 148, 149, 151, 153, 156, 157, 158, 167, 168, 171, 172, 185, 188, 191, 211, 212, 217, 219, 220, 221, 223, 224, 225, 226, 227, 233, 235, 239, 241], "broadcast": [0, 12, 13, 14, 16, 17, 21, 22, 28, 30, 31, 33, 37, 38, 39, 40, 41, 42, 43, 45, 47, 48, 49, 50, 51, 52, 65, 67, 69, 70, 71, 72, 73, 74, 87, 90, 98, 102, 103, 110, 111, 117, 118, 120, 121, 122, 124, 125, 127, 128, 131, 136, 137, 139, 152, 153, 154, 158, 166, 167, 168, 171, 185, 212, 219, 221, 224, 227, 233, 239], "same": [0, 5, 7, 9, 12, 15, 18, 19, 20, 32, 36, 38, 40, 41, 46, 48, 50, 55, 59, 63, 68, 73, 74, 76, 77, 78, 87, 89, 92, 95, 96, 97, 98, 101, 105, 122, 123, 124, 125, 126, 127, 128, 133, 134, 135, 136, 137, 138, 139, 140, 142, 143, 144, 147, 150, 151, 152, 153, 154, 155, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 170, 172, 180, 183, 185, 188, 189, 191, 192, 195, 197, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 210, 211, 212, 213, 214, 215, 217, 220, 224, 225, 226, 228, 229, 231, 234, 235, 239, 241], "behavior": [0, 5, 47, 49, 60, 63, 87, 98, 100, 101, 112, 128, 136, 139, 162, 163, 164, 165, 171, 172, 180, 183, 185, 187, 188, 194, 199, 200, 203, 204, 207, 210, 235, 236, 239, 240, 241, 242], "special": [0, 9, 10, 11, 12, 20, 21, 24, 25, 28, 29, 30, 35, 41, 42, 43, 47, 51, 61, 62, 64, 65, 66, 76, 84, 85, 87, 90, 91, 93, 97, 98, 107, 108, 109, 113, 114, 115, 116, 117, 124, 125, 127, 128, 131, 136, 137, 139, 143, 144, 145, 146, 148, 149, 152, 154, 156, 157, 161, 166, 185, 186, 188, 226, 231], "case": [0, 1, 5, 9, 10, 11, 12, 15, 20, 21, 24, 25, 28, 29, 30, 35, 41, 42, 43, 47, 51, 60, 61, 62, 64, 65, 66, 76, 84, 85, 87, 90, 91, 93, 97, 98, 107, 108, 109, 113, 114, 115, 116, 117, 124, 125, 126, 127, 128, 131, 136, 137, 139, 140, 143, 144, 145, 146, 148, 149, 152, 154, 156, 157, 161, 166, 172, 183, 185, 186, 187, 188, 189, 192, 225, 226, 228, 231, 235, 237, 239, 242], "its": [0, 5, 26, 40, 73, 87, 95, 122, 128, 140, 142, 187, 188, 192, 234, 239, 240, 241], "respect": [0, 9, 12, 20, 21, 22, 28, 30, 31, 33, 37, 38, 39, 41, 42, 43, 45, 48, 50, 51, 52, 65, 67, 69, 70, 71, 72, 85, 87, 90, 98, 102, 103, 110, 111, 112, 117, 118, 120, 121, 126, 128, 131, 139, 146, 153, 156, 157, 158, 167, 185, 187, 190, 192, 212, 215, 225, 228], "binari": [0, 5, 67, 70, 72, 156, 157, 186], "two": [0, 1, 15, 19, 40, 55, 65, 71, 94, 122, 123, 126, 143, 158, 159, 160, 162, 163, 164, 165, 167, 172, 180, 191, 192, 194, 199, 200, 203, 204, 207, 210, 211, 213, 214, 215, 216, 217, 219, 220, 221, 223, 224, 225, 226, 227, 228, 229, 231, 235, 239, 240, 241, 242], "operand": [0, 1, 9, 10, 11, 12, 24, 25, 29, 35, 61, 62, 64, 65, 66, 76, 84, 85, 87, 90, 91, 93, 97, 98, 107, 108, 109, 113, 114, 115, 116, 117, 124, 127, 128, 131, 136, 137, 139, 143, 144, 145, 146, 148, 149, 154, 156, 157, 161, 180, 185, 187, 226, 231], "assign": [0, 189], "exampl": [0, 5, 12, 23, 106, 151, 171, 172, 183, 188, 189, 190, 192, 194, 195, 231, 235, 239, 241, 242], "after": [0, 1, 40, 122, 148], "addit": [0, 5, 7, 12, 50, 59, 153, 171, 172, 180, 186, 188, 191, 235, 239, 240, 242], "modifi": [0, 189, 238], "equival": [0, 20, 21, 22, 28, 30, 31, 33, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 71, 98, 118, 119, 120, 121, 139, 143, 155, 172, 180, 188, 189, 221, 224, 227, 233, 239], "discuss": [0, 90, 131, 185, 191, 192, 194, 239, 240, 241], "copi": [0, 1, 59, 60, 63, 99, 140, 147, 185, 186, 191, 192, 193, 238, 239], "view": [0, 99, 193], "behaviour": [0, 193, 239, 241], "mutabl": [0, 193], "via": [0, 26, 98, 155, 172, 186, 191, 192, 194, 196, 224, 234, 235, 236, 239], "__iadd__": 0, "__isub__": 0, "__imul__": 0, "__itruediv__": 0, "__ifloordiv__": 0, "__ipow__": 0, "__imod__": 0, "__imatmul__": 0, "__iand__": 0, "__ior__": 0, "__ixor__": 0, "__ilshift__": 0, "__irshift__": 0, "appli": [0, 12, 77, 87, 128, 141, 143, 151, 158, 172, 180, 183, 188, 197, 199, 202, 203, 206, 207, 208, 210, 221, 224, 235, 239, 241], "match": [0, 1, 5, 9, 20, 63, 98, 139, 158, 201, 205, 206, 207, 208, 210, 215, 216, 219, 233, 241], "op": [0, 180], "__radd__": 0, "__rsub__": 0, "__rmul__": 0, "__rtruediv__": 0, "__rfloordiv__": 0, "__rpow__": 0, "__rmod__": 0, "__rmatmul__": 0, "__rand__": 0, "__ror__": 0, "__rxor__": 0, "__rlshift__": 0, "__rrshift__": 0, "arrai": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 82, 84, 85, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 173, 174, 175, 176, 177, 178, 179, 181, 182, 183, 185, 186, 187, 188, 189, 190, 191, 192, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 240, 242], "refer": [1, 13, 14, 93, 94, 115, 152, 166, 167, 172, 188, 189, 195, 197, 199, 201, 202, 203, 205, 206, 207, 208, 210, 212, 227], "automat": [1, 239], "implicit": [1, 192, 239], "expans": [1, 239], "size": [1, 13, 14, 92, 112, 130, 142, 150, 155, 158, 167, 171, 172, 190, 194, 197, 199, 201, 202, 203, 205, 206, 207, 208, 210, 212, 214, 223, 225, 228, 239], "without": [1, 7, 26, 57, 130, 140, 162, 163, 164, 165, 183, 186, 187, 190, 238, 239, 241], "purpos": [1, 5, 93, 115, 183, 226, 235, 237, 238, 241], "make": [1, 7, 183, 186, 187, 189, 191, 197, 199, 201, 202, 203, 205, 206, 207, 208, 210, 234, 236, 239], "differ": [1, 12, 49, 50, 77, 87, 95, 98, 128, 137, 151, 153, 154, 172, 183, 189, 192, 204, 215, 225, 226, 228, 231, 235, 239, 240, 241], "element": [1, 9, 10, 11, 12, 13, 14, 15, 20, 21, 22, 24, 25, 28, 29, 30, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 54, 58, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 76, 78, 84, 85, 87, 90, 91, 93, 94, 96, 97, 98, 100, 101, 102, 103, 105, 107, 108, 109, 110, 111, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 124, 125, 127, 128, 129, 130, 131, 135, 136, 137, 138, 139, 140, 142, 143, 144, 145, 146, 148, 149, 150, 152, 153, 154, 155, 156, 157, 159, 160, 161, 162, 163, 164, 165, 166, 168, 171, 172, 185, 187, 197, 199, 201, 202, 203, 205, 206, 207, 208, 210, 212, 215, 224, 225, 226, 228, 231, 239], "wise": [1, 9, 10, 12, 20, 21, 22, 28, 30, 31, 33, 36, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 61, 64, 65, 67, 68, 69, 70, 71, 72, 78, 87, 90, 98, 102, 103, 105, 110, 111, 117, 118, 119, 120, 121, 128, 131, 136, 138, 139, 153, 171, 185, 187, 239], "oper": [1, 12, 19, 24, 26, 34, 40, 57, 58, 59, 61, 64, 71, 84, 87, 98, 114, 116, 122, 128, 136, 137, 139, 141, 145, 149, 154, 156, 158, 171, 172, 177, 180, 185, 188, 189, 190, 191, 192, 231, 235, 236, 239, 240, 241], "facilit": [1, 178, 183], "user": [1, 7, 157, 183, 186, 187, 189, 192, 194, 235, 239, 240, 241], "ergonom": 1, "encourag": [1, 239, 240], "avoid": [1, 9, 63, 87, 93, 98, 115, 128, 186, 189, 192, 235, 239, 241], "unnecessari": [1, 235], "can": [1, 7, 26, 60, 75, 106, 172, 180, 183, 186, 188, 189, 191, 192, 195, 224, 225, 228, 234, 235, 239, 240, 241, 242], "potenti": [1, 26, 93, 115, 189, 239], "enabl": [1, 192, 194, 195, 239], "more": [1, 7, 15, 19, 26, 40, 58, 60, 63, 73, 93, 96, 98, 115, 122, 130, 136, 155, 162, 163, 164, 165, 172, 180, 183, 186, 187, 188, 189, 190, 191, 192, 194, 195, 199, 200, 203, 204, 207, 210, 226, 235, 236, 239, 240, 242], "memori": [1, 26, 60, 140, 183, 189, 190, 192, 239, 241], "effici": [1, 183, 189], "through": [1, 60, 65, 234, 236, 240, 241], "vector": [1, 40, 122, 126, 167, 212, 223, 228, 229, 233, 235, 239], "reduc": [1, 13, 14, 16, 17, 124, 125, 127, 137, 152, 154, 166, 172, 225, 228, 235, 240, 241], "consumpt": [1, 26, 240], "cach": 1, "local": [1, 192], "given": [1, 23, 59, 96, 112, 142, 180, 185, 188, 189, 192, 195, 216, 226, 235, 236, 239, 241], "involv": [1, 12, 87, 98, 128, 136, 141, 180, 187, 188, 192, 194], "singleton": [1, 13, 14, 16, 17, 92, 124, 125, 127, 137, 150, 152, 154, 166, 219, 233, 239], "whose": [1, 5, 9, 11, 19, 20, 47, 55, 62, 66, 84, 85, 94, 96, 123, 136, 142, 145, 146, 155, 156, 157, 158, 159, 160, 162, 163, 164, 172, 189, 201, 205, 206, 207, 208, 210, 211, 213, 214, 215, 216, 217, 219, 220, 221, 223, 224, 225, 226, 227, 228, 229, 231, 233, 239, 241], "one": [1, 15, 19, 26, 40, 51, 58, 60, 63, 73, 75, 87, 92, 94, 96, 98, 106, 112, 122, 126, 128, 130, 132, 133, 150, 155, 162, 163, 164, 165, 167, 172, 183, 186, 188, 189, 191, 192, 194, 195, 197, 199, 201, 202, 203, 204, 205, 206, 207, 208, 210, 223, 224, 225, 233, 235, 236, 239, 241], "virtual": 1, "repeat": [1, 172, 185, 241], "across": [1, 5, 87, 98, 128, 157, 185, 187, 188, 192, 234, 239], "correspond": [1, 16, 17, 23, 47, 65, 73, 136, 137, 140, 142, 152, 154, 158, 162, 163, 164, 165, 166, 167, 172, 185, 187, 199, 203, 207, 210, 212, 215, 219, 231, 238, 239], "If": [1, 5, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 23, 24, 25, 26, 29, 34, 35, 40, 44, 47, 51, 55, 57, 59, 60, 61, 62, 63, 64, 65, 66, 74, 76, 77, 84, 85, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 100, 101, 106, 107, 108, 109, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 136, 137, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 151, 152, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 169, 170, 172, 186, 188, 192, 196, 197, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 210, 211, 212, 215, 216, 217, 219, 220, 221, 224, 225, 226, 227, 228, 231, 233, 234, 235, 239, 241], "unequ": 1, "lower": [1, 94, 159, 211], "higher": [1, 172, 186, 235, 240], "prepend": [1, 40, 92, 122], "until": 1, "store": [1, 192, 231], "determin": [1, 10, 11, 12, 13, 14, 21, 22, 26, 30, 40, 41, 42, 44, 45, 47, 50, 51, 52, 61, 62, 64, 65, 66, 67, 69, 70, 71, 72, 75, 77, 84, 85, 87, 91, 93, 98, 107, 108, 109, 113, 114, 115, 116, 117, 122, 128, 129, 136, 139, 145, 146, 148, 149, 153, 155, 156, 157, 158, 162, 163, 164, 165, 167, 168, 180, 185, 188, 191, 192, 197, 199, 201, 202, 203, 205, 206, 207, 208, 210, 211, 212, 213, 214, 217, 219, 220, 221, 223, 224, 225, 226, 227, 231, 233, 235, 239], "let": [1, 9, 10, 11, 12, 62, 66, 85, 90, 91, 93, 107, 108, 109, 112, 113, 115, 125, 131, 137, 144, 146, 148, 152, 154, 157, 166, 167, 172, 194, 197, 199, 201, 202, 203, 205, 206, 207, 208, 210, 211, 215, 216, 217, 225, 227, 228, 231], "b": [1, 9, 10, 11, 12, 57, 62, 66, 85, 87, 90, 91, 93, 98, 107, 108, 109, 112, 113, 115, 128, 131, 144, 146, 148, 151, 157, 167, 172, 185, 188, 189, 224, 227, 241], "both": [1, 40, 44, 47, 51, 65, 87, 95, 98, 112, 122, 129, 136, 137, 154, 157, 158, 167, 172, 188, 189, 191, 195, 212, 231, 235, 239, 240], "shape1": 1, "describ": [1, 5, 12, 87, 90, 106, 128, 131, 136, 137, 154, 180, 188, 191, 198, 209, 231, 239], "shape2": 1, "n1": [1, 126], "len": [1, 126], "n2": [1, 126], "maximum": [1, 16, 112, 124, 127, 185, 187, 219], "max": [1, 95, 104, 171, 172, 185, 219, 221, 224], "temporari": 1, "list": [1, 73, 77, 126, 151, 172, 183, 185, 192, 239, 241], "length": [1, 15, 126, 140, 158, 172, 198, 200, 201, 204, 209, 228, 229], "while": [1, 98, 112, 118, 119, 120, 121, 125, 152, 162, 163, 166, 171, 172, 178, 183, 185, 188, 189, 190, 192, 224, 235, 240, 241, 242], "0": [1, 5, 9, 10, 11, 12, 15, 24, 25, 26, 29, 35, 38, 48, 57, 61, 62, 63, 64, 65, 66, 69, 71, 76, 77, 84, 85, 87, 90, 91, 92, 93, 94, 95, 97, 98, 113, 114, 115, 116, 125, 128, 134, 136, 137, 139, 143, 144, 145, 146, 148, 151, 152, 154, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 172, 178, 180, 188, 189, 198, 200, 209, 214, 219, 226, 228, 229, 231, 233, 239, 241], "d1": 1, "els": [1, 183, 240], "d2": 1, "set": [1, 18, 49, 65, 147, 152, 159, 160, 162, 164, 165, 166, 171, 172, 185, 186, 187, 188, 189, 192, 194, 195, 197, 199, 201, 202, 203, 205, 206, 207, 208, 210, 211, 215, 216, 217, 221, 224, 225, 227, 228, 234, 235, 239, 241, 242], "th": [1, 94, 172, 199, 203, 207, 210], "throw": 1, "except": [1, 13, 14, 74, 77, 92, 94, 112, 130, 151, 155, 172, 180, 183, 185, 187, 189, 192, 197, 199, 201, 202, 203, 205, 206, 207, 208, 210, 224, 236, 239, 240, 241], "demonstr": 1, "applic": [1, 137, 154, 180, 231, 235, 239, 240], "4d": 1, "8": [1, 5, 7, 27, 180, 183], "6": [1, 7], "3d": 1, "7": [1, 7, 27, 195], "5": [1, 172, 239], "2d": 1, "4": [1, 5, 10, 11, 27, 62, 65, 113, 115, 172, 194, 240], "1d": 1, "15": 1, "3": [1, 5, 7, 27, 83, 155, 183, 188, 189, 192, 212], "do": [1, 26, 87, 128, 139, 178, 183, 186, 188, 189, 191, 192, 235, 236, 238, 239, 241, 242], "doe": [1, 15, 131, 172, 180, 183, 186, 187, 188, 189, 190, 192, 195, 235, 239, 241, 242], "second": [1, 12, 65, 67, 69, 70, 71, 72, 90, 102, 103, 110, 111, 117, 118, 120, 121, 122, 128, 131, 136, 151, 153, 158, 162, 163, 164, 167, 168, 212, 215, 223, 225, 226, 228, 229, 239], "append": [1, 40, 69, 92, 122, 214], "As": [1, 112, 136, 162, 163, 164, 165, 183, 191, 195, 241], "impli": [1, 162, 163, 164, 165, 238, 239], "__setitem__": [1, 155, 171, 185], "Such": [1, 187, 235], "right": [1, 69, 71, 148, 186, 228, 238], "hand": [1, 180], "left": [1, 5, 7, 60, 69, 98, 100, 172, 180, 215, 216, 228, 239], "index": [1, 5, 16, 17, 18, 32, 34, 49, 57, 82, 94, 126, 130, 151, 155, 162, 163, 164, 171, 185, 199, 203, 207, 210, 239, 241], "perform": [1, 5, 13, 14, 26, 40, 59, 60, 87, 122, 128, 158, 172, 186, 187, 188, 189, 190, 191, 197, 199, 202, 203, 204, 206, 207, 208, 210, 228, 229, 235, 239, 240, 241], "empti": [1, 13, 14, 15, 137, 154, 171, 172, 185, 231, 239], "ok": 1, "allow": [1, 26, 136, 140, 172, 185, 186, 187, 189, 192, 194, 235, 241], "NOT": [1, 119, 238], "adher": [2, 7, 8, 171, 172, 183, 234, 239], "convent": [2, 7, 10, 11, 26, 40, 61, 62, 64, 65, 66, 113, 115, 122, 136, 148, 171, 172, 178, 188, 192, 234, 235, 240], "each": [2, 9, 10, 11, 12, 20, 21, 22, 28, 30, 31, 33, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 76, 78, 84, 85, 87, 90, 91, 93, 97, 98, 102, 103, 105, 107, 108, 109, 110, 111, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 126, 128, 129, 130, 131, 135, 136, 138, 139, 142, 143, 144, 145, 146, 148, 149, 151, 153, 156, 157, 158, 161, 162, 163, 172, 183, 185, 187, 191, 195, 207, 211, 212, 213, 217, 219, 220, 221, 224, 225, 226, 227, 228, 229, 234, 235, 239, 240, 241], "float": [2, 9, 10, 11, 12, 13, 14, 15, 20, 21, 24, 25, 28, 29, 30, 31, 33, 34, 35, 37, 39, 40, 41, 42, 43, 44, 47, 49, 50, 51, 60, 61, 62, 63, 64, 65, 66, 76, 78, 79, 80, 81, 83, 84, 85, 87, 88, 90, 91, 93, 94, 95, 97, 98, 100, 101, 105, 106, 107, 108, 109, 112, 113, 114, 115, 116, 117, 122, 124, 125, 127, 128, 129, 130, 131, 132, 133, 136, 137, 138, 139, 141, 143, 144, 145, 146, 148, 149, 152, 153, 154, 156, 157, 158, 161, 162, 163, 164, 165, 166, 167, 169, 171, 178, 185, 187, 188, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 213, 215, 216, 217, 219, 220, 221, 224, 225, 226, 227, 228, 229, 231, 233, 235, 239, 240], "point": [2, 9, 10, 11, 12, 13, 14, 15, 20, 24, 25, 29, 34, 35, 40, 41, 42, 44, 47, 50, 51, 60, 61, 62, 63, 64, 65, 66, 76, 78, 79, 80, 81, 83, 84, 85, 87, 88, 90, 91, 93, 94, 95, 97, 98, 100, 101, 105, 106, 107, 108, 109, 112, 113, 114, 115, 116, 117, 122, 124, 125, 127, 128, 129, 130, 131, 132, 133, 136, 137, 138, 139, 141, 143, 144, 145, 146, 148, 149, 152, 153, 154, 156, 157, 158, 161, 162, 163, 164, 165, 166, 167, 169, 171, 178, 185, 187, 188, 192, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 213, 215, 216, 217, 219, 220, 221, 224, 225, 226, 227, 228, 229, 231, 233, 235, 239, 241], "creat": [3, 15, 60, 88, 89, 94, 100, 101, 112, 132, 133, 169, 170, 177, 183, 192, 198, 209, 235, 239], "true": [5, 13, 14, 16, 17, 18, 24, 25, 29, 35, 60, 63, 75, 90, 95, 98, 107, 108, 109, 112, 118, 119, 120, 121, 124, 125, 127, 130, 131, 137, 140, 147, 152, 154, 162, 163, 164, 165, 166, 168, 172, 185, 211, 219, 228, 233, 235], "fals": [5, 13, 14, 16, 17, 18, 24, 25, 29, 35, 60, 63, 75, 90, 107, 108, 109, 112, 118, 119, 120, 121, 124, 125, 127, 131, 137, 140, 147, 152, 154, 162, 163, 164, 165, 166, 172, 211, 219, 228, 233], "bit": [5, 68, 69, 71, 95, 104, 137, 154, 180, 185, 187, 231], "sign": [5, 9, 10, 11, 12, 15, 20, 41, 44, 62, 65, 66, 71, 85, 87, 91, 93, 98, 106, 113, 115, 128, 129, 136, 137, 139, 146, 148, 154, 157, 162, 163, 164, 165, 171, 178, 185, 188, 225, 226, 231], "exist": [5, 7, 60, 77, 140, 183, 185, 188, 191, 192, 217, 236, 239, 240], "interv": [5, 10, 11, 13, 14, 15, 61, 62, 64, 66, 92, 112, 113, 115, 151, 159, 160, 167, 172, 197, 199, 201, 202, 203, 205, 206, 207, 208, 210, 212, 236], "128": 5, "127": 5, "16": [5, 180], "32": [5, 180], "767": 5, "147": 5, "483": 5, "647": 5, "64": [5, 180], "9": [5, 27], "223": 5, "372": 5, "036": 5, "854": 5, "775": 5, "807": 5, "unsign": [5, 106, 137, 154, 171, 231], "255": 5, "65": 5, "535": [5, 185], "294": 5, "967": 5, "295": 5, "18": 5, "446": [5, 185], "744": [5, 185], "073": 5, "709": [5, 185], "551": [5, 185], "615": 5, "ieee": [5, 12, 65, 79, 80, 81, 83, 87, 93, 95, 115, 128, 139, 148, 156, 157, 171, 178, 187, 188, 239], "754": [5, 12, 65, 79, 80, 81, 83, 87, 93, 95, 115, 128, 139, 148, 156, 157, 171, 178, 187, 188, 239], "singl": [5, 7, 24, 25, 29, 34, 35, 162, 163, 171, 180, 185, 186, 188, 191, 192, 195, 235, 239, 240, 241], "precis": [5, 9, 20, 42, 60, 95, 100, 101, 105, 128, 138, 148, 180, 185, 187, 201, 205, 206, 207, 208, 210, 215, 216, 219, 226, 228, 229, 233, 239], "2019": [5, 12, 87, 93, 115, 128, 171, 187, 239, 241], "doubl": [5, 158, 180, 185], "imaginari": [5, 10, 11, 12, 13, 14, 44, 61, 62, 63, 64, 66, 78, 85, 87, 90, 91, 93, 95, 105, 113, 115, 128, 129, 130, 131, 132, 133, 136, 143, 146, 148, 157, 185, 188], "compon": [5, 10, 11, 12, 13, 14, 44, 62, 63, 66, 78, 85, 87, 90, 91, 93, 95, 105, 113, 115, 128, 129, 130, 131, 132, 133, 136, 138, 143, 146, 148, 156, 157, 162, 163, 164, 165, 185, 188, 200, 209], "requir": [5, 10, 11, 59, 61, 62, 63, 64, 66, 106, 148, 151, 155, 157, 171, 172, 178, 180, 183, 185, 186, 187, 188, 189, 190, 191, 192, 195, 234, 235, 239, 240, 241], "subnorm": 5, "k": [5, 40, 94, 122, 130, 159, 160, 172, 211, 215, 216, 217, 225, 227, 228, 229, 231, 239], "denorm": 5, "us": [5, 7, 19, 26, 27, 59, 60, 82, 95, 112, 114, 116, 142, 162, 164, 172, 180, 185, 187, 188, 189, 190, 191, 192, 194, 195, 196, 197, 199, 201, 202, 203, 205, 206, 207, 208, 210, 234, 235, 236, 237, 238, 239, 242], "gradual": [5, 239], "underflow": [5, 9, 87, 98, 226], "hardwar": [5, 53, 187, 191, 192, 215, 228, 235, 239], "univers": [5, 186, 192, 235, 239], "mani": [5, 239, 241], "platform": 5, "compil": [5, 157, 183, 186, 190, 239], "toggl": 5, "daz": 5, "flush": 5, "ftz": 5, "increas": [5, 187, 240], "guard": 5, "against": [5, 40, 73, 122, 157, 172, 221, 224, 242], "time": [5, 7, 16, 17, 162, 163, 183, 185, 190, 191, 194, 211, 215, 216, 217, 225, 227, 228, 235, 239, 241], "attack": 5, "accordingli": [5, 10, 11, 13, 14, 16, 17, 59, 61, 62, 64, 66, 87, 93, 98, 112, 113, 115, 124, 125, 126, 127, 128, 130, 137, 148, 152, 154, 162, 163, 164, 165, 166, 172, 180, 187, 188, 189, 190, 192, 219, 225, 233, 235], "vari": [5, 157, 162, 163, 164, 165, 180, 187], "beyond": [5, 142, 180, 239], "specifi": [5, 13, 14, 15, 16, 17, 18, 26, 29, 59, 60, 63, 74, 77, 88, 92, 95, 96, 100, 106, 112, 132, 137, 139, 142, 150, 151, 154, 155, 158, 159, 160, 162, 163, 164, 165, 167, 169, 172, 180, 185, 187, 188, 189, 191, 192, 195, 197, 199, 200, 201, 202, 203, 205, 206, 207, 208, 210, 212, 214, 231, 233, 235, 236, 239, 241, 242], "function": [5, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 28, 29, 30, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 60, 61, 62, 64, 65, 66, 74, 77, 84, 85, 91, 93, 96, 106, 112, 113, 115, 118, 119, 120, 121, 122, 125, 130, 136, 139, 140, 144, 145, 146, 147, 148, 151, 152, 155, 156, 157, 158, 162, 163, 164, 165, 166, 167, 171, 183, 185, 186, 188, 189, 190, 191, 192, 194, 195, 197, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 210, 211, 212, 215, 216, 217, 221, 224, 225, 226, 227, 228, 229, 234, 235, 236, 239, 240, 241], "attribut": [5, 23, 95, 104, 171, 182, 185, 236, 239, 240, 241], "wai": [5, 63, 183, 186, 192, 236, 239, 240, 241, 242], "f4": [5, 180], "ensur": [5, 26, 183, 187, 235, 239, 240, 241], "portabl": [5, 59, 112, 187, 189, 192, 239], "consum": [5, 26, 63, 183, 188, 189, 195, 234, 239, 240], "recommend": [5, 7, 19, 23, 26, 112, 118, 119, 120, 121, 125, 139, 152, 166, 178, 185, 187, 191, 192, 239], "either": [5, 9, 10, 11, 12, 24, 26, 35, 40, 65, 85, 87, 90, 91, 93, 95, 98, 99, 106, 107, 108, 112, 113, 114, 115, 116, 117, 122, 128, 137, 139, 144, 145, 148, 154, 156, 157, 158, 172, 187, 188, 189, 195, 226, 231, 239, 240, 242], "whether": [5, 13, 14, 59, 60, 63, 86, 106, 109, 112, 140, 185, 192, 211, 215, 216, 225, 227, 234, 238, 239, 241], "otherwis": [5, 13, 14, 15, 16, 17, 59, 60, 63, 75, 124, 125, 127, 137, 140, 144, 152, 154, 166, 167, 168, 171, 172, 183, 192, 211, 213, 219, 226, 227, 233, 238], "note": [5, 9, 10, 11, 12, 13, 14, 20, 21, 24, 25, 26, 29, 35, 40, 42, 43, 44, 45, 47, 50, 51, 61, 62, 63, 64, 65, 66, 76, 84, 85, 87, 90, 91, 93, 94, 95, 97, 98, 100, 101, 106, 107, 108, 109, 113, 114, 115, 116, 117, 122, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 135, 136, 137, 138, 139, 143, 144, 145, 146, 148, 149, 152, 153, 154, 156, 157, 158, 161, 162, 163, 164, 165, 166, 167, 171, 172, 185, 191, 195, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 215, 216, 217, 219, 220, 221, 223, 224, 225, 226, 227, 228, 229, 231, 233, 239, 240, 241, 242], "possibl": [5, 60, 98, 124, 127, 140, 156, 157, 183, 186, 187, 188, 189, 191, 192, 195, 235, 239, 240, 241, 242], "multipl": [5, 7, 13, 14, 16, 17, 40, 42, 44, 122, 124, 125, 127, 128, 129, 137, 152, 154, 166, 172, 183, 186, 188, 191, 192, 194, 195, 216, 217, 235, 236, 239, 241], "In": [5, 12, 19, 59, 87, 90, 98, 106, 108, 109, 128, 131, 139, 144, 171, 172, 180, 187, 188, 191, 192, 206, 207, 225, 226, 228, 235, 236, 240, 241, 242], "clearli": [5, 59, 106, 178, 188, 235, 236], "warn": 5, "about": [5, 7, 26, 95, 104, 189, 235, 239, 241, 242], "document": [5, 7, 59, 98, 106, 178, 186, 188, 191, 234, 236, 238, 240, 241, 242], "": [5, 29, 32, 49, 58, 59, 60, 79, 98, 126, 139, 152, 159, 160, 166, 172, 178, 183, 185, 186, 187, 188, 189, 191, 192, 195, 199, 203, 207, 210, 224, 228, 229, 235, 236, 239, 241], "organ": [5, 185, 235, 240, 241], "within": [5, 15, 27, 172, 180, 183, 185, 188, 192, 197, 199, 202, 203, 206, 207, 208, 210, 239], "accord": [5, 12, 60, 71, 75, 87, 95, 98, 100, 112, 128, 136, 144, 152, 166, 167, 172, 187, 188, 212], "These": [5, 189, 215, 240], "intend": [5, 137, 154, 183, 231], "posit": [7, 9, 10, 11, 13, 14, 20, 26, 46, 62, 65, 66, 80, 87, 92, 94, 95, 98, 108, 113, 115, 128, 130, 139, 142, 146, 148, 157, 171, 172, 183, 185, 187, 195, 209, 211, 225, 240], "paramet": [7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 183, 185, 195, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 219, 220, 221, 223, 224, 225, 226, 227, 228, 229, 231, 233, 235], "extern": [7, 241], "usabl": 7, "name": [7, 23, 98, 162, 163, 164, 172, 188, 215, 224, 225, 226, 228, 234, 239, 240], "when": [7, 12, 16, 17, 26, 47, 49, 63, 87, 93, 98, 112, 115, 124, 127, 128, 136, 140, 152, 157, 166, 168, 171, 172, 180, 185, 186, 188, 189, 190, 191, 194, 195, 197, 199, 201, 202, 203, 205, 206, 207, 208, 210, 211, 215, 217, 221, 224, 225, 226, 227, 228, 229, 235, 239, 240, 241], "accept": [7, 26, 118, 119, 120, 121, 125, 139, 152, 166, 183, 236], "call": [7, 34, 191, 192, 226, 239, 240, 241], "argument": [7, 10, 11, 26, 40, 61, 62, 64, 65, 66, 84, 113, 115, 122, 137, 141, 145, 148, 154, 156, 157, 158, 171, 180, 185, 187, 189, 191, 192, 197, 199, 202, 203, 206, 207, 208, 210, 231, 235, 239, 240, 241], "map": [7, 188, 189], "base": [7, 47, 57, 58, 91, 92, 113, 114, 115, 116, 136, 162, 163, 164, 165, 172, 185, 189, 195, 235, 236, 239, 240, 241], "sole": [7, 172, 178, 235], "incompat": [7, 26, 74, 183, 236, 239], "normal": [7, 77, 151, 197, 199, 201, 202, 203, 205, 206, 207, 208, 210], "practic": [7, 19, 172, 235, 240], "avail": [7, 183, 191, 234, 236, 240], "still": [7, 195, 235, 240, 241, 242], "consid": [7, 63, 118, 119, 120, 121, 162, 163, 164, 165, 188, 192, 209, 224, 235, 239, 241, 242], "compliant": [7, 51, 87, 93, 112, 115, 118, 119, 120, 121, 124, 125, 127, 152, 166, 187, 190, 192, 236, 239], "namespac": [7, 23, 183, 185, 196, 234, 235, 236, 239, 242], "altern": [7, 189, 191, 242], "thei": [7, 26, 180, 186, 191, 192, 194, 195, 234, 235, 236, 239, 241, 242], "guidanc": [7, 49, 185, 186, 239], "were": [7, 98, 185, 239], "option": [7, 13, 14, 15, 16, 17, 23, 26, 57, 58, 59, 60, 77, 88, 89, 94, 96, 100, 101, 112, 124, 125, 127, 132, 133, 137, 140, 142, 152, 154, 155, 166, 169, 170, 171, 185, 194, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 219, 221, 224, 231, 233, 235, 240, 241], "keyword": [7, 126, 137, 154, 171, 185, 189, 192, 194, 195, 231, 235, 236, 239, 240, 241], "lead": [7, 98, 188, 225, 228, 239], "readabl": [7, 180, 235, 240], "code": [7, 59, 180, 189, 190, 192, 195, 235, 239, 240, 241], "easier": [7, 183, 189, 235], "evolv": [7, 183, 235], "over": [7, 13, 14, 112, 124, 125, 127, 137, 152, 154, 155, 158, 166, 167, 187, 188, 189, 191, 192, 194, 197, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 210, 212, 231, 233, 235, 239], "ad": [7, 9, 10, 11, 12, 13, 14, 20, 21, 24, 26, 29, 35, 40, 42, 43, 44, 45, 47, 50, 51, 60, 61, 62, 63, 64, 66, 84, 85, 87, 90, 91, 93, 94, 95, 100, 101, 107, 108, 109, 112, 113, 114, 115, 116, 122, 126, 128, 129, 130, 131, 132, 133, 135, 136, 137, 143, 144, 145, 146, 148, 149, 153, 154, 156, 157, 158, 162, 163, 164, 165, 167, 172, 184, 185, 186, 192, 211, 212, 213, 215, 216, 217, 219, 220, 221, 223, 224, 225, 226, 227, 228, 229, 231, 233, 236], "worri": 7, "xi": [7, 126], "annot": [7, 185, 195, 239], "out": [7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 172, 185, 186, 189, 191, 194, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 219, 220, 221, 223, 224, 225, 226, 227, 228, 229, 231, 233, 238, 241], "themselv": [7, 192], "individu": [7, 192, 194, 195, 198, 209, 239, 240], "descript": [7, 185, 187, 219, 233], "aim": [7, 186, 195, 234, 235, 236, 239, 240, 241, 242], "strongli": [7, 189, 241], "look": [7, 241], "like": [7, 183, 186, 188, 189, 195, 236, 239, 240, 241], "funcnam": 7, "key1": 7, "key2": 7, "none": [7, 13, 14, 15, 16, 17, 23, 26, 32, 49, 57, 58, 59, 60, 77, 82, 88, 89, 94, 96, 100, 101, 112, 124, 125, 127, 132, 133, 137, 140, 142, 152, 154, 155, 166, 169, 170, 172, 185, 192, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 219, 221, 224, 231, 232, 233, 239, 240, 242], "int": [7, 13, 14, 15, 16, 17, 18, 21, 22, 26, 27, 28, 30, 31, 32, 33, 34, 35, 37, 38, 39, 41, 42, 43, 45, 47, 48, 49, 50, 51, 52, 56, 57, 58, 59, 60, 74, 77, 88, 92, 94, 95, 96, 98, 100, 101, 104, 112, 124, 125, 127, 132, 134, 137, 140, 142, 147, 150, 151, 152, 154, 155, 158, 159, 160, 166, 167, 169, 172, 180, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 212, 214, 219, 220, 230, 231, 232, 233, 240], "str": [7, 8, 23, 106, 126, 240], "modulo": 7, "self": [7, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 59, 86, 185, 241], "yyyi": [8, 23, 236], "mm": [8, 23, 236], "string": [8, 23, 106, 185, 236, 239], "version": [8, 9, 10, 11, 12, 13, 14, 20, 21, 23, 24, 25, 26, 29, 35, 40, 42, 43, 44, 45, 47, 50, 51, 60, 61, 62, 63, 64, 66, 84, 85, 87, 90, 91, 93, 94, 95, 100, 101, 104, 106, 107, 108, 109, 112, 113, 114, 115, 116, 122, 126, 128, 129, 130, 131, 132, 133, 135, 136, 137, 138, 143, 144, 145, 146, 148, 149, 153, 154, 156, 157, 158, 162, 163, 164, 165, 167, 171, 183, 186, 192, 194, 195, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 215, 216, 217, 219, 220, 221, 223, 224, 225, 226, 227, 228, 229, 231, 233, 237, 239, 241], "calcul": [9, 10, 11, 12, 20, 21, 42, 47, 50, 61, 62, 64, 65, 66, 84, 85, 87, 91, 93, 113, 114, 115, 116, 117, 124, 125, 127, 128, 136, 137, 145, 146, 148, 152, 153, 154, 156, 157, 166, 185, 226], "absolut": [9, 20, 144, 187, 189, 219, 220, 226, 235], "x_i": [9, 10, 11, 61, 62, 64, 66, 68, 76, 78, 84, 85, 91, 93, 97, 105, 107, 108, 109, 113, 114, 115, 116, 119, 124, 125, 127, 129, 135, 138, 143, 144, 145, 146, 148, 149, 152, 156, 157, 161, 166], "input": [9, 10, 11, 12, 13, 14, 16, 17, 18, 20, 30, 41, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 75, 76, 77, 78, 84, 85, 87, 89, 90, 91, 92, 93, 96, 97, 98, 99, 101, 102, 103, 105, 106, 107, 108, 109, 110, 111, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 170, 171, 178, 183, 185, 188, 190, 192, 195, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 219, 220, 221, 223, 224, 225, 226, 228, 229, 231, 233, 235, 239, 241], "ha": [9, 13, 14, 20, 23, 29, 34, 35, 40, 44, 47, 55, 84, 85, 87, 91, 92, 93, 98, 101, 122, 125, 126, 128, 129, 130, 136, 137, 145, 146, 150, 152, 154, 155, 156, 157, 158, 162, 163, 164, 165, 166, 172, 180, 183, 188, 191, 192, 194, 212, 219, 227, 228, 231, 233, 235, 236, 239, 241, 242], "magnitud": [9, 12, 20, 87, 98, 128, 185, 228, 229], "minimum": [9, 17, 20, 44, 124, 127, 129, 171, 185, 187], "represent": [9, 12, 20, 29, 44, 67, 70, 72, 79, 80, 81, 83, 87, 95, 98, 104, 128, 129, 156, 157, 187, 240], "known": [9, 144, 187, 190], "norm": [9, 197, 199, 201, 202, 203, 205, 206, 207, 208, 210, 219, 233, 235], "modulu": [9, 139], "z": [9, 10, 11, 61, 62, 64, 66, 113, 188], "bj": [9, 12, 78, 87, 128], "comput": [9, 12, 28, 31, 33, 37, 39, 40, 43, 57, 58, 67, 70, 72, 78, 86, 87, 90, 92, 98, 102, 103, 110, 111, 118, 119, 120, 121, 122, 124, 125, 127, 128, 129, 130, 131, 135, 137, 152, 154, 158, 162, 163, 164, 165, 166, 167, 172, 185, 187, 190, 197, 198, 199, 201, 202, 203, 205, 206, 207, 208, 209, 210, 211, 212, 215, 216, 217, 219, 221, 224, 225, 226, 227, 228, 229, 231, 233, 235, 239], "operatornam": [9, 10, 11, 61, 62, 64, 66, 84, 85, 144, 145, 146, 156, 157, 188, 215, 216, 226, 228], "sqrt": [9, 10, 11, 61, 62, 171, 185, 188, 197, 199, 201, 202, 203, 205, 206, 207, 208, 210, 233], "take": [9, 113, 115, 136, 148, 171, 185, 192, 195, 239], "care": [9, 189, 235], "undu": [9, 190], "overflow": [9, 12, 87, 98, 112, 137, 154, 180, 226, 231, 235], "dure": [9, 40, 59, 122, 152, 166, 180, 183, 224, 239, 240], "intermedi": 9, "stage": [9, 236], "numer": [9, 12, 20, 21, 40, 42, 44, 46, 47, 50, 51, 87, 98, 106, 107, 108, 109, 122, 126, 128, 129, 135, 136, 137, 143, 144, 149, 153, 154, 158, 171, 180, 187, 197, 199, 202, 203, 206, 207, 208, 210, 212, 223, 224, 226, 231, 235, 239, 241], "contain": [9, 10, 11, 12, 13, 14, 15, 16, 17, 20, 21, 22, 23, 26, 28, 30, 31, 32, 33, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 76, 77, 78, 84, 85, 87, 88, 89, 90, 91, 93, 97, 98, 99, 102, 103, 105, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 143, 144, 145, 146, 148, 149, 152, 153, 154, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 169, 172, 185, 187, 188, 189, 191, 194, 198, 199, 200, 203, 204, 207, 209, 210, 211, 212, 213, 214, 215, 216, 217, 219, 220, 221, 223, 224, 225, 226, 227, 228, 229, 231, 233, 239, 241], "complex128": [9, 20, 106, 171, 180, 185, 201, 205, 206, 207, 208, 210, 215, 216, 219, 233], "float64": [9, 20, 106, 171, 180, 201, 205, 206, 207, 208, 210, 215, 216, 219, 233], "nan": [9, 10, 11, 12, 13, 14, 24, 25, 35, 61, 62, 63, 64, 65, 66, 76, 84, 85, 87, 90, 91, 93, 97, 98, 107, 108, 109, 113, 114, 115, 116, 117, 124, 125, 127, 128, 131, 136, 139, 143, 144, 145, 146, 148, 152, 156, 157, 161, 162, 163, 164, 165, 166, 171, 178, 188, 239], "infin": [9, 10, 11, 12, 13, 14, 24, 25, 35, 62, 63, 64, 65, 66, 76, 80, 84, 85, 87, 90, 91, 93, 97, 98, 107, 108, 113, 114, 115, 116, 117, 124, 127, 128, 131, 136, 139, 143, 145, 146, 148, 156, 157, 161, 188, 226, 233], "imag": [9, 10, 11, 12, 24, 62, 63, 66, 85, 90, 91, 93, 107, 108, 109, 112, 113, 115, 131, 143, 144, 146, 148, 157, 171, 185, 186, 239, 240, 241], "finit": [9, 10, 11, 12, 25, 35, 42, 62, 65, 66, 85, 87, 90, 91, 93, 98, 107, 108, 113, 115, 128, 131, 136, 139, 146, 148, 157, 187], "2022": [9, 10, 11, 12, 13, 14, 20, 21, 24, 25, 26, 29, 35, 40, 42, 43, 44, 45, 47, 50, 51, 60, 61, 62, 63, 64, 66, 78, 84, 85, 87, 90, 91, 93, 94, 95, 100, 101, 104, 105, 106, 107, 108, 109, 112, 113, 114, 115, 116, 122, 126, 128, 129, 130, 131, 132, 133, 135, 136, 137, 138, 143, 144, 145, 146, 148, 149, 153, 154, 156, 157, 158, 162, 163, 164, 165, 167, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 215, 216, 217, 219, 220, 221, 223, 224, 225, 226, 227, 228, 229, 231, 233], "12": [9, 10, 11, 12, 13, 14, 20, 21, 24, 25, 26, 29, 35, 40, 42, 43, 44, 45, 47, 50, 51, 60, 61, 62, 63, 64, 66, 78, 84, 85, 87, 90, 91, 93, 94, 95, 100, 101, 104, 105, 106, 107, 108, 109, 112, 113, 114, 115, 116, 122, 126, 128, 129, 130, 131, 132, 133, 135, 136, 137, 138, 143, 144, 145, 146, 148, 149, 153, 154, 156, 157, 158, 162, 163, 164, 165, 167, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 215, 216, 217, 219, 220, 221, 223, 224, 225, 226, 227, 228, 229, 231, 233, 236], "approxim": [10, 11, 47, 61, 62, 64, 65, 66, 84, 85, 91, 93, 98, 113, 114, 115, 116, 136, 145, 146, 156, 157, 187, 221, 224], "princip": [10, 11, 61, 62, 64, 66, 113, 148, 188, 235], "invers": [10, 11, 61, 62, 64, 65, 66, 188, 197, 199, 202, 203, 204, 205, 206, 207, 208, 210, 217, 220, 224, 235], "cosin": [10, 11, 84, 85, 157], "express": [10, 61, 63, 64, 65, 84, 145, 156, 172, 180, 189, 235, 238], "radian": [10, 61, 64, 65, 84, 145, 156], "arc": [10, 61, 64], "frac": [10, 11, 61, 62, 64, 66, 84, 85, 87, 112, 114, 116, 144, 145, 146, 156, 157, 188, 226], "pi": [10, 11, 61, 62, 64, 66, 85, 113, 115, 146, 156, 157, 171], "j": [10, 11, 12, 25, 61, 62, 64, 66, 85, 87, 91, 93, 112, 113, 115, 128, 144, 145, 146, 148, 156, 157, 172, 188, 215, 228, 231], "ln": [10, 11, 61, 62, 64, 66, 113], "zj": [10, 61, 62, 64, 66], "conj": [10, 11, 61, 62, 64, 66, 85, 91, 93, 113, 114, 115, 116, 146, 148, 157, 171, 185], "multi": [10, 11, 61, 62, 64, 66, 171, 188, 191, 192, 212, 241], "branch": [10, 11, 61, 62, 64, 65, 66, 84, 85, 87, 91, 93, 113, 115, 128, 136, 145, 146, 148, 156, 157, 239], "cut": [10, 11, 61, 62, 64, 66, 84, 85, 91, 93, 113, 115, 136, 145, 146, 148, 156, 157, 239], "plane": [10, 11, 61, 62, 64, 66, 84, 85, 87, 91, 93, 128, 145, 146, 148, 156, 157, 239], "By": [10, 11, 13, 14, 61, 62, 64, 65, 66, 113, 115, 124, 125, 127, 136, 137, 148, 152, 154, 166, 167, 187, 188, 212, 235, 240], "place": [10, 11, 15, 60, 61, 62, 64, 66, 88, 89, 94, 100, 101, 112, 132, 133, 142, 169, 170, 171, 178, 180, 185, 189, 192, 198, 209, 224], "line": [10, 11, 61, 62, 64, 66, 156, 157, 180, 188, 239, 240, 241, 242], "segment": [10, 11, 61, 62, 64, 66, 188], "infti": [10, 11, 61, 62, 64, 66, 84, 113, 115, 136, 148, 188], "axi": [10, 11, 13, 14, 16, 17, 18, 61, 62, 64, 66, 77, 92, 96, 113, 115, 124, 125, 127, 136, 137, 142, 147, 148, 150, 151, 152, 154, 155, 158, 166, 167, 171, 185, 197, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 210, 212, 219, 232, 233, 239], "rang": [10, 61, 62, 64, 66, 113, 115, 137, 148, 154, 172, 185, 231, 239], "strip": [10, 61, 62, 64, 66, 113, 115], "unbound": [10, 61, 62, 64, 66, 113, 115], "along": [10, 11, 13, 14, 16, 17, 18, 61, 62, 64, 66, 77, 94, 96, 113, 115, 124, 125, 127, 137, 142, 147, 148, 151, 152, 154, 155, 156, 157, 166, 167, 172, 185, 197, 199, 201, 202, 203, 205, 206, 207, 208, 210, 212, 231, 233, 235], "c99": [10, 11, 61, 62, 64, 66, 87, 113, 115, 128, 136, 148, 188, 236], "provision": [10, 11, 61, 62, 64, 66, 113, 115, 136, 148, 188], "statu": [10, 11, 61, 62, 64, 66, 113, 115, 136, 148, 188], "less": [10, 11, 39, 47, 61, 65, 66, 76, 87, 98, 113, 114, 115, 116, 136, 139, 144, 148, 152, 166, 171, 172, 189, 197, 199, 201, 202, 203, 205, 206, 207, 208, 210, 219, 220, 221, 224, 233, 239], "\u03c0": [10, 64, 65, 83], "0j": [10, 11, 12, 25, 62, 63, 66, 85, 91, 93, 94, 113, 115, 132, 133, 144, 146, 148, 157, 188, 226], "nonzero": [10, 11, 12, 62, 66, 85, 87, 91, 93, 98, 128, 146, 157, 171, 172, 185, 224], "3\u03c0": [10, 65], "hyperbol": [11, 62, 66, 84, 85, 145, 146, 156, 157, 188], "aco": [11, 61, 171, 185, 187], "simpli": [11, 93, 115, 186, 195, 239, 241], "upper": [11, 94, 160, 185, 211, 225], "half": [11, 15, 66, 112, 148, 172, 200], "area": [11, 62, 66], "sector": [11, 62, 66], "\u03c0j": [11, 62, 66, 113, 115], "3\u03c0j": [11, 113, 115], "sum": [12, 21, 117, 171, 185, 219, 231, 233, 235], "x1_i": [12, 65, 67, 69, 70, 71, 72, 87, 90, 98, 102, 103, 110, 111, 117, 118, 120, 121, 128, 131, 136, 139, 153, 168, 185], "x2_i": [12, 65, 67, 69, 70, 71, 72, 87, 90, 98, 102, 103, 110, 111, 117, 118, 120, 121, 128, 131, 136, 139, 153, 168, 185], "first": [12, 16, 17, 19, 65, 67, 69, 70, 71, 72, 90, 102, 103, 110, 111, 117, 118, 120, 121, 122, 128, 131, 136, 142, 151, 153, 156, 157, 158, 162, 163, 164, 167, 168, 172, 188, 212, 215, 223, 225, 226, 228, 229, 235, 239, 240, 241, 242], "remain": [12, 87, 90, 98, 106, 108, 109, 128, 131, 139, 140, 144, 172, 189, 210], "neither": [12, 40, 87, 98, 122, 128, 158, 228, 240], "nor": [12, 87, 98, 128, 228, 240], "mathemat": [12, 19, 65, 83, 84, 85, 87, 93, 98, 113, 115, 128, 145, 146, 156, 157, 171, 188, 219, 233], "round": [12, 15, 76, 87, 97, 98, 128, 148, 161, 171, 185, 187], "nearest": [12, 87, 128, 143, 161, 187], "mode": [12, 87, 128, 187, 197, 199, 201, 202, 203, 205, 206, 207, 208, 210, 225], "too": [12, 87, 98, 128, 235, 239], "larg": [12, 87, 98, 128, 195, 226, 239], "appropri": [12, 26, 87, 98, 128, 188], "commut": 12, "associ": [12, 42, 128, 180, 221, 224, 227, 235, 238, 240], "tabl": [12, 87, 128, 171], "c": [12, 87, 90, 112, 128, 130, 131, 151, 152, 157, 166, 172, 185, 188, 191, 193, 211, 215, 216, 217, 225, 227, 228, 236, 238, 239, 241], "d": [12, 87, 90, 112, 128, 131, 180, 198, 209], "dj": [12, 87, 128], "independ": [12, 87, 128, 143, 172, 183, 191, 212, 225, 227, 235, 236, 239], "abov": [12, 87, 90, 113, 115, 128, 131, 136, 137, 148, 154, 159, 160, 172, 180, 188, 189, 191, 192, 214, 215, 231, 235, 238, 241], "similarli": [12, 57, 106, 126, 180, 211, 228], "henc": [12, 78, 92, 130, 162, 163, 164, 165, 172, 186, 188, 189, 190, 191, 194, 195, 239, 241], "z1": 12, "z2": 12, "keepdim": [13, 14, 16, 17, 124, 125, 127, 137, 152, 154, 166, 219, 233], "bool": [13, 14, 16, 17, 18, 22, 24, 28, 31, 33, 37, 39, 43, 45, 49, 52, 60, 63, 75, 86, 90, 100, 101, 102, 103, 106, 107, 108, 109, 110, 111, 112, 118, 119, 120, 121, 124, 125, 127, 131, 137, 140, 147, 152, 154, 166, 171, 180, 185, 211, 219, 228, 233], "test": [13, 14, 86, 107, 108, 109, 185, 187, 237, 239, 240, 241], "evalu": [13, 14, 22, 30, 36, 38, 41, 44, 45, 46, 48, 51, 52, 91, 93, 113, 114, 115, 116, 129, 135, 144, 149, 183, 239], "union": [13, 14, 15, 21, 22, 26, 28, 30, 31, 32, 33, 37, 38, 39, 41, 42, 43, 45, 47, 48, 49, 50, 51, 52, 59, 60, 75, 77, 88, 95, 96, 100, 101, 104, 106, 112, 124, 125, 127, 132, 137, 141, 142, 150, 151, 152, 154, 158, 166, 169, 200, 204, 219, 221, 224, 233, 240], "ax": [13, 14, 16, 17, 19, 55, 56, 96, 124, 125, 127, 134, 137, 142, 150, 152, 154, 158, 166, 167, 172, 185, 199, 200, 203, 204, 207, 210, 212, 219, 224, 227, 230, 233], "logic": [13, 14, 24, 87, 90, 118, 119, 120, 121, 128, 131, 192, 199, 203, 207, 210], "AND": [13, 67, 90, 118, 238], "reduct": [13, 14], "default": [13, 14, 15, 16, 17, 18, 23, 26, 59, 60, 63, 77, 88, 89, 94, 96, 100, 101, 112, 124, 125, 126, 127, 130, 132, 133, 137, 140, 142, 147, 151, 152, 154, 158, 159, 160, 162, 163, 164, 166, 167, 169, 170, 171, 172, 185, 187, 192, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 214, 219, 221, 224, 225, 228, 231, 233], "entir": [13, 14, 84, 85, 91, 93, 124, 125, 127, 137, 145, 146, 152, 154, 166], "valid": [13, 14, 27, 92, 151, 158, 172, 187, 197, 199, 201, 202, 203, 205, 206, 207, 208, 210, 215, 225, 228, 240], "count": [13, 14, 77, 96, 155, 162, 163, 167, 172, 185, 197, 199, 201, 202, 203, 205, 206, 207, 208, 210, 212, 216], "last": [13, 14, 18, 19, 55, 77, 96, 142, 147, 151, 155, 158, 167, 172, 197, 199, 201, 202, 203, 205, 206, 207, 208, 210, 212, 214, 219, 225, 228, 231], "invalid": [13, 14, 23, 92, 167, 212, 239], "rais": [13, 14, 19, 23, 26, 29, 34, 35, 40, 47, 51, 55, 60, 74, 87, 91, 92, 112, 122, 124, 127, 130, 136, 140, 150, 151, 167, 172, 180, 183, 185, 192, 212, 220, 239], "wa": [13, 14, 19, 98, 124, 125, 127, 137, 152, 154, 166, 180, 192, 195, 239, 241], "OR": [14, 24, 70, 120, 131, 238], "start": [15, 112, 172, 185, 195, 239, 241], "stop": [15, 112, 172, 185, 240], "step": [15, 112, 172, 240], "evenli": [15, 112], "space": [15, 112, 198, 200, 209], "open": [15, 112, 172], "inclus": [15, 172, 239], "end": [15, 65, 84, 112, 144, 145, 156, 157, 178, 189, 226, 239, 240, 241], "exclus": [15, 172], "distanc": 15, "between": [15, 26, 47, 51, 65, 77, 87, 90, 95, 112, 131, 136, 151, 162, 163, 164, 165, 180, 188, 189, 192, 198, 209, 235, 239, 241], "adjac": 15, "output": [15, 60, 77, 88, 89, 92, 94, 96, 100, 101, 112, 126, 132, 133, 140, 142, 150, 151, 155, 169, 170, 183, 185, 188, 189, 192, 193, 195, 197, 199, 201, 202, 203, 206, 207, 208, 210, 231, 239], "infer": [15, 60, 89, 100, 101, 133, 140, 170, 190, 235, 240], "cannot": [15, 26, 57, 156, 157, 185, 188, 190, 239], "guarante": [15, 59, 162, 164, 183, 188, 192, 239, 241], "error": [15, 19, 23, 26, 51, 55, 87, 124, 127, 156, 157, 180, 187, 226, 239], "affect": [15, 49, 189, 192], "ceil": [15, 171], "indic": [16, 17, 18, 60, 86, 106, 112, 130, 140, 142, 144, 155, 159, 160, 162, 164, 172, 180, 185, 233, 239], "occur": [16, 17, 75, 156, 157, 162, 163, 164, 165, 188, 240], "occurr": [16, 17, 162], "comparison": [16, 17, 18, 31, 33, 37, 39, 90, 102, 103, 110, 111, 124, 127, 131, 147, 171, 188, 236, 240], "search": [16, 17, 171], "flatten": [16, 17, 77, 142, 162, 163, 164, 165, 233, 235], "descend": [18, 147, 228, 229], "stabl": [18, 147, 191], "sort": [18, 171, 185, 215, 216, 228, 229], "ascend": [18, 147, 185], "stabil": [18, 147], "maintain": [18, 147, 186, 239, 241], "rel": [18, 19, 55, 96, 142, 147, 185, 214, 221, 224, 231], "compar": [18, 147, 162, 163, 164, 165, 187, 192, 240, 242], "properti": [19, 53, 54, 55, 56, 57, 58, 185, 188, 192, 195, 239], "transpos": [19, 40, 55, 122, 123, 158, 211, 215, 224, 228, 235], "instanc": [19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 55, 59, 86, 180, 183, 185, 192], "permut": [19, 55, 134], "revers": [19, 55, 65, 96], "origin": [19, 55, 65, 140, 142, 185, 189, 197, 199, 202, 203, 206, 207, 208, 210, 239, 240], "limit": [19, 95, 104, 106, 187, 235, 238], "matric": [19, 40, 55, 122, 123, 126, 159, 160, 211, 213, 214, 215, 216, 217, 219, 220, 221, 224, 225, 226, 227, 228, 229, 231, 235], "deviat": [19, 152, 187, 239, 241], "et": [19, 228, 229], "al": 19, "intent": [19, 65], "found": [19, 188, 191, 241, 242], "problemat": [19, 63, 186, 189], "conflict": 19, "definit": [19, 84, 85, 145, 146, 156, 157, 185, 211, 240], "batch": [19, 233, 235], "cetera": [19, 228, 229], "permute_dim": [19, 171], "interfac": [19, 191, 235, 239, 241], "ab": [20, 136, 171, 185, 219, 233], "augend": 21, "addend": 21, "self_i": [22, 28, 30, 31, 33, 36, 37, 38, 39, 41, 43, 44, 45, 46, 48, 50, 51, 52], "other_i": [22, 28, 30, 31, 33, 37, 38, 39, 41, 43, 45, 47, 48, 50, 51, 52], "bitwise_and": [22, 171], "api_vers": [23, 239], "object": [23, 24, 25, 26, 29, 34, 35, 53, 57, 59, 60, 86, 95, 99, 104, 171, 172, 180, 183, 185, 189, 191, 192, 195, 234, 236, 240, 241], "form": [23, 40, 78, 122, 123, 159, 160, 189, 211, 213, 214, 215, 216, 217, 219, 220, 221, 224, 225, 226, 227, 228, 229, 231, 236, 240], "2020": [23, 195, 236, 238, 239], "10": [23, 27, 114, 172, 239], "latest": [23, 191], "modul": [23, 183, 234, 236, 240, 241, 242], "It": [23, 26, 183, 189, 191, 239, 241, 242], "everi": [23, 100, 101, 225, 239], "top": [23, 183, 239, 241], "level": [23, 180, 186, 191, 192, 234, 235, 239, 240], "public": [23, 234, 240, 241], "well": [23, 186, 188, 191, 192, 225, 241, 242], "part": [23, 35, 159, 160, 180, 185, 191, 194, 236, 239, 241], "convert": [24, 25, 29, 34, 35, 60, 180, 185, 186, 188, 191, 239, 241], "handl": [24, 26, 61, 64, 84, 114, 116, 136, 137, 144, 145, 149, 154, 156, 185, 186, 188, 189, 192, 231, 239], "new": [25, 92, 95, 99, 100, 101, 104, 106, 132, 133, 138, 140, 151, 169, 170, 183, 185, 186, 189, 191, 192, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 236, 239, 240, 241], "stream": [26, 59, 192], "pycapsul": 26, "export": [26, 185, 240], "from_dlpack": [26, 27, 171, 185, 191], "dlpack": [26, 27, 185], "capsul": 26, "pointer": 26, "produc": [26, 215, 225, 228, 241], "instruct": 26, "safe": [26, 112], "insert": [26, 92, 185], "wait": 26, "event": [26, 238], "signal": [26, 201, 205, 241], "ownership": 26, "stai": 26, "On": 26, "cpu": [26, 27, 183, 186, 191, 192, 235, 239, 241], "queue": [26, 59, 192], "similar": [26, 139, 186, 188, 190, 239, 240, 241], "mechan": [26, 99, 183, 185, 186, 193, 234, 239], "most": [26, 183, 192, 215, 235, 239, 241], "yet": [26, 195, 239], "sycl": 26, "want": [26, 87, 128, 186, 190, 191, 239, 241, 242], "cl": 26, "agre": 26, "assum": [26, 84, 145, 156, 183, 188, 192, 234, 239], "legaci": 26, "per": [26, 186, 191, 237], "thread": [26, 239, 241], "disallow": 26, "due": [26, 42, 57, 58, 112, 128, 155, 187, 188, 235, 239], "ambigu": [26, 63, 98, 189], "explicitli": [26, 40, 63, 122, 158, 172, 183, 185, 211, 215, 216, 225, 227, 235, 239, 241], "prefer": [26, 98, 183, 235, 241], "develop": [26, 187, 239, 240, 241, 242], "who": [26, 187, 239, 240], "think": 26, "cost": 26, "interchang": [26, 99, 183, 186, 193, 239], "detail": [26, 99, 130, 162, 163, 164, 165, 171, 172, 182, 183, 190, 192, 194, 235, 239, 241], "buffererror": [26, 185], "stride": [26, 189], "fail": [26, 239], "reason": [26, 139, 157, 189, 235, 239, 240], "incorrect": 26, "pass": [26, 65, 183, 187, 192], "enum": 27, "id": 27, "format": [27, 236], "meant": 27, "device_typ": 27, "device_id": 27, "member": 27, "cuda": [27, 186, 191, 241], "cpu_pin": 27, "opencl": 27, "vulkan": 27, "metal": 27, "vpi": 27, "rocm": [27, 186], "truth": [28, 31, 33, 37, 39, 43, 86, 90, 102, 103, 110, 111, 131, 242], "cast": [29, 49, 60, 63, 75, 137, 154, 180, 188, 231, 239, 241], "outsid": [29, 151, 172, 180, 185, 191], "bound": [29, 172, 180, 185, 195], "typeerror": [29, 34, 35, 239, 241], "divis": [30, 41, 71, 87, 98, 139, 144, 188], "floor_divid": [30, 171], "greater_equ": [31, 171], "kei": [32, 49, 239], "slice": [32, 49, 171, 189], "ellipsi": [32, 49, 172], "access": [32, 172, 185, 191, 234, 236, 239], "method": [34, 99, 171, 183, 189, 191, 192, 194, 195, 239, 240, 241], "also": [34, 144, 180, 183, 188, 189, 190, 191, 195, 199, 203, 207, 210, 228, 234, 241], "pep": [34, 40, 98, 122, 191, 236], "357": 34, "overflowerror": 35, "valueerror": [35, 60, 140, 150, 241], "bitwise_invert": [36, 171], "less_equ": [37, 171], "bitwise_left_shift": [38, 171], "matrix": [40, 55, 122, 123, 126, 158, 159, 160, 211, 213, 214, 215, 216, 217, 219, 220, 221, 224, 225, 226, 227, 228, 229, 231, 235, 239], "product": [40, 42, 58, 122, 128, 137, 158, 167, 185, 212, 223, 235], "semant": [40, 98, 122, 139, 155, 171, 172, 183, 189, 191, 194, 235, 239, 240, 241], "built": [40, 122, 172, 180, 239], "465": [40, 122], "least": [40, 87, 106, 122, 128, 130, 162, 163, 164, 165, 186, 187, 224], "m": [40, 55, 122, 123, 126, 159, 160, 172, 197, 199, 201, 202, 203, 205, 206, 207, 208, 210, 211, 213, 214, 215, 216, 217, 219, 220, 221, 223, 224, 225, 226, 227, 228, 229, 231], "remov": [40, 122, 150, 172, 188, 214, 231], "innermost": [40, 122, 123, 159, 160, 211, 213, 214, 215, 216, 217, 219, 220, 221, 224, 225, 226, 227, 228, 229, 231], "conjug": [40, 78, 122, 158, 167, 185, 211, 215, 228, 235], "transposit": [40, 122, 158], "desir": [40, 63, 75, 122, 158, 187, 188, 195], "prior": [40, 122, 158], "inner": [40, 122, 185, 215, 235], "stack": [40, 55, 122, 123, 159, 160, 171, 194, 211, 213, 214, 215, 216, 217, 219, 220, 221, 224, 225, 226, 227, 228, 229, 231, 235], "l": [40, 122, 211, 231], "remaind": [41, 171, 172], "multipli": [42, 137, 149, 171, 185, 187, 215, 228], "not_equ": [43, 171, 185], "negat": [44, 78, 129], "bitwise_or": [45, 171], "exponenti": [47, 91, 93, 117, 136, 188], "power": [47, 71, 91, 136, 188, 220, 241], "expon": [47, 136, 220], "kind": [47, 51, 87, 95, 101, 104, 106, 136, 137, 154, 180, 185, 231, 235, 238], "versu": [47, 51, 63, 87, 128, 136, 185], "bitwise_right_shift": [48, 171], "mix": [49, 112, 125, 141, 152, 166, 171, 185, 189, 192, 235, 239], "how": [49, 87, 128, 183, 187, 192, 194, 240, 241, 242], "govern": [50, 153, 180, 235, 236], "minuend": 50, "subtrahend": 50, "subtract": [50, 171, 185, 187], "choos": [51, 57, 59, 87, 98, 112, 118, 119, 120, 121, 124, 125, 127, 128, 130, 152, 162, 163, 164, 165, 166, 171, 172, 178, 188, 189, 190, 192, 239, 241], "divid": [51, 98, 144, 171, 172, 185, 187], "bitwise_xor": [52, 171], "resid": [53, 59, 92, 172, 185, 239], "fewer": 55, "unknown": [57, 58], "graph": [57, 58, 130, 162, 163, 164, 165, 172, 190, 239], "static": [57, 190, 193], "resolv": [57, 60, 92, 98, 100, 101, 137, 154, 199, 200, 203, 204, 207, 210, 231, 239], "know": [57, 130, 162, 163, 164, 165, 183, 186, 187, 190, 239, 241], "content": [57, 190, 238], "warrant": 57, "custom": [57, 186], "immut": 57, "retriev": [57, 172, 183, 196, 235, 241], "behav": [57, 188], "current": [59, 155, 178, 189, 192, 195, 239, 240, 241], "__dlpack__": [59, 99, 171, 185], "caveat": 59, "would": [59, 60, 140, 172, 185, 189, 235, 239, 241], "locat": [59, 189], "enqueu": 59, "asynchron": 59, "safeti": 59, "explain": [59, 186], "obj": 60, "nestedsequ": 60, "supportsbufferprotocol": 60, "possibli": [60, 194, 239], "nest": [60, 194], "sequenc": [60, 77, 112, 151, 158, 172, 185, 199, 200, 203, 204, 207, 210, 230], "buffer": [60, 140, 189, 191], "protocol": [60, 183, 191, 195, 239, 241], "turn": [60, 183, 234], "memoryview": 60, "preced": [60, 188, 191, 192], "mixtur": 60, "convers": [60, 112, 185, 186, 239], "obei": [60, 112], "permit": [60, 63, 112, 190, 238], "To": [60, 98, 172, 185, 187, 188, 195, 239, 240, 242], "explicit": [60, 155, 158, 192, 241], "array_api": [60, 239], "astyp": [60, 171, 185], "exce": [60, 100, 101, 112], "never": [60, 140, 239], "reus": [60, 140, 189, 239], "sine": [61, 62, 145, 146, 157], "1j": [61, 64, 84, 85, 91, 93, 145, 146, 156], "asinh": [61, 171, 185, 187], "asin": [62, 171, 185, 187], "irrespect": [63, 188], "integr": [63, 106], "histor": [63, 157, 235], "discard": 63, "choic": [63, 152, 166, 183, 187, 188, 192, 194, 235, 236, 239, 241], "introduc": [63, 98, 142, 195, 240], "achiev": [63, 172, 187], "outcom": 63, "instead": [63, 188, 191, 240, 241], "clariti": 63, "newli": [63, 192], "alloc": [63, 159, 160, 190, 192], "tangent": [64, 65, 66, 156, 157], "atanh": [64, 171, 185, 187], "quotient": [65, 87, 98, 172], "domain": [65, 185, 187, 188, 239, 241], "notat": 65, "denot": [65, 167, 224], "pair": [65, 98, 212, 228], "codomain": 65, "quadrant": 65, "chosen": [65, 168, 191], "angl": [65, 85, 146, 157], "rai": 65, "role": 65, "y": [65, 188, 189, 241], "coordin": [65, 113, 126, 156, 157, 194, 239], "tradit": 65, "atan": [66, 171, 185, 187], "bitwis": [67, 70, 72, 171], "underli": [67, 70, 72, 187, 226, 235], "flip": [68, 171], "shift": [69, 71, 142, 200, 204], "arithmet": [71, 87, 125, 128, 171, 180, 188, 239], "propag": [71, 124, 125, 127, 152, 166, 187], "floor": [71, 98, 171], "anoth": [73, 75, 99, 172, 183, 185, 186, 188, 189, 191, 192, 215, 228, 239, 241], "from_": 75, "smallest": [76, 95, 104, 219], "closest": [76, 97, 98, 143], "alreadi": [76, 97, 128, 143, 161, 191, 236, 241], "join": [77, 151, 180], "befor": [77, 137, 154, 162, 163, 164, 165, 167, 185, 188, 212, 231, 239], "concaten": 77, "leav": [77, 151, 172, 178, 185, 187, 189, 224], "famili": [77, 151], "intxx": [77, 151, 180], "floatxx": [77, 151, 180], "versionad": [78, 105], "718281828459045": 79, "euler": 79, "constant": [79, 83, 171, 185], "71828182845904523536028747135266249775724709369995": 79, "Not": 81, "alia": [82, 185, 218, 222, 230, 232], "141592653589793": 83, "1415926535897932384626433": 83, "begin": [84, 144, 145, 156, 157, 172, 178, 226, 241], "align": [84, 145, 156, 157, 185, 187, 240], "sum_": [84, 167], "2n": [84, 113], "jx": [84, 145, 156], "cosh": [84, 157, 171, 185, 187], "period": [85, 146, 156, 157], "ci": [85, 91, 93, 146, 241], "v": [85, 91, 93, 146, 224, 228, 239], "co": [85, 91, 93, 146, 171, 185, 187], "sin": [85, 91, 93, 146, 171, 185, 187, 189, 195], "dividend": [87, 98, 139], "divisor": [87, 98, 139, 152, 166], "small": [87, 98, 128, 187, 221, 224, 226, 239, 241], "gener": [87, 112, 128, 139, 158, 183, 186, 188, 235, 239, 240], "textbook": [87, 128], "formula": [87, 114, 116, 128], "ac": [87, 128, 188], "bd": [87, 128], "bc": [87, 128, 188], "riemann": [87, 128, 188], "sphere": [87, 128, 188], "infinit": [87, 128, 148, 187, 188], "even": [87, 128, 136, 143, 187, 188, 189, 198, 200, 204, 209, 225, 235, 239, 241], "usual": [87, 128, 239], "interest": [87, 128, 187], "unlik": [87, 128, 236, 239], "consist": [87, 98, 106, 112, 128, 158, 172, 178, 188, 192, 195, 206, 207, 208, 210, 215, 224, 235, 239], "uniniti": [88, 89], "deriv": [89, 101, 133, 170, 172, 240], "natur": [91, 113, 114, 115, 116, 136, 226, 235], "logarithm": [91, 113, 114, 115, 116, 117, 136, 226, 235], "expand": [92, 172, 241], "close": [92, 93, 112, 115, 143, 172, 239, 241], "indexerror": [92, 172], "exp": [93, 117, 136, 171, 185, 187, 226], "accur": [93, 115, 187, 226], "fdlibm": [93, 115, 187], "n_row": 94, "n_col": 94, "ones": [94, 133, 171, 185, 189, 239], "diagon": [94, 159, 160, 215, 224, 225, 231, 235], "elsewher": [94, 168, 188], "row": [94, 130, 172, 219, 225, 227, 228], "column": [94, 215, 219, 225, 227, 228, 239], "main": [94, 159, 160, 186, 191, 214, 231, 234, 241], "finfo_object": [95, 185], "machin": [95, 104, 221, 224, 239], "get": [95, 104, 186, 189, 191, 192], "inform": [95, 104, 239, 240, 241, 242], "so": [95, 172, 178, 191, 235, 238, 239, 242], "occupi": [95, 104], "ep": [95, 221, 224, 239], "next": [95, 239], "larger": [95, 142, 152, 166, 224], "largest": [95, 104, 219, 228, 229], "min": [95, 104, 159, 160, 171, 185, 219, 225, 228, 229, 233], "smallest_norm": 95, "full": [95, 171, 185, 189, 225, 227, 228, 241], "preserv": [96, 172, 185, 188, 192], "reorder": 96, "greatest": [97, 98], "238": 98, "goal": [98, 186, 189, 235, 241], "disambigu": 98, "toward": [98, 142, 187, 235, 240], "former": [98, 172, 188, 240], "latter": [98, 172, 183, 188, 191, 240], "overload": [98, 235], "led": 98, "subtl": 98, "bug": [98, 241, 242], "expect": [98, 157, 180, 185, 187, 188, 190, 191, 192, 195, 239], "design": [98, 185, 187, 237, 239, 241, 242], "ill": [98, 235], "below": [98, 159, 160, 191, 192, 214, 231], "diverg": [98, 242], "strictli": 98, "relat": [98, 172, 188, 192, 194, 235, 239, 241], "surpris": [98, 188], "unexpect": [98, 188, 239], "fill_valu": [100, 101], "fill": [100, 101, 132, 133, 169, 170, 185], "iinfo_object": [104, 185], "complex64": [105, 106, 138, 171, 180, 185, 226, 228, 229], "float32": [105, 106, 138, 171, 180, 226, 228, 229], "int8": [106, 171, 180], "int16": [106, 137, 154, 171, 180, 231], "int32": [106, 137, 154, 171, 180, 231], "int64": [106, 137, 154, 171, 180, 231], "uint8": [106, 171, 180], "uint16": [106, 137, 154, 171, 180, 231], "uint32": [106, 137, 154, 171, 180, 231], "uint64": [106, 137, 154, 171, 180, 231], "shorthand": [106, 172], "belong": [106, 189], "float16": 106, "bfloat16": [106, 239], "int128": 106, "short": [106, 188, 239, 240], "extend": [106, 172, 188, 239], "extens": [106, 237, 241], "num": 112, "endpoint": 112, "delta_": 112, "textrm": [112, 144, 226], "exclud": [112, 172, 180], "sampl": [112, 152, 166, 198, 204, 209, 240], "nonneg": [112, 158, 172], "concern": [112, 155, 185, 192, 194, 239], "polar": 113, "r": [113, 172, 211, 215, 216, 217, 225, 227, 228, 239, 241], "theta": 113, "continu": [113, 115, 136, 148, 188, 215, 228, 239], "account": [113, 115, 136, 148, 239], "log_": [114, 116], "log": [114, 115, 116, 117, 136, 171, 185, 187], "mxn": [123, 159, 160, 214, 219, 221, 224, 225, 231], "sentinel": [124, 127], "xy": 126, "grid": 126, "cartesian": 126, "ij": 126, "effect": [126, 152, 166, 192, 242], "ignor": [126, 235], "ni": 126, "n3": 126, "nn": 126, "three": [126, 192], "p": [126, 216, 219, 233], "unless": [128, 171], "state": [128, 171, 172, 239], "cdot": [128, 145, 149, 156, 167], "y_i": [129, 135], "build": [130, 162, 163, 164, 165, 172, 183, 190, 194, 239], "jax": [130, 162, 163, 164, 165, 172, 189, 190, 239, 240, 241], "dask": [130, 162, 163, 164, 165, 172, 189, 190, 194, 239, 240, 241], "etc": [130, 162, 163, 164, 165, 172, 190, 236], "find": [130, 162, 163, 164, 165, 172, 185, 190, 239, 240], "difficult": [130, 162, 163, 164, 165, 172, 187, 190, 239], "omit": [130, 162, 163, 164, 165, 172, 190], "section": [130, 162, 163, 164, 165, 172, 185, 186, 190, 191, 192, 195, 239, 241], "typl": 130, "total": [130, 152, 166, 188], "major": [130, 172, 236], "style": [130, 172], "odd": [136, 198, 204, 206, 207, 209], "treat": 136, "carefulli": 136, "smaller": [137, 142, 154, 231, 241], "help": [137, 154, 186, 187, 194, 231], "prevent": [137, 154, 231], "success": [137, 154, 231], "That": [139, 172, 183, 195, 239], "primarili": 139, "One": [140, 239, 242], "arrays_and_dtyp": 141, "re": [142, 186, 189, 195, 241], "restor": 142, "counterpart": 143, "signum": 144, "2j": 145, "sinh": [145, 157, 171, 185, 187], "squar": [148, 171, 185, 188, 211, 213, 215, 216, 217, 220, 224, 226, 227, 235], "root": [148, 185, 188, 216], "indistinguish": [148, 172, 187], "correct": [152, 166, 189], "degre": [152, 166, 216, 235], "freedom": [152, 166], "adjust": [152, 166, 239], "popul": [152, 166], "constitut": [152, 166], "commonli": [152, 166, 186, 188, 190, 234, 235, 239, 240], "bessel": [152, 166, 186], "conceptu": 155, "regard": [155, 185, 235, 241], "mutat": 155, "select": [155, 172, 239], "analyt": [156, 157, 188], "pole": [156, 157], "exactli": [156, 157], "tanh": [156, 171, 185, 187], "stem": [157, 215, 228], "older": [157, 191, 236, 239], "patch": 157, "advis": [157, 189, 235], "tensor": [158, 235, 239, 241], "contract": [158, 167, 235, 238], "outer": [158, 185], "dot": [158, 167, 235], "x1_ax": 158, "x2_ax": 158, "uniqu": [158, 162, 163, 164, 165, 185, 188, 199, 200, 203, 204, 207, 210, 215, 217, 225, 227, 228, 235], "triangular": [159, 160, 211, 225], "closer": 161, "reconstruct": [162, 164], "distinct": [162, 163, 164, 165, 188, 235], "inverse_indic": [162, 164], "exact": [162, 164, 195], "aggreg": [162, 163], "namedtupl": [162, 163, 164, 215, 225, 226, 228, 235], "field": [162, 163, 164, 188, 215, 225, 226, 228, 239], "third": [162, 228], "fourth": 162, "varianc": 166, "unbias": 166, "mathbf": 167, "overlin": [167, 224], "a_i": 167, "b_i": 167, "ident": [167, 188, 204, 216, 217, 220, 239], "condit": [168, 238], "yield": [168, 188], "signatur": [171, 183, 195, 239, 240], "subset": [171, 187, 240, 241], "categori": 171, "satisfi": [171, 172, 187, 188, 240], "accuraci": [171, 193, 197, 199, 202, 203, 206, 207, 208, 210], "reflect": 171, "mt": 171, "t": [171, 186, 189, 192, 194, 195, 239, 241], "__abs__": [171, 185], "__array_namespace__": [171, 196, 235, 239], "__bool__": [171, 185], "__complex__": [171, 185], "__dlpack_device__": 171, "__float__": [171, 185], "__getitem__": [171, 172, 185], "__index__": [171, 185], "__int__": [171, 185], "to_devic": [171, 185, 192], "overview": 171, "algorithm": [171, 187, 226, 241], "inf": [171, 219, 233, 239], "newaxi": [171, 185], "creation": [171, 183, 192, 239], "arang": [171, 240], "asarrai": [171, 185, 191, 241], "empty_lik": 171, "ey": [171, 185], "full_lik": [171, 185], "linspac": [171, 185], "meshgrid": [171, 185], "ones_lik": [171, 185], "tril": 171, "triu": 171, "zeros_lik": 171, "can_cast": 171, "finfo": [171, 185], "iinfo": [171, 185], "isdtyp": [171, 185], "result_typ": 171, "acosh": [171, 185, 187], "atan2": [171, 187], "expm1": [171, 185, 187], "isfinit": [171, 185], "isinf": [171, 185], "isnan": [171, 185], "log1p": [171, 185, 187], "log2": [171, 185, 187], "log10": [171, 185, 187], "logaddexp": 171, "logical_and": 171, "logical_not": 171, "logical_or": 171, "logical_xor": 171, "tan": [171, 185, 187], "trunc": [171, 185], "syntax": [171, 189, 191, 239], "linear": [171, 188, 227, 234], "algebra": [171, 188, 224, 234], "matrix_transpos": [171, 235], "tensordot": [171, 185, 235], "vecdot": [171, 185, 235], "manipul": 171, "broadcast_arrai": 171, "broadcast_to": 171, "concat": 171, "expand_dim": [171, 172], "reshap": [171, 172], "roll": 171, "squeez": 171, "argmax": 171, "argmin": 171, "unique_al": [171, 185], "unique_count": [171, 185], "unique_invers": [171, 185], "unique_valu": [171, 185], "argsort": 171, "statist": 171, "prod": [171, 185, 199, 203, 207, 210], "util": [171, 185, 236, 239, 240], "__array_api_version__": [171, 182, 185, 236], "check": [172, 187, 211, 215, 216, 225, 227, 234, 241, 242], "syntact": 172, "sugar": 172, "need": [172, 186, 187, 189, 191, 195, 235, 236, 239, 240, 241, 242], "term": [172, 192, 235, 240], "colon": 172, "contrast": [172, 188, 235], "combin": [172, 189, 194, 235], "basic": 172, "noth": 172, "side": [172, 191], "perspect": 172, "item": [172, 189, 239], "2k": 172, "3k": 172, "q": [172, 215, 225], "obtain": [172, 192, 238], "qk": 172, "being": [172, 191, 192, 235, 239, 242], "clip": [172, 185], "100": [172, 236], "junk": 172, "consider": [172, 189, 235], "concept": [172, 189, 239], "comma": 172, "separ": [172, 185, 191, 234], "exp1": 172, "exp2": 172, "expn": 172, "And": [172, 192], "forth": 172, "decreas": [172, 235], "particular": [172, 186, 188, 191, 192, 195, 235, 238, 239, 241, 242], "entri": [172, 199, 200, 203, 204, 207, 210, 239], "retain": 172, "invoc": 172, "sympi": 172, "flat": 172, "here": [172, 180, 189, 191, 194, 195, 241], "attempt": [172, 187, 188, 189, 192, 239, 241], "dynam": 172, "mask": [172, 239], "filter": 172, "s1": 172, "sm": 172, "s2": 172, "sn": 172, "prohibit": [172, 189], "replac": [172, 224, 242], "iter": 172, "reli": [178, 186, 188, 190, 195, 241], "them": [178, 186, 189, 239, 241], "reproduc": [178, 187], "understood": 180, "high": [180, 191, 192, 235, 239], "diagram": [180, 239], "lattic": 180, "particip": [180, 188], "matter": [180, 186, 188], "dash": 180, "undefin": [180, 235], "connect": [180, 238], "keep": [180, 186, 239], "rather": [180, 183, 186, 192, 194, 235, 239], "i2": 180, "i1": 180, "i4": 180, "i8": 180, "u1": 180, "u2": 180, "u4": 180, "u8": 180, "f8": 180, "c8": 180, "c16": 180, "compos": [180, 185], "regardless": 180, "subject": [180, 226, 238], "becaus": [180, 186, 189, 192, 195, 215, 228, 239, 241, 242], "togeth": [180, 191], "met": 180, "give": [180, 188, 191, 192], "No": [183, 236], "made": [183, 188, 234, 236, 239, 241], "run": [183, 240, 241], "varieti": 183, "architectur": 183, "gpu": [183, 191, 192, 241], "distribut": [183, 187, 192, 194, 238], "system": [183, 227, 239], "tpu": [183, 191], "emerg": [183, 191, 239], "what": [183, 191, 195, 235, 239, 240, 241, 242], "instal": [183, 239, 242], "emploi": [183, 190, 192], "parallel": [183, 193, 239, 241], "jit": [183, 186, 239], "lazi": [183, 185, 241], "put": [183, 239, 241], "constraint": [183, 188, 237], "predict": 183, "itself": [183, 191, 241], "motiv": 183, "importantli": 183, "awar": [183, 195, 241], "layer": [183, 194, 239, 241], "coupl": 183, "downstream": [183, 234, 239, 240], "import": [183, 186, 192, 234, 235, 239, 241, 242], "structur": [183, 195, 239, 240], "interoper": [183, 191], "construct": [183, 185, 186, 239], "own": [183, 189, 239], "share": [183, 239], "done": 183, "though": [183, 195, 239, 241], "enough": [183, 186, 195, 234, 236, 239], "soft": 183, "arraylib_nam": 183, "constrain": [183, 187], "unwil": 183, "signific": [183, 187, 189, 239], "therefor": [183, 191, 192, 195, 236, 239, 241], "adopt": [183, 188, 191, 241], "primari": [183, 191], "write": [183, 189, 239, 241], "consequ": [183, 195, 239], "easi": [183, 234], "written": [183, 239, 241], "unambigu": [183, 189, 191, 240], "clear": [183, 189, 191, 239, 241], "significantli": 183, "detract": 183, "experi": [183, 236], "strict": [183, 189], "typic": [183, 189, 236, 239, 241, 242], "good": [183, 186, 189, 192, 195, 239], "anyth": [183, 239], "thin": 183, "conveni": 183, "plan": [184, 239], "previou": [185, 241], "clarifi": 185, "gh": [185, 241], "613": 185, "687": 185, "eager": [185, 239], "708": 185, "revis": [185, 188, 192], "702": 185, "relax": 185, "730": 185, "read": [185, 189], "749": 185, "intrins": 185, "652": 185, "max_vers": 185, "602": 185, "dl_devic": 185, "741": 185, "665": 185, "address": [185, 235, 239, 240, 241], "unsupport": 185, "751": 185, "701": 185, "625": 185, "742": 185, "752": 185, "fft": [185, 196, 199, 201, 202, 203, 205, 206, 207, 208, 210], "720": 185, "746": 185, "backport": 185, "__array_namespace_info__": 185, "689": 185, "clamp": 185, "715": 185, "copysign": 185, "693": 185, "cumulative_sum": 185, "cumul": 185, "653": 185, "hypot": 185, "703": 185, "713": 185, "moveaxi": 185, "move": [185, 192, 241], "656": 185, "690": 185, "searchsort": 185, "699": 185, "signbit": 185, "705": 185, "tile": 185, "692": 185, "unstack": 185, "split": 185, "604": 185, "capabl": 185, "dictionari": 185, "default_devic": 185, "default_dtyp": 185, "740": 185, "fftn": [185, 203], "hfft": 185, "ifft": [185, 197], "ifftn": [185, 199], "irfft": [185, 208, 209], "irfftn": [185, 210], "fftfreq": 185, "rfftfreq": 185, "linalg": [185, 234, 235], "cross": [185, 192, 235, 239], "trace": [185, 189, 235, 240], "fix": [185, 192, 239, 241], "clarif": 185, "674": 185, "736": 185, "typo": 185, "633": 185, "681": 185, "706": 185, "miss": [185, 239], "639": 185, "variou": 185, "issu": [185, 186, 188, 189, 191, 192, 194, 239, 241], "qr": 185, "661": 185, "choleski": [185, 235], "677": 185, "svd": [185, 224], "619": 185, "666": [185, 240], "644": 185, "622": 185, "723": 185, "497": 185, "498": 185, "546": 185, "525": 185, "528": 185, "557": 185, "529": 185, "448": 185, "447": 185, "537": 185, "526": 185, "554": 185, "517": 185, "520": 185, "521": 185, "522": 185, "523": 185, "524": 185, "442": 185, "434": 185, "445": 185, "454": 185, "453": 185, "436": 185, "451": 185, "452": 185, "484": 185, "435": 185, "531": 185, "530": 185, "532": 185, "568": 185, "514": 185, "534": 185, "536": 185, "437": 185, "441": 185, "438": 185, "553": 185, "440": [185, 236], "556": 185, "457": 185, "456": 185, "552": 185, "461": 185, "538": 185, "459": 185, "458": 185, "558": 185, "540": 185, "512": 185, "470": 185, "417": 185, "502": 185, "443": 185, "559": 185, "det": [185, 216, 226], "542": 185, "eigh": [185, 235], "543": 185, "eigvalsh": 185, "547": 185, "matrix_norm": 185, "565": 185, "matrix_pow": 185, "549": 185, "matrix_rank": 185, "563": 185, "560": 185, "pinv": 185, "564": 185, "548": 185, "slogdet": [185, 235], "567": 185, "solv": [185, 195, 224], "566": 185, "561": 185, "svdval": 185, "562": 185, "541": 185, "vector_norm": 185, "550": [185, 241], "418": 185, "491": 185, "513": 185, "variabl": [185, 194, 227, 242], "515": 185, "527": 185, "573": 185, "480": 185, "485": 185, "496": 185, "503": 185, "427": 185, "416": 185, "fast": 185, "fourier": [185, 197, 198, 199, 201, 202, 203, 205, 206, 207, 208, 209, 210, 234], "transform": [185, 197, 198, 199, 201, 202, 203, 205, 206, 207, 208, 209, 210, 234, 240], "189": 185, "rfft": [185, 206, 209], "rfftn": [185, 207], "irfttn": 185, "fftshift": [185, 204], "ifftshift": 185, "464": 185, "429": 185, "439": 185, "572": 185, "510": 185, "511": 185, "473": 185, "scope": [186, 194, 237, 240], "mention": [186, 241], "There": [186, 189, 192, 195, 239, 241, 242], "direct": [186, 239, 240], "deal": [186, 194, 195, 236, 238], "assumpt": [186, 191, 236, 237, 239], "rest": [186, 239, 241], "work": [186, 189, 191, 195, 239, 241, 242], "ndarrai": [186, 191, 239, 241], "visual": 186, "often": [186, 188, 235, 239, 240, 241], "difficulti": [186, 190], "relev": [186, 192, 195, 239], "question": [186, 239], "certainti": 186, "inde": 186, "project": [186, 188, 191, 241], "statsmodel": 186, "scikit": [186, 194, 239, 240, 241], "bio": [186, 241], "qutip": 186, "strategi": [186, 192], "learn": [186, 194, 239, 240, 241], "submodul": [186, 234], "manag": [186, 192], "doesn": [186, 192, 239], "cupi": [186, 189, 239, 240, 241], "elementwisekernel": 186, "scipi": [186, 194, 239, 240], "astropi": [186, 241], "seem": [186, 191, 241], "almost": [186, 241], "inevit": 186, "someth": [186, 189, 239], "numba": [186, 191, 239, 241], "sens": [186, 239, 241], "tend": [186, 189, 241], "reimplement": 186, "gamma": 186, "drop": [186, 195, 225, 228], "arraylib": 186, "abi": [186, 191], "cpython": 186, "offer": [186, 191, 192, 194, 239, 241], "backend": [186, 194, 239], "target": [186, 192], "better": [186, 241], "pypi": [186, 240, 241], "isn": 186, "quit": [186, 239, 241], "readi": 186, "mainstream": 186, "todai": [186, 189, 235], "onc": [186, 236], "feasibl": [186, 239], "roundtiestoeven": 187, "ti": [187, 235, 239], "certain": [187, 188, 235], "boundari": 187, "reader": 187, "identifi": [187, 192, 240], "lack": 187, "phrase": 187, "recogn": [187, 192], "seek": [187, 235, 240], "optim": [187, 189, 235, 241], "latitud": 187, "although": [187, 204, 226], "freeli": 187, "sun": 187, "microsystem": 187, "With": [187, 240, 241], "few": [187, 239, 241], "correctli": 187, "imposs": [187, 189, 190, 242], "among": [187, 188, 235], "suit": [187, 237, 239, 240], "span": 187, "report": 187, "averag": 187, "aid": [187, 242], "best": [187, 191, 235, 239], "effort": [187, 240], "theoret": 187, "sound": 187, "robust": 187, "bare": 187, "summat": [187, 235], "unfortun": 187, "impos": [187, 190], "rigor": 187, "sever": [187, 189, 236, 239], "curtail": 187, "unduli": 187, "topologi": 188, "continuum": 188, "onto": [188, 189], "surfac": [188, 239], "stereograph": 188, "coalesc": 188, "3j": 188, "4j": 188, "convei": 188, "niceti": 188, "translat": [188, 241], "neq": 188, "we": [188, 228, 239], "interpret": [188, 189, 242], "context": [188, 192, 240], "arriv": [188, 239], "opposit": 188, "subtleti": 188, "interact": 188, "craft": 188, "intuit": 188, "julia": [188, 241], "minim": [188, 192], "imperfect": 188, "balanc": 188, "appear": [188, 236, 239, 242], "embrac": 188, "transcendent": 188, "wholli": 188, "analysi": [188, 189, 190, 239, 240, 241], "curv": [188, 239], "discontinu": [188, 241], "taken": [188, 239], "pm": 188, "whole": 188, "simpl": [188, 189, 236], "aris": [188, 235, 238, 239], "trigonometr": 188, "domin": 188, "a_1": 188, "ldot": 188, "a_n": 188, "reflex": 188, "leq": 188, "transit": 188, "antisymmetr": 188, "partial": 188, "establish": [188, 240], "six": 188, "lexicograph": 188, "principl": [188, 240], "situat": [188, 189, 191, 192, 239, 241], "unit": [188, 198, 209], "despit": [188, 191], "admonit": [189, 190], "becom": [189, 191, 239, 241], "trigger": 189, "confid": 189, "pytorch": [189, 192, 239, 240, 241], "mxnet": [189, 239, 240, 241], "save": 189, "faster": 189, "happen": [189, 192, 235], "illustr": [189, 195], "tensorflow": [189, 239, 240, 241], "fundament": [189, 239], "abl": [189, 191, 192, 239, 241], "inplac": 189, "present": [189, 190, 192, 234, 235, 236, 239], "update_index": 189, "idx": 189, "solut": [189, 224, 227, 241], "hard": [189, 191, 192, 239], "go": [189, 236], "down": 189, "rout": 189, "val": 189, "veri": [189, 226, 241], "wide": [189, 191, 225, 228, 239], "slightli": 189, "heavili": [189, 241], "you": [189, 242], "_must_": 189, "abstract": [189, 235, 240], "languag": [189, 235, 239, 241], "donat": 189, "lapack": [189, 235], "_may_": 189, "overwrit": 189, "whatev": 189, "fastest": 189, "aren": [189, 239], "longer": [189, 235], "problem": [189, 195, 224, 240, 241], "initi": [189, 239], "upon": [190, 239], "ahead": 190, "burden": [190, 239], "omiss": 190, "demarc": 190, "nativ": 191, "layout": 191, "manner": 191, "exchang": 191, "packag": [191, 195, 236, 239, 240, 241], "live": [191, 239], "figur": 191, "contigu": 191, "promin": [191, 239], "releas": [191, 236, 240], "candid": [191, 239], "__cuda_array_interface__": 191, "moment": 191, "tri": [191, 241], "growth": 191, "amd": 191, "undesir": 191, "pattern": [191, 192, 194, 240, 241], "widest": 191, "lot": 191, "3118": 191, "hardli": 191, "mostli": [191, 194, 239], "dealt": [191, 195], "__array__": [191, 241], "attach": 191, "hold": [191, 235], "rfc": [191, 239], "http": [191, 236, 242], "dmlc": 191, "github": [191, 236, 238, 242], "io": 191, "page": [191, 241], "standalon": [191, 242], "outlin": [191, 239], "control": [192, 194], "fulli": 192, "scale": 192, "exert": 192, "placement": 192, "global": 192, "switchabl": 192, "transfer": 192, "granular": 192, "downsid": 192, "verbos": 192, "much": [192, 239, 242], "kept": 192, "instanti": 192, "physic": 192, "revisit": 192, "free": [192, 238], "expos": [192, 235], "bewar": 192, "framework": [192, 239], "elabor": 192, "polici": 192, "highest": 192, "prioriti": 192, "topic": [192, 194, 237, 239, 241], "pin": 192, "tricki": 192, "sinc": 192, "complet": [194, 225, 236, 239, 241], "runtim": [194, 195, 236, 239, 241], "won": 194, "further": 194, "exercis": 194, "environ": [194, 235, 239, 242], "bla": [194, 235], "openmp": 194, "n_job": [194, 241], "worker": [194, 241], "chunk": 194, "approach": [194, 239, 240], "auto": [194, 241], "thing": 194, "improv": [194, 239, 241], "fit": [194, 238, 239, 241], "becam": [195, 239], "progress": [195, 242], "try": [195, 239], "superclass": 195, "long": 195, "class": [195, 239, 240], "def": [195, 239, 240, 241], "_basearrai": 195, "subclass": [195, 239], "insid": [195, 234], "typevar": 195, "fine": [195, 239], "variat": [195, 240], "don": [195, 241], "said": 195, "subtyp": 195, "xp": [196, 234, 235, 239], "hasattr": [196, 234, 235, 239], "liter": [197, 199, 201, 202, 203, 205, 206, 207, 208, 210, 219, 225, 233], "ortho": [197, 199, 201, 202, 203, 205, 206, 207, 208, 210], "forward": [197, 199, 201, 202, 203, 205, 206, 207, 208, 210, 239], "discret": [197, 198, 199, 201, 202, 203, 205, 206, 207, 208, 209, 210], "pad": [197, 199, 201, 202, 203, 205, 206, 207, 208, 210], "trim": [197, 199, 201, 202, 203, 205, 206, 207, 208, 210], "orthonorm": [197, 199, 201, 202, 203, 205, 206, 207, 208, 210, 225, 228], "frequenc": [198, 200, 209, 236, 240], "f": [198, 209], "window": [198, 209], "center": 200, "spectrum": 200, "swap": 200, "nyquist": [200, 209], "hermitian": [201, 205, 211, 215, 216], "symmetri": [201, 205], "decomposit": [211, 215, 224, 225, 228, 229, 235], "symmetr": [211, 215, 216], "mathbb": [211, 215, 216, 217, 225, 227, 228], "ll": 211, "h": [211, 215, 224, 228], "qquad": 211, "text": 211, "u": [211, 224, 228], "factor": [211, 228], "offset": [214, 231], "off": [214, 231], "eigenvalu": [215, 216, 235], "lambda": [215, 216], "orthogon": [215, 224, 225, 228, 235], "unitari": [215, 225, 228], "eigenvector": 215, "softwar": [215, 228, 238, 239, 241], "fact": [215, 228], "phi": [215, 228], "eig": [215, 235], "diag": [215, 228], "polynomi": [216, 239], "i_n": [216, 217], "eigval": [216, 235], "xx": 217, "ord": [219, 233], "fro": 219, "nuc": 219, "frobeniu": 219, "nuclear": 219, "singular": [219, 221, 224, 228, 229], "induc": 219, "rtol": [221, 224], "toler": [221, 224], "largest_singular_valu": [221, 224], "epsilon": [221, 224], "moor": 224, "penros": 224, "pseudo": 224, "understand": [224, 239, 240], "sigma": [224, 228], "reciproc": 224, "tall": [225, 228], "geq": 225, "necessarili": [225, 242], "up": [225, 234, 241], "linearli": [225, 227, 239], "logabsdet": 226, "again": 226, "equat": 227, "coeffici": 227, "ordin": 227, "full_matric": 228, "u_k": 228, "v_k": 228, "vh": 228, "adjoint": 228, "l1": 233, "manhattan": 233, "l2": 233, "euclidean": 233, "coher": 234, "implementor": 234, "usag": [234, 239], "extension_nam": 234, "regular": [234, 236, 239], "under": [234, 238, 239], "__getattr__": 234, "endeavor": 235, "strai": 235, "far": 235, "restraint": 235, "decis": [235, 239], "accid": 235, "especi": 235, "arisen": 235, "been": [235, 239], "process": [235, 236, 240], "afford": 235, "opportun": 235, "subsequ": [235, 240], "codifi": [235, 240], "theme": 235, "abil": 235, "decim": 235, "restrict": [235, 238], "overli": 235, "compel": 235, "compris": 235, "prudent": 235, "lastli": 235, "polymorph": 235, "dedic": 235, "eignvector": 235, "agnostic": 235, "eschew": 235, "parameter": 235, "bias": 235, "underpin": 235, "cater": 235, "low": 235, "verbatim": 235, "poor": 235, "uplo": 235, "dai": 235, "monopoli": 235, "prolifer": 235, "conserv": [235, 241], "conservat": 235, "delin": 235, "ideal": 235, "overlap": 235, "confus": [235, 239], "parsimoni": 235, "einsum": 235, "einstein": 235, "vdot": 235, "multi_dot": 235, "chain": 235, "exhibit": 235, "consolid": 235, "propos": [236, 240, 241], "com": [236, 242], "blob": 236, "master": 236, "process_docu": 236, "md": 236, "summari": [236, 240], "matur": 236, "reach": [236, 241], "final": 236, "world": 236, "highli": 236, "strong": 236, "updat": 236, "scheme": 236, "date": 236, "shall": [236, 238], "alpha": 236, "beta": 236, "rc": 236, "post": 236, "dev": 236, "dunder": 236, "minor": 236, "bugfix": 236, "__version__": 236, "resembl": 236, "14": 236, "year": [236, 239], "evolut": [237, 239], "verif": [237, 239], "benchmark": 237, "changelog": 237, "licens": 237, "websit": 238, "repositori": [238, 240], "mit": 238, "copyright": 238, "2024": 238, "consortium": [238, 239], "contributor": 238, "permiss": 238, "herebi": 238, "grant": 238, "charg": 238, "person": 238, "file": [238, 240, 241, 242], "merg": [238, 239], "publish": [238, 240], "sublicens": 238, "sell": 238, "whom": 238, "furnish": 238, "notic": 238, "substanti": 238, "portion": 238, "THE": 238, "AS": 238, "warranti": 238, "OF": 238, "BUT": 238, "TO": 238, "merchant": 238, "FOR": 238, "noninfring": 238, "IN": 238, "NO": 238, "author": [238, 239, 240, 241], "holder": 238, "BE": 238, "liabl": 238, "claim": 238, "damag": 238, "liabil": 238, "action": 238, "tort": 238, "WITH": 238, "wealth": 239, "scienc": 239, "deep": 239, "push": 239, "art": 239, "unintend": 239, "activ": 239, "creativ": 239, "fragment": 239, "multidimension": 239, "xarrai": [239, 240], "why": 239, "pick": 239, "bless": 239, "inconsist": 239, "obviou": 239, "mind": 239, "sure": 239, "rare": [239, 240], "unimport": 239, "scientif": 239, "mid": 239, "1990": 239, "earli": 239, "2000": 239, "numarrai": 239, "2005": 239, "superced": 239, "roughli": 239, "decad": 239, "past": 239, "mainli": 239, "rise": 239, "newer": 239, "inspir": [239, 241], "idea": 239, "seriou": 239, "grew": 239, "quickli": 239, "infeas": 239, "now": [239, 241], "speed": 239, "innov": [239, 240], "group": 239, "assembl": 239, "draft": 239, "presenc": 239, "meta": 239, "concret": 239, "shown": 239, "core": [239, 241], "decid": 239, "borrow": 239, "steep": 239, "switch": [239, 241], "accompani": 239, "verifi": 239, "actual": 239, "task": [239, 241], "schedul": 239, "characterist": 239, "grain": 239, "obstacl": 239, "cython": [239, 241], "datetim": 239, "void": 239, "uniformli": 239, "o": 239, "routin": 239, "bind": [239, 241], "cffi": 239, "ctype": 239, "ufunc": 239, "gufunc": 239, "just": [239, 241], "extra": 239, "huge": 239, "amount": [239, 240, 241], "cover": [239, 242], "strength": 239, "advantag": 239, "foreign": 239, "indirect": 239, "program": 239, "pydata": 239, "spars": 239, "weld": 239, "bohrium": 239, "arkouda": 239, "legat": 239, "impact": 239, "grow": 239, "panda": [239, 240], "matplotlib": [239, 240], "networkx": 239, "xtensor": 239, "xnd": [239, 241], "stdlib": 239, "javascript": 239, "rust": 239, "rrai": 239, "nd4j": 239, "jvm": 239, "numsharp": 239, "dispatch": [239, 241], "pythran": 239, "transon": 239, "onnx": 239, "apach": 239, "tvm": 239, "mlir": 239, "taco": 239, "unumpi": [239, 241], "einop": 239, "arrow": 239, "consult": 239, "simplest": 239, "directli": [239, 241], "package_nam": 239, "uniform": 239, "request": 239, "hinder": 239, "inter": 239, "distinguish": 239, "is_array_api_obj": 239, "peopl": 239, "abc": 239, "inherit": 239, "isinst": 239, "prove": 239, "discov": 239, "assist": 239, "mandat": 239, "importlib": 239, "metadata": 239, "entry_point": 239, "dict": 239, "deprec": 239, "py3": 239, "supplant": 239, "load": 239, "path": 239, "haven": 239, "measur": 239, "isol": 239, "referenc": 239, "indispens": 239, "institut": 239, "electr": 239, "electron": 239, "engin": [239, 241], "york": 239, "scott": 239, "bradner": 239, "1997": 239, "word": 239, "2119": 239, "doi": 239, "17487": 239, "rfc2119": 239, "technic": 240, "vacuum": 240, "sometim": 240, "compet": 240, "friction": 240, "focu": 240, "accommod": [240, 241], "foo": 240, "bar": 240, "aspir": 240, "experiment": 240, "around": 240, "channel": 240, "resourc": [240, 241], "novel": 240, "thwart": 240, "reinvent": 240, "proverbi": 240, "wheel": 240, "foundat": 240, "articul": 240, "quantifi": 240, "analyz": 240, "ground": [240, 242], "empir": 240, "acquir": 240, "scrape": 240, "unifi": [240, 241], "extract": 240, "intersect": 240, "complement": 240, "suitabl": 240, "preval": 240, "eas": 240, "leverag": 240, "summar": 240, "tool": [240, 241], "explor": 240, "instrument": 240, "record": 240, "collect": 240, "json": 240, "human": 240, "docstr": 240, "invok": 240, "_0": 240, "_arg": 240, "347": 240, "359": 240, "894": 240, "1173": 240, "skimag": 240, "174": 240, "sklearn": 240, "373": 240, "sourc": [240, 242], "publicli": 240, "stori": 240, "broad": 240, "wider": 241, "wrap": 241, "familiar": 241, "survei": 241, "advanc": 241, "research": 241, "nsf": 241, "pain": 241, "brought": 241, "wish": 241, "multiprocess": 241, "shorten": 241, "fortran": 241, "easili": [241, 242], "pure": 241, "manual": 241, "Then": 241, "hoc": 241, "critic": 241, "corner": 241, "tractabl": 241, "spectral": 241, "periodogram": 241, "spectrogram": 241, "csd": 241, "welch": 241, "stft": 241, "istft": 241, "lombscargl": 241, "40": 241, "sai": [241, 242], "ineffici": 241, "x_np": 241, "asnumpi": 241, "freq": 241, "pxx": 241, "back": 241, "torch": 241, "littl": 241, "flexibl": 241, "py": [241, 242], "rearrang": 241, "_backend": 241, "glue": 241, "loc": 241, "some_func": 241, "get_backend": 241, "disappear": 241, "serv": 241, "50": 241, "tensorli": 241, "kera": 241, "eagerpi": 241, "whenev": 241, "notabl": 241, "suboptim": 241, "readili": 241, "cpyext": 241, "unsuccess": 241, "intern": 241, "xla": 241, "vta": 241, "jump": 241, "hoop": 241, "attain": 241, "suggest": 241, "got": 241, "cfunc": 241, "np": 241, "assert_array_almost_equ": 241, "pyfunc": 241, "pyarray_cancastarrayto": 241, "assertequ": 241, "spec": 242, "aspect": 242, "clone": 242, "repo": 242, "pip": 242, "pytest": 242, "hypothesi": 242, "conda": 242, "array_api_tests_modul": 242, "edit": 242, "array_api_test": 242, "_array_modul": 242, "array_modul": 242, "command": 242, "asid": 242, "vendor": 242, "readm": 242}, "objects": {"array_api": [[8, 0, 1, "", "__array_api_version__"], [9, 1, 1, "", "abs"], [10, 1, 1, "", "acos"], [11, 1, 1, "", "acosh"], [12, 1, 1, "", "add"], [13, 1, 1, "", "all"], [14, 1, 1, "", "any"], [15, 1, 1, "", "arange"], [16, 1, 1, "", "argmax"], [17, 1, 1, "", "argmin"], [18, 1, 1, "", "argsort"], [60, 1, 1, "", "asarray"], [61, 1, 1, "", "asin"], [62, 1, 1, "", "asinh"], [63, 1, 1, "", "astype"], [64, 1, 1, "", "atan"], [65, 1, 1, "", "atan2"], [66, 1, 1, "", "atanh"], [67, 1, 1, "", "bitwise_and"], [68, 1, 1, "", "bitwise_invert"], [69, 1, 1, "", "bitwise_left_shift"], [70, 1, 1, "", "bitwise_or"], [71, 1, 1, "", "bitwise_right_shift"], [72, 1, 1, "", "bitwise_xor"], [73, 1, 1, "", "broadcast_arrays"], [74, 1, 1, "", "broadcast_to"], [75, 1, 1, "", "can_cast"], [76, 1, 1, "", "ceil"], [77, 1, 1, "", "concat"], [78, 1, 1, "", "conj"], [84, 1, 1, "", "cos"], [85, 1, 1, "", "cosh"], [87, 1, 1, "", "divide"], [88, 1, 1, "", "empty"], [89, 1, 1, "", "empty_like"], [90, 1, 1, "", "equal"], [91, 1, 1, "", "exp"], [92, 1, 1, "", "expand_dims"], [93, 1, 1, "", "expm1"], [94, 1, 1, "", "eye"], [95, 1, 1, "", "finfo"], [96, 1, 1, "", "flip"], [97, 1, 1, "", "floor"], [98, 1, 1, "", "floor_divide"], [99, 1, 1, "", "from_dlpack"], [100, 1, 1, "", "full"], [101, 1, 1, "", "full_like"], [102, 1, 1, "", "greater"], [103, 1, 1, "", "greater_equal"], [104, 1, 1, "", "iinfo"], [105, 1, 1, "", "imag"], [106, 1, 1, "", "isdtype"], [107, 1, 1, "", "isfinite"], [108, 1, 1, "", "isinf"], [109, 1, 1, "", "isnan"], [110, 1, 1, "", "less"], [111, 1, 1, "", "less_equal"], [112, 1, 1, "", "linspace"], [113, 1, 1, "", "log"], [114, 1, 1, "", "log10"], [115, 1, 1, "", "log1p"], [116, 1, 1, "", "log2"], [117, 1, 1, "", "logaddexp"], [118, 1, 1, "", "logical_and"], [119, 1, 1, "", "logical_not"], [120, 1, 1, "", "logical_or"], [121, 1, 1, "", "logical_xor"], [122, 1, 1, "", "matmul"], [123, 1, 1, "", "matrix_transpose"], [124, 1, 1, "", "max"], [125, 1, 1, "", "mean"], [126, 1, 1, "", "meshgrid"], [127, 1, 1, "", "min"], [128, 1, 1, "", "multiply"], [129, 1, 1, "", "negative"], [130, 1, 1, "", "nonzero"], [131, 1, 1, "", "not_equal"], [132, 1, 1, "", "ones"], [133, 1, 1, "", "ones_like"], [134, 1, 1, "", "permute_dims"], [135, 1, 1, "", "positive"], [136, 1, 1, "", "pow"], [137, 1, 1, "", "prod"], [138, 1, 1, "", "real"], [139, 1, 1, "", "remainder"], [140, 1, 1, "", "reshape"], [141, 1, 1, "", "result_type"], [142, 1, 1, "", "roll"], [143, 1, 1, "", "round"], [144, 1, 1, "", "sign"], [145, 1, 1, "", "sin"], [146, 1, 1, "", "sinh"], [147, 1, 1, "", "sort"], [148, 1, 1, "", "sqrt"], [149, 1, 1, "", "square"], [150, 1, 1, "", "squeeze"], [151, 1, 1, "", "stack"], [152, 1, 1, "", "std"], [153, 1, 1, "", "subtract"], [154, 1, 1, "", "sum"], [155, 1, 1, "", "take"], [156, 1, 1, "", "tan"], [157, 1, 1, "", "tanh"], [158, 1, 1, "", "tensordot"], [159, 1, 1, "", "tril"], [160, 1, 1, "", "triu"], [161, 1, 1, "", "trunc"], [162, 1, 1, "", "unique_all"], [163, 1, 1, "", "unique_counts"], [164, 1, 1, "", "unique_inverse"], [165, 1, 1, "", "unique_values"], [166, 1, 1, "", "var"], [167, 1, 1, "", "vecdot"], [168, 1, 1, "", "where"], [169, 1, 1, "", "zeros"], [170, 1, 1, "", "zeros_like"]], "array_api.array": [[19, 2, 1, "", "T"], [20, 3, 1, "", "__abs__"], [21, 3, 1, "", "__add__"], [22, 3, 1, "", "__and__"], [23, 3, 1, "", "__array_namespace__"], [24, 3, 1, "", "__bool__"], [25, 3, 1, "", "__complex__"], [26, 3, 1, "", "__dlpack__"], [27, 3, 1, "", "__dlpack_device__"], [28, 3, 1, "", "__eq__"], [29, 3, 1, "", "__float__"], [30, 3, 1, "", "__floordiv__"], [31, 3, 1, "", "__ge__"], [32, 3, 1, "", "__getitem__"], [33, 3, 1, "", "__gt__"], [34, 3, 1, "", "__index__"], [35, 3, 1, "", "__int__"], [36, 3, 1, "", "__invert__"], [37, 3, 1, "", "__le__"], [38, 3, 1, "", "__lshift__"], [39, 3, 1, "", "__lt__"], [40, 3, 1, "", "__matmul__"], [41, 3, 1, "", "__mod__"], [42, 3, 1, "", "__mul__"], [43, 3, 1, "", "__ne__"], [44, 3, 1, "", "__neg__"], [45, 3, 1, "", "__or__"], [46, 3, 1, "", "__pos__"], [47, 3, 1, "", "__pow__"], [48, 3, 1, "", "__rshift__"], [49, 3, 1, "", "__setitem__"], [50, 3, 1, "", "__sub__"], [51, 3, 1, "", "__truediv__"], [52, 3, 1, "", "__xor__"], [53, 2, 1, "", "device"], [54, 2, 1, "", "dtype"], [55, 2, 1, "", "mT"], [56, 2, 1, "", "ndim"], [57, 2, 1, "", "shape"], [58, 2, 1, "", "size"], [59, 3, 1, "", "to_device"]], "array_api.constants": [[79, 0, 1, "", "e"], [80, 0, 1, "", "inf"], [81, 0, 1, "", "nan"], [82, 0, 1, "", "newaxis"], [83, 0, 1, "", "pi"]], "array_api.data_types": [[86, 1, 1, "", "__eq__"]], "array_api.fft": [[197, 1, 1, "", "fft"], [198, 1, 1, "", "fftfreq"], [199, 1, 1, "", "fftn"], [200, 1, 1, "", "fftshift"], [201, 1, 1, "", "hfft"], [202, 1, 1, "", "ifft"], [203, 1, 1, "", "ifftn"], [204, 1, 1, "", "ifftshift"], [205, 1, 1, "", "ihfft"], [206, 1, 1, "", "irfft"], [207, 1, 1, "", "irfftn"], [208, 1, 1, "", "rfft"], [209, 1, 1, "", "rfftfreq"], [210, 1, 1, "", "rfftn"]], "array_api.linalg": [[211, 1, 1, "", "cholesky"], [212, 1, 1, "", "cross"], [213, 1, 1, "", "det"], [214, 1, 1, "", "diagonal"], [215, 1, 1, "", "eigh"], [216, 1, 1, "", "eigvalsh"], [217, 1, 1, "", "inv"], [218, 1, 1, "", "matmul"], [219, 1, 1, "", "matrix_norm"], [220, 1, 1, "", "matrix_power"], [221, 1, 1, "", "matrix_rank"], [222, 1, 1, "", "matrix_transpose"], [223, 1, 1, "", "outer"], [224, 1, 1, "", "pinv"], [225, 1, 1, "", "qr"], [226, 1, 1, "", "slogdet"], [227, 1, 1, "", "solve"], [228, 1, 1, "", "svd"], [229, 1, 1, "", "svdvals"], [230, 1, 1, "", "tensordot"], [231, 1, 1, "", "trace"], [232, 1, 1, "", "vecdot"], [233, 1, 1, "", "vector_norm"]]}, "objtypes": {"0": "py:data", "1": "py:function", "2": "py:property", "3": "py:method"}, "objnames": {"0": ["py", "data", "Python data"], "1": ["py", "function", "Python function"], "2": ["py", "property", "Python property"], "3": ["py", "method", "Python method"]}, "titleterms": {"arrai": [0, 172, 180, 237, 239, 241], "object": [0, 2, 3, 4, 5, 6, 173, 174, 175, 176, 177, 178, 179, 181, 182, 196, 235, 239], "oper": [0, 187], "arithmet": [0, 187], "bitwis": 0, "comparison": 0, "In": [0, 1, 239], "place": [0, 1], "reflect": 0, "attribut": 0, "method": [0, 5, 7], "broadcast": 1, "overview": 1, "algorithm": 1, "exampl": [1, 186], "semant": [1, 192], "constant": 2, "api": [2, 3, 4, 6, 171, 173, 174, 175, 176, 177, 178, 179, 181, 182, 185, 186, 196, 235, 236, 237, 239, 241], "creation": 3, "function": [3, 4, 6, 7, 173, 174, 175, 176, 177, 178, 179, 181, 187, 196], "data": [4, 5, 130, 162, 163, 164, 165, 172, 185, 190, 191, 240], "type": [4, 5, 180, 185, 195, 241], "bool": 5, "int8": 5, "int16": 5, "int32": 5, "int64": 5, "uint8": 5, "uint16": 5, "uint32": 5, "uint64": 5, "float32": 5, "float64": 5, "complex64": 5, "complex128": 5, "default": 5, "categori": 5, "numer": 5, "real": [5, 138], "valu": [5, 172, 188], "integ": [5, 180], "float": [5, 180], "point": [5, 180], "complex": [5, 185, 188], "boolean": [5, 172], "element": 6, "wise": 6, "signatur": 7, "__array_api_version__": 8, "ab": 9, "aco": 10, "acosh": 11, "add": [12, 241], "all": 13, "ani": 14, "arang": 15, "argmax": 16, "argmin": 17, "argsort": 18, "t": 19, "__abs__": 20, "__add__": 21, "__and__": 22, "__array_namespace__": 23, "__bool__": 24, "__complex__": 25, "__dlpack__": 26, "cuda": 26, "rocm": 26, "tip": [26, 60], "__dlpack_device__": 27, "__eq__": [28, 86], "__float__": 29, "__floordiv__": 30, "__ge__": 31, "__getitem__": 32, "__gt__": 33, "__index__": 34, "__int__": 35, "__invert__": 36, "__le__": 37, "__lshift__": 38, "__lt__": 39, "__matmul__": 40, "__mod__": 41, "__mul__": 42, "__ne__": 43, "__neg__": 44, "__or__": 45, "__pos__": 46, "__pow__": 47, "__rshift__": 48, "__setitem__": 49, "__sub__": 50, "__truediv__": 51, "__xor__": 52, "devic": [53, 186, 192], "dtype": 54, "mt": 55, "ndim": 56, "shape": [57, 130, 162, 163, 164, 165, 172, 190], "size": 58, "to_devic": 59, "asarrai": 60, "note": [60, 99, 112, 180], "asin": 61, "asinh": 62, "astyp": 63, "atan": 64, "atan2": 65, "atanh": 66, "bitwise_and": 67, "bitwise_invert": 68, "bitwise_left_shift": 69, "bitwise_or": 70, "bitwise_right_shift": 71, "bitwise_xor": 72, "broadcast_arrai": 73, "broadcast_to": 74, "can_cast": 75, "ceil": 76, "concat": 77, "conj": 78, "e": 79, "inf": 80, "nan": 81, "newaxi": 82, "pi": 83, "co": 84, "cosh": 85, "divid": 87, "empti": 88, "empty_lik": 89, "equal": 90, "exp": 91, "expand_dim": 92, "expm1": 93, "ey": 94, "finfo": 95, "flip": 96, "floor": 97, "floor_divid": 98, "from_dlpack": 99, "full": 100, "full_lik": 101, "greater": 102, "greater_equ": 103, "iinfo": 104, "imag": 105, "isdtyp": 106, "isfinit": 107, "isinf": 108, "isnan": 109, "less": 110, "less_equ": 111, "linspac": 112, "log": 113, "log10": 114, "log1p": 115, "log2": 116, "logaddexp": 117, "logical_and": 118, "logical_not": 119, "logical_or": 120, "logical_xor": 121, "matmul": [122, 218], "matrix_transpos": [123, 222], "max": 124, "mean": 125, "meshgrid": 126, "min": 127, "multipli": 128, "neg": 129, "nonzero": 130, "depend": [130, 162, 163, 164, 165, 172, 183, 190], "output": [130, 162, 163, 164, 165, 172, 190], "not_equ": 131, "ones": 132, "ones_lik": 133, "permute_dim": 134, "posit": 135, "pow": 136, "prod": 137, "remaind": 139, "reshap": 140, "result_typ": 141, "roll": 142, "round": 143, "sign": [144, 180], "sin": 145, "sinh": 146, "sort": [147, 178], "sqrt": 148, "squar": 149, "squeez": 150, "stack": 151, "std": 152, "subtract": 153, "sum": 154, "take": 155, "tan": 156, "tanh": 157, "tensordot": [158, 230], "tril": 159, "triu": 160, "trunc": 161, "unique_al": 162, "unique_count": 163, "unique_invers": 164, "unique_valu": 165, "var": 166, "vecdot": [167, 232], "where": 168, "zero": 169, "zeros_lik": 170, "specif": 171, "index": [172, 173], "singl": 172, "axi": 172, "slice": 172, "syntax": [172, 192], "multi": 172, "return": 172, "linear": [174, 187, 235], "algebra": [174, 187, 235], "manipul": 175, "search": 176, "set": 177, "statist": [179, 187], "promot": [180, 188], "rule": 180, "tabl": 180, "unsign": 180, "mix": 180, "python": [180, 186, 237, 241], "scalar": 180, "util": 181, "version": [182, 185, 236], "assumpt": 183, "hardwar": [183, 241], "softwar": 183, "environ": 183, "backward": [183, 236], "compat": [183, 236], "product": 183, "code": [183, 186], "interact": 183, "us": [183, 186, 240, 241], "benchmark": 184, "suit": [184, 242], "changelog": 185, "per": 185, "standard": [185, 186, 236, 237, 239], "v2023": 185, "12": 185, "updat": 185, "norm": [185, 239], "extens": [185, 186, 196, 234, 235, 236], "addit": 185, "inspect": 185, "break": 185, "chang": 185, "errata": 185, "v2022": 185, "number": [185, 186, 188], "support": [185, 186, 192, 241], "c": 186, "situat": 186, "cython": 186, "usag": [186, 192, 196, 235, 237, 240], "1": [186, 241], "packag": 186, "i": 186, "mostli": 186, "pure": 186, "limit": 186, "2": [186, 241], "contain": 186, "lot": 186, "3": [186, 241], "numpi": 186, "directli": 186, "other": [186, 237], "longer": 186, "term": [186, 239], "approach": 186, "further": 186, "hpy": 186, "accuraci": 187, "mathemat": 187, "The": 188, "plane": 188, "branch": 188, "cut": 188, "order": 188, "base": 188, "copi": 189, "view": 189, "behaviour": 189, "mutabl": 189, "mutat": 189, "interchang": 191, "mechan": 191, "dlpack": 191, "an": [191, 239], "memori": 191, "tensor": 191, "structur": 191, "intend": 192, "assign": 192, "out": [192, 239], "scope": [192, 236, 239], "design": [193, 235, 240], "topic": 193, "constraint": 193, "parallel": 194, "static": 195, "fourier": 196, "transform": 196, "name": [196, 235], "fft": 197, "fftfreq": 198, "fftn": 199, "fftshift": 200, "hfft": 201, "ifft": 202, "ifftn": 203, "ifftshift": 204, "ihfft": 205, "irfft": 206, "irfftn": 207, "rfft": 208, "rfftfreq": 209, "rfftn": 210, "choleski": 211, "cross": 212, "det": 213, "diagon": 214, "eigh": 215, "eigvalsh": 216, "inv": 217, "matrix_norm": 219, "matrix_pow": 220, "matrix_rank": 221, "outer": 223, "pinv": 224, "qr": 225, "slogdet": 226, "solv": 227, "svd": 228, "svdval": 229, "trace": 231, "vector_norm": 233, "principl": 235, "futur": 236, "evolut": 236, "content": 237, "context": 237, "methodologi": 237, "licens": 238, "purpos": 239, "introduct": [239, 240], "thi": 239, "histori": 239, "includ": 239, "non": 239, "goal": 239, "implic": 239, "stakehold": 239, "how": 239, "read": 239, "document": 239, "adopt": 239, "check": 239, "complianc": 239, "discover": 239, "conform": [239, 242], "implement": 239, "option": 239, "featur": 239, "definit": 239, "refer": 239, "decis": 240, "make": [240, 241], "case": 241, "concret": 241, "acceler": 241, "distribut": 241, "scipi": 241, "simplifi": 241, "einop": 241, "remov": 241, "backend": 241, "system": 241, "ad": 241, "xtensor": 241, "4": 241, "jit": 241, "compil": 241, "comput": 241, "easier": 241, "more": 241, "robust": 241, "verif": 242, "test": 242, "measur": 242, "run": 242}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.todo": 2, "sphinx": 60}, "alltitles": {"Array object": [[0, "array-object"]], "Operators": [[0, "operators"]], "Arithmetic Operators": [[0, "arithmetic-operators"], [0, "id26"], [0, "id29"]], "Array Operators": [[0, "array-operators"], [0, "id27"], [0, "id30"]], "Bitwise Operators": [[0, "bitwise-operators"], [0, "id28"], [0, "id31"]], "Comparison Operators": [[0, "comparison-operators"]], "In-place Operators": [[0, "in-place-operators"]], "Reflected Operators": [[0, "reflected-operators"]], "Attributes": [[0, "attributes"]], "Methods": [[0, "methods"], [5, "methods"]], "Broadcasting": [[1, "broadcasting"]], "Overview": [[1, "overview"]], "Algorithm": [[1, "algorithm"]], "Examples": [[1, "examples"]], "In-place Semantics": [[1, "in-place-semantics"]], "Constants": [[2, "constants"]], "Objects in API": [[2, "objects-in-api"], [3, "objects-in-api"], [4, "objects-in-api"], [6, "objects-in-api"], [173, "objects-in-api"], [174, "objects-in-api"], [175, "objects-in-api"], [176, "objects-in-api"], [177, "objects-in-api"], [178, "objects-in-api"], [179, "objects-in-api"], [181, "objects-in-api"], [182, "objects-in-api"], [196, "objects-in-api"], [235, "objects-in-api"]], "Creation Functions": [[3, "creation-functions"]], "Data Type Functions": [[4, "data-type-functions"]], "Data Types": [[5, "data-types"], [185, "data-types"]], "bool": [[5, "bool"]], "int8": [[5, "int8"]], "int16": [[5, "int16"]], "int32": [[5, "int32"]], "int64": [[5, "int64"]], "uint8": [[5, "uint8"]], "uint16": [[5, "uint16"]], "uint32": [[5, "uint32"]], "uint64": [[5, "uint64"]], "float32": [[5, "float32"]], "float64": [[5, "float64"]], "complex64": [[5, "complex64"]], "complex128": [[5, "complex128"]], "Data Type Objects": [[5, "data-type-objects"]], "Default Data Types": [[5, "default-data-types"]], "Data Type Categories": [[5, "data-type-categories"]], "Numeric Data Types": [[5, "numeric-data-types"]], "Real-valued Data Types": [[5, "real-valued-data-types"]], "Integer Data Types": [[5, "integer-data-types"]], "Floating-point Data Types": [[5, "floating-point-data-types"]], "Real-valued Floating-point Data Types": [[5, "real-valued-floating-point-data-types"]], "Complex Floating-point Data Types": [[5, "complex-floating-point-data-types"]], "Boolean Data Types": [[5, "boolean-data-types"]], "Element-wise Functions": [[6, "element-wise-functions"]], "Function and method signatures": [[7, "function-and-method-signatures"]], "__array_api_version__": [[8, "array-api-version"]], "abs": [[9, "abs"]], "acos": [[10, "acos"]], "acosh": [[11, "acosh"]], "add": [[12, "add"]], "all": [[13, "all"]], "any": [[14, "any"]], "arange": [[15, "arange"]], "argmax": [[16, "argmax"]], "argmin": [[17, "argmin"]], "argsort": [[18, "argsort"]], "T": [[19, "t"]], "__abs__": [[20, "abs"]], "__add__": [[21, "add"]], "__and__": [[22, "and"]], "__array_namespace__": [[23, "array-namespace"]], "__bool__": [[24, "bool"]], "__complex__": [[25, "complex"]], "__dlpack__": [[26, "dlpack"]], "CUDA": [[26, null]], "ROCm": [[26, null]], "Tip": [[26, null], [60, null]], "__dlpack_device__": [[27, "dlpack-device"]], "__eq__": [[28, "eq"], [86, "eq"]], "__float__": [[29, "float"]], "__floordiv__": [[30, "floordiv"]], "__ge__": [[31, "ge"]], "__getitem__": [[32, "getitem"]], "__gt__": [[33, "gt"]], "__index__": [[34, "index"]], "__int__": [[35, "int"]], "__invert__": [[36, "invert"]], "__le__": [[37, "le"]], "__lshift__": [[38, "lshift"]], "__lt__": [[39, "lt"]], "__matmul__": [[40, "matmul"]], "__mod__": [[41, "mod"]], "__mul__": [[42, "mul"]], "__ne__": [[43, "ne"]], "__neg__": [[44, "neg"]], "__or__": [[45, "or"]], "__pos__": [[46, "pos"]], "__pow__": [[47, "pow"]], "__rshift__": [[48, "rshift"]], "__setitem__": [[49, "setitem"]], "__sub__": [[50, "sub"]], "__truediv__": [[51, "truediv"]], "__xor__": [[52, "xor"]], "device": [[53, "device"]], "dtype": [[54, "dtype"]], "mT": [[55, "mt"]], "ndim": [[56, "ndim"]], "shape": [[57, "shape"]], "size": [[58, "size"]], "to_device": [[59, "to-device"]], "asarray": [[60, "asarray"]], "Note": [[60, null], [99, null], [112, null]], "asin": [[61, "asin"]], "asinh": [[62, "asinh"]], "astype": [[63, "astype"]], "atan": [[64, "atan"]], "atan2": [[65, "atan2"]], "atanh": [[66, "atanh"]], "bitwise_and": [[67, "bitwise-and"]], "bitwise_invert": [[68, "bitwise-invert"]], "bitwise_left_shift": [[69, "bitwise-left-shift"]], "bitwise_or": [[70, "bitwise-or"]], "bitwise_right_shift": [[71, "bitwise-right-shift"]], "bitwise_xor": [[72, "bitwise-xor"]], "broadcast_arrays": [[73, "broadcast-arrays"]], "broadcast_to": [[74, "broadcast-to"]], "can_cast": [[75, "can-cast"]], "ceil": [[76, "ceil"]], "concat": [[77, "concat"]], "conj": [[78, "conj"]], "e": [[79, "e"]], "inf": [[80, "inf"]], "nan": [[81, "nan"]], "newaxis": [[82, "newaxis"]], "pi": [[83, "pi"]], "cos": [[84, "cos"]], "cosh": [[85, "cosh"]], "divide": [[87, "divide"]], "empty": [[88, "empty"]], "empty_like": [[89, "empty-like"]], "equal": [[90, "equal"]], "exp": [[91, "exp"]], "expand_dims": [[92, "expand-dims"]], "expm1": [[93, "expm1"]], "eye": [[94, "eye"]], "finfo": [[95, "finfo"]], "flip": [[96, "flip"]], "floor": [[97, "floor"]], "floor_divide": [[98, "floor-divide"]], "from_dlpack": [[99, "from-dlpack"]], "full": [[100, "full"]], "full_like": [[101, "full-like"]], "greater": [[102, "greater"]], "greater_equal": [[103, "greater-equal"]], "iinfo": [[104, "iinfo"]], "imag": [[105, "imag"]], "isdtype": [[106, "isdtype"]], "isfinite": [[107, "isfinite"]], "isinf": [[108, "isinf"]], "isnan": [[109, "isnan"]], "less": [[110, "less"]], "less_equal": [[111, "less-equal"]], "linspace": [[112, "linspace"]], "log": [[113, "log"]], "log10": [[114, "log10"]], "log1p": [[115, "log1p"]], "log2": [[116, "log2"]], "logaddexp": [[117, "logaddexp"]], "logical_and": [[118, "logical-and"]], "logical_not": [[119, "logical-not"]], "logical_or": [[120, "logical-or"]], "logical_xor": [[121, "logical-xor"]], "matmul": [[122, "matmul"], [218, "matmul"]], "matrix_transpose": [[123, "matrix-transpose"], [222, "matrix-transpose"]], "max": [[124, "max"]], "mean": [[125, "mean"]], "meshgrid": [[126, "meshgrid"]], "min": [[127, "min"]], "multiply": [[128, "multiply"]], "negative": [[129, "negative"]], "nonzero": [[130, "nonzero"]], "Data-dependent output shape": [[130, null], [162, null], [163, null], [164, null], [165, null], [172, null], [190, null]], "not_equal": [[131, "not-equal"]], "ones": [[132, "ones"]], "ones_like": [[133, "ones-like"]], "permute_dims": [[134, "permute-dims"]], "positive": [[135, "positive"]], "pow": [[136, "pow"]], "prod": [[137, "prod"]], "real": [[138, "real"]], "remainder": [[139, "remainder"]], "reshape": [[140, "reshape"]], "result_type": [[141, "result-type"]], "roll": [[142, "roll"]], "round": [[143, "round"]], "sign": [[144, "sign"]], "sin": [[145, "sin"]], "sinh": [[146, "sinh"]], "sort": [[147, "sort"]], "sqrt": [[148, "sqrt"]], "square": [[149, "square"]], "squeeze": [[150, "squeeze"]], "stack": [[151, "stack"]], "std": [[152, "std"]], "subtract": [[153, "subtract"]], "sum": [[154, "sum"]], "take": [[155, "take"]], "tan": [[156, "tan"]], "tanh": [[157, "tanh"]], "tensordot": [[158, "tensordot"], [230, "tensordot"]], "tril": [[159, "tril"]], "triu": [[160, "triu"]], "trunc": [[161, "trunc"]], "unique_all": [[162, "unique-all"]], "unique_counts": [[163, "unique-counts"]], "unique_inverse": [[164, "unique-inverse"]], "unique_values": [[165, "unique-values"]], "var": [[166, "var"]], "vecdot": [[167, "vecdot"], [232, "vecdot"]], "where": [[168, "where"]], "zeros": [[169, "zeros"]], "zeros_like": [[170, "zeros-like"]], "API specification": [[171, "api-specification"], [171, null]], "Indexing": [[172, "indexing"]], "Single-axis Indexing": [[172, "single-axis-indexing"]], "Slice Syntax": [[172, "slice-syntax"]], "Multi-axis Indexing": [[172, "multi-axis-indexing"]], "Boolean Array Indexing": [[172, "boolean-array-indexing"]], "Return Values": [[172, "return-values"]], "Indexing Functions": [[173, "indexing-functions"]], "Linear Algebra Functions": [[174, "linear-algebra-functions"]], "Manipulation Functions": [[175, "manipulation-functions"]], "Searching Functions": [[176, "searching-functions"]], "Set Functions": [[177, "set-functions"]], "Sorting Functions": [[178, "sorting-functions"]], "Statistical Functions": [[179, "statistical-functions"], [187, "statistical-functions"]], "Type Promotion Rules": [[180, "type-promotion-rules"]], "Rules": [[180, "rules"]], "Signed integer type promotion table": [[180, "signed-integer-type-promotion-table"]], "Unsigned integer type promotion table": [[180, "unsigned-integer-type-promotion-table"]], "Mixed unsigned and signed integer type promotion table": [[180, "mixed-unsigned-and-signed-integer-type-promotion-table"]], "Floating-point type promotion table": [[180, "floating-point-type-promotion-table"]], "Notes": [[180, "notes"]], "Mixing arrays with Python scalars": [[180, "mixing-arrays-with-python-scalars"]], "Utility Functions": [[181, "utility-functions"]], "Version": [[182, "version"]], "Assumptions": [[183, "assumptions"]], "Hardware and software environments": [[183, "hardware-and-software-environments"]], "Dependencies": [[183, "dependencies"]], "Backwards compatibility": [[183, "backwards-compatibility"], [236, "backwards-compatibility"]], "Production code & interactive use": [[183, "production-code-interactive-use"]], "Benchmark suite": [[184, "benchmark-suite"]], "Changelog per API standard version": [[185, "changelog-per-api-standard-version"]], "Changelog": [[185, "changelog"]], "v2023.12": [[185, "v2023-12"]], "Updates": [[185, "updates"], [185, "id3"]], "Normative": [[185, "normative"]], "APIs": [[185, "apis"], [185, "id1"], [185, "id4"], [185, "id8"]], "Extensions": [[185, "extensions"], [185, "id2"], [185, "id5"], [185, "id9"], [234, "extensions"], [234, "id2"]], "Additions": [[185, "additions"], [185, "id7"]], "Inspection APIs": [[185, "inspection-apis"]], "Breaking Changes": [[185, "breaking-changes"]], "Errata": [[185, "errata"], [185, "id10"]], "v2022.12": [[185, "v2022-12"]], "Complex Number Support": [[185, "complex-number-support"], [185, "id6"]], "C API": [[186, "c-api"]], "Example situations for C/Cython usage": [[186, "example-situations-for-c-cython-usage"]], "Situation 1: a Python package that is mostly pure Python, with a limited number of Cython extensions": [[186, "situation-1-a-python-package-that-is-mostly-pure-python-with-a-limited-number-of-cython-extensions"]], "Situation 2: a Python package that contains a lot of Cython code": [[186, "situation-2-a-python-package-that-contains-a-lot-of-cython-code"]], "Situation 3: a Python package that uses the NumPy or Python C API directly": [[186, "situation-3-a-python-package-that-uses-the-numpy-or-python-c-api-directly"]], "Device support": [[186, "device-support"], [192, "device-support"]], "Other longer-term approaches": [[186, "other-longer-term-approaches"]], "Further Python API standardization": [[186, "further-python-api-standardization"]], "HPy": [[186, "hpy"]], "Accuracy": [[187, "accuracy"]], "Arithmetic Operations": [[187, "arithmetic-operations"]], "Mathematical Functions": [[187, "mathematical-functions"]], "Linear Algebra": [[187, "linear-algebra"]], "Complex Numbers": [[188, "complex-numbers"]], "The Complex Plane": [[188, "the-complex-plane"]], "Branch Cuts": [[188, "branch-cuts"]], "Complex Number Ordering": [[188, "complex-number-ordering"]], "Valued-based Promotion": [[188, "valued-based-promotion"]], "Copy-view behaviour and mutability": [[189, "copy-view-behaviour-and-mutability"]], "Mutating views": [[189, null]], "Data-dependent output shapes": [[190, "data-dependent-output-shapes"]], "Data interchange mechanisms": [[191, "data-interchange-mechanisms"]], "DLPack: An in-memory tensor structure": [[191, "dlpack-an-in-memory-tensor-structure"]], "Intended usage": [[192, "intended-usage"]], "Syntax for device assignment": [[192, "syntax-for-device-assignment"]], "Semantics": [[192, "semantics"]], "Out of scope for device support": [[192, "out-of-scope-for-device-support"]], "Design topics & constraints": [[193, "design-topics-constraints"], [193, null]], "Parallelism": [[194, "parallelism"]], "Static typing": [[195, "static-typing"]], "Fourier transform Functions": [[196, "fourier-transform-functions"]], "Extension name and usage": [[196, "extension-name-and-usage"], [235, "extension-name-and-usage"]], "fft": [[197, "fft"]], "fftfreq": [[198, "fftfreq"]], "fftn": [[199, "fftn"]], "fftshift": [[200, "fftshift"]], "hfft": [[201, "hfft"]], "ifft": [[202, "ifft"]], "ifftn": [[203, "ifftn"]], "ifftshift": [[204, "ifftshift"]], "ihfft": [[205, "ihfft"]], "irfft": [[206, "irfft"]], "irfftn": [[207, "irfftn"]], "rfft": [[208, "rfft"]], "rfftfreq": [[209, "rfftfreq"]], "rfftn": [[210, "rfftn"]], "cholesky": [[211, "cholesky"]], "cross": [[212, "cross"]], "det": [[213, "det"]], "diagonal": [[214, "diagonal"]], "eigh": [[215, "eigh"]], "eigvalsh": [[216, "eigvalsh"]], "inv": [[217, "inv"]], "matrix_norm": [[219, "matrix-norm"]], "matrix_power": [[220, "matrix-power"]], "matrix_rank": [[221, "matrix-rank"]], "outer": [[223, "outer"]], "pinv": [[224, "pinv"]], "qr": [[225, "qr"]], "slogdet": [[226, "slogdet"]], "solve": [[227, "solve"]], "svd": [[228, "svd"]], "svdvals": [[229, "svdvals"]], "trace": [[231, "trace"]], "vector_norm": [[233, "vector-norm"]], "Linear Algebra Extension": [[235, "linear-algebra-extension"]], "Design Principles": [[235, "design-principles"]], "Future API standard evolution": [[236, "future-api-standard-evolution"]], "Scope extensions": [[236, "scope-extensions"]], "Versioning": [[236, "versioning"]], "Python array API standard": [[237, "python-array-api-standard"]], "Contents": [[237, "contents"]], "Context": [[237, null]], "API": [[237, null]], "Methodology and Usage": [[237, null]], "Other": [[237, null]], "License": [[238, "license"]], "Purpose and scope": [[239, "purpose-and-scope"]], "Introduction": [[239, "introduction"], [240, "introduction"]], "This API standard": [[239, "this-api-standard"]], "History": [[239, "history"]], "Scope (includes out-of-scope / non-goals)": [[239, "scope-includes-out-of-scope-non-goals"]], "In scope": [[239, "in-scope"]], "Out of scope": [[239, "out-of-scope"]], "Implications of in/out of scope": [[239, "implications-of-in-out-of-scope"]], "Stakeholders": [[239, "stakeholders"]], "How to read this document": [[239, "how-to-read-this-document"]], "How to adopt this API": [[239, "how-to-adopt-this-api"]], "Checking an array object for Compliance": [[239, "checking-an-array-object-for-compliance"]], "Discoverability of conforming implementations": [[239, "discoverability-of-conforming-implementations"]], "Optional feature": [[239, null]], "Conformance": [[239, "conformance"]], "Terms and Definitions": [[239, "terms-and-definitions"]], "Normative References": [[239, "normative-references"]], "Usage Data": [[240, "usage-data"]], "Design": [[240, "design"]], "Usage": [[240, "usage"]], "Use in Decision-Making": [[240, "use-in-decision-making"]], "Use cases": [[241, "use-cases"]], "Types of use cases": [[241, "types-of-use-cases"]], "Concrete use cases": [[241, "concrete-use-cases"]], "Use case 1: add hardware accelerator and distributed support to SciPy": [[241, "use-case-1-add-hardware-accelerator-and-distributed-support-to-scipy"]], "Use case 2: simplify einops by removing the backend system": [[241, "use-case-2-simplify-einops-by-removing-the-backend-system"]], "Use case 3: adding a Python API to xtensor": [[241, "use-case-3-adding-a-python-api-to-xtensor"]], "Use case 4: make JIT compilation of array computations easier and more robust": [[241, "use-case-4-make-jit-compilation-of-array-computations-easier-and-more-robust"]], "Verification - test suite": [[242, "verification-test-suite"]], "Measuring conformance": [[242, "measuring-conformance"]], "Running the tests": [[242, "running-the-tests"]]}, "indexentries": {"__array_api_version__ (in module array_api)": [[8, "array_api.__array_api_version__"]], "abs() (in module array_api)": [[9, "array_api.abs"]], "acos() (in module array_api)": [[10, "array_api.acos"]], "acosh() (in module array_api)": [[11, "array_api.acosh"]], "add() (in module array_api)": [[12, "array_api.add"]], "all() (in module array_api)": [[13, "array_api.all"]], "any() (in module array_api)": [[14, "array_api.any"]], "arange() (in module array_api)": [[15, "array_api.arange"]], "argmax() (in module array_api)": [[16, "array_api.argmax"]], "argmin() (in module array_api)": [[17, "array_api.argmin"]], "argsort() (in module array_api)": [[18, "array_api.argsort"]], "t (array property)": [[19, "array_api.array.T"]], "__abs__() (array method)": [[20, "array_api.array.__abs__"]], "__add__() (array method)": [[21, "array_api.array.__add__"]], "__and__() (array method)": [[22, "array_api.array.__and__"]], "__array_namespace__() (array method)": [[23, "array_api.array.__array_namespace__"]], "__bool__() (array method)": [[24, "array_api.array.__bool__"]], "__complex__() (array method)": [[25, "array_api.array.__complex__"]], "__dlpack__() (array method)": [[26, "array_api.array.__dlpack__"]], "__dlpack_device__() (array method)": [[27, "array_api.array.__dlpack_device__"]], "__eq__() (array method)": [[28, "array_api.array.__eq__"]], "__float__() (array method)": [[29, "array_api.array.__float__"]], "__floordiv__() (array method)": [[30, "array_api.array.__floordiv__"]], "__ge__() (array method)": [[31, "array_api.array.__ge__"]], "__getitem__() (array method)": [[32, "array_api.array.__getitem__"]], "__gt__() (array method)": [[33, "array_api.array.__gt__"]], "__index__() (array method)": [[34, "array_api.array.__index__"]], "__int__() (array method)": [[35, "array_api.array.__int__"]], "__invert__() (array method)": [[36, "array_api.array.__invert__"]], "__le__() (array method)": [[37, "array_api.array.__le__"]], "__lshift__() (array method)": [[38, "array_api.array.__lshift__"]], "__lt__() (array method)": [[39, "array_api.array.__lt__"]], "__matmul__() (array method)": [[40, "array_api.array.__matmul__"]], "__mod__() (array method)": [[41, "array_api.array.__mod__"]], "__mul__() (array method)": [[42, "array_api.array.__mul__"]], "__ne__() (array method)": [[43, "array_api.array.__ne__"]], "__neg__() (array method)": [[44, "array_api.array.__neg__"]], "__or__() (array method)": [[45, "array_api.array.__or__"]], "__pos__() (array method)": [[46, "array_api.array.__pos__"]], "__pow__() (array method)": [[47, "array_api.array.__pow__"]], "__rshift__() (array method)": [[48, "array_api.array.__rshift__"]], "__setitem__() (array method)": [[49, "array_api.array.__setitem__"]], "__sub__() (array method)": [[50, "array_api.array.__sub__"]], "__truediv__() (array method)": [[51, "array_api.array.__truediv__"]], "__xor__() (array method)": [[52, "array_api.array.__xor__"]], "device (array property)": [[53, "array_api.array.device"]], "dtype (array property)": [[54, "array_api.array.dtype"]], "mt (array property)": [[55, "array_api.array.mT"]], "ndim (array property)": [[56, "array_api.array.ndim"]], "shape (array property)": [[57, "array_api.array.shape"]], "size (array property)": [[58, "array_api.array.size"]], "to_device() (array method)": [[59, "array_api.array.to_device"]], "asarray() (in module array_api)": [[60, "array_api.asarray"]], "asin() (in module array_api)": [[61, "array_api.asin"]], "asinh() (in module array_api)": [[62, "array_api.asinh"]], "astype() (in module array_api)": [[63, "array_api.astype"]], "atan() (in module array_api)": [[64, "array_api.atan"]], "atan2() (in module array_api)": [[65, "array_api.atan2"]], "atanh() (in module array_api)": [[66, "array_api.atanh"]], "bitwise_and() (in module array_api)": [[67, "array_api.bitwise_and"]], "bitwise_invert() (in module array_api)": [[68, "array_api.bitwise_invert"]], "bitwise_left_shift() (in module array_api)": [[69, "array_api.bitwise_left_shift"]], "bitwise_or() (in module array_api)": [[70, "array_api.bitwise_or"]], "bitwise_right_shift() (in module array_api)": [[71, "array_api.bitwise_right_shift"]], "bitwise_xor() (in module array_api)": [[72, "array_api.bitwise_xor"]], "broadcast_arrays() (in module array_api)": [[73, "array_api.broadcast_arrays"]], "broadcast_to() (in module array_api)": [[74, "array_api.broadcast_to"]], "can_cast() (in module array_api)": [[75, "array_api.can_cast"]], "ceil() (in module array_api)": [[76, "array_api.ceil"]], "concat() (in module array_api)": [[77, "array_api.concat"]], "conj() (in module array_api)": [[78, "array_api.conj"]], "e (in module array_api.constants)": [[79, "array_api.constants.e"]], "inf (in module array_api.constants)": [[80, "array_api.constants.inf"]], "nan (in module array_api.constants)": [[81, "array_api.constants.nan"]], "newaxis (in module array_api.constants)": [[82, "array_api.constants.newaxis"]], "pi (in module array_api.constants)": [[83, "array_api.constants.pi"]], "cos() (in module array_api)": [[84, "array_api.cos"]], "cosh() (in module array_api)": [[85, "array_api.cosh"]], "__eq__() (in module array_api.data_types)": [[86, "array_api.data_types.__eq__"]], "divide() (in module array_api)": [[87, "array_api.divide"]], "empty() (in module array_api)": [[88, "array_api.empty"]], "empty_like() (in module array_api)": [[89, "array_api.empty_like"]], "equal() (in module array_api)": [[90, "array_api.equal"]], "exp() (in module array_api)": [[91, "array_api.exp"]], "expand_dims() (in module array_api)": [[92, "array_api.expand_dims"]], "expm1() (in module array_api)": [[93, "array_api.expm1"]], "eye() (in module array_api)": [[94, "array_api.eye"]], "finfo() (in module array_api)": [[95, "array_api.finfo"]], "flip() (in module array_api)": [[96, "array_api.flip"]], "floor() (in module array_api)": [[97, "array_api.floor"]], "floor_divide() (in module array_api)": [[98, "array_api.floor_divide"]], "from_dlpack() (in module array_api)": [[99, "array_api.from_dlpack"]], "full() (in module array_api)": [[100, "array_api.full"]], "full_like() (in module array_api)": [[101, "array_api.full_like"]], "greater() (in module array_api)": [[102, "array_api.greater"]], "greater_equal() (in module array_api)": [[103, "array_api.greater_equal"]], "iinfo() (in module array_api)": [[104, "array_api.iinfo"]], "imag() (in module array_api)": [[105, "array_api.imag"]], "isdtype() (in module array_api)": [[106, "array_api.isdtype"]], "isfinite() (in module array_api)": [[107, "array_api.isfinite"]], "isinf() (in module array_api)": [[108, "array_api.isinf"]], "isnan() (in module array_api)": [[109, "array_api.isnan"]], "less() (in module array_api)": [[110, "array_api.less"]], "less_equal() (in module array_api)": [[111, "array_api.less_equal"]], "linspace() (in module array_api)": [[112, "array_api.linspace"]], "log() (in module array_api)": [[113, "array_api.log"]], "log10() (in module array_api)": [[114, "array_api.log10"]], "log1p() (in module array_api)": [[115, "array_api.log1p"]], "log2() (in module array_api)": [[116, "array_api.log2"]], "logaddexp() (in module array_api)": [[117, "array_api.logaddexp"]], "logical_and() (in module array_api)": [[118, "array_api.logical_and"]], "logical_not() (in module array_api)": [[119, "array_api.logical_not"]], "logical_or() (in module array_api)": [[120, "array_api.logical_or"]], "logical_xor() (in module array_api)": [[121, "array_api.logical_xor"]], "matmul() (in module array_api)": [[122, "array_api.matmul"]], "matrix_transpose() (in module array_api)": [[123, "array_api.matrix_transpose"]], "max() (in module array_api)": [[124, "array_api.max"]], "mean() (in module array_api)": [[125, "array_api.mean"]], "meshgrid() (in module array_api)": [[126, "array_api.meshgrid"]], "min() (in module array_api)": [[127, "array_api.min"]], "multiply() (in module array_api)": [[128, "array_api.multiply"]], "negative() (in module array_api)": [[129, "array_api.negative"]], "nonzero() (in module array_api)": [[130, "array_api.nonzero"]], "not_equal() (in module array_api)": [[131, "array_api.not_equal"]], "ones() (in module array_api)": [[132, "array_api.ones"]], "ones_like() (in module array_api)": [[133, "array_api.ones_like"]], "permute_dims() (in module array_api)": [[134, "array_api.permute_dims"]], "positive() (in module array_api)": [[135, "array_api.positive"]], "pow() (in module array_api)": [[136, "array_api.pow"]], "prod() (in module array_api)": [[137, "array_api.prod"]], "real() (in module array_api)": [[138, "array_api.real"]], "remainder() (in module array_api)": [[139, "array_api.remainder"]], "reshape() (in module array_api)": [[140, "array_api.reshape"]], "result_type() (in module array_api)": [[141, "array_api.result_type"]], "roll() (in module array_api)": [[142, "array_api.roll"]], "round() (in module array_api)": [[143, "array_api.round"]], "sign() (in module array_api)": [[144, "array_api.sign"]], "sin() (in module array_api)": [[145, "array_api.sin"]], "sinh() (in module array_api)": [[146, "array_api.sinh"]], "sort() (in module array_api)": [[147, "array_api.sort"]], "sqrt() (in module array_api)": [[148, "array_api.sqrt"]], "square() (in module array_api)": [[149, "array_api.square"]], "squeeze() (in module array_api)": [[150, "array_api.squeeze"]], "stack() (in module array_api)": [[151, "array_api.stack"]], "std() (in module array_api)": [[152, "array_api.std"]], "subtract() (in module array_api)": [[153, "array_api.subtract"]], "sum() (in module array_api)": [[154, "array_api.sum"]], "take() (in module array_api)": [[155, "array_api.take"]], "tan() (in module array_api)": [[156, "array_api.tan"]], "tanh() (in module array_api)": [[157, "array_api.tanh"]], "tensordot() (in module array_api)": [[158, "array_api.tensordot"]], "tril() (in module array_api)": [[159, "array_api.tril"]], "triu() (in module array_api)": [[160, "array_api.triu"]], "trunc() (in module array_api)": [[161, "array_api.trunc"]], "unique_all() (in module array_api)": [[162, "array_api.unique_all"]], "unique_counts() (in module array_api)": [[163, "array_api.unique_counts"]], "unique_inverse() (in module array_api)": [[164, "array_api.unique_inverse"]], "unique_values() (in module array_api)": [[165, "array_api.unique_values"]], "var() (in module array_api)": [[166, "array_api.var"]], "vecdot() (in module array_api)": [[167, "array_api.vecdot"]], "where() (in module array_api)": [[168, "array_api.where"]], "zeros() (in module array_api)": [[169, "array_api.zeros"]], "zeros_like() (in module array_api)": [[170, "array_api.zeros_like"]], "fft() (in module array_api.fft)": [[197, "array_api.fft.fft"]], "fftfreq() (in module array_api.fft)": [[198, "array_api.fft.fftfreq"]], "fftn() (in module array_api.fft)": [[199, "array_api.fft.fftn"]], "fftshift() (in module array_api.fft)": [[200, "array_api.fft.fftshift"]], "hfft() (in module array_api.fft)": [[201, "array_api.fft.hfft"]], "ifft() (in module array_api.fft)": [[202, "array_api.fft.ifft"]], "ifftn() (in module array_api.fft)": [[203, "array_api.fft.ifftn"]], "ifftshift() (in module array_api.fft)": [[204, "array_api.fft.ifftshift"]], "ihfft() (in module array_api.fft)": [[205, "array_api.fft.ihfft"]], "irfft() (in module array_api.fft)": [[206, "array_api.fft.irfft"]], "irfftn() (in module array_api.fft)": [[207, "array_api.fft.irfftn"]], "rfft() (in module array_api.fft)": [[208, "array_api.fft.rfft"]], "rfftfreq() (in module array_api.fft)": [[209, "array_api.fft.rfftfreq"]], "rfftn() (in module array_api.fft)": [[210, "array_api.fft.rfftn"]], "cholesky() (in module array_api.linalg)": [[211, "array_api.linalg.cholesky"]], "cross() (in module array_api.linalg)": [[212, "array_api.linalg.cross"]], "det() (in module array_api.linalg)": [[213, "array_api.linalg.det"]], "diagonal() (in module array_api.linalg)": [[214, "array_api.linalg.diagonal"]], "eigh() (in module array_api.linalg)": [[215, "array_api.linalg.eigh"]], "eigvalsh() (in module array_api.linalg)": [[216, "array_api.linalg.eigvalsh"]], "inv() (in module array_api.linalg)": [[217, "array_api.linalg.inv"]], "matmul() (in module array_api.linalg)": [[218, "array_api.linalg.matmul"]], "matrix_norm() (in module array_api.linalg)": [[219, "array_api.linalg.matrix_norm"]], "matrix_power() (in module array_api.linalg)": [[220, "array_api.linalg.matrix_power"]], "matrix_rank() (in module array_api.linalg)": [[221, "array_api.linalg.matrix_rank"]], "matrix_transpose() (in module array_api.linalg)": [[222, "array_api.linalg.matrix_transpose"]], "outer() (in module array_api.linalg)": [[223, "array_api.linalg.outer"]], "pinv() (in module array_api.linalg)": [[224, "array_api.linalg.pinv"]], "qr() (in module array_api.linalg)": [[225, "array_api.linalg.qr"]], "slogdet() (in module array_api.linalg)": [[226, "array_api.linalg.slogdet"]], "solve() (in module array_api.linalg)": [[227, "array_api.linalg.solve"]], "svd() (in module array_api.linalg)": [[228, "array_api.linalg.svd"]], "svdvals() (in module array_api.linalg)": [[229, "array_api.linalg.svdvals"]], "tensordot() (in module array_api.linalg)": [[230, "array_api.linalg.tensordot"]], "trace() (in module array_api.linalg)": [[231, "array_api.linalg.trace"]], "vecdot() (in module array_api.linalg)": [[232, "array_api.linalg.vecdot"]], "vector_norm() (in module array_api.linalg)": [[233, "array_api.linalg.vector_norm"]]}})