Search.setIndex({"docnames": ["API_specification/array_object", "API_specification/broadcasting", "API_specification/constants", "API_specification/creation_functions", "API_specification/data_type_functions", "API_specification/data_types", "API_specification/elementwise_functions", "API_specification/function_and_method_signatures", "API_specification/generated/array_api.__array_api_version__", "API_specification/generated/array_api.abs", "API_specification/generated/array_api.acos", "API_specification/generated/array_api.acosh", "API_specification/generated/array_api.add", "API_specification/generated/array_api.all", "API_specification/generated/array_api.any", "API_specification/generated/array_api.arange", "API_specification/generated/array_api.argmax", "API_specification/generated/array_api.argmin", "API_specification/generated/array_api.argsort", "API_specification/generated/array_api.array.T", "API_specification/generated/array_api.array.__abs__", "API_specification/generated/array_api.array.__add__", "API_specification/generated/array_api.array.__and__", "API_specification/generated/array_api.array.__array_namespace__", "API_specification/generated/array_api.array.__bool__", "API_specification/generated/array_api.array.__complex__", "API_specification/generated/array_api.array.__dlpack__", "API_specification/generated/array_api.array.__dlpack_device__", "API_specification/generated/array_api.array.__eq__", "API_specification/generated/array_api.array.__float__", "API_specification/generated/array_api.array.__floordiv__", "API_specification/generated/array_api.array.__ge__", "API_specification/generated/array_api.array.__getitem__", "API_specification/generated/array_api.array.__gt__", "API_specification/generated/array_api.array.__index__", "API_specification/generated/array_api.array.__int__", "API_specification/generated/array_api.array.__invert__", "API_specification/generated/array_api.array.__le__", "API_specification/generated/array_api.array.__lshift__", "API_specification/generated/array_api.array.__lt__", "API_specification/generated/array_api.array.__matmul__", "API_specification/generated/array_api.array.__mod__", "API_specification/generated/array_api.array.__mul__", "API_specification/generated/array_api.array.__ne__", "API_specification/generated/array_api.array.__neg__", "API_specification/generated/array_api.array.__or__", "API_specification/generated/array_api.array.__pos__", "API_specification/generated/array_api.array.__pow__", "API_specification/generated/array_api.array.__rshift__", "API_specification/generated/array_api.array.__setitem__", "API_specification/generated/array_api.array.__sub__", "API_specification/generated/array_api.array.__truediv__", "API_specification/generated/array_api.array.__xor__", "API_specification/generated/array_api.array.device", "API_specification/generated/array_api.array.dtype", "API_specification/generated/array_api.array.mT", "API_specification/generated/array_api.array.ndim", "API_specification/generated/array_api.array.shape", "API_specification/generated/array_api.array.size", "API_specification/generated/array_api.array.to_device", "API_specification/generated/array_api.asarray", "API_specification/generated/array_api.asin", "API_specification/generated/array_api.asinh", "API_specification/generated/array_api.astype", "API_specification/generated/array_api.atan", "API_specification/generated/array_api.atan2", "API_specification/generated/array_api.atanh", "API_specification/generated/array_api.bitwise_and", "API_specification/generated/array_api.bitwise_invert", "API_specification/generated/array_api.bitwise_left_shift", "API_specification/generated/array_api.bitwise_or", "API_specification/generated/array_api.bitwise_right_shift", "API_specification/generated/array_api.bitwise_xor", "API_specification/generated/array_api.broadcast_arrays", "API_specification/generated/array_api.broadcast_to", "API_specification/generated/array_api.can_cast", "API_specification/generated/array_api.ceil", "API_specification/generated/array_api.clip", "API_specification/generated/array_api.concat", "API_specification/generated/array_api.conj", "API_specification/generated/array_api.constants.e", "API_specification/generated/array_api.constants.inf", "API_specification/generated/array_api.constants.nan", "API_specification/generated/array_api.constants.newaxis", "API_specification/generated/array_api.constants.pi", "API_specification/generated/array_api.copysign", "API_specification/generated/array_api.cos", "API_specification/generated/array_api.cosh", "API_specification/generated/array_api.cumulative_sum", "API_specification/generated/array_api.data_types.__eq__", "API_specification/generated/array_api.divide", "API_specification/generated/array_api.empty", "API_specification/generated/array_api.empty_like", "API_specification/generated/array_api.equal", "API_specification/generated/array_api.exp", "API_specification/generated/array_api.expand_dims", "API_specification/generated/array_api.expm1", "API_specification/generated/array_api.eye", "API_specification/generated/array_api.finfo", "API_specification/generated/array_api.flip", "API_specification/generated/array_api.floor", "API_specification/generated/array_api.floor_divide", "API_specification/generated/array_api.from_dlpack", "API_specification/generated/array_api.full", "API_specification/generated/array_api.full_like", "API_specification/generated/array_api.greater", "API_specification/generated/array_api.greater_equal", "API_specification/generated/array_api.hypot", "API_specification/generated/array_api.iinfo", "API_specification/generated/array_api.imag", "API_specification/generated/array_api.info.__array_namespace_info__", "API_specification/generated/array_api.info.capabilities", "API_specification/generated/array_api.info.default_device", "API_specification/generated/array_api.info.default_dtypes", "API_specification/generated/array_api.info.devices", "API_specification/generated/array_api.info.dtypes", "API_specification/generated/array_api.isdtype", "API_specification/generated/array_api.isfinite", "API_specification/generated/array_api.isinf", "API_specification/generated/array_api.isnan", "API_specification/generated/array_api.less", "API_specification/generated/array_api.less_equal", "API_specification/generated/array_api.linspace", "API_specification/generated/array_api.log", "API_specification/generated/array_api.log10", "API_specification/generated/array_api.log1p", "API_specification/generated/array_api.log2", "API_specification/generated/array_api.logaddexp", "API_specification/generated/array_api.logical_and", "API_specification/generated/array_api.logical_not", "API_specification/generated/array_api.logical_or", "API_specification/generated/array_api.logical_xor", "API_specification/generated/array_api.matmul", "API_specification/generated/array_api.matrix_transpose", "API_specification/generated/array_api.max", "API_specification/generated/array_api.maximum", "API_specification/generated/array_api.mean", "API_specification/generated/array_api.meshgrid", "API_specification/generated/array_api.min", "API_specification/generated/array_api.minimum", "API_specification/generated/array_api.moveaxis", "API_specification/generated/array_api.multiply", "API_specification/generated/array_api.negative", "API_specification/generated/array_api.nonzero", "API_specification/generated/array_api.not_equal", "API_specification/generated/array_api.ones", "API_specification/generated/array_api.ones_like", "API_specification/generated/array_api.permute_dims", "API_specification/generated/array_api.positive", "API_specification/generated/array_api.pow", "API_specification/generated/array_api.prod", "API_specification/generated/array_api.real", "API_specification/generated/array_api.remainder", "API_specification/generated/array_api.reshape", "API_specification/generated/array_api.result_type", "API_specification/generated/array_api.roll", "API_specification/generated/array_api.round", "API_specification/generated/array_api.searchsorted", "API_specification/generated/array_api.sign", "API_specification/generated/array_api.signbit", "API_specification/generated/array_api.sin", "API_specification/generated/array_api.sinh", "API_specification/generated/array_api.sort", "API_specification/generated/array_api.sqrt", "API_specification/generated/array_api.square", "API_specification/generated/array_api.squeeze", "API_specification/generated/array_api.stack", "API_specification/generated/array_api.std", "API_specification/generated/array_api.subtract", "API_specification/generated/array_api.sum", "API_specification/generated/array_api.take", "API_specification/generated/array_api.tan", "API_specification/generated/array_api.tanh", "API_specification/generated/array_api.tensordot", "API_specification/generated/array_api.tile", "API_specification/generated/array_api.tril", "API_specification/generated/array_api.triu", "API_specification/generated/array_api.trunc", "API_specification/generated/array_api.unique_all", "API_specification/generated/array_api.unique_counts", "API_specification/generated/array_api.unique_inverse", "API_specification/generated/array_api.unique_values", "API_specification/generated/array_api.unstack", "API_specification/generated/array_api.var", "API_specification/generated/array_api.vecdot", "API_specification/generated/array_api.where", "API_specification/generated/array_api.zeros", "API_specification/generated/array_api.zeros_like", "API_specification/index", "API_specification/indexing", "API_specification/indexing_functions", "API_specification/inspection", "API_specification/linear_algebra_functions", "API_specification/manipulation_functions", "API_specification/searching_functions", "API_specification/set_functions", "API_specification/sorting_functions", "API_specification/statistical_functions", "API_specification/type_promotion", "API_specification/utility_functions", "API_specification/version", "assumptions", "benchmark_suite", "changelog", "design_topics/C_API", "design_topics/accuracy", "design_topics/complex_numbers", "design_topics/copies_views_and_mutation", "design_topics/data_dependent_output_shapes", "design_topics/data_interchange", "design_topics/device_support", "design_topics/exceptions", "design_topics/index", "design_topics/lazy_eager", "design_topics/parallelism", "design_topics/static_typing", "extensions/fourier_transform_functions", "extensions/generated/array_api.fft.fft", "extensions/generated/array_api.fft.fftfreq", "extensions/generated/array_api.fft.fftn", "extensions/generated/array_api.fft.fftshift", "extensions/generated/array_api.fft.hfft", "extensions/generated/array_api.fft.ifft", "extensions/generated/array_api.fft.ifftn", "extensions/generated/array_api.fft.ifftshift", "extensions/generated/array_api.fft.ihfft", "extensions/generated/array_api.fft.irfft", "extensions/generated/array_api.fft.irfftn", "extensions/generated/array_api.fft.rfft", "extensions/generated/array_api.fft.rfftfreq", "extensions/generated/array_api.fft.rfftn", "extensions/generated/array_api.linalg.cholesky", "extensions/generated/array_api.linalg.cross", "extensions/generated/array_api.linalg.det", "extensions/generated/array_api.linalg.diagonal", "extensions/generated/array_api.linalg.eigh", "extensions/generated/array_api.linalg.eigvalsh", "extensions/generated/array_api.linalg.inv", "extensions/generated/array_api.linalg.matmul", "extensions/generated/array_api.linalg.matrix_norm", "extensions/generated/array_api.linalg.matrix_power", "extensions/generated/array_api.linalg.matrix_rank", "extensions/generated/array_api.linalg.matrix_transpose", "extensions/generated/array_api.linalg.outer", "extensions/generated/array_api.linalg.pinv", "extensions/generated/array_api.linalg.qr", "extensions/generated/array_api.linalg.slogdet", "extensions/generated/array_api.linalg.solve", "extensions/generated/array_api.linalg.svd", "extensions/generated/array_api.linalg.svdvals", "extensions/generated/array_api.linalg.tensordot", "extensions/generated/array_api.linalg.trace", "extensions/generated/array_api.linalg.vecdot", "extensions/generated/array_api.linalg.vector_norm", "extensions/index", "extensions/linear_algebra_functions", "future_API_evolution", "index", "license", "purpose_and_scope", "usage_data", "use_cases", "verification_test_suite"], "filenames": ["API_specification/array_object.rst", "API_specification/broadcasting.rst", "API_specification/constants.rst", "API_specification/creation_functions.rst", "API_specification/data_type_functions.rst", "API_specification/data_types.rst", "API_specification/elementwise_functions.rst", "API_specification/function_and_method_signatures.rst", "API_specification/generated/array_api.__array_api_version__.rst", "API_specification/generated/array_api.abs.rst", "API_specification/generated/array_api.acos.rst", "API_specification/generated/array_api.acosh.rst", "API_specification/generated/array_api.add.rst", "API_specification/generated/array_api.all.rst", "API_specification/generated/array_api.any.rst", "API_specification/generated/array_api.arange.rst", "API_specification/generated/array_api.argmax.rst", "API_specification/generated/array_api.argmin.rst", "API_specification/generated/array_api.argsort.rst", "API_specification/generated/array_api.array.T.rst", "API_specification/generated/array_api.array.__abs__.rst", "API_specification/generated/array_api.array.__add__.rst", "API_specification/generated/array_api.array.__and__.rst", "API_specification/generated/array_api.array.__array_namespace__.rst", "API_specification/generated/array_api.array.__bool__.rst", "API_specification/generated/array_api.array.__complex__.rst", "API_specification/generated/array_api.array.__dlpack__.rst", "API_specification/generated/array_api.array.__dlpack_device__.rst", "API_specification/generated/array_api.array.__eq__.rst", "API_specification/generated/array_api.array.__float__.rst", "API_specification/generated/array_api.array.__floordiv__.rst", "API_specification/generated/array_api.array.__ge__.rst", "API_specification/generated/array_api.array.__getitem__.rst", "API_specification/generated/array_api.array.__gt__.rst", "API_specification/generated/array_api.array.__index__.rst", "API_specification/generated/array_api.array.__int__.rst", "API_specification/generated/array_api.array.__invert__.rst", "API_specification/generated/array_api.array.__le__.rst", "API_specification/generated/array_api.array.__lshift__.rst", "API_specification/generated/array_api.array.__lt__.rst", "API_specification/generated/array_api.array.__matmul__.rst", "API_specification/generated/array_api.array.__mod__.rst", "API_specification/generated/array_api.array.__mul__.rst", "API_specification/generated/array_api.array.__ne__.rst", "API_specification/generated/array_api.array.__neg__.rst", "API_specification/generated/array_api.array.__or__.rst", "API_specification/generated/array_api.array.__pos__.rst", "API_specification/generated/array_api.array.__pow__.rst", "API_specification/generated/array_api.array.__rshift__.rst", "API_specification/generated/array_api.array.__setitem__.rst", "API_specification/generated/array_api.array.__sub__.rst", "API_specification/generated/array_api.array.__truediv__.rst", "API_specification/generated/array_api.array.__xor__.rst", "API_specification/generated/array_api.array.device.rst", "API_specification/generated/array_api.array.dtype.rst", "API_specification/generated/array_api.array.mT.rst", "API_specification/generated/array_api.array.ndim.rst", "API_specification/generated/array_api.array.shape.rst", "API_specification/generated/array_api.array.size.rst", "API_specification/generated/array_api.array.to_device.rst", "API_specification/generated/array_api.asarray.rst", "API_specification/generated/array_api.asin.rst", "API_specification/generated/array_api.asinh.rst", "API_specification/generated/array_api.astype.rst", "API_specification/generated/array_api.atan.rst", "API_specification/generated/array_api.atan2.rst", "API_specification/generated/array_api.atanh.rst", "API_specification/generated/array_api.bitwise_and.rst", "API_specification/generated/array_api.bitwise_invert.rst", "API_specification/generated/array_api.bitwise_left_shift.rst", "API_specification/generated/array_api.bitwise_or.rst", "API_specification/generated/array_api.bitwise_right_shift.rst", "API_specification/generated/array_api.bitwise_xor.rst", "API_specification/generated/array_api.broadcast_arrays.rst", "API_specification/generated/array_api.broadcast_to.rst", "API_specification/generated/array_api.can_cast.rst", "API_specification/generated/array_api.ceil.rst", "API_specification/generated/array_api.clip.rst", "API_specification/generated/array_api.concat.rst", "API_specification/generated/array_api.conj.rst", "API_specification/generated/array_api.constants.e.rst", "API_specification/generated/array_api.constants.inf.rst", "API_specification/generated/array_api.constants.nan.rst", "API_specification/generated/array_api.constants.newaxis.rst", "API_specification/generated/array_api.constants.pi.rst", "API_specification/generated/array_api.copysign.rst", "API_specification/generated/array_api.cos.rst", "API_specification/generated/array_api.cosh.rst", "API_specification/generated/array_api.cumulative_sum.rst", "API_specification/generated/array_api.data_types.__eq__.rst", "API_specification/generated/array_api.divide.rst", "API_specification/generated/array_api.empty.rst", "API_specification/generated/array_api.empty_like.rst", "API_specification/generated/array_api.equal.rst", "API_specification/generated/array_api.exp.rst", "API_specification/generated/array_api.expand_dims.rst", "API_specification/generated/array_api.expm1.rst", "API_specification/generated/array_api.eye.rst", "API_specification/generated/array_api.finfo.rst", "API_specification/generated/array_api.flip.rst", "API_specification/generated/array_api.floor.rst", "API_specification/generated/array_api.floor_divide.rst", "API_specification/generated/array_api.from_dlpack.rst", "API_specification/generated/array_api.full.rst", "API_specification/generated/array_api.full_like.rst", "API_specification/generated/array_api.greater.rst", "API_specification/generated/array_api.greater_equal.rst", "API_specification/generated/array_api.hypot.rst", "API_specification/generated/array_api.iinfo.rst", "API_specification/generated/array_api.imag.rst", "API_specification/generated/array_api.info.__array_namespace_info__.rst", "API_specification/generated/array_api.info.capabilities.rst", "API_specification/generated/array_api.info.default_device.rst", "API_specification/generated/array_api.info.default_dtypes.rst", "API_specification/generated/array_api.info.devices.rst", "API_specification/generated/array_api.info.dtypes.rst", "API_specification/generated/array_api.isdtype.rst", "API_specification/generated/array_api.isfinite.rst", "API_specification/generated/array_api.isinf.rst", "API_specification/generated/array_api.isnan.rst", "API_specification/generated/array_api.less.rst", "API_specification/generated/array_api.less_equal.rst", "API_specification/generated/array_api.linspace.rst", "API_specification/generated/array_api.log.rst", "API_specification/generated/array_api.log10.rst", "API_specification/generated/array_api.log1p.rst", "API_specification/generated/array_api.log2.rst", "API_specification/generated/array_api.logaddexp.rst", "API_specification/generated/array_api.logical_and.rst", "API_specification/generated/array_api.logical_not.rst", "API_specification/generated/array_api.logical_or.rst", "API_specification/generated/array_api.logical_xor.rst", "API_specification/generated/array_api.matmul.rst", "API_specification/generated/array_api.matrix_transpose.rst", "API_specification/generated/array_api.max.rst", "API_specification/generated/array_api.maximum.rst", "API_specification/generated/array_api.mean.rst", "API_specification/generated/array_api.meshgrid.rst", "API_specification/generated/array_api.min.rst", "API_specification/generated/array_api.minimum.rst", "API_specification/generated/array_api.moveaxis.rst", "API_specification/generated/array_api.multiply.rst", "API_specification/generated/array_api.negative.rst", "API_specification/generated/array_api.nonzero.rst", "API_specification/generated/array_api.not_equal.rst", "API_specification/generated/array_api.ones.rst", "API_specification/generated/array_api.ones_like.rst", "API_specification/generated/array_api.permute_dims.rst", "API_specification/generated/array_api.positive.rst", "API_specification/generated/array_api.pow.rst", "API_specification/generated/array_api.prod.rst", "API_specification/generated/array_api.real.rst", "API_specification/generated/array_api.remainder.rst", "API_specification/generated/array_api.reshape.rst", "API_specification/generated/array_api.result_type.rst", "API_specification/generated/array_api.roll.rst", "API_specification/generated/array_api.round.rst", "API_specification/generated/array_api.searchsorted.rst", "API_specification/generated/array_api.sign.rst", "API_specification/generated/array_api.signbit.rst", "API_specification/generated/array_api.sin.rst", "API_specification/generated/array_api.sinh.rst", "API_specification/generated/array_api.sort.rst", "API_specification/generated/array_api.sqrt.rst", "API_specification/generated/array_api.square.rst", "API_specification/generated/array_api.squeeze.rst", "API_specification/generated/array_api.stack.rst", "API_specification/generated/array_api.std.rst", "API_specification/generated/array_api.subtract.rst", "API_specification/generated/array_api.sum.rst", "API_specification/generated/array_api.take.rst", "API_specification/generated/array_api.tan.rst", "API_specification/generated/array_api.tanh.rst", "API_specification/generated/array_api.tensordot.rst", "API_specification/generated/array_api.tile.rst", "API_specification/generated/array_api.tril.rst", "API_specification/generated/array_api.triu.rst", "API_specification/generated/array_api.trunc.rst", "API_specification/generated/array_api.unique_all.rst", "API_specification/generated/array_api.unique_counts.rst", "API_specification/generated/array_api.unique_inverse.rst", "API_specification/generated/array_api.unique_values.rst", "API_specification/generated/array_api.unstack.rst", "API_specification/generated/array_api.var.rst", "API_specification/generated/array_api.vecdot.rst", "API_specification/generated/array_api.where.rst", "API_specification/generated/array_api.zeros.rst", "API_specification/generated/array_api.zeros_like.rst", "API_specification/index.rst", "API_specification/indexing.rst", "API_specification/indexing_functions.rst", "API_specification/inspection.rst", "API_specification/linear_algebra_functions.rst", "API_specification/manipulation_functions.rst", "API_specification/searching_functions.rst", "API_specification/set_functions.rst", "API_specification/sorting_functions.rst", "API_specification/statistical_functions.rst", "API_specification/type_promotion.rst", "API_specification/utility_functions.rst", "API_specification/version.rst", "assumptions.md", "benchmark_suite.md", "changelog.rst", "design_topics/C_API.rst", "design_topics/accuracy.rst", "design_topics/complex_numbers.rst", "design_topics/copies_views_and_mutation.rst", "design_topics/data_dependent_output_shapes.rst", "design_topics/data_interchange.rst", "design_topics/device_support.rst", "design_topics/exceptions.rst", "design_topics/index.rst", "design_topics/lazy_eager.rst", "design_topics/parallelism.rst", "design_topics/static_typing.rst", "extensions/fourier_transform_functions.rst", "extensions/generated/array_api.fft.fft.rst", "extensions/generated/array_api.fft.fftfreq.rst", "extensions/generated/array_api.fft.fftn.rst", "extensions/generated/array_api.fft.fftshift.rst", "extensions/generated/array_api.fft.hfft.rst", "extensions/generated/array_api.fft.ifft.rst", "extensions/generated/array_api.fft.ifftn.rst", "extensions/generated/array_api.fft.ifftshift.rst", "extensions/generated/array_api.fft.ihfft.rst", "extensions/generated/array_api.fft.irfft.rst", "extensions/generated/array_api.fft.irfftn.rst", "extensions/generated/array_api.fft.rfft.rst", "extensions/generated/array_api.fft.rfftfreq.rst", "extensions/generated/array_api.fft.rfftn.rst", "extensions/generated/array_api.linalg.cholesky.rst", "extensions/generated/array_api.linalg.cross.rst", "extensions/generated/array_api.linalg.det.rst", "extensions/generated/array_api.linalg.diagonal.rst", "extensions/generated/array_api.linalg.eigh.rst", "extensions/generated/array_api.linalg.eigvalsh.rst", "extensions/generated/array_api.linalg.inv.rst", "extensions/generated/array_api.linalg.matmul.rst", "extensions/generated/array_api.linalg.matrix_norm.rst", "extensions/generated/array_api.linalg.matrix_power.rst", "extensions/generated/array_api.linalg.matrix_rank.rst", "extensions/generated/array_api.linalg.matrix_transpose.rst", "extensions/generated/array_api.linalg.outer.rst", "extensions/generated/array_api.linalg.pinv.rst", "extensions/generated/array_api.linalg.qr.rst", "extensions/generated/array_api.linalg.slogdet.rst", "extensions/generated/array_api.linalg.solve.rst", "extensions/generated/array_api.linalg.svd.rst", "extensions/generated/array_api.linalg.svdvals.rst", "extensions/generated/array_api.linalg.tensordot.rst", "extensions/generated/array_api.linalg.trace.rst", "extensions/generated/array_api.linalg.vecdot.rst", "extensions/generated/array_api.linalg.vector_norm.rst", "extensions/index.rst", "extensions/linear_algebra_functions.rst", "future_API_evolution.md", "index.rst", "license.rst", "purpose_and_scope.md", "usage_data.md", "use_cases.md", "verification_test_suite.md"], "titles": ["Array object", "Broadcasting", "Constants", "Creation Functions", "Data Type Functions", "Data Types", "Element-wise Functions", "Function and method signatures", "__array_api_version__", "abs", "acos", "acosh", "add", "all", "any", "arange", "argmax", "argmin", "argsort", "T", "__abs__", "__add__", "__and__", "__array_namespace__", "__bool__", "__complex__", "__dlpack__", "__dlpack_device__", "__eq__", "__float__", "__floordiv__", "__ge__", "__getitem__", "__gt__", "__index__", "__int__", "__invert__", "__le__", "__lshift__", "__lt__", "__matmul__", "__mod__", "__mul__", "__ne__", "__neg__", "__or__", "__pos__", "__pow__", "__rshift__", "__setitem__", "__sub__", "__truediv__", "__xor__", "device", "dtype", "mT", "ndim", "shape", "size", "to_device", "asarray", "asin", "asinh", "astype", "atan", "atan2", "atanh", "bitwise_and", "bitwise_invert", "bitwise_left_shift", "bitwise_or", "bitwise_right_shift", "bitwise_xor", "broadcast_arrays", "broadcast_to", "can_cast", "ceil", "clip", "concat", "conj", "e", "inf", "nan", "newaxis", "pi", "copysign", "cos", "cosh", "cumulative_sum", "__eq__", "divide", "empty", "empty_like", "equal", "exp", "expand_dims", "expm1", "eye", "finfo", "flip", "floor", "floor_divide", "from_dlpack", "full", "full_like", "greater", "greater_equal", "hypot", "iinfo", "imag", "__array_namespace_info__", "capabilities", "default_device", "default_dtypes", "devices", "dtypes", "isdtype", "isfinite", "isinf", "isnan", "less", "less_equal", "linspace", "log", "log10", "log1p", "log2", "logaddexp", "logical_and", "logical_not", "logical_or", "logical_xor", "matmul", "matrix_transpose", "max", "maximum", "mean", "meshgrid", "min", "minimum", "moveaxis", "multiply", "negative", "nonzero", "not_equal", "ones", "ones_like", "permute_dims", "positive", "pow", "prod", "real", "remainder", "reshape", "result_type", "roll", "round", "searchsorted", "sign", "signbit", "sin", "sinh", "sort", "sqrt", "square", "squeeze", "stack", "std", "subtract", "sum", "take", "tan", "tanh", "tensordot", "tile", "tril", "triu", "trunc", "unique_all", "unique_counts", "unique_inverse", "unique_values", "unstack", "var", "vecdot", "where", "zeros", "zeros_like", "API specification", "Indexing", "Indexing Functions", "Inspection", "Linear Algebra Functions", "Manipulation Functions", "Searching Functions", "Set Functions", "Sorting Functions", "Statistical Functions", "Type Promotion Rules", "Utility Functions", "Version", "Assumptions", "Benchmark suite", "Changelog per API standard version", "C API", "Accuracy", "Complex Numbers", "Copy-view behaviour and mutability", "Data-dependent output shapes", "Data interchange mechanisms", "Device support", "Exceptions", "Design topics &amp; constraints", "Lazy vs. eager execution", "Parallelism", "Static typing", "Fourier transform Functions", "fft", "fftfreq", "fftn", "fftshift", "hfft", "ifft", "ifftn", "ifftshift", "ihfft", "irfft", "irfftn", "rfft", "rfftfreq", "rfftn", "cholesky", "cross", "det", "diagonal", "eigh", "eigvalsh", "inv", "matmul", "matrix_norm", "matrix_power", "matrix_rank", "matrix_transpose", "outer", "pinv", "qr", "slogdet", "solve", "svd", "svdvals", "tensordot", "trace", "vecdot", "vector_norm", "Extensions", "Linear Algebra Extension", "Future API standard evolution", "Python array API standard", "License", "Purpose and scope", "Usage Data", "Use cases", "Verification - test suite"], "terms": {"api": [0, 1, 5, 7, 8, 23, 26, 63, 102, 110, 111, 115, 116, 189, 198, 201, 205, 206, 207, 209, 210, 211, 212, 213, 214, 215, 254, 258, 260, 262], "specif": [0, 1, 2, 3, 4, 5, 6, 8, 19, 23, 26, 49, 51, 59, 63, 78, 90, 101, 111, 113, 115, 116, 122, 128, 129, 130, 131, 134, 136, 138, 149, 154, 157, 166, 167, 170, 173, 183, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 203, 204, 205, 206, 207, 208, 209, 210, 211, 213, 215, 216, 235, 236, 254, 255, 256, 257, 259, 260, 261, 262], "A": [0, 1, 2, 3, 4, 5, 7, 13, 14, 26, 57, 97, 102, 116, 166, 182, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 204, 207, 209, 210, 213, 214, 215, 216, 217, 219, 221, 222, 223, 225, 226, 227, 228, 230, 244, 247, 255, 258, 259, 260, 261], "conform": [0, 2, 3, 4, 5, 8, 9, 16, 17, 18, 31, 33, 37, 39, 59, 60, 96, 105, 106, 107, 111, 115, 116, 120, 121, 122, 125, 134, 135, 138, 139, 149, 157, 162, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 203, 205, 206, 209, 216, 255], "implement": [0, 2, 3, 4, 5, 8, 9, 10, 11, 16, 17, 18, 20, 23, 24, 25, 26, 29, 30, 31, 33, 34, 35, 37, 39, 40, 41, 44, 47, 49, 51, 59, 60, 61, 62, 63, 64, 65, 66, 77, 86, 87, 88, 90, 94, 96, 101, 102, 103, 104, 105, 106, 107, 111, 116, 120, 121, 122, 123, 124, 125, 126, 132, 134, 135, 136, 138, 139, 141, 142, 143, 149, 150, 152, 154, 157, 160, 161, 162, 164, 167, 169, 171, 172, 178, 179, 180, 181, 183, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 203, 204, 205, 206, 207, 208, 209, 210, 211, 213, 215, 216, 219, 220, 223, 224, 227, 230, 231, 235, 236, 245, 247, 251, 254, 255, 256, 260, 261], "standard": [0, 2, 3, 4, 5, 7, 26, 98, 102, 116, 124, 126, 167, 172, 183, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 205, 206, 207, 209, 210, 211, 213, 214, 215, 254, 255, 258, 260, 261], "must": [0, 1, 2, 3, 4, 5, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 76, 77, 78, 79, 85, 86, 87, 88, 90, 91, 92, 93, 94, 95, 96, 97, 99, 100, 101, 102, 103, 104, 105, 106, 107, 109, 111, 113, 114, 115, 116, 117, 118, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 203, 205, 206, 207, 209, 211, 213, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 239, 240, 241, 243, 244, 245, 246, 247, 248, 249, 251, 253, 254, 255, 256, 259, 260], "provid": [0, 2, 3, 4, 5, 13, 14, 26, 59, 88, 95, 99, 102, 114, 116, 137, 140, 154, 166, 167, 170, 182, 183, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 203, 204, 206, 207, 209, 210, 211, 214, 215, 216, 217, 219, 222, 223, 226, 227, 228, 230, 240, 254, 255, 256, 258, 259, 260, 261], "support": [0, 1, 2, 3, 4, 5, 7, 9, 10, 11, 12, 13, 14, 16, 17, 18, 20, 21, 24, 26, 29, 31, 33, 35, 37, 39, 40, 42, 43, 44, 46, 47, 50, 51, 53, 57, 59, 60, 61, 62, 63, 64, 66, 86, 87, 88, 89, 90, 93, 94, 96, 97, 98, 101, 102, 103, 104, 105, 106, 107, 111, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 128, 129, 130, 131, 132, 134, 135, 137, 138, 139, 141, 142, 143, 144, 145, 146, 148, 149, 150, 156, 158, 160, 161, 162, 163, 164, 168, 169, 170, 171, 172, 173, 178, 179, 180, 181, 184, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 201, 205, 206, 207, 212, 215, 216, 231, 232, 233, 235, 236, 237, 239, 240, 241, 243, 244, 245, 246, 247, 248, 249, 251, 253, 254, 255, 259, 260], "an": [0, 1, 5, 7, 9, 10, 11, 12, 13, 14, 15, 18, 19, 20, 21, 22, 23, 26, 28, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 76, 77, 78, 79, 83, 85, 86, 87, 88, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 114, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 189, 196, 198, 201, 203, 204, 205, 206, 207, 208, 210, 211, 213, 214, 215, 217, 218, 219, 221, 222, 223, 225, 226, 227, 228, 229, 230, 231, 232, 234, 235, 236, 237, 239, 240, 241, 244, 245, 246, 247, 248, 249, 251, 253, 254, 255, 256, 258, 260, 261], "have": [0, 1, 2, 5, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 55, 57, 58, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 76, 77, 78, 79, 85, 86, 87, 88, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 103, 104, 105, 106, 107, 108, 109, 111, 113, 115, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 189, 201, 203, 204, 206, 207, 210, 213, 215, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 239, 240, 241, 243, 244, 245, 246, 247, 248, 249, 251, 253, 255, 256, 259, 260, 261], "follow": [0, 1, 2, 3, 4, 5, 7, 10, 11, 12, 26, 44, 49, 61, 62, 64, 66, 88, 90, 98, 101, 103, 108, 110, 111, 113, 115, 116, 123, 125, 141, 142, 149, 152, 156, 163, 173, 178, 179, 180, 181, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 201, 203, 205, 206, 208, 209, 210, 211, 216, 217, 219, 221, 222, 223, 225, 226, 227, 228, 230, 239, 245, 253, 255, 256, 258, 259, 260, 261], "furthermor": [0, 259, 262], "minimum": [0, 9, 17, 20, 44, 134, 138, 142, 188, 205], "rank": [0, 1, 13, 14, 95, 137, 140, 143, 157, 166, 170, 173, 174, 182, 184, 189, 217, 219, 221, 222, 223, 225, 226, 227, 228, 230, 232, 239, 241, 245, 247, 251, 253, 259], "i": [0, 1, 2, 5, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 23, 24, 25, 26, 29, 30, 31, 33, 34, 35, 37, 39, 40, 41, 42, 43, 44, 47, 49, 51, 55, 57, 59, 60, 61, 62, 63, 64, 65, 66, 69, 71, 74, 76, 77, 78, 79, 83, 85, 86, 87, 88, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 109, 113, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 132, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 196, 198, 201, 202, 203, 205, 206, 207, 209, 210, 211, 213, 214, 215, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 239, 240, 241, 243, 244, 245, 246, 247, 248, 249, 251, 253, 254, 255, 256, 258, 259, 260, 261, 262], "e": [0, 1, 2, 5, 7, 9, 10, 11, 18, 19, 20, 26, 40, 43, 47, 49, 51, 55, 57, 62, 63, 65, 66, 69, 71, 76, 77, 78, 86, 87, 88, 90, 93, 94, 95, 100, 101, 102, 107, 109, 115, 116, 122, 123, 124, 125, 126, 132, 134, 136, 137, 138, 140, 141, 142, 143, 144, 145, 146, 148, 149, 150, 151, 152, 154, 156, 157, 159, 160, 161, 162, 163, 165, 166, 167, 169, 170, 171, 172, 173, 174, 178, 179, 180, 181, 183, 188, 189, 196, 198, 203, 204, 205, 206, 207, 208, 209, 210, 213, 217, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 230, 232, 235, 236, 239, 241, 244, 246, 247, 248, 249, 251, 253, 254, 255, 256, 259, 260, 261], "number": [0, 1, 5, 9, 10, 11, 12, 13, 14, 16, 17, 18, 25, 26, 31, 33, 35, 37, 39, 44, 56, 58, 60, 61, 62, 63, 64, 65, 66, 73, 76, 79, 82, 87, 88, 90, 93, 94, 95, 96, 97, 98, 100, 101, 103, 105, 106, 107, 108, 109, 117, 118, 120, 121, 122, 123, 125, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 150, 151, 152, 154, 155, 156, 157, 158, 159, 161, 162, 163, 164, 166, 167, 169, 170, 172, 173, 174, 177, 178, 179, 182, 183, 184, 189, 196, 198, 209, 212, 217, 219, 221, 222, 223, 225, 226, 227, 228, 230, 231, 235, 236, 237, 241, 245, 246, 247, 248, 251, 255, 259, 260], "dimens": [0, 1, 13, 14, 16, 17, 19, 40, 55, 56, 57, 58, 78, 88, 95, 99, 132, 133, 134, 136, 138, 140, 143, 147, 150, 153, 155, 165, 166, 167, 169, 170, 173, 174, 175, 176, 178, 179, 180, 181, 182, 183, 184, 189, 198, 217, 219, 220, 221, 222, 223, 225, 226, 227, 228, 230, 231, 232, 233, 234, 235, 236, 237, 239, 240, 241, 244, 245, 246, 247, 248, 249, 251, 253, 259], "0": [0, 1, 5, 9, 10, 11, 12, 15, 24, 25, 26, 29, 35, 38, 48, 57, 61, 62, 63, 64, 65, 66, 69, 71, 76, 78, 85, 86, 87, 90, 93, 94, 95, 96, 97, 98, 100, 101, 107, 123, 124, 125, 126, 136, 141, 147, 149, 150, 152, 156, 157, 158, 159, 160, 161, 163, 166, 167, 169, 171, 172, 173, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 189, 196, 198, 206, 207, 218, 220, 229, 234, 239, 246, 248, 249, 251, 253, 259, 261], "1": [0, 1, 7, 10, 11, 13, 14, 15, 18, 25, 26, 27, 29, 35, 40, 61, 62, 63, 64, 65, 66, 85, 86, 87, 88, 94, 95, 96, 97, 98, 101, 122, 123, 124, 125, 126, 132, 145, 146, 147, 149, 150, 153, 157, 158, 159, 162, 166, 167, 171, 172, 173, 174, 175, 176, 183, 184, 189, 206, 207, 214, 217, 218, 219, 221, 222, 223, 225, 226, 227, 228, 229, 230, 232, 235, 237, 239, 247, 248, 249, 253], "2": [0, 1, 5, 7, 9, 10, 11, 26, 27, 40, 61, 62, 64, 65, 66, 80, 86, 87, 90, 123, 125, 126, 132, 161, 164, 171, 172, 173, 174, 189, 206, 207, 215, 218, 221, 225, 226, 227, 228, 229, 230, 239, 241, 244, 245, 246, 248, 249, 250, 251, 253], "3": [0, 1, 5, 7, 27, 84, 170, 174, 201, 206, 207, 210, 232], "4": [0, 1, 5, 10, 11, 27, 62, 65, 123, 125, 174, 189, 214, 260], "explicitli": [0, 26, 40, 63, 111, 132, 173, 189, 201, 231, 235, 236, 245, 247, 255, 259, 261], "document": [0, 5, 7, 59, 101, 116, 191, 196, 204, 206, 209, 211, 254, 256, 258, 260, 261, 262], "maximum": [0, 1, 16, 26, 122, 134, 138, 188, 205, 239], "n": [0, 1, 13, 14, 40, 55, 86, 88, 95, 122, 132, 133, 136, 137, 140, 143, 147, 150, 157, 166, 167, 169, 171, 172, 173, 174, 175, 176, 182, 183, 184, 189, 217, 218, 219, 221, 222, 223, 225, 226, 227, 228, 229, 230, 231, 232, 234, 235, 236, 237, 239, 240, 241, 243, 244, 245, 248, 249, 251, 253, 259], "zero": [0, 5, 13, 14, 16, 17, 24, 25, 29, 30, 34, 35, 40, 41, 47, 63, 65, 69, 88, 90, 95, 96, 97, 101, 107, 125, 128, 129, 130, 131, 132, 134, 136, 137, 138, 141, 143, 145, 146, 149, 150, 152, 157, 159, 167, 169, 175, 176, 177, 178, 179, 180, 181, 183, 184, 187, 188, 189, 196, 198, 203, 204, 206, 209, 217, 219, 220, 221, 222, 223, 225, 226, 227, 228, 230, 233, 240, 241, 244, 245, 246, 253, 261], "dimension": [0, 13, 14, 15, 16, 17, 19, 24, 25, 29, 34, 35, 40, 88, 97, 122, 132, 134, 136, 137, 138, 143, 150, 157, 167, 169, 170, 183, 184, 189, 198, 203, 215, 217, 219, 221, 222, 223, 225, 226, 227, 228, 230, 232, 233, 236, 237, 241, 243, 244, 253, 255, 259], "apart": 0, "from": [0, 5, 13, 14, 15, 19, 26, 44, 59, 60, 63, 75, 78, 88, 92, 99, 101, 102, 103, 104, 107, 122, 123, 125, 137, 142, 146, 149, 150, 153, 154, 163, 165, 167, 169, 170, 172, 178, 180, 183, 184, 185, 187, 189, 198, 201, 204, 205, 206, 209, 210, 211, 213, 217, 219, 221, 222, 223, 225, 226, 227, 228, 230, 232, 235, 246, 248, 251, 255, 256, 258, 259, 260, 261, 262], "ndim": [0, 184, 188, 232, 245, 248, 249], "devic": [0, 5, 15, 26, 27, 59, 60, 63, 91, 92, 97, 102, 103, 104, 110, 112, 113, 115, 122, 145, 146, 175, 176, 186, 187, 188, 189, 191, 203, 209, 212, 218, 229, 245, 255, 259, 261], "dtype": [0, 5, 15, 26, 60, 63, 73, 75, 88, 89, 91, 92, 97, 98, 102, 103, 104, 108, 110, 116, 122, 145, 146, 150, 154, 169, 186, 187, 188, 198, 201, 203, 209, 215, 251, 259, 260, 261], "all": [0, 5, 15, 19, 23, 26, 60, 63, 87, 90, 97, 99, 102, 111, 115, 141, 155, 161, 172, 174, 175, 176, 182, 184, 188, 189, 201, 203, 204, 206, 207, 208, 209, 210, 211, 213, 217, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 230, 232, 244, 246, 247, 253, 254, 255, 258, 259, 261, 262], "thi": [0, 1, 5, 7, 15, 19, 26, 34, 58, 59, 63, 71, 78, 96, 101, 102, 107, 111, 115, 116, 122, 125, 128, 129, 130, 131, 136, 143, 149, 152, 166, 167, 170, 178, 179, 180, 181, 183, 188, 189, 196, 198, 201, 203, 204, 205, 206, 207, 208, 209, 210, 211, 213, 214, 215, 216, 217, 219, 220, 222, 223, 226, 227, 228, 230, 245, 246, 247, 248, 254, 255, 256, 258, 260, 261, 262], "return": [0, 5, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 191, 196, 203, 204, 205, 207, 209, 210, 213, 215, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 239, 240, 241, 243, 244, 245, 246, 247, 248, 249, 251, 253, 255, 259, 261], "tupl": [0, 1, 13, 14, 26, 27, 32, 49, 57, 74, 78, 91, 99, 103, 115, 116, 134, 136, 138, 140, 143, 145, 147, 150, 153, 155, 165, 166, 167, 169, 173, 174, 178, 179, 180, 182, 183, 186, 189, 201, 235, 245, 246, 248, 250, 253, 259], "includ": [0, 1, 7, 9, 13, 14, 15, 16, 17, 20, 21, 23, 28, 30, 40, 41, 42, 43, 47, 51, 88, 107, 111, 115, 116, 118, 122, 132, 134, 136, 138, 150, 163, 167, 169, 183, 188, 189, 198, 203, 204, 205, 206, 207, 208, 209, 210, 214, 239, 253, 255, 256, 258, 260, 261], "those": [0, 5, 7, 15, 23, 88, 90, 113, 115, 141, 143, 150, 169, 198, 203, 206, 207, 210, 211, 213, 245, 248, 249, 251, 254, 255, 256, 259, 260, 261], "mean": [0, 26, 188, 201, 207, 209, 210, 215, 256, 259], "var": [0, 188], "std": [0, 188], "which": [0, 1, 5, 7, 8, 13, 14, 15, 16, 17, 18, 19, 26, 30, 40, 41, 44, 59, 60, 63, 75, 77, 78, 83, 88, 91, 92, 95, 97, 98, 99, 101, 102, 103, 104, 107, 108, 111, 113, 114, 115, 122, 132, 134, 136, 138, 142, 143, 145, 146, 150, 152, 155, 157, 162, 166, 167, 169, 170, 171, 175, 176, 178, 179, 180, 181, 182, 183, 184, 186, 187, 189, 203, 204, 205, 206, 207, 208, 209, 210, 211, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 232, 239, 247, 248, 249, 251, 253, 254, 255, 256, 259, 260, 261], "some": [0, 96, 101, 113, 115, 125, 189, 204, 205, 206, 207, 210, 215, 259, 261, 262], "common": [0, 189, 198, 201, 210, 213, 214, 255, 259, 260, 261], "librari": [0, 5, 7, 26, 51, 57, 58, 59, 60, 63, 90, 96, 101, 102, 111, 113, 115, 116, 122, 125, 128, 129, 130, 131, 134, 136, 138, 143, 157, 167, 172, 178, 179, 180, 181, 183, 188, 189, 201, 204, 205, 206, 207, 208, 209, 210, 211, 213, 214, 215, 231, 235, 236, 245, 247, 254, 255, 256, 259, 260, 261, 262], "g": [0, 5, 9, 19, 20, 26, 47, 51, 57, 77, 88, 90, 102, 107, 109, 115, 116, 122, 134, 138, 141, 143, 150, 151, 154, 156, 169, 174, 178, 179, 180, 181, 189, 196, 198, 203, 204, 205, 206, 207, 208, 209, 210, 213, 221, 225, 226, 227, 228, 230, 235, 236, 239, 246, 248, 249, 251, 253, 254, 255, 256, 259, 260, 261], "numpi": [0, 19, 63, 189, 201, 206, 207, 209, 210, 255, 259, 260, 261, 262], "scalar": [0, 2, 49, 60, 188, 189, 203, 213, 253, 261], "valu": [0, 1, 2, 5, 7, 9, 10, 11, 12, 15, 16, 17, 18, 20, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 37, 39, 41, 43, 49, 51, 57, 58, 60, 61, 62, 63, 64, 65, 66, 76, 77, 78, 85, 86, 87, 88, 89, 90, 91, 93, 94, 96, 97, 98, 100, 101, 103, 104, 105, 106, 107, 111, 113, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 134, 135, 136, 138, 139, 141, 143, 144, 145, 149, 150, 152, 156, 157, 158, 159, 160, 161, 162, 163, 167, 169, 170, 171, 172, 177, 178, 179, 180, 181, 183, 184, 186, 188, 196, 198, 201, 203, 205, 207, 208, 209, 213, 215, 217, 218, 219, 221, 222, 223, 225, 226, 227, 228, 229, 230, 231, 235, 236, 237, 239, 240, 241, 244, 245, 246, 247, 248, 249, 251, 253, 255, 259, 261], "rational": [0, 7, 88, 150, 169, 189, 209, 210, 251, 254, 256, 259], "alwai": [0, 12, 26, 42, 60, 63, 98, 102, 141, 153, 189, 201, 206, 207, 210, 235], "necessari": [0, 26, 60, 90, 102, 141, 153, 174, 189, 207, 259], "acceler": [0, 5, 107, 201, 209], "where": [0, 1, 7, 13, 14, 15, 26, 47, 57, 65, 86, 87, 90, 94, 96, 97, 101, 103, 104, 124, 125, 126, 137, 141, 143, 147, 149, 157, 158, 160, 161, 166, 167, 171, 172, 174, 182, 183, 184, 188, 189, 198, 204, 206, 209, 210, 213, 217, 219, 221, 222, 223, 225, 226, 227, 228, 230, 231, 232, 235, 236, 237, 239, 241, 244, 245, 246, 248, 249, 251, 255, 259, 260, 261], "non": [0, 1, 7, 13, 14, 16, 17, 63, 128, 129, 130, 131, 134, 136, 138, 143, 150, 167, 173, 183, 184, 189, 198, 203, 204, 210, 217, 219, 222, 223, 226, 227, 228, 230, 233, 235, 239, 241, 248, 253, 261], "could": [0, 26, 178, 179, 180, 181, 201, 207, 214, 255, 259, 261], "forc": 0, "synchron": [0, 26, 59, 259], "delai": [0, 24, 25, 29, 34, 35, 201, 213, 259], "execut": [0, 198, 201, 210, 212, 214, 259, 261], "model": [0, 57, 58, 90, 141, 206, 213, 261], "repres": [0, 8, 11, 12, 23, 24, 25, 26, 29, 34, 35, 62, 66, 87, 90, 101, 137, 141, 161, 171, 172, 203, 205, 209, 210, 246, 260, 261], "futur": [0, 26, 102, 202, 206, 207, 210, 214, 215, 235, 236, 257, 259, 261], "python": [0, 2, 5, 7, 24, 25, 26, 29, 34, 35, 49, 60, 101, 102, 152, 188, 189, 201, 203, 206, 209, 211, 213, 214, 215, 256, 258, 259, 260], "x": [0, 1, 5, 7, 9, 10, 11, 13, 14, 16, 17, 18, 20, 26, 61, 62, 63, 64, 65, 66, 68, 74, 76, 77, 79, 85, 86, 87, 88, 92, 94, 95, 96, 99, 100, 102, 104, 109, 117, 118, 119, 123, 124, 125, 126, 129, 133, 134, 136, 138, 140, 142, 143, 146, 147, 148, 150, 151, 153, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 169, 170, 171, 172, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 187, 189, 206, 207, 215, 216, 217, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 230, 231, 233, 234, 235, 236, 237, 239, 240, 241, 242, 244, 245, 246, 247, 248, 249, 251, 253, 255, 259, 261], "__pos__": [0, 188, 203], "po": 0, "__neg__": [0, 188, 203], "neg": [0, 13, 14, 15, 44, 47, 65, 78, 88, 90, 95, 97, 99, 101, 118, 123, 125, 141, 149, 152, 155, 159, 163, 170, 188, 189, 203, 206, 217, 219, 221, 222, 223, 225, 226, 227, 228, 230, 253, 259], "x1": [0, 7, 12, 40, 65, 67, 69, 70, 71, 72, 77, 85, 90, 93, 101, 105, 106, 107, 120, 121, 127, 128, 130, 131, 132, 135, 139, 141, 144, 149, 152, 157, 168, 173, 184, 185, 232, 238, 243, 247, 250, 252], "x2": [0, 7, 12, 40, 65, 67, 69, 70, 71, 72, 85, 90, 93, 101, 105, 106, 107, 120, 121, 127, 128, 130, 131, 132, 135, 139, 141, 144, 149, 152, 157, 168, 173, 184, 185, 232, 238, 243, 247, 250, 252], "__add__": [0, 50, 188, 203], "add": [0, 7, 21, 88, 168, 169, 188, 189, 203, 204, 205, 210, 251], "__sub__": [0, 188, 203], "sub": [0, 189], "__mul__": [0, 188, 203], "mul": 0, "__truediv__": [0, 188, 203], "truediv": 0, "__floordiv__": [0, 188], "floordiv": 0, "__mod__": [0, 188], "mod": 0, "__pow__": [0, 188, 203], "pow": [0, 47, 188, 203, 205], "should": [0, 1, 5, 7, 9, 10, 11, 12, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 29, 30, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 50, 51, 52, 55, 57, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 76, 77, 79, 85, 86, 87, 88, 90, 94, 95, 96, 98, 100, 101, 102, 105, 106, 107, 109, 113, 115, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 134, 135, 136, 137, 138, 139, 141, 142, 148, 149, 150, 151, 152, 153, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 167, 168, 169, 171, 172, 173, 175, 176, 177, 178, 179, 180, 181, 183, 184, 189, 196, 203, 204, 205, 206, 209, 210, 211, 215, 217, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 230, 231, 232, 233, 235, 236, 237, 239, 240, 241, 244, 245, 246, 247, 248, 249, 251, 253, 254, 255, 259, 261, 262], "defin": [0, 5, 12, 23, 30, 41, 49, 60, 65, 79, 90, 101, 103, 104, 115, 122, 134, 136, 138, 140, 141, 152, 158, 163, 164, 167, 175, 176, 183, 184, 188, 191, 196, 203, 205, 206, 215, 219, 220, 223, 224, 227, 230, 231, 235, 236, 237, 244, 245, 247, 255, 260, 261, 262], "real": [0, 5, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 24, 25, 29, 30, 31, 33, 35, 37, 39, 41, 44, 51, 60, 61, 62, 63, 64, 65, 66, 76, 77, 85, 86, 87, 88, 90, 91, 93, 94, 96, 97, 98, 100, 101, 103, 105, 106, 107, 113, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 134, 135, 136, 138, 139, 141, 142, 143, 144, 145, 146, 149, 150, 152, 156, 157, 158, 159, 160, 161, 162, 163, 167, 169, 171, 172, 177, 183, 184, 186, 188, 198, 203, 206, 218, 221, 225, 226, 227, 228, 229, 230, 231, 235, 236, 237, 239, 241, 244, 245, 246, 247, 248, 249, 251, 253, 256], "data": [0, 1, 2, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76, 77, 78, 79, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 111, 113, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 183, 184, 185, 186, 187, 188, 191, 198, 201, 204, 206, 207, 210, 212, 213, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 239, 240, 241, 243, 244, 245, 246, 247, 248, 249, 251, 253, 255, 256, 257, 258, 259, 262], "type": [0, 2, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 55, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76, 77, 78, 79, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 113, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 183, 184, 185, 186, 187, 188, 189, 191, 201, 204, 206, 207, 209, 211, 212, 213, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 239, 240, 241, 243, 244, 245, 246, 247, 248, 249, 251, 253, 255, 256, 259, 260], "__matmul__": [0, 188, 203], "matmul": [0, 40, 188, 198, 203, 255], "The": [0, 1, 5, 7, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 22, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 55, 57, 58, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 76, 77, 78, 79, 85, 86, 87, 88, 90, 93, 94, 96, 99, 100, 101, 102, 105, 106, 107, 109, 110, 111, 113, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 138, 139, 140, 141, 142, 143, 144, 147, 148, 149, 150, 151, 152, 156, 157, 158, 159, 160, 161, 162, 163, 164, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 183, 184, 185, 189, 198, 201, 203, 204, 205, 207, 208, 209, 210, 213, 214, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 239, 240, 241, 243, 244, 245, 246, 247, 248, 249, 251, 253, 254, 255, 256, 258, 259, 260, 261, 262], "__invert__": [0, 188], "inv": [0, 203, 255], "invert": [0, 68, 237, 240, 247], "__inv__": 0, "__and__": [0, 188], "__or__": [0, 188], "__xor__": [0, 188], "xor": [0, 72, 131], "__lshift__": [0, 188], "lshift": 0, "__rshift__": [0, 188], "rshift": 0, "integ": [0, 5, 9, 13, 14, 15, 20, 22, 26, 29, 30, 34, 35, 36, 38, 41, 44, 45, 47, 48, 51, 52, 60, 67, 68, 69, 70, 71, 72, 76, 77, 88, 90, 100, 101, 103, 104, 108, 115, 116, 122, 134, 136, 138, 142, 149, 150, 152, 154, 156, 157, 167, 169, 170, 177, 183, 184, 188, 189, 203, 205, 206, 217, 219, 221, 222, 223, 225, 226, 227, 228, 230, 232, 240, 241, 251, 253, 259], "boolean": [0, 5, 22, 24, 25, 26, 29, 35, 36, 43, 45, 52, 57, 60, 63, 67, 68, 70, 72, 88, 89, 102, 103, 104, 111, 115, 116, 122, 128, 129, 130, 131, 143, 188, 198, 203], "__lt__": [0, 188], "lt": 0, "__le__": [0, 188], "le": 0, "__gt__": [0, 188], "gt": [0, 245, 248], "__ge__": [0, 188], "ge": 0, "__eq__": [0, 188, 203, 210], "eq": 0, "__ne__": [0, 188, 203], "ne": 0, "ar": [0, 1, 5, 7, 15, 16, 17, 19, 23, 24, 25, 26, 27, 29, 34, 35, 40, 49, 55, 58, 60, 77, 85, 86, 89, 90, 94, 97, 98, 99, 101, 102, 107, 114, 115, 122, 128, 129, 130, 131, 132, 141, 143, 149, 155, 156, 160, 171, 172, 174, 178, 180, 184, 189, 198, 201, 203, 204, 205, 206, 207, 208, 209, 210, 211, 213, 214, 215, 217, 218, 219, 220, 222, 223, 224, 226, 227, 228, 229, 230, 232, 235, 236, 241, 244, 245, 248, 254, 255, 256, 259, 260, 261, 262], "onli": [0, 1, 5, 7, 16, 17, 23, 26, 40, 57, 58, 63, 99, 102, 107, 113, 115, 116, 122, 128, 129, 130, 131, 132, 136, 167, 183, 188, 189, 198, 201, 204, 206, 207, 209, 210, 211, 213, 215, 220, 237, 244, 245, 247, 255, 256, 259, 260, 261, 262], "other": [0, 5, 21, 22, 23, 26, 28, 30, 31, 33, 37, 38, 39, 40, 41, 42, 43, 45, 47, 48, 50, 51, 52, 63, 89, 90, 96, 101, 102, 125, 140, 141, 167, 183, 189, 191, 201, 203, 205, 206, 207, 208, 209, 210, 211, 215, 232, 244, 254, 255, 258, 259, 261], "ani": [0, 1, 9, 10, 11, 23, 24, 25, 26, 28, 29, 34, 35, 43, 59, 61, 62, 66, 89, 93, 107, 117, 118, 144, 163, 188, 189, 198, 203, 206, 207, 209, 215, 248, 256, 258, 259, 262], "For": [0, 1, 5, 7, 9, 10, 11, 12, 16, 17, 18, 20, 24, 25, 26, 29, 30, 31, 33, 35, 37, 39, 41, 44, 57, 58, 61, 62, 64, 65, 66, 76, 79, 85, 86, 87, 88, 90, 93, 94, 96, 100, 101, 105, 106, 107, 113, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 134, 135, 137, 138, 139, 141, 142, 144, 149, 150, 152, 156, 157, 158, 159, 160, 161, 162, 163, 164, 166, 169, 171, 172, 177, 178, 179, 180, 181, 189, 196, 201, 205, 206, 208, 210, 213, 218, 227, 229, 246, 248, 249, 251, 259, 261, 262], "backward": [0, 13, 14, 16, 17, 18, 31, 33, 37, 39, 105, 106, 120, 121, 122, 134, 135, 138, 139, 152, 162, 184, 189, 203, 206, 207, 211, 217, 219, 221, 222, 223, 225, 226, 227, 228, 230, 232, 259], "compat": [0, 1, 12, 13, 14, 16, 17, 18, 21, 22, 26, 28, 30, 31, 33, 37, 38, 39, 40, 41, 42, 43, 45, 47, 48, 49, 50, 51, 52, 65, 67, 69, 70, 71, 72, 74, 77, 85, 90, 93, 101, 105, 106, 107, 120, 121, 122, 127, 128, 130, 131, 132, 134, 135, 136, 138, 139, 141, 144, 149, 150, 152, 153, 162, 167, 168, 169, 183, 184, 185, 198, 203, 206, 207, 211, 232, 239, 241, 244, 247, 253, 259, 261], "mai": [0, 5, 7, 15, 16, 17, 18, 23, 26, 28, 31, 33, 37, 39, 43, 51, 57, 58, 59, 60, 89, 90, 93, 101, 102, 105, 106, 107, 110, 115, 116, 120, 121, 122, 128, 129, 130, 131, 134, 135, 136, 138, 139, 141, 143, 144, 153, 157, 162, 167, 172, 178, 179, 180, 181, 183, 188, 189, 196, 198, 201, 204, 205, 206, 207, 208, 209, 210, 211, 213, 214, 215, 235, 245, 246, 248, 254, 255, 259, 260, 261], "complex": [0, 5, 9, 10, 11, 12, 13, 14, 16, 17, 18, 20, 21, 24, 25, 29, 31, 33, 35, 37, 39, 40, 42, 43, 44, 46, 47, 50, 51, 60, 61, 62, 63, 64, 66, 79, 86, 87, 88, 90, 93, 94, 96, 97, 98, 103, 104, 105, 106, 107, 109, 113, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 132, 134, 135, 137, 138, 139, 141, 142, 143, 144, 145, 146, 148, 149, 150, 151, 156, 158, 160, 161, 162, 163, 164, 168, 169, 171, 172, 173, 178, 179, 180, 181, 184, 198, 205, 209, 210, 212, 213, 217, 219, 221, 222, 223, 225, 226, 227, 228, 230, 231, 232, 233, 235, 236, 237, 239, 240, 241, 243, 244, 245, 246, 247, 248, 249, 251, 253, 255, 259, 260], "howev": [0, 5, 16, 17, 18, 31, 33, 37, 39, 57, 88, 101, 105, 106, 107, 116, 120, 121, 122, 134, 135, 138, 139, 157, 162, 170, 171, 172, 201, 204, 205, 206, 207, 208, 210, 255, 256, 259, 261], "inequ": [0, 16, 17, 18, 31, 33, 37, 39, 105, 106, 120, 121, 134, 135, 138, 139, 162], "unspecifi": [0, 5, 10, 11, 16, 17, 18, 30, 31, 33, 37, 39, 41, 47, 51, 60, 62, 66, 77, 78, 87, 90, 94, 96, 101, 103, 104, 105, 106, 120, 121, 122, 134, 135, 138, 139, 149, 152, 157, 161, 162, 163, 166, 170, 172, 189, 196, 198, 219, 220, 223, 224, 227, 230, 235, 236, 259], "thu": [0, 5, 16, 17, 18, 30, 31, 33, 37, 39, 41, 47, 57, 60, 71, 77, 101, 103, 104, 105, 106, 120, 121, 122, 134, 135, 138, 139, 149, 152, 157, 162, 171, 172, 189, 196, 205, 206, 219, 220, 223, 224, 227, 230, 235, 236, 248, 255], "depend": [0, 5, 9, 10, 11, 16, 17, 18, 20, 26, 29, 31, 33, 37, 39, 44, 47, 51, 57, 58, 59, 61, 62, 63, 64, 65, 66, 77, 86, 87, 90, 94, 96, 105, 106, 111, 120, 121, 122, 123, 124, 125, 126, 134, 135, 138, 139, 141, 142, 149, 157, 160, 161, 162, 171, 172, 185, 196, 198, 205, 206, 209, 212, 213, 215, 235, 236, 245, 246, 247, 248, 255, 259, 261, 262], "see": [0, 5, 10, 11, 12, 13, 14, 16, 17, 18, 21, 22, 26, 28, 30, 31, 33, 34, 37, 38, 39, 40, 41, 42, 43, 45, 47, 48, 49, 50, 51, 52, 53, 59, 61, 62, 64, 65, 66, 67, 69, 70, 71, 72, 74, 77, 85, 90, 93, 96, 101, 102, 104, 105, 106, 107, 111, 114, 120, 121, 123, 125, 127, 128, 130, 131, 132, 134, 135, 136, 138, 139, 141, 143, 144, 149, 150, 152, 154, 158, 162, 163, 164, 167, 168, 169, 178, 179, 180, 181, 183, 184, 185, 188, 189, 198, 200, 201, 204, 206, 208, 209, 210, 215, 232, 239, 241, 244, 247, 253, 254, 259, 260, 261, 262], "order": [0, 5, 7, 16, 17, 18, 19, 26, 31, 33, 37, 39, 55, 60, 63, 65, 89, 99, 101, 102, 105, 106, 120, 121, 134, 135, 138, 139, 143, 157, 162, 171, 172, 173, 178, 179, 180, 181, 189, 196, 198, 203, 205, 208, 209, 211, 226, 227, 235, 236, 239, 248, 249, 253, 255, 256, 259, 260], "chang": [0, 1, 9, 10, 11, 12, 13, 14, 20, 21, 24, 26, 29, 35, 40, 42, 43, 44, 46, 47, 50, 51, 60, 61, 62, 63, 64, 66, 86, 87, 90, 93, 94, 96, 97, 98, 102, 103, 104, 117, 118, 119, 122, 123, 124, 125, 126, 132, 137, 141, 142, 143, 144, 145, 146, 148, 149, 150, 153, 156, 158, 160, 161, 163, 164, 168, 169, 171, 172, 173, 178, 179, 180, 181, 184, 201, 203, 231, 232, 233, 235, 236, 237, 239, 240, 241, 243, 244, 245, 246, 247, 248, 249, 251, 253, 256, 259, 261, 262], "shape": [0, 1, 18, 40, 55, 63, 73, 74, 78, 88, 91, 92, 95, 99, 103, 104, 111, 132, 133, 137, 145, 146, 153, 155, 157, 162, 166, 170, 173, 174, 175, 176, 182, 184, 186, 187, 188, 203, 212, 213, 215, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 233, 234, 235, 236, 237, 239, 240, 241, 243, 244, 245, 246, 247, 248, 249, 251, 259, 261], "result": [0, 1, 5, 9, 10, 11, 12, 13, 14, 15, 16, 17, 20, 21, 22, 24, 25, 28, 29, 30, 31, 33, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 76, 77, 79, 85, 86, 87, 90, 93, 94, 96, 100, 101, 105, 106, 107, 109, 117, 118, 119, 120, 121, 123, 124, 125, 126, 127, 128, 129, 130, 131, 134, 135, 136, 138, 139, 141, 142, 144, 148, 149, 150, 151, 152, 154, 156, 157, 158, 159, 160, 161, 163, 164, 166, 167, 168, 169, 171, 172, 173, 177, 178, 183, 189, 196, 198, 203, 205, 206, 207, 213, 231, 232, 234, 239, 240, 246, 253, 259, 260, 261, 262], "promot": [0, 1, 5, 10, 11, 12, 21, 22, 30, 40, 41, 42, 44, 45, 47, 49, 50, 51, 52, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 75, 78, 85, 86, 87, 90, 94, 96, 101, 104, 107, 122, 123, 124, 125, 126, 127, 132, 135, 136, 139, 141, 142, 149, 152, 154, 160, 161, 163, 164, 166, 167, 168, 171, 172, 173, 183, 184, 185, 188, 203, 231, 232, 237, 239, 240, 241, 243, 244, 245, 246, 247, 253, 255], "rule": [0, 5, 7, 10, 11, 12, 21, 22, 30, 40, 41, 42, 44, 45, 47, 49, 50, 51, 52, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 75, 78, 85, 86, 87, 88, 90, 94, 96, 101, 103, 104, 107, 122, 123, 124, 125, 126, 127, 132, 135, 139, 141, 142, 149, 152, 154, 158, 160, 161, 163, 164, 166, 168, 171, 172, 173, 184, 185, 188, 189, 203, 206, 209, 231, 232, 237, 239, 240, 241, 243, 244, 245, 246, 247, 253, 255, 259, 261], "broadcast": [0, 12, 13, 14, 16, 17, 21, 22, 28, 30, 31, 33, 37, 38, 39, 40, 41, 42, 43, 45, 47, 48, 49, 50, 51, 52, 65, 67, 69, 70, 71, 72, 73, 74, 77, 85, 90, 93, 101, 105, 106, 107, 120, 121, 127, 128, 130, 131, 132, 134, 135, 136, 138, 139, 141, 144, 149, 150, 152, 167, 168, 169, 173, 183, 184, 185, 188, 203, 232, 239, 241, 244, 247, 253, 259], "same": [0, 5, 7, 9, 12, 15, 18, 19, 20, 26, 32, 36, 38, 40, 41, 46, 48, 50, 55, 59, 63, 68, 73, 74, 76, 77, 78, 79, 88, 90, 92, 95, 98, 99, 100, 101, 102, 104, 109, 132, 133, 134, 136, 137, 138, 140, 141, 146, 147, 148, 149, 150, 151, 152, 153, 155, 156, 157, 158, 162, 165, 166, 167, 168, 169, 170, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 187, 189, 198, 201, 206, 207, 209, 210, 215, 217, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 230, 231, 233, 234, 235, 237, 240, 244, 245, 246, 247, 248, 249, 251, 254, 255, 259, 261], "behavior": [0, 5, 47, 49, 60, 63, 77, 90, 101, 103, 104, 107, 122, 141, 149, 152, 157, 170, 178, 179, 180, 181, 188, 189, 191, 198, 201, 203, 205, 206, 213, 214, 219, 220, 223, 224, 227, 230, 255, 256, 259, 260, 261, 262], "special": [0, 9, 10, 11, 12, 20, 21, 24, 25, 28, 29, 30, 35, 41, 42, 43, 47, 51, 61, 62, 64, 65, 66, 76, 85, 86, 87, 88, 90, 93, 94, 96, 100, 101, 107, 117, 118, 119, 123, 124, 125, 126, 127, 134, 135, 136, 138, 139, 141, 144, 149, 150, 152, 156, 158, 159, 160, 161, 163, 164, 167, 169, 171, 172, 177, 183, 203, 204, 206, 246, 251], "case": [0, 1, 5, 7, 9, 10, 11, 12, 15, 20, 21, 24, 25, 26, 28, 29, 30, 35, 41, 42, 43, 47, 51, 60, 61, 62, 64, 65, 66, 76, 85, 86, 87, 88, 90, 93, 94, 96, 100, 101, 102, 107, 117, 118, 119, 123, 124, 125, 126, 127, 134, 135, 136, 137, 138, 139, 141, 144, 149, 150, 152, 156, 158, 159, 160, 161, 163, 164, 167, 169, 171, 172, 177, 183, 189, 201, 203, 204, 205, 206, 207, 210, 211, 213, 245, 246, 248, 251, 255, 257, 259, 262], "its": [0, 5, 26, 40, 73, 90, 98, 132, 141, 153, 155, 205, 206, 209, 210, 254, 259, 260, 261], "respect": [0, 9, 12, 20, 21, 22, 28, 30, 31, 33, 37, 38, 39, 41, 42, 43, 45, 48, 50, 51, 52, 65, 67, 69, 70, 71, 72, 77, 87, 90, 93, 101, 105, 106, 107, 113, 120, 121, 122, 127, 128, 130, 131, 135, 137, 139, 140, 141, 144, 152, 161, 168, 171, 172, 173, 184, 203, 205, 208, 210, 235, 245, 248], "binari": [0, 5, 67, 70, 72, 171, 172, 204], "two": [0, 1, 5, 15, 19, 40, 55, 65, 71, 97, 102, 132, 133, 137, 156, 173, 175, 176, 178, 179, 180, 181, 184, 189, 198, 209, 210, 213, 214, 219, 220, 223, 224, 227, 230, 231, 233, 234, 235, 236, 237, 239, 240, 241, 243, 244, 245, 246, 247, 248, 249, 251, 255, 259, 260, 261, 262], "operand": [0, 1, 9, 10, 11, 12, 24, 25, 29, 35, 61, 62, 64, 65, 66, 76, 85, 86, 87, 88, 90, 93, 94, 96, 100, 101, 107, 117, 118, 119, 123, 124, 125, 126, 127, 134, 135, 138, 139, 141, 144, 149, 150, 152, 156, 158, 159, 160, 161, 163, 164, 169, 171, 172, 177, 198, 203, 205, 246, 251], "assign": [0, 207], "exampl": [0, 5, 12, 23, 26, 115, 116, 166, 188, 189, 201, 206, 207, 208, 210, 213, 214, 215, 251, 255, 259, 261, 262], "after": [0, 1, 26, 40, 132, 163, 174], "addit": [0, 5, 7, 12, 26, 50, 59, 88, 115, 168, 188, 189, 198, 204, 206, 209, 255, 259, 260, 262], "modifi": [0, 26, 207, 258], "equal": [0, 1, 9, 10, 11, 18, 20, 21, 22, 26, 28, 30, 31, 33, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 58, 61, 62, 63, 64, 65, 66, 69, 71, 77, 87, 89, 94, 96, 97, 103, 104, 107, 116, 118, 123, 124, 125, 126, 136, 143, 144, 145, 146, 149, 150, 156, 161, 162, 163, 167, 169, 170, 172, 173, 174, 178, 179, 180, 181, 183, 188, 189, 196, 203, 206, 210, 217, 219, 221, 222, 223, 225, 226, 227, 228, 230, 232, 234, 240, 241, 244, 245, 246, 247, 251, 259], "equival": [0, 20, 21, 22, 28, 30, 31, 33, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 71, 101, 107, 128, 129, 130, 131, 152, 156, 170, 189, 198, 206, 207, 241, 244, 247, 253, 259], "discuss": [0, 93, 144, 209, 210, 214, 259, 260, 261], "copi": [0, 1, 26, 59, 60, 63, 102, 153, 162, 204, 209, 210, 212, 258, 259], "view": [0, 102, 212], "behaviour": [0, 212, 259, 261], "mutabl": [0, 212], "via": [0, 26, 101, 102, 170, 189, 204, 209, 210, 214, 216, 244, 254, 255, 256, 259], "__iadd__": 0, "__isub__": 0, "__imul__": 0, "__itruediv__": 0, "__ifloordiv__": 0, "__ipow__": 0, "__imod__": 0, "__imatmul__": 0, "__iand__": 0, "__ior__": 0, "__ixor__": 0, "__ilshift__": 0, "__irshift__": 0, "appli": [0, 12, 77, 78, 85, 90, 141, 154, 156, 166, 173, 189, 198, 201, 206, 217, 219, 222, 223, 226, 227, 228, 230, 241, 244, 255, 259, 261], "match": [0, 1, 5, 9, 20, 26, 63, 101, 152, 173, 211, 221, 225, 226, 227, 228, 230, 235, 236, 239, 253, 261], "op": [0, 198], "__radd__": 0, "__rsub__": 0, "__rmul__": 0, "__rtruediv__": 0, "__rfloordiv__": 0, "__rpow__": 0, "__rmod__": 0, "__rmatmul__": 0, "__rand__": 0, "__ror__": 0, "__rxor__": 0, "__rlshift__": 0, "__rrshift__": 0, "arrai": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 83, 85, 86, 87, 88, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 194, 195, 196, 197, 199, 200, 201, 203, 204, 205, 206, 207, 208, 209, 210, 211, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 260, 262], "refer": [1, 13, 14, 96, 97, 125, 167, 173, 174, 183, 184, 189, 206, 207, 215, 217, 219, 221, 222, 223, 225, 226, 227, 228, 230, 232], "automat": [1, 259], "implicit": [1, 209, 210, 213, 259], "expans": [1, 259], "size": [1, 13, 14, 88, 95, 122, 143, 155, 165, 170, 173, 184, 188, 189, 208, 214, 217, 219, 221, 222, 223, 225, 226, 227, 228, 230, 232, 234, 243, 245, 248, 259], "without": [1, 7, 26, 57, 102, 113, 115, 143, 153, 178, 179, 180, 181, 201, 204, 205, 208, 258, 259, 261], "purpos": [1, 5, 96, 107, 125, 201, 246, 255, 257, 258, 261], "make": [1, 7, 201, 204, 205, 207, 209, 213, 217, 219, 221, 222, 223, 225, 226, 227, 228, 230, 254, 256, 259], "differ": [1, 12, 26, 49, 50, 77, 78, 88, 90, 98, 101, 102, 141, 150, 166, 168, 169, 189, 201, 207, 210, 211, 213, 224, 235, 245, 246, 248, 251, 255, 259, 260, 261], "element": [1, 9, 10, 11, 12, 13, 14, 15, 20, 21, 22, 24, 25, 28, 29, 30, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 54, 58, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 76, 77, 79, 85, 86, 87, 88, 90, 93, 94, 96, 97, 99, 100, 101, 103, 104, 105, 106, 107, 109, 117, 118, 119, 120, 121, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 134, 135, 136, 138, 139, 141, 142, 143, 144, 148, 149, 150, 151, 152, 153, 155, 156, 157, 158, 159, 160, 161, 163, 164, 165, 167, 168, 169, 170, 171, 172, 174, 175, 176, 177, 178, 179, 180, 181, 183, 185, 188, 189, 203, 205, 217, 219, 221, 222, 223, 225, 226, 227, 228, 230, 232, 235, 244, 245, 246, 248, 251, 259], "wise": [1, 9, 10, 12, 20, 21, 22, 28, 30, 31, 33, 36, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 61, 64, 65, 67, 68, 69, 70, 71, 72, 77, 79, 85, 90, 93, 101, 105, 106, 107, 109, 120, 121, 127, 128, 129, 130, 131, 135, 139, 141, 144, 149, 151, 152, 168, 188, 203, 205, 259], "oper": [1, 12, 19, 24, 26, 34, 40, 57, 58, 59, 61, 64, 71, 86, 88, 90, 101, 124, 126, 132, 141, 149, 150, 152, 154, 160, 164, 169, 171, 173, 188, 189, 195, 198, 203, 206, 207, 208, 209, 210, 251, 255, 256, 259, 260, 261], "facilit": [1, 196, 201], "user": [1, 7, 26, 110, 172, 201, 204, 205, 207, 210, 214, 255, 259, 260, 261], "ergonom": 1, "encourag": [1, 259, 260], "avoid": [1, 9, 63, 90, 96, 101, 107, 125, 141, 153, 204, 207, 210, 213, 255, 259, 261], "unnecessari": [1, 255], "can": [1, 7, 26, 60, 75, 110, 114, 116, 189, 198, 201, 204, 206, 207, 209, 210, 215, 244, 245, 248, 254, 255, 259, 260, 261, 262], "potenti": [1, 26, 96, 125, 207, 259], "enabl": [1, 26, 102, 210, 214, 215, 259], "more": [1, 5, 7, 15, 19, 26, 40, 58, 60, 63, 73, 88, 96, 99, 101, 125, 132, 143, 149, 170, 178, 179, 180, 181, 189, 198, 201, 204, 205, 206, 207, 208, 209, 210, 211, 214, 215, 219, 220, 223, 224, 227, 230, 246, 255, 256, 259, 260, 262], "memori": [1, 26, 60, 102, 201, 207, 208, 210, 259, 261], "effici": [1, 201, 207], "through": [1, 60, 65, 254, 256, 260, 261], "vector": [1, 40, 132, 137, 184, 232, 243, 248, 249, 253, 255, 259], "reduc": [1, 13, 14, 16, 17, 134, 136, 138, 150, 167, 169, 183, 189, 245, 248, 255, 260, 261], "consumpt": [1, 26, 260], "cach": 1, "local": [1, 210], "given": [1, 23, 99, 122, 155, 157, 182, 198, 206, 207, 210, 211, 215, 236, 246, 255, 256, 259, 261], "involv": [1, 12, 90, 101, 141, 149, 154, 198, 205, 206, 210, 214], "singleton": [1, 13, 14, 16, 17, 95, 134, 136, 138, 150, 165, 167, 169, 174, 183, 239, 253, 259], "whose": [1, 5, 9, 11, 19, 20, 26, 47, 55, 62, 66, 85, 86, 87, 97, 99, 102, 133, 149, 155, 159, 160, 161, 170, 171, 172, 173, 175, 176, 178, 179, 180, 189, 207, 221, 225, 226, 227, 228, 230, 231, 233, 234, 235, 236, 237, 239, 240, 241, 243, 244, 245, 246, 247, 248, 249, 251, 253, 259, 261], "one": [1, 15, 19, 26, 40, 51, 58, 60, 63, 73, 75, 88, 90, 95, 97, 99, 101, 102, 115, 116, 122, 132, 137, 141, 143, 145, 146, 157, 165, 170, 178, 179, 180, 181, 184, 189, 201, 204, 206, 207, 209, 210, 213, 214, 215, 217, 219, 221, 222, 223, 224, 225, 226, 227, 228, 230, 243, 244, 245, 253, 255, 256, 259, 261], "virtual": 1, "repeat": [1, 189, 261], "across": [1, 5, 90, 101, 141, 172, 203, 205, 206, 210, 254, 259], "correspond": [1, 16, 17, 23, 47, 59, 65, 73, 77, 102, 111, 112, 113, 149, 153, 155, 157, 167, 173, 178, 179, 180, 181, 183, 184, 189, 205, 219, 223, 227, 230, 232, 235, 239, 247, 258, 259], "If": [1, 5, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 23, 24, 25, 26, 29, 34, 35, 40, 44, 47, 51, 55, 57, 59, 60, 61, 62, 63, 64, 65, 66, 74, 76, 77, 78, 85, 86, 87, 88, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 107, 111, 113, 115, 116, 117, 118, 119, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 149, 150, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 165, 166, 167, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 186, 187, 189, 204, 206, 210, 216, 217, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 230, 231, 232, 235, 236, 237, 239, 240, 241, 244, 245, 246, 247, 248, 251, 253, 254, 255, 259, 261], "unequ": 1, "lower": [1, 77, 97, 175, 231], "higher": [1, 5, 26, 189, 204, 255, 260], "prepend": [1, 40, 95, 132, 174], "until": [1, 26, 174], "store": [1, 26, 210, 251], "determin": [1, 10, 11, 12, 13, 14, 21, 22, 26, 30, 40, 41, 42, 44, 45, 47, 50, 51, 52, 61, 62, 64, 65, 66, 67, 69, 70, 71, 72, 75, 78, 85, 86, 87, 88, 90, 94, 96, 101, 107, 117, 118, 119, 123, 124, 125, 126, 127, 132, 135, 139, 141, 142, 149, 152, 159, 160, 161, 163, 164, 168, 170, 171, 172, 173, 178, 179, 180, 181, 184, 185, 198, 206, 209, 210, 217, 219, 221, 222, 223, 225, 226, 227, 228, 230, 231, 232, 233, 234, 237, 239, 240, 241, 243, 244, 245, 246, 247, 251, 253, 255, 259], "let": [1, 9, 10, 11, 12, 62, 66, 85, 87, 88, 93, 94, 96, 102, 117, 118, 119, 122, 123, 125, 136, 144, 150, 157, 158, 161, 163, 167, 169, 172, 174, 183, 184, 189, 214, 217, 219, 221, 222, 223, 225, 226, 227, 228, 230, 231, 235, 236, 237, 245, 247, 248, 251], "b": [1, 9, 10, 11, 12, 57, 62, 66, 87, 90, 93, 94, 96, 101, 117, 118, 119, 122, 123, 125, 141, 144, 158, 161, 163, 166, 172, 184, 189, 203, 206, 207, 211, 244, 247, 261], "both": [1, 40, 44, 47, 51, 65, 77, 88, 90, 98, 101, 102, 107, 122, 132, 142, 149, 150, 169, 172, 173, 184, 189, 206, 207, 209, 213, 215, 232, 251, 255, 259, 260], "shape1": 1, "describ": [1, 5, 12, 88, 90, 93, 115, 116, 141, 144, 149, 150, 169, 191, 198, 206, 209, 213, 218, 229, 251, 259], "shape2": 1, "n1": [1, 137], "len": [1, 137, 174], "n2": [1, 137], "max": [1, 26, 77, 98, 108, 174, 188, 189, 239, 241, 244], "temporari": 1, "list": [1, 73, 78, 114, 137, 166, 189, 201, 203, 210, 259, 261], "length": [1, 15, 107, 137, 153, 173, 189, 218, 220, 221, 224, 229, 248, 249], "while": [1, 101, 115, 122, 128, 129, 130, 131, 136, 140, 157, 167, 178, 179, 183, 188, 189, 196, 201, 206, 207, 208, 210, 213, 244, 255, 260, 261, 262], "d1": 1, "els": [1, 26, 201, 260], "d2": 1, "set": [1, 18, 26, 49, 65, 102, 159, 162, 167, 175, 176, 178, 180, 181, 183, 188, 189, 204, 205, 206, 207, 210, 211, 214, 215, 217, 219, 221, 222, 223, 225, 226, 227, 228, 230, 231, 235, 236, 237, 241, 244, 245, 247, 248, 254, 255, 259, 261, 262], "th": [1, 97, 174, 189, 219, 223, 227, 230], "throw": 1, "except": [1, 7, 13, 14, 26, 74, 78, 88, 97, 102, 122, 143, 166, 170, 182, 189, 198, 201, 205, 207, 210, 212, 213, 217, 219, 221, 222, 223, 225, 226, 227, 228, 230, 244, 256, 259, 260, 261], "demonstr": 1, "applic": [1, 26, 88, 150, 169, 198, 251, 255, 259, 260], "4d": 1, "8": [1, 5, 7, 27, 174, 198, 201], "6": [1, 7, 174], "3d": 1, "7": [1, 7, 27, 215], "5": [1, 189, 259], "2d": 1, "1d": 1, "15": 1, "do": [1, 26, 90, 141, 152, 196, 201, 204, 206, 207, 209, 210, 211, 255, 256, 258, 259, 261, 262], "doe": [1, 15, 26, 102, 144, 170, 189, 198, 201, 204, 205, 206, 207, 208, 210, 211, 213, 215, 255, 259, 261, 262], "second": [1, 12, 65, 67, 69, 70, 71, 72, 93, 105, 106, 107, 120, 121, 127, 128, 130, 131, 132, 135, 139, 141, 144, 149, 166, 168, 173, 178, 179, 180, 184, 185, 232, 235, 243, 245, 246, 248, 249, 259], "append": [1, 40, 69, 95, 132, 234], "As": [1, 122, 149, 178, 179, 180, 181, 201, 209, 215, 261], "impli": [1, 178, 179, 180, 181, 258, 259], "__setitem__": [1, 170, 188, 203], "Such": [1, 205, 255], "right": [1, 69, 71, 107, 157, 163, 204, 248, 258], "hand": [1, 198], "left": [1, 5, 60, 69, 101, 103, 157, 170, 189, 198, 235, 236, 248, 259], "index": [1, 5, 16, 17, 18, 32, 34, 49, 57, 83, 97, 111, 113, 137, 140, 143, 157, 166, 170, 173, 178, 179, 180, 188, 219, 223, 227, 230, 259, 261], "perform": [1, 5, 13, 14, 26, 40, 59, 60, 90, 107, 132, 141, 173, 189, 204, 205, 206, 207, 208, 209, 217, 219, 222, 223, 224, 226, 227, 228, 230, 248, 249, 255, 259, 260, 261], "empti": [1, 13, 14, 15, 150, 169, 188, 189, 203, 251, 259], "ok": 1, "allow": [1, 26, 113, 115, 149, 153, 189, 203, 204, 205, 207, 210, 213, 214, 255, 261], "NOT": [1, 129, 258], "adher": [2, 7, 8, 188, 189, 201, 254, 259], "convent": [2, 7, 10, 11, 26, 40, 61, 62, 64, 65, 66, 88, 123, 125, 132, 149, 163, 188, 189, 196, 206, 210, 254, 255, 260], "each": [2, 9, 10, 11, 12, 20, 21, 22, 26, 28, 30, 31, 33, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 76, 77, 79, 85, 86, 87, 90, 93, 94, 96, 100, 101, 105, 106, 107, 109, 114, 117, 118, 119, 120, 121, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 135, 137, 139, 140, 141, 142, 143, 144, 148, 149, 151, 152, 155, 156, 157, 158, 159, 160, 161, 163, 164, 166, 168, 171, 172, 173, 174, 177, 178, 179, 189, 201, 205, 209, 213, 215, 227, 231, 232, 233, 237, 239, 240, 241, 244, 245, 246, 247, 248, 249, 254, 255, 259, 260, 261], "float": [2, 5, 9, 10, 11, 12, 13, 14, 15, 20, 21, 24, 25, 28, 29, 30, 31, 33, 34, 35, 37, 39, 40, 41, 42, 43, 44, 47, 49, 50, 51, 60, 61, 62, 63, 64, 65, 66, 76, 77, 79, 80, 81, 82, 84, 85, 86, 87, 88, 90, 91, 93, 94, 96, 97, 98, 100, 101, 103, 104, 107, 109, 113, 115, 116, 117, 118, 119, 122, 123, 124, 125, 126, 127, 132, 134, 135, 136, 138, 139, 141, 142, 143, 144, 145, 146, 149, 150, 151, 152, 154, 156, 157, 158, 159, 160, 161, 163, 164, 167, 168, 169, 171, 172, 173, 177, 178, 179, 180, 181, 183, 184, 186, 188, 196, 203, 205, 206, 213, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 233, 235, 236, 237, 239, 240, 241, 244, 245, 246, 247, 248, 249, 251, 253, 255, 259, 260], "point": [2, 5, 9, 10, 11, 12, 13, 14, 15, 20, 24, 25, 26, 29, 34, 35, 40, 41, 42, 44, 47, 50, 51, 60, 61, 62, 63, 64, 65, 66, 76, 77, 79, 80, 81, 82, 84, 85, 86, 87, 88, 90, 91, 93, 94, 96, 97, 98, 100, 101, 103, 104, 107, 109, 113, 115, 116, 117, 118, 119, 122, 123, 124, 125, 126, 127, 132, 134, 135, 136, 138, 139, 141, 142, 143, 144, 145, 146, 149, 150, 151, 152, 154, 156, 157, 158, 159, 160, 161, 163, 164, 167, 168, 169, 171, 172, 173, 177, 178, 179, 180, 181, 183, 184, 186, 188, 196, 203, 205, 206, 210, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 233, 235, 236, 237, 239, 240, 241, 244, 245, 246, 247, 248, 249, 251, 253, 255, 259, 261], "creat": [3, 15, 60, 91, 92, 97, 102, 103, 104, 122, 145, 146, 186, 187, 195, 201, 210, 218, 229, 255, 259], "main": [5, 97, 175, 176, 204, 209, 234, 251, 254, 261], "namespac": [5, 7, 23, 110, 191, 201, 216, 254, 255, 256, 259, 262], "under": [5, 254, 258, 259], "specifi": [5, 13, 14, 15, 16, 17, 18, 26, 29, 59, 60, 63, 74, 78, 88, 91, 95, 98, 99, 103, 113, 115, 116, 122, 145, 150, 152, 155, 165, 166, 169, 170, 174, 175, 176, 178, 179, 180, 181, 184, 186, 189, 198, 203, 205, 206, 207, 209, 210, 211, 215, 217, 219, 220, 221, 222, 223, 225, 226, 227, 228, 230, 234, 251, 253, 255, 256, 259, 261, 262], "name": [5, 7, 23, 26, 101, 115, 178, 179, 180, 189, 206, 235, 244, 245, 246, 248, 254, 259, 260], "descript": [5, 7, 203, 205, 239, 253], "bool": [5, 13, 14, 16, 17, 18, 22, 24, 26, 28, 31, 33, 37, 39, 43, 45, 49, 52, 60, 63, 75, 88, 89, 93, 102, 103, 104, 105, 106, 115, 116, 117, 118, 119, 120, 121, 122, 128, 129, 130, 131, 134, 136, 138, 144, 150, 153, 159, 162, 167, 169, 183, 198, 203, 213, 231, 239, 248, 253], "true": [5, 13, 14, 16, 17, 18, 24, 25, 26, 29, 35, 60, 63, 75, 88, 93, 98, 101, 102, 111, 117, 118, 119, 122, 128, 129, 130, 131, 134, 136, 138, 143, 144, 150, 153, 159, 162, 167, 169, 178, 179, 180, 181, 183, 185, 189, 203, 231, 239, 248, 253, 255], "fals": [5, 13, 14, 16, 17, 18, 24, 25, 26, 29, 35, 60, 63, 75, 88, 93, 102, 111, 117, 118, 119, 122, 128, 129, 130, 131, 134, 136, 138, 144, 150, 153, 159, 162, 167, 169, 178, 179, 180, 181, 183, 189, 231, 239, 248, 253], "int8": [5, 115, 116, 198], "bit": [5, 68, 69, 71, 85, 88, 98, 108, 150, 159, 169, 198, 205, 251], "sign": [5, 9, 10, 11, 12, 15, 20, 41, 44, 62, 65, 66, 71, 85, 87, 88, 90, 94, 96, 101, 115, 116, 123, 125, 141, 142, 149, 150, 152, 157, 159, 161, 163, 169, 172, 178, 179, 180, 181, 188, 196, 203, 206, 245, 246, 251], "exist": [5, 7, 26, 60, 78, 102, 201, 203, 206, 209, 210, 211, 237, 256, 259, 260], "interv": [5, 10, 11, 13, 14, 15, 61, 62, 64, 66, 95, 122, 123, 125, 140, 166, 173, 175, 176, 182, 184, 189, 217, 219, 221, 222, 223, 225, 226, 227, 228, 230, 232, 256], "128": 5, "127": 5, "int16": [5, 88, 115, 116, 150, 169, 198, 251], "16": [5, 198], "32": [5, 198], "767": 5, "int32": [5, 88, 115, 116, 150, 169, 198, 251], "147": 5, "483": 5, "647": 5, "int64": [5, 88, 115, 116, 150, 169, 198, 251], "64": [5, 198], "9": [5, 27], "223": 5, "372": 5, "036": 5, "854": 5, "775": 5, "807": 5, "uint8": [5, 115, 116, 198], "unsign": [5, 88, 115, 116, 150, 169, 188, 251], "255": 5, "uint16": [5, 88, 115, 116, 150, 169, 198, 251], "65": 5, "535": [5, 203], "uint32": [5, 88, 115, 116, 150, 169, 198, 251], "294": 5, "967": 5, "295": 5, "uint64": [5, 115, 116, 198], "18": 5, "446": [5, 203], "744": 5, "073": 5, "709": 5, "551": [5, 203], "615": 5, "float32": [5, 109, 115, 116, 151, 198, 246, 248, 249], "ieee": [5, 12, 65, 80, 81, 82, 84, 90, 96, 98, 107, 125, 141, 152, 163, 171, 172, 188, 196, 205, 206, 259], "754": [5, 12, 65, 80, 81, 82, 84, 90, 96, 98, 107, 125, 141, 152, 163, 171, 172, 188, 196, 205, 206, 259], "singl": [5, 7, 24, 25, 29, 34, 35, 113, 115, 178, 179, 188, 198, 203, 204, 206, 209, 210, 215, 255, 259, 260, 261], "precis": [5, 9, 20, 42, 60, 98, 103, 104, 109, 141, 151, 163, 198, 203, 205, 221, 225, 226, 227, 228, 230, 235, 236, 239, 246, 248, 249, 253, 259], "2019": [5, 12, 90, 96, 107, 125, 141, 188, 205, 259, 261], "float64": [5, 9, 20, 115, 116, 198, 221, 225, 226, 227, 228, 230, 235, 236, 239, 253], "doubl": [5, 173, 198, 203], "complex64": [5, 109, 115, 116, 151, 198, 203, 246, 248, 249], "imaginari": [5, 10, 11, 12, 13, 14, 44, 61, 62, 63, 64, 66, 79, 87, 90, 93, 94, 96, 98, 109, 123, 125, 141, 142, 143, 144, 145, 146, 149, 156, 161, 163, 172, 203, 206], "compon": [5, 10, 11, 12, 13, 14, 44, 62, 63, 66, 79, 87, 90, 93, 94, 96, 98, 109, 123, 125, 141, 142, 143, 144, 145, 146, 149, 151, 156, 161, 163, 171, 172, 178, 179, 180, 181, 203, 206, 220, 229], "complex128": [5, 9, 20, 115, 116, 198, 203, 221, 225, 226, 227, 228, 230, 235, 236, 239, 253], "method": [5, 26, 34, 102, 188, 191, 201, 207, 209, 210, 213, 214, 215, 259, 260, 261], "attribut": [5, 23, 98, 108, 188, 200, 256, 259, 260, 261], "requir": [5, 10, 11, 24, 25, 29, 34, 35, 59, 61, 62, 63, 64, 66, 88, 107, 116, 163, 166, 170, 172, 182, 188, 189, 196, 198, 201, 203, 204, 205, 206, 207, 208, 209, 210, 213, 215, 254, 255, 259, 260, 261], "beyond": [5, 155, 198, 259], "It": [5, 23, 26, 102, 201, 207, 209, 259, 261, 262], "also": [5, 7, 26, 34, 102, 107, 158, 198, 201, 206, 207, 208, 209, 215, 219, 223, 227, 230, 248, 254, 261], "subnorm": [5, 107], "k": [5, 40, 97, 107, 132, 143, 175, 176, 189, 231, 235, 236, 237, 245, 247, 248, 249, 251, 259], "denorm": [5, 107], "gradual": [5, 107, 259], "underflow": [5, 9, 90, 101, 107, 246], "hardwar": [5, 53, 107, 205, 209, 210, 235, 248, 255, 259], "univers": [5, 107, 204, 210, 255, 259], "mani": [5, 107, 174, 259, 261], "platform": [5, 26, 107], "compil": [5, 107, 172, 201, 204, 208, 259], "toggl": [5, 107], "daz": [5, 107], "flush": [5, 107], "ftz": [5, 107], "increas": [5, 107, 205, 260], "guard": [5, 107], "against": [5, 40, 73, 107, 132, 172, 189, 241, 244, 262], "time": [5, 7, 16, 17, 26, 107, 178, 179, 201, 208, 209, 214, 231, 235, 236, 237, 245, 247, 248, 255, 259, 261], "attack": [5, 107], "accordingli": [5, 10, 11, 13, 14, 16, 17, 59, 61, 62, 64, 66, 90, 96, 101, 107, 122, 123, 125, 134, 136, 137, 138, 141, 143, 150, 157, 163, 167, 169, 178, 179, 180, 181, 183, 189, 198, 205, 206, 207, 208, 210, 239, 245, 253, 255], "vari": [5, 107, 157, 172, 178, 179, 180, 181, 198, 205], "function": [5, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 26, 28, 29, 30, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 60, 61, 62, 64, 65, 66, 74, 78, 86, 87, 88, 94, 96, 99, 102, 107, 114, 115, 116, 122, 123, 125, 128, 129, 130, 131, 132, 136, 143, 149, 152, 153, 158, 160, 161, 162, 163, 166, 167, 170, 171, 172, 173, 174, 178, 179, 180, 181, 182, 183, 184, 188, 191, 201, 204, 206, 207, 208, 209, 210, 213, 214, 215, 217, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 230, 231, 232, 235, 236, 237, 241, 244, 245, 246, 247, 248, 249, 254, 255, 256, 259, 260, 261], "access": [5, 26, 32, 102, 110, 189, 203, 209, 254, 256, 259], "variou": 5, "cast": [5, 29, 49, 60, 63, 75, 88, 150, 169, 198, 206, 251, 259, 261], "introspect": 5, "isdtyp": [5, 188, 203], "integr": [5, 63, 113, 115, 116], "keyword": [5, 7, 26, 88, 114, 137, 150, 169, 188, 207, 210, 214, 215, 251, 255, 256, 259, 260, 261], "affect": [5, 15, 49, 207, 210], "intermedi": [5, 9, 107], "calcul": [5, 9, 10, 11, 12, 20, 21, 42, 47, 50, 61, 62, 64, 65, 66, 86, 87, 88, 90, 94, 96, 123, 124, 125, 126, 127, 134, 136, 138, 141, 149, 150, 160, 161, 163, 167, 168, 169, 171, 172, 183, 246], "implementor": [5, 254], "free": [5, 210, 258], "when": [5, 7, 12, 16, 17, 26, 47, 49, 59, 63, 90, 96, 101, 102, 107, 113, 115, 122, 125, 134, 138, 141, 149, 153, 157, 167, 172, 183, 185, 188, 189, 198, 203, 204, 206, 207, 208, 209, 211, 213, 214, 215, 217, 219, 221, 222, 223, 225, 226, 227, 228, 230, 231, 235, 237, 241, 244, 245, 246, 247, 248, 249, 255, 259, 260, 261], "accumul": 5, "reduct": [5, 13, 14], "long": [5, 110, 215], "ha": [5, 9, 13, 14, 20, 23, 29, 34, 35, 40, 44, 47, 55, 86, 87, 88, 90, 94, 95, 96, 101, 104, 132, 136, 137, 140, 141, 142, 143, 149, 150, 160, 161, 165, 167, 169, 170, 171, 172, 173, 174, 178, 179, 180, 181, 183, 189, 198, 201, 206, 209, 210, 213, 214, 232, 239, 247, 248, 251, 253, 255, 256, 259, 261, 262], "wai": [5, 26, 63, 102, 201, 204, 210, 211, 256, 259, 260, 261, 262], "f4": [5, 198], "ensur": [5, 26, 157, 201, 205, 255, 259, 260, 261], "portabl": [5, 59, 122, 205, 207, 210, 211, 259], "consum": [5, 26, 63, 113, 115, 201, 206, 207, 215, 254, 259, 260], "recommend": [5, 7, 19, 23, 26, 122, 128, 129, 130, 131, 136, 152, 167, 183, 196, 205, 209, 210, 259], "guidanc": [5, 7, 49, 203, 204, 211, 259], "govern": [5, 50, 168, 198, 255, 256], "interact": [5, 206], "either": [5, 9, 10, 11, 12, 24, 26, 35, 40, 65, 77, 87, 88, 90, 93, 94, 96, 98, 101, 102, 107, 110, 116, 117, 118, 122, 123, 124, 125, 126, 127, 132, 135, 139, 141, 150, 152, 158, 159, 160, 163, 169, 171, 172, 173, 189, 205, 206, 207, 211, 215, 246, 251, 259, 260, 262], "whether": [5, 13, 14, 26, 59, 60, 63, 88, 89, 102, 111, 116, 119, 122, 153, 159, 203, 210, 231, 235, 236, 245, 247, 254, 258, 259, 261], "otherwis": [5, 13, 14, 15, 16, 17, 26, 59, 60, 63, 75, 102, 111, 113, 115, 134, 136, 138, 150, 153, 157, 158, 167, 169, 183, 184, 185, 188, 189, 201, 210, 231, 233, 239, 246, 253, 258], "note": [5, 7, 9, 10, 11, 12, 13, 14, 20, 21, 24, 25, 26, 29, 34, 35, 40, 42, 43, 44, 46, 47, 50, 51, 59, 61, 62, 63, 64, 65, 66, 76, 77, 79, 85, 86, 87, 88, 90, 93, 94, 96, 97, 98, 100, 101, 103, 104, 107, 109, 110, 114, 116, 117, 118, 119, 123, 124, 125, 126, 127, 132, 134, 135, 136, 137, 138, 139, 141, 142, 143, 144, 145, 146, 148, 149, 150, 151, 152, 156, 157, 158, 159, 160, 161, 163, 164, 167, 168, 169, 170, 171, 172, 173, 177, 178, 179, 180, 181, 183, 184, 188, 189, 203, 209, 213, 215, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 235, 236, 237, 239, 240, 241, 243, 244, 245, 246, 247, 248, 249, 251, 253, 259, 260, 261, 262], "possibl": [5, 26, 60, 101, 102, 134, 138, 153, 171, 172, 201, 204, 205, 206, 207, 209, 210, 211, 213, 215, 255, 259, 260, 261, 262], "multipl": [5, 7, 13, 14, 16, 17, 40, 42, 44, 132, 134, 136, 138, 141, 142, 150, 167, 169, 183, 189, 201, 204, 206, 209, 210, 214, 215, 236, 237, 255, 256, 259, 261], "In": [5, 12, 19, 26, 59, 88, 90, 93, 101, 116, 118, 119, 141, 144, 150, 152, 158, 169, 188, 189, 191, 198, 205, 206, 209, 211, 226, 227, 245, 246, 248, 251, 255, 256, 260, 261, 262], "clearli": [5, 59, 116, 196, 206, 255, 256], "warn": [5, 211], "about": [5, 7, 26, 98, 108, 207, 255, 259, 261, 262], "": [5, 26, 29, 32, 49, 58, 59, 60, 80, 101, 102, 137, 152, 167, 174, 175, 176, 183, 189, 196, 201, 204, 205, 206, 207, 209, 210, 213, 215, 219, 223, 227, 230, 244, 248, 249, 255, 256, 259, 261], "organ": [5, 203, 255, 260, 261], "within": [5, 15, 27, 189, 198, 201, 203, 206, 210, 217, 219, 222, 223, 226, 227, 228, 230, 259], "numer": [5, 9, 12, 20, 21, 40, 42, 44, 46, 47, 50, 51, 88, 90, 101, 115, 116, 117, 118, 119, 132, 137, 141, 142, 148, 149, 150, 156, 158, 164, 168, 169, 173, 198, 205, 217, 219, 222, 223, 226, 227, 228, 230, 232, 243, 244, 246, 251, 255, 259, 261], "accord": [5, 12, 60, 71, 75, 88, 90, 98, 101, 103, 122, 141, 149, 157, 158, 167, 183, 184, 189, 205, 206], "These": [5, 207, 235, 260], "intend": [5, 88, 150, 169, 201, 251], "posit": [7, 9, 10, 11, 13, 14, 20, 46, 62, 65, 66, 81, 90, 95, 97, 98, 101, 118, 123, 125, 140, 141, 143, 152, 155, 159, 161, 163, 172, 188, 189, 201, 203, 205, 215, 229, 231, 245, 260], "paramet": [7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 113, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 201, 203, 215, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 239, 240, 241, 243, 244, 245, 246, 247, 248, 249, 251, 253, 255], "extern": [7, 261], "usabl": 7, "accept": [7, 26, 128, 129, 130, 131, 136, 152, 167, 183, 201, 256], "call": [7, 34, 209, 210, 213, 246, 259, 260, 261], "argument": [7, 10, 11, 26, 40, 61, 62, 64, 65, 66, 86, 88, 107, 114, 123, 125, 132, 150, 154, 157, 160, 163, 169, 171, 172, 173, 188, 198, 205, 207, 209, 210, 217, 219, 222, 223, 226, 227, 228, 230, 251, 255, 259, 260, 261], "map": [7, 206, 207], "base": [7, 47, 57, 58, 94, 95, 123, 124, 125, 126, 149, 178, 179, 180, 181, 189, 203, 207, 213, 215, 255, 256, 259, 260, 261], "sole": [7, 189, 196, 255], "incompat": [7, 26, 74, 102, 201, 256, 259], "us": [7, 19, 26, 27, 59, 60, 83, 98, 102, 107, 122, 124, 126, 155, 178, 180, 188, 189, 198, 203, 205, 206, 207, 208, 210, 211, 214, 215, 216, 217, 219, 221, 222, 223, 225, 226, 227, 228, 230, 254, 255, 256, 257, 258, 259, 262], "normal": [7, 78, 166, 217, 219, 221, 222, 223, 225, 226, 227, 228, 230], "practic": [7, 19, 189, 255, 260], "avail": [7, 102, 114, 201, 209, 254, 256, 260], "still": [7, 26, 215, 255, 260, 261, 262], "consid": [7, 26, 63, 102, 128, 129, 130, 131, 178, 179, 180, 181, 206, 210, 229, 244, 255, 259, 261, 262], "compliant": [7, 26, 51, 90, 96, 102, 122, 125, 128, 129, 130, 131, 134, 136, 138, 167, 183, 205, 208, 210, 256, 259], "altern": [7, 207, 209, 262], "thei": [7, 26, 198, 204, 209, 210, 214, 215, 254, 255, 256, 259, 261, 262], "were": [7, 101, 157, 203, 259], "option": [7, 13, 14, 15, 16, 17, 23, 26, 57, 58, 59, 60, 63, 77, 78, 88, 91, 92, 97, 99, 102, 103, 104, 113, 115, 122, 134, 136, 138, 145, 146, 150, 153, 155, 157, 167, 169, 170, 183, 186, 187, 188, 203, 214, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 239, 241, 244, 251, 253, 255, 260, 261], "lead": [7, 101, 206, 245, 248, 259], "readabl": [7, 198, 255, 260], "code": [7, 59, 198, 207, 208, 210, 213, 215, 255, 259, 260, 261], "easier": [7, 201, 207, 255], "evolv": [7, 201, 255], "over": [7, 13, 14, 26, 122, 134, 136, 138, 150, 167, 169, 170, 173, 183, 184, 205, 206, 207, 209, 210, 214, 217, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 230, 232, 251, 253, 255, 259], "ad": [7, 9, 10, 11, 12, 13, 14, 20, 21, 24, 26, 29, 35, 40, 42, 43, 44, 46, 47, 50, 51, 60, 61, 62, 63, 64, 66, 86, 87, 90, 93, 94, 96, 97, 98, 102, 103, 104, 117, 118, 119, 122, 123, 124, 125, 126, 132, 137, 141, 142, 143, 144, 145, 146, 148, 149, 150, 156, 158, 160, 161, 163, 164, 168, 169, 171, 172, 173, 178, 179, 180, 181, 184, 189, 202, 203, 204, 210, 231, 232, 233, 235, 236, 237, 239, 240, 241, 243, 244, 245, 246, 247, 248, 249, 251, 253, 256], "worri": 7, "xi": [7, 137], "annot": [7, 203, 215, 259], "individu": [7, 157, 210, 213, 214, 215, 218, 229, 259, 260], "aim": [7, 204, 215, 254, 255, 256, 259, 260, 261, 262], "strongli": [7, 207, 261], "look": [7, 261], "like": [7, 201, 204, 206, 207, 213, 215, 256, 259, 260, 261], "funcnam": 7, "key1": 7, "key2": 7, "none": [7, 13, 14, 15, 16, 17, 23, 26, 32, 49, 57, 58, 59, 60, 63, 77, 78, 83, 88, 91, 92, 97, 99, 102, 103, 104, 113, 115, 122, 134, 136, 138, 145, 146, 150, 153, 155, 157, 167, 169, 170, 183, 186, 187, 189, 210, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 239, 241, 244, 251, 252, 253, 259, 260, 262], "out": [7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 189, 204, 207, 209, 213, 214, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 239, 240, 241, 243, 244, 245, 246, 247, 248, 249, 251, 253, 258, 261], "int": [7, 13, 14, 15, 16, 17, 18, 21, 22, 26, 27, 28, 30, 31, 32, 33, 34, 35, 37, 38, 39, 41, 42, 43, 45, 47, 48, 49, 50, 51, 52, 56, 57, 58, 59, 60, 74, 77, 78, 88, 91, 95, 97, 98, 99, 101, 103, 104, 108, 122, 134, 136, 138, 140, 145, 147, 150, 153, 155, 162, 165, 166, 167, 169, 170, 173, 174, 175, 176, 182, 183, 184, 186, 189, 198, 213, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 232, 234, 239, 240, 250, 251, 252, 253, 260], "str": [7, 8, 23, 115, 116, 137, 260], "modulo": 7, "self": [7, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 59, 89, 203, 261], "few": [7, 205, 213, 259, 261], "enhanc": 7, "default": [7, 13, 14, 15, 16, 17, 18, 23, 26, 59, 60, 63, 77, 78, 88, 91, 92, 97, 99, 102, 103, 104, 112, 113, 115, 122, 134, 136, 137, 138, 143, 145, 146, 150, 153, 155, 157, 162, 166, 167, 169, 173, 175, 176, 178, 179, 180, 182, 183, 184, 186, 187, 188, 189, 203, 205, 210, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 234, 239, 241, 244, 245, 248, 251, 253], "form": [7, 23, 26, 40, 79, 132, 133, 175, 176, 207, 231, 233, 234, 235, 236, 237, 239, 240, 241, 244, 245, 246, 247, 248, 249, 251, 256, 260], "question": [7, 204, 259], "commonli": [7, 167, 183, 204, 206, 208, 254, 255, 259, 260], "written": [7, 201, 259, 261], "yyyi": [8, 23, 256], "mm": [8, 23, 256], "string": [8, 23, 115, 116, 203, 256, 259], "version": [8, 9, 10, 11, 12, 13, 14, 20, 21, 23, 24, 25, 26, 29, 35, 40, 42, 43, 44, 46, 47, 50, 51, 60, 61, 62, 63, 64, 66, 79, 86, 87, 90, 93, 94, 96, 97, 98, 102, 103, 104, 108, 109, 116, 117, 118, 119, 122, 123, 124, 125, 126, 132, 137, 141, 142, 143, 144, 145, 146, 148, 149, 150, 151, 156, 158, 160, 161, 163, 164, 168, 169, 170, 171, 172, 173, 178, 179, 180, 181, 184, 188, 201, 204, 210, 214, 215, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 235, 236, 237, 239, 240, 241, 243, 244, 245, 246, 247, 248, 249, 251, 253, 257, 259, 261], "absolut": [9, 20, 85, 158, 205, 207, 239, 240, 246, 255], "x_i": [9, 10, 11, 61, 62, 64, 66, 68, 76, 77, 79, 86, 87, 94, 96, 100, 109, 117, 118, 119, 123, 124, 125, 126, 129, 134, 136, 138, 142, 148, 151, 156, 158, 159, 160, 161, 163, 164, 167, 171, 172, 177, 183], "input": [9, 10, 11, 12, 13, 14, 16, 17, 18, 20, 26, 30, 41, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 75, 76, 77, 78, 79, 85, 86, 87, 88, 90, 92, 93, 94, 95, 96, 99, 100, 101, 102, 104, 105, 106, 107, 109, 116, 117, 118, 119, 120, 121, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 187, 188, 196, 201, 203, 206, 208, 210, 211, 215, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 239, 240, 241, 243, 244, 245, 246, 248, 249, 251, 253, 255, 259, 261], "magnitud": [9, 12, 20, 85, 90, 101, 107, 141, 248, 249], "represent": [9, 12, 20, 29, 44, 67, 70, 72, 80, 81, 82, 84, 90, 98, 101, 108, 141, 142, 171, 172, 205, 209, 260], "known": [9, 158, 205, 208, 209], "norm": [9, 217, 219, 221, 222, 223, 225, 226, 227, 228, 230, 239, 253, 255], "modulu": [9, 152], "z": [9, 10, 11, 61, 62, 64, 66, 123, 206], "bj": [9, 12, 79, 90, 141], "comput": [9, 12, 28, 31, 33, 37, 39, 40, 43, 57, 58, 67, 70, 72, 79, 88, 89, 90, 93, 95, 101, 105, 106, 107, 120, 121, 128, 129, 130, 131, 132, 134, 135, 136, 138, 139, 141, 142, 143, 144, 148, 150, 167, 169, 173, 178, 179, 180, 181, 183, 184, 189, 205, 208, 213, 217, 218, 219, 221, 222, 223, 225, 226, 227, 228, 229, 230, 231, 232, 235, 236, 237, 239, 241, 244, 245, 246, 247, 248, 249, 251, 253, 255, 259], "operatornam": [9, 10, 11, 61, 62, 64, 66, 86, 87, 158, 160, 161, 171, 172, 206, 235, 236, 246, 248], "sqrt": [9, 10, 11, 61, 62, 188, 203, 206, 217, 219, 221, 222, 223, 225, 226, 227, 228, 230, 253], "take": [9, 123, 125, 149, 163, 188, 203, 210, 215, 259], "care": [9, 207, 255], "undu": [9, 208], "overflow": [9, 12, 88, 90, 101, 107, 122, 150, 169, 198, 246, 251, 255], "dure": [9, 40, 59, 107, 132, 167, 183, 198, 201, 244, 259, 260], "stage": [9, 107, 256], "contain": [9, 10, 11, 12, 13, 14, 15, 16, 17, 20, 21, 22, 23, 26, 28, 30, 31, 32, 33, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 76, 77, 78, 79, 85, 86, 87, 88, 90, 91, 92, 93, 94, 96, 100, 101, 102, 105, 106, 107, 109, 110, 111, 113, 115, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 156, 157, 158, 159, 160, 161, 163, 164, 167, 168, 169, 171, 172, 173, 175, 176, 177, 178, 179, 180, 181, 183, 184, 186, 189, 205, 206, 207, 209, 213, 214, 218, 219, 220, 223, 224, 227, 229, 230, 231, 232, 233, 234, 235, 236, 237, 239, 240, 241, 243, 244, 245, 246, 247, 248, 249, 251, 253, 259, 261], "nan": [9, 10, 11, 12, 13, 14, 24, 25, 35, 61, 62, 63, 64, 65, 66, 76, 85, 86, 87, 90, 93, 94, 96, 100, 101, 107, 117, 118, 119, 123, 124, 125, 126, 127, 134, 135, 136, 138, 139, 141, 144, 149, 152, 156, 157, 158, 159, 160, 161, 163, 167, 171, 172, 177, 178, 179, 180, 181, 183, 188, 196, 206, 259], "infin": [9, 10, 11, 12, 13, 14, 24, 25, 35, 62, 63, 64, 65, 66, 76, 81, 86, 87, 90, 93, 94, 96, 100, 101, 107, 117, 118, 123, 124, 125, 126, 127, 134, 138, 141, 144, 149, 152, 156, 159, 160, 161, 163, 171, 172, 177, 206, 246, 253], "imag": [9, 10, 11, 12, 24, 62, 63, 66, 87, 93, 94, 96, 117, 118, 119, 122, 123, 125, 144, 156, 158, 161, 163, 172, 188, 203, 204, 259, 260, 261], "finit": [9, 10, 11, 12, 25, 35, 42, 62, 65, 66, 87, 90, 93, 94, 96, 101, 107, 117, 118, 123, 125, 141, 144, 149, 152, 159, 161, 163, 172, 205], "2022": [9, 10, 11, 12, 13, 14, 20, 21, 24, 25, 26, 29, 35, 40, 42, 43, 44, 46, 47, 50, 51, 60, 61, 62, 63, 64, 66, 79, 86, 87, 90, 93, 94, 96, 97, 98, 103, 104, 108, 109, 116, 117, 118, 119, 122, 123, 124, 125, 126, 132, 137, 141, 142, 143, 144, 145, 146, 148, 149, 150, 151, 156, 158, 160, 161, 163, 164, 168, 169, 170, 171, 172, 173, 178, 179, 180, 181, 184, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 235, 236, 237, 239, 240, 241, 243, 244, 245, 246, 247, 248, 249, 251, 253, 258], "12": [9, 10, 11, 12, 13, 14, 20, 21, 24, 25, 26, 29, 35, 40, 42, 43, 44, 46, 47, 50, 51, 60, 61, 62, 63, 64, 66, 79, 86, 87, 90, 93, 94, 96, 97, 98, 102, 103, 104, 108, 109, 116, 117, 118, 119, 122, 123, 124, 125, 126, 132, 137, 141, 142, 143, 144, 145, 146, 148, 149, 150, 151, 156, 158, 160, 161, 163, 164, 168, 169, 170, 171, 172, 173, 178, 179, 180, 181, 184, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 235, 236, 237, 239, 240, 241, 243, 244, 245, 246, 247, 248, 249, 251, 253, 256], "approxim": [10, 11, 47, 61, 62, 64, 65, 66, 86, 87, 94, 96, 101, 123, 124, 125, 126, 149, 160, 161, 171, 172, 205, 241, 244], "princip": [10, 11, 61, 62, 64, 66, 123, 163, 206, 255], "invers": [10, 11, 61, 62, 64, 65, 66, 206, 217, 219, 222, 223, 224, 225, 226, 227, 228, 230, 237, 240, 244, 255], "cosin": [10, 11, 86, 87, 172], "express": [10, 61, 63, 64, 65, 86, 160, 171, 189, 198, 207, 255, 258], "radian": [10, 61, 64, 65, 86, 160, 171], "arc": [10, 61, 64], "frac": [10, 11, 61, 62, 64, 66, 86, 87, 90, 122, 124, 126, 158, 160, 161, 171, 172, 206, 246], "pi": [10, 11, 61, 62, 64, 66, 87, 123, 125, 161, 171, 172, 188], "j": [10, 11, 12, 25, 61, 62, 64, 66, 87, 90, 94, 96, 122, 123, 125, 141, 157, 158, 160, 161, 163, 171, 172, 189, 206, 235, 248, 251], "ln": [10, 11, 61, 62, 64, 66, 123], "zj": [10, 61, 62, 64, 66], "conj": [10, 11, 61, 62, 64, 66, 87, 94, 96, 123, 124, 125, 126, 161, 163, 172, 188, 203], "multi": [10, 11, 61, 62, 64, 66, 188, 206, 209, 210, 232, 261], "branch": [10, 11, 61, 62, 64, 65, 66, 86, 87, 90, 94, 96, 123, 125, 141, 149, 160, 161, 163, 171, 172, 259], "cut": [10, 11, 61, 62, 64, 66, 86, 87, 94, 96, 123, 125, 149, 160, 161, 163, 171, 172, 259], "plane": [10, 11, 61, 62, 64, 66, 86, 87, 90, 94, 96, 141, 160, 161, 163, 171, 172, 259], "By": [10, 11, 13, 14, 61, 62, 64, 65, 66, 88, 123, 125, 134, 136, 138, 149, 150, 163, 167, 169, 183, 184, 205, 206, 232, 255, 260], "place": [10, 11, 15, 60, 61, 62, 63, 64, 66, 91, 92, 97, 102, 103, 104, 122, 145, 146, 155, 186, 187, 188, 196, 198, 203, 207, 210, 218, 229, 244], "line": [10, 11, 61, 62, 64, 66, 171, 172, 198, 206, 259, 260, 261, 262], "segment": [10, 11, 61, 62, 64, 66, 206], "infti": [10, 11, 61, 62, 64, 66, 86, 123, 125, 149, 163, 206], "axi": [10, 11, 13, 14, 16, 17, 18, 61, 62, 64, 66, 78, 88, 95, 99, 123, 125, 134, 136, 138, 140, 149, 150, 155, 162, 163, 165, 166, 167, 169, 170, 173, 174, 182, 183, 184, 188, 203, 217, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 230, 232, 239, 252, 253, 259], "rang": [10, 61, 62, 64, 66, 77, 88, 123, 125, 150, 163, 169, 189, 209, 251, 259], "strip": [10, 61, 62, 64, 66, 123, 125], "unbound": [10, 61, 62, 64, 66, 123, 125], "along": [10, 11, 13, 14, 16, 17, 18, 61, 62, 64, 66, 78, 88, 97, 99, 123, 125, 134, 136, 138, 150, 155, 162, 163, 166, 167, 169, 170, 171, 172, 174, 182, 183, 184, 189, 203, 217, 219, 221, 222, 223, 225, 226, 227, 228, 230, 232, 251, 253, 255], "c99": [10, 11, 61, 62, 64, 66, 90, 123, 125, 141, 149, 163, 206, 256], "provision": [10, 11, 61, 62, 64, 66, 123, 125, 149, 163, 206], "statu": [10, 11, 61, 62, 64, 66, 123, 125, 149, 163, 206], "greater": [10, 11, 33, 38, 48, 61, 62, 65, 66, 69, 71, 77, 85, 90, 100, 101, 123, 125, 149, 152, 158, 159, 161, 163, 165, 172, 188, 189, 217, 219, 221, 222, 223, 225, 226, 227, 228, 230, 232, 240], "than": [10, 11, 19, 26, 38, 40, 47, 48, 49, 55, 61, 62, 63, 65, 66, 69, 71, 76, 77, 85, 88, 90, 98, 99, 100, 101, 102, 123, 124, 125, 126, 132, 141, 149, 150, 152, 158, 159, 161, 163, 165, 167, 169, 170, 172, 177, 178, 179, 180, 181, 183, 189, 198, 201, 204, 207, 210, 211, 214, 217, 219, 221, 222, 223, 225, 226, 227, 228, 230, 232, 239, 240, 241, 244, 251, 253, 255, 256, 259, 261], "less": [10, 11, 39, 47, 61, 65, 66, 76, 85, 90, 101, 123, 124, 125, 126, 149, 152, 158, 159, 163, 167, 183, 188, 189, 207, 217, 219, 221, 222, 223, 225, 226, 227, 228, 230, 239, 240, 241, 244, 253, 259], "\u03c0": [10, 64, 65, 84], "0j": [10, 11, 12, 25, 62, 63, 66, 87, 94, 96, 97, 123, 125, 145, 146, 158, 161, 163, 172, 206, 246], "nonzero": [10, 11, 12, 62, 66, 87, 90, 94, 96, 101, 141, 161, 172, 188, 189, 203, 244], "3\u03c0": [10, 65], "hyperbol": [11, 62, 66, 86, 87, 160, 161, 171, 172, 206], "aco": [11, 61, 188, 203, 205], "simpli": [11, 96, 125, 204, 215, 259, 261], "upper": [11, 77, 97, 176, 231, 245], "half": [11, 15, 66, 122, 140, 163, 173, 189, 220], "area": [11, 62, 66], "sector": [11, 62, 66], "\u03c0j": [11, 62, 66, 123, 125], "3\u03c0j": [11, 123, 125], "sum": [12, 21, 88, 107, 127, 150, 188, 203, 239, 251, 253, 255], "x1_i": [12, 65, 67, 69, 70, 71, 72, 85, 90, 93, 101, 105, 106, 107, 120, 121, 127, 128, 130, 131, 135, 139, 141, 144, 149, 152, 168, 185], "x2_i": [12, 65, 67, 69, 70, 71, 72, 85, 90, 93, 101, 105, 106, 107, 120, 121, 127, 128, 130, 131, 135, 139, 141, 144, 149, 152, 168, 185], "first": [12, 16, 17, 19, 65, 67, 69, 70, 71, 72, 88, 93, 105, 106, 107, 120, 121, 127, 128, 130, 131, 132, 135, 139, 141, 144, 149, 155, 166, 168, 171, 172, 173, 178, 179, 180, 184, 185, 189, 206, 232, 235, 243, 245, 246, 248, 249, 255, 259, 260, 261, 262], "remain": [12, 90, 93, 101, 116, 118, 119, 141, 144, 152, 153, 158, 189, 207, 230], "neither": [12, 40, 90, 101, 132, 141, 173, 248, 260], "nor": [12, 90, 101, 141, 248, 260], "mathemat": [12, 19, 65, 84, 86, 87, 90, 96, 101, 123, 125, 141, 160, 161, 171, 172, 188, 206, 239, 253], "round": [12, 15, 76, 90, 100, 101, 141, 163, 177, 188, 203, 205], "nearest": [12, 90, 141, 156, 177, 205], "mode": [12, 90, 141, 205, 217, 219, 221, 222, 223, 225, 226, 227, 228, 230, 245], "too": [12, 26, 90, 101, 141, 255, 259], "larg": [12, 90, 101, 141, 209, 215, 246, 259], "appropri": [12, 26, 90, 101, 141, 206, 211], "commut": 12, "associ": [12, 42, 141, 191, 198, 241, 244, 247, 255, 258, 260], "tabl": [12, 90, 141, 188], "c": [12, 90, 93, 122, 141, 143, 144, 166, 167, 172, 183, 189, 203, 206, 209, 212, 231, 235, 236, 237, 245, 247, 248, 256, 258, 259, 261], "d": [12, 90, 93, 122, 141, 144, 198, 218, 229], "dj": [12, 90, 141], "independ": [12, 90, 141, 156, 189, 201, 209, 232, 245, 247, 255, 256, 259], "abov": [12, 88, 90, 93, 123, 125, 141, 144, 149, 150, 163, 169, 175, 176, 189, 198, 206, 207, 209, 210, 213, 234, 235, 251, 255, 258, 261], "similarli": [12, 57, 116, 137, 198, 231, 248], "henc": [12, 79, 95, 143, 178, 179, 180, 181, 189, 204, 206, 207, 208, 209, 213, 214, 215, 259, 261], "z1": 12, "z2": 12, "keepdim": [13, 14, 16, 17, 134, 136, 138, 150, 167, 169, 183, 239, 253], "test": [13, 14, 89, 117, 118, 119, 203, 205, 257, 259, 260, 261], "evalu": [13, 14, 22, 30, 36, 38, 41, 44, 45, 46, 48, 51, 52, 94, 96, 123, 124, 125, 126, 142, 148, 158, 159, 164, 201, 259], "union": [13, 14, 15, 21, 22, 26, 28, 30, 31, 32, 33, 37, 38, 39, 41, 42, 43, 45, 47, 48, 49, 50, 51, 52, 59, 60, 75, 77, 78, 91, 98, 99, 103, 104, 108, 115, 116, 122, 134, 136, 138, 140, 145, 150, 154, 155, 165, 166, 167, 169, 173, 183, 186, 220, 224, 239, 241, 244, 253, 260], "ax": [13, 14, 16, 17, 19, 55, 56, 99, 134, 136, 138, 140, 147, 150, 155, 165, 167, 169, 173, 174, 183, 184, 189, 219, 220, 223, 224, 227, 230, 232, 239, 244, 247, 250, 253], "logic": [13, 14, 24, 26, 90, 93, 128, 129, 130, 131, 141, 144, 210, 213, 219, 223, 227, 230], "AND": [13, 24, 67, 93, 128, 258], "entir": [13, 14, 86, 87, 94, 96, 134, 136, 138, 150, 160, 161, 167, 169, 183], "valid": [13, 14, 26, 27, 95, 114, 140, 166, 173, 182, 189, 205, 213, 217, 219, 221, 222, 223, 225, 226, 227, 228, 230, 235, 245, 248, 260], "count": [13, 14, 78, 88, 99, 170, 178, 179, 184, 189, 217, 219, 221, 222, 223, 225, 226, 227, 228, 230, 232, 236], "last": [13, 14, 18, 19, 55, 78, 88, 99, 155, 162, 166, 170, 173, 184, 189, 217, 219, 221, 222, 223, 225, 226, 227, 228, 230, 232, 234, 239, 245, 248, 251], "invalid": [13, 14, 23, 95, 211, 259], "rais": [13, 14, 19, 23, 24, 25, 26, 29, 34, 35, 40, 47, 51, 55, 60, 74, 90, 94, 95, 102, 122, 132, 134, 138, 143, 149, 153, 165, 166, 182, 184, 189, 198, 201, 203, 209, 210, 211, 213, 232, 240, 259], "wa": [13, 14, 19, 26, 101, 134, 136, 138, 150, 167, 169, 183, 198, 210, 215, 259, 261], "OR": [14, 70, 130, 144, 258], "start": [15, 122, 189, 203, 215, 259, 261], "stop": [15, 122, 189, 203, 260], "step": [15, 122, 189, 260], "evenli": [15, 122], "space": [15, 122, 218, 220, 229], "open": [15, 122, 140, 173, 189], "inclus": [15, 189, 259], "end": [15, 65, 86, 122, 158, 160, 171, 172, 196, 207, 246, 259, 260, 261], "exclus": [15, 189], "distanc": [15, 107], "between": [15, 26, 47, 51, 65, 78, 90, 93, 98, 122, 144, 149, 166, 178, 179, 180, 181, 198, 206, 207, 210, 218, 229, 255, 259, 261], "adjac": 15, "output": [15, 60, 63, 78, 88, 91, 92, 95, 97, 99, 102, 103, 104, 111, 122, 137, 145, 146, 153, 155, 157, 165, 166, 170, 174, 186, 187, 201, 203, 206, 207, 210, 212, 213, 215, 217, 219, 221, 222, 223, 226, 227, 228, 230, 251, 259], "infer": [15, 60, 63, 92, 103, 104, 146, 153, 187, 208, 255, 260], "cannot": [15, 26, 57, 102, 171, 172, 203, 206, 208, 259], "guarante": [15, 59, 178, 180, 201, 206, 210, 259, 261], "error": [15, 19, 23, 26, 51, 55, 90, 102, 134, 138, 171, 172, 198, 205, 246, 259], "ceil": [15, 188], "indic": [16, 17, 18, 26, 60, 88, 89, 102, 111, 116, 122, 140, 143, 155, 157, 158, 170, 173, 175, 176, 178, 180, 189, 198, 253, 259], "occur": [16, 17, 75, 107, 171, 172, 178, 179, 180, 181, 206, 260], "occurr": [16, 17, 178], "comparison": [16, 17, 18, 31, 33, 37, 39, 93, 105, 106, 120, 121, 134, 135, 138, 139, 144, 162, 188, 206, 256, 260], "search": [16, 17, 157, 188], "flatten": [16, 17, 78, 155, 178, 179, 180, 181, 253, 255], "descend": [18, 162, 248, 249], "stabl": [18, 162, 209], "sort": [18, 157, 188, 235, 236, 248, 249], "ascend": [18, 157, 162], "stabil": [18, 162], "maintain": [18, 162, 204, 259, 261], "rel": [18, 19, 55, 99, 135, 139, 155, 162, 234, 241, 244, 251], "compar": [18, 162, 178, 179, 180, 181, 205, 210, 260, 262], "properti": [19, 53, 54, 55, 56, 57, 58, 115, 203, 206, 210, 215, 259], "transpos": [19, 40, 55, 132, 133, 173, 231, 235, 244, 248, 255], "instanc": [19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 55, 59, 89, 198, 201, 210], "permut": [19, 55, 147], "revers": [19, 55, 65, 99], "origin": [19, 55, 65, 107, 140, 153, 155, 207, 217, 219, 222, 223, 226, 227, 228, 230, 259, 260], "limit": [19, 98, 108, 116, 205, 255, 258], "matric": [19, 40, 55, 132, 133, 137, 175, 176, 231, 233, 234, 235, 236, 237, 239, 240, 241, 244, 245, 246, 247, 248, 249, 251, 255], "deviat": [19, 167, 205, 211, 259, 261], "et": [19, 248, 249], "al": 19, "intent": [19, 65], "found": [19, 206, 209, 261, 262], "problemat": [19, 63, 204, 207], "conflict": 19, "definit": [19, 86, 87, 160, 161, 171, 172, 231, 260], "batch": [19, 253, 255], "cetera": [19, 248, 249], "permute_dim": [19, 188], "interfac": [19, 209, 255, 259, 261], "ab": [20, 107, 149, 188, 203, 239, 253], "augend": 21, "addend": 21, "self_i": [22, 28, 30, 31, 33, 36, 37, 38, 39, 41, 43, 44, 45, 46, 48, 50, 51, 52], "other_i": [22, 28, 30, 31, 33, 37, 38, 39, 41, 43, 45, 47, 48, 50, 51, 52], "bitwise_and": [22, 188], "api_vers": [23, 259], "object": [23, 24, 25, 26, 29, 34, 35, 53, 57, 59, 60, 89, 98, 102, 108, 110, 112, 113, 114, 188, 189, 198, 201, 203, 207, 209, 210, 213, 215, 254, 256, 260, 261], "2020": [23, 215, 256, 258, 259], "10": [23, 27, 124, 189, 259], "latest": [23, 209], "modul": [23, 201, 256, 260, 261, 262], "everi": [23, 103, 104, 245, 259], "top": [23, 201, 259, 261], "level": [23, 198, 204, 209, 210, 254, 255, 259, 260], "public": [23, 254, 260, 261], "well": [23, 204, 206, 209, 210, 245, 261, 262], "part": [23, 35, 175, 176, 198, 203, 209, 214, 256, 259, 261], "convert": [24, 25, 29, 34, 35, 60, 102, 198, 203, 204, 206, 209, 259, 261], "handl": [24, 26, 61, 64, 86, 88, 102, 124, 126, 149, 150, 158, 160, 164, 169, 171, 204, 206, 207, 210, 211, 251, 259], "lazi": [24, 25, 29, 34, 35, 201, 212, 261], "languag": [24, 25, 29, 34, 35, 207, 211, 213, 255, 259, 261], "therefor": [24, 25, 29, 34, 35, 201, 209, 210, 211, 213, 215, 256, 259, 261], "abl": [24, 25, 29, 34, 35, 102, 207, 209, 210, 259, 261], "kind": [24, 25, 26, 29, 34, 35, 47, 51, 77, 90, 98, 102, 104, 108, 113, 115, 116, 149, 198, 203, 213, 255, 258], "here": [24, 25, 26, 29, 34, 35, 189, 198, 207, 209, 214, 215, 261], "valueerror": [24, 25, 26, 29, 34, 35, 60, 102, 153, 165, 261], "instead": [24, 25, 29, 34, 35, 63, 206, 209, 213, 260, 261], "new": [25, 26, 79, 95, 98, 102, 103, 104, 108, 109, 116, 140, 145, 146, 151, 153, 166, 170, 186, 187, 201, 203, 204, 207, 209, 210, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 256, 259, 260, 261], "stream": [26, 59, 210], "max_vers": 26, "dl_devic": 26, "enum": [26, 27], "pycapsul": 26, "export": [26, 102, 203, 209, 260], "from_dlpack": [26, 27, 188, 209], "dlpack": [26, 27, 102, 203], "capsul": 26, "cuda": [26, 27, 204, 209, 261], "rocm": [26, 27, 204], "pointer": 26, "produc": [26, 235, 245, 248, 261], "instruct": 26, "safe": [26, 122], "insert": [26, 95, 157], "wait": 26, "event": [26, 258], "larger": [26, 98, 155, 167, 183, 244], "below": [26, 101, 102, 175, 176, 191, 209, 210, 234, 251], "signal": [26, 221, 225, 261], "ownership": 26, "stai": 26, "On": 26, "cpu": [26, 27, 201, 204, 209, 210, 255, 259, 261], "queue": [26, 59, 210], "similar": [26, 152, 189, 204, 206, 208, 259, 260, 261], "mechan": [26, 102, 201, 203, 204, 212, 254, 259], "most": [26, 201, 210, 235, 255, 259, 261], "yet": [26, 215, 259], "sycl": 26, "want": [26, 90, 141, 204, 208, 209, 259, 261, 262], "cl": 26, "agre": 26, "assum": [26, 86, 102, 160, 171, 201, 206, 210, 254, 259], "legaci": 26, "per": [26, 204, 209, 257], "thread": [26, 259, 261], "disallow": 26, "due": [26, 42, 57, 58, 122, 141, 170, 205, 206, 255, 259], "ambigu": [26, 63, 101, 207], "construct": [26, 174, 201, 204, 213, 259], "particular": [26, 189, 204, 206, 209, 210, 215, 255, 258, 259, 261, 262], "kdlcpu": 26, "safeti": [26, 59], "prefer": [26, 101, 201, 255, 261], "develop": [26, 205, 259, 260, 261, 262], "who": [26, 205, 259, 260], "think": 26, "cost": 26, "caller": 26, "major": [26, 143, 189, 256], "minor": [26, 256], "verifi": [26, 259], "even": [26, 90, 141, 149, 156, 205, 206, 207, 218, 220, 224, 229, 245, 255, 259, 261], "pass": [26, 65, 201, 205, 210], "format": [26, 27, 256], "__dlpack_device__": [26, 102, 188, 209], "buffererror": [26, 102, 203, 209], "v2023": [26, 102], "mandat": [26, 102, 259], "offer": [26, 102, 204, 209, 210, 214, 259, 261], "referenc": [26, 259], "underli": [26, 67, 70, 72, 102, 205, 246, 255], "interpret": [26, 102, 107, 206, 207, 262], "enumer": 26, "made": [26, 102, 201, 206, 254, 256, 259, 261], "never": [26, 60, 102, 153, 209, 259], "deem": [26, 102], "cross": [26, 102, 203, 210, 255, 259], "movement": [26, 102], "request": [26, 102, 259], "reus": [26, 60, 102, 207, 259], "buffer": [26, 60, 102, 207, 209], "happen": [26, 102, 207, 210, 213, 255], "dlpack_flag_bitmask_is_copi": 26, "flag": 26, "understood": [26, 198], "interchang": [26, 102, 201, 204, 212, 259], "detail": [26, 102, 143, 178, 179, 180, 181, 188, 189, 200, 201, 208, 210, 214, 255, 259, 261], "stride": [26, 102, 207, 209], "fail": [26, 102, 259], "reason": [26, 102, 152, 172, 207, 209, 211, 255, 259, 260], "incorrect": 26, "scheme": [26, 256], "semver": 26, "abi": [26, 204, 209], "break": [26, 211], "introduc": [26, 63, 101, 155, 215, 260], "goe": 26, "togeth": [26, 198, 209], "dlmanagedtensorvers": 26, "struct": 26, "later": 26, "introduct": 26, "becaus": [26, 198, 204, 207, 210, 211, 213, 215, 235, 248, 259, 261, 262], "keep": [26, 198, 204, 259], "march": 26, "2025": 26, "onward": 26, "ideal": [26, 255], "late": 26, "okai": 26, "we": [26, 206, 248, 259], "get": [26, 98, 108, 204, 207, 209, 210], "now": [26, 102, 213, 259, 261], "our_own_dlpack_vers": 26, "fill": [26, 103, 104, 145, 146, 186, 187, 203], "field": [26, 178, 179, 180, 206, 235, 245, 246, 248, 259], "understand": [26, 244, 259, 260], "u": [26, 231, 244, 248], "just": [26, 259, 261], "our": 26, "elif": 26, "fine": [26, 215, 259], "own": [26, 201, 207, 259], "re": [26, 155, 204, 207, 215, 261], "intern": [26, 261], "did": 26, "older": [26, 172, 209, 256, 259], "around": [26, 260], "y": [26, 65, 102, 206, 207, 261], "dlmanagedtensor": 26, "so": [26, 98, 102, 110, 189, 196, 209, 255, 258, 259, 262], "tell": 26, "old": 26, "exchang": [26, 102, 209], "And": [26, 189, 210], "try": [26, 215, 259], "succe": 26, "info": [26, 110], "dltensor_vers": 26, "need": [26, 189, 204, 205, 207, 209, 211, 215, 255, 256, 259, 260, 261, 262], "used_dltensor_vers": 26, "done": [26, 201], "typeerror": [26, 29, 34, 35, 259, 261], "read": [26, 207], "dlpack_flag_bitmask_read_onli": 26, "ignor": [26, 137, 255], "respons": 26, "isn": [26, 204], "t": [26, 188, 204, 207, 210, 214, 215, 259, 261], "2023": [26, 102], "id": 27, "meant": 27, "device_typ": 27, "device_id": 27, "member": 27, "cpu_pin": 27, "opencl": 27, "vulkan": 27, "metal": 27, "vpi": 27, "cuda_manag": 27, "13": 27, "one_api": 27, "14": [27, 256], "truth": [28, 31, 33, 37, 39, 43, 89, 93, 105, 106, 120, 121, 144, 262], "outsid": [29, 166, 182, 189, 198, 203, 209], "bound": [29, 77, 170, 189, 198, 215], "divis": [30, 41, 71, 90, 101, 152, 158, 206], "floor_divid": [30, 188], "greater_equ": [31, 188], "kei": [32, 49, 111, 113, 115, 259], "slice": [32, 49, 182, 188, 207], "ellipsi": [32, 49, 189], "pep": [34, 40, 101, 132, 209, 256], "357": 34, "overflowerror": 35, "bitwise_invert": [36, 188], "less_equ": [37, 188], "bitwise_left_shift": [38, 188], "matrix": [40, 55, 132, 133, 137, 173, 175, 176, 231, 233, 234, 235, 236, 237, 239, 240, 241, 244, 245, 246, 247, 248, 249, 251, 255, 259], "product": [40, 42, 58, 132, 141, 150, 173, 184, 232, 243, 255], "semant": [40, 101, 132, 152, 170, 188, 189, 201, 207, 209, 211, 213, 214, 255, 259, 260, 261], "built": [40, 132, 189, 198, 259], "465": [40, 132], "least": [40, 90, 115, 116, 132, 141, 143, 178, 179, 180, 181, 204, 205, 244], "m": [40, 55, 132, 133, 137, 157, 173, 174, 175, 176, 189, 217, 219, 221, 222, 223, 225, 226, 227, 228, 230, 231, 233, 234, 235, 236, 237, 239, 240, 241, 243, 244, 245, 246, 247, 248, 249, 251], "remov": [40, 132, 165, 189, 206, 234, 251], "innermost": [40, 132, 133, 175, 176, 231, 233, 234, 235, 236, 237, 239, 240, 241, 244, 245, 246, 247, 248, 249, 251], "conjug": [40, 79, 132, 173, 184, 203, 231, 235, 248, 255], "transposit": [40, 132, 173], "desir": [40, 63, 75, 132, 140, 173, 205, 206, 209, 215], "prior": [40, 132, 173], "inner": [40, 132, 235, 255], "stack": [40, 55, 132, 133, 175, 176, 188, 214, 231, 233, 234, 235, 236, 237, 239, 240, 241, 244, 245, 246, 247, 248, 249, 251, 255], "l": [40, 132, 231, 251], "remaind": [41, 188, 189], "multipli": [42, 150, 164, 188, 203, 205, 235, 248], "not_equ": [43, 188, 203], "negat": [44, 79, 142], "bitwise_or": [45, 188], "exponenti": [47, 94, 96, 127, 149, 206], "power": [47, 71, 94, 149, 206, 240, 261], "expon": [47, 149, 240], "versu": [47, 51, 63, 77, 90, 141, 149], "bitwise_right_shift": [48, 188], "mix": [49, 122, 136, 154, 167, 183, 188, 203, 207, 210, 255, 259], "how": [49, 90, 141, 201, 205, 210, 214, 260, 261, 262], "minuend": 50, "subtrahend": 50, "subtract": [50, 188, 203, 205], "choos": [51, 57, 59, 90, 101, 122, 128, 129, 130, 131, 134, 136, 138, 141, 143, 167, 178, 179, 180, 181, 183, 188, 189, 196, 206, 207, 208, 210, 213, 259, 261], "divid": [51, 101, 158, 188, 189, 203, 205], "bitwise_xor": [52, 188], "resid": [53, 59, 95, 140, 173, 189, 209, 259], "fewer": 55, "unknown": [57, 58], "graph": [57, 58, 143, 178, 179, 180, 181, 189, 208, 213, 259], "static": [57, 208, 212], "resolv": [57, 60, 88, 95, 101, 103, 104, 150, 169, 219, 220, 223, 224, 227, 230, 251, 259], "know": [57, 143, 178, 179, 180, 181, 201, 204, 205, 208, 259, 261], "content": [57, 208, 258], "warrant": 57, "custom": [57, 204, 211], "immut": 57, "retriev": [57, 189, 201, 216, 255, 261], "behav": [57, 206], "current": [59, 113, 115, 170, 196, 207, 210, 215, 259, 260, 261], "__dlpack__": [59, 102, 188, 203, 209], "caveat": 59, "would": [59, 60, 153, 157, 189, 207, 213, 255, 259, 261], "locat": [59, 207], "explicit": [59, 60, 102, 170, 173, 210, 261], "enqueu": 59, "asynchron": 59, "explain": [59, 204], "obj": 60, "nestedsequ": 60, "supportsbufferprotocol": 60, "possibli": [60, 214, 259], "nest": [60, 214], "sequenc": [60, 78, 122, 166, 173, 182, 189, 219, 220, 223, 224, 227, 230, 250], "protocol": [60, 201, 209, 215, 259, 261], "turn": [60, 201, 254], "memoryview": 60, "preced": [60, 206, 209, 210], "mixtur": 60, "convers": [60, 122, 203, 204, 259], "obei": [60, 122], "permit": [60, 63, 122, 208, 258], "To": [60, 101, 189, 203, 205, 206, 215, 259, 260, 262], "array_api": [60, 259], "astyp": [60, 188, 203], "exce": [60, 103, 104, 122], "sine": [61, 62, 160, 161, 172], "1j": [61, 64, 86, 87, 94, 96, 107, 160, 161, 171], "asinh": [61, 188, 203, 205], "asin": [62, 188, 203, 205], "irrespect": [63, 206], "histor": [63, 172, 255], "discard": 63, "choic": [63, 167, 183, 201, 205, 206, 210, 211, 213, 214, 255, 256, 259, 261], "arbitrari": [63, 73, 137, 154, 205], "achiev": [63, 189, 205], "outcom": 63, "clariti": 63, "newli": [63, 210], "alloc": [63, 175, 176, 208, 210], "tangent": [64, 65, 66, 171, 172], "atanh": [64, 188, 203, 205], "quotient": [65, 90, 101, 189], "domain": [65, 203, 205, 206, 259, 261], "notat": 65, "denot": [65, 184, 244], "pair": [65, 101, 232, 248], "codomain": 65, "quadrant": 65, "chosen": [65, 185, 209], "angl": [65, 87, 107, 161, 172], "rai": 65, "role": 65, "coordin": [65, 123, 137, 171, 172, 214, 259], "tradit": 65, "atan": [66, 188, 203, 205], "bitwis": [67, 70, 72, 188], "flip": [68, 188], "shift": [69, 71, 155, 220, 224], "arithmet": [71, 90, 136, 141, 188, 198, 206, 259], "propag": [71, 102, 134, 136, 138, 167, 183, 205], "floor": [71, 101, 188], "anoth": [73, 75, 102, 189, 201, 204, 206, 207, 209, 210, 213, 235, 248, 259, 261], "from_": 75, "smallest": [76, 98, 108, 239], "closest": [76, 100, 101, 156], "alreadi": [76, 100, 141, 156, 177, 209, 211, 256, 261], "min": [77, 98, 108, 175, 176, 184, 188, 232, 239, 245, 248, 249, 253], "clamp": 77, "join": [78, 166, 198], "befor": [78, 88, 150, 157, 169, 178, 179, 180, 181, 184, 206, 232, 251, 259], "concaten": 78, "leav": [78, 140, 166, 189, 196, 205, 207, 244], "famili": [78, 166], "intxx": [78, 166, 198], "floatxx": [78, 166, 198], "718281828459045": 80, "euler": 80, "constant": [80, 84, 188, 189], "71828182845904523536028747135266249775724709369995": 80, "Not": 82, "alia": [83, 115, 189, 238, 242, 250, 252], "141592653589793": 84, "1415926535897932384626433": 84, "compos": [85, 198], "begin": [86, 158, 160, 171, 172, 189, 196, 246, 261], "align": [86, 160, 171, 172, 203, 205, 260], "sum_": [86, 184], "2n": [86, 123], "jx": [86, 160, 171], "cosh": [86, 172, 188, 203, 205], "period": [87, 161, 171, 172], "ci": [87, 94, 96, 161, 261], "v": [87, 94, 96, 157, 161, 212, 244, 248, 259], "co": [87, 94, 96, 161, 188, 203, 205], "sin": [87, 94, 96, 161, 188, 203, 205, 207, 215], "include_initi": 88, "cumul": 88, "unless": [88, 141, 150, 169, 188, 251], "smaller": [88, 150, 155, 169, 251, 261], "latter": [88, 101, 150, 169, 189, 201, 206, 209, 251, 260], "help": [88, 150, 169, 204, 205, 214, 251], "prevent": [88, 150, 169, 251], "initi": [88, 207, 259], "ident": [88, 184, 206, 224, 236, 237, 240, 259], "success": [88, 150, 169, 251], "dividend": [90, 101, 152], "divisor": [90, 101, 152, 167, 183], "small": [90, 101, 141, 205, 241, 244, 246, 259, 261], "gener": [90, 122, 141, 152, 173, 201, 204, 206, 211, 255, 259, 260], "textbook": [90, 141], "formula": [90, 124, 126, 141], "ac": [90, 141, 206], "bd": [90, 141], "bc": [90, 141, 206], "riemann": [90, 141, 206], "sphere": [90, 141, 206], "infinit": [90, 141, 163, 205, 206], "usual": [90, 141, 259], "interest": [90, 141, 205], "unlik": [90, 141, 256, 259], "consist": [90, 101, 115, 116, 122, 141, 157, 173, 189, 196, 206, 210, 215, 226, 227, 228, 230, 235, 244, 255, 259], "uniniti": [91, 92], "deriv": [92, 104, 146, 187, 189, 211, 260], "natur": [94, 123, 124, 125, 126, 149, 246, 255], "logarithm": [94, 123, 124, 125, 126, 127, 149, 246, 255], "expand": [95, 189, 261], "close": [95, 96, 122, 125, 156, 189, 259, 261], "indexerror": [95, 189], "exp": [96, 127, 149, 188, 203, 205, 246], "accur": [96, 125, 205, 246], "fdlibm": [96, 125, 205], "n_row": 97, "n_col": 97, "ones": [97, 146, 174, 188, 203, 207, 211, 259], "diagon": [97, 175, 176, 235, 244, 245, 251, 255], "elsewher": [97, 185, 206], "row": [97, 143, 189, 239, 245, 247, 248], "column": [97, 235, 239, 245, 247, 248, 259], "finfo_object": 98, "machin": [98, 108, 241, 244, 259], "inform": [98, 108, 259, 260, 261, 262], "occupi": [98, 108], "ep": [98, 241, 244, 259], "next": [98, 259], "largest": [98, 108, 239, 248, 249], "smallest_norm": 98, "full": [98, 188, 203, 207, 245, 247, 248, 261], "preserv": [99, 157, 189, 206, 210], "reorder": [99, 140], "greatest": [100, 101], "238": 101, "goal": [101, 204, 207, 255, 261], "disambigu": 101, "toward": [101, 155, 205, 255, 260], "former": [101, 189, 206, 260], "overload": [101, 255], "led": 101, "subtl": 101, "bug": [101, 261, 262], "expect": [101, 115, 172, 198, 205, 206, 208, 209, 210, 211, 215, 259], "design": [101, 205, 257, 259, 261, 262], "ill": [101, 255], "diverg": [101, 262], "strictli": 101, "relat": [101, 189, 206, 210, 214, 255, 259, 261], "surpris": [101, 206], "unexpect": [101, 206, 211, 259], "enough": [102, 201, 204, 215, 254, 256, 259], "materi": [102, 209], "attributeerror": [102, 209], "present": [102, 115, 207, 208, 210, 254, 255, 256, 259], "suggest": [102, 261], "correctli": [102, 205], "move": [102, 140, 210, 261], "agnost": 102, "fashion": 102, "illustr": [102, 207, 215], "def": [102, 215, 259, 260, 261], "func": 102, "xp_x": 102, "__array_namespace__": [102, 188, 216, 255, 259], "xp_y": 102, "work": [102, 204, 207, 209, 215, 259, 261, 262], "xxxxx": 102, "fill_valu": [103, 104], "squar": [107, 163, 188, 203, 206, 231, 233, 235, 236, 237, 240, 244, 246, 247, 255], "root": [107, 163, 206, 236], "hypotenus": 107, "triangl": 107, "side": [107, 157, 189, 209], "naiv": 107, "correct": [107, 167, 183, 207], "iinfo_object": 108, "inspect": [110, 188], "util": [110, 188, 191, 256, 259, 260], "class": [110, 191, 215, 259, 260], "xp": [110, 216, 254, 255, 259], "capabl": [110, 188, 191], "default_dtyp": [110, 188], "dictionari": [111, 113, 115], "fulli": [111, 210], "complianc": 111, "exclud": [111, 122, 189, 198], "demarc": [111, 208], "throughout": 111, "defaultdatatyp": 113, "concept": [113, 115, 189, 207, 259], "context": [113, 115, 206, 210, 260], "manag": [113, 115, 204, 210], "runtim": [114, 214, 215, 256, 259, 261], "creation": [114, 188, 201, 210, 259], "datatyp": 115, "decid": [115, 259], "belong": [115, 116, 207], "shorthand": [115, 116, 189], "canon": 115, "float16": 116, "bfloat16": [116, 259], "int128": 116, "short": [116, 206, 259, 260], "extend": [116, 189, 206, 259], "extens": [116, 257, 261], "num": 122, "endpoint": 122, "delta_": 122, "textrm": [122, 158, 246], "sampl": [122, 167, 183, 218, 224, 229, 260], "nonneg": [122, 173, 189], "concern": [122, 170, 210, 214, 259], "polar": 123, "r": [123, 174, 189, 231, 235, 236, 237, 245, 247, 248, 259, 261], "theta": 123, "continu": [123, 125, 149, 163, 206, 235, 248, 259], "account": [123, 125, 149, 163, 259], "log_": [124, 126], "log": [124, 125, 126, 127, 149, 188, 203, 205], "mxn": [133, 175, 176, 234, 239, 241, 244, 245, 251], "sentinel": [134, 138], "xy": 137, "grid": 137, "cartesian": 137, "ij": 137, "effect": [137, 167, 183, 210, 262], "ni": 137, "n3": 137, "nn": 137, "three": [137, 210], "p": [137, 236, 239, 253], "sourc": [140, 260, 262], "destin": 140, "uniqu": [140, 173, 178, 179, 180, 181, 206, 219, 220, 223, 224, 227, 230, 235, 237, 245, 247, 248, 255], "state": [141, 188, 189, 259], "cdot": [141, 160, 164, 171, 184], "y_i": [142, 148], "build": [143, 178, 179, 180, 181, 189, 201, 208, 214, 259], "jax": [143, 178, 179, 180, 181, 189, 207, 208, 259, 260, 261], "dask": [143, 178, 179, 180, 181, 189, 207, 208, 214, 259, 260, 261], "etc": [143, 178, 179, 180, 181, 189, 208, 256], "find": [143, 157, 178, 179, 180, 181, 189, 208, 259, 260], "difficult": [143, 178, 179, 180, 181, 189, 205, 208, 259], "omit": [143, 178, 179, 180, 181, 189, 208, 209, 213], "section": [143, 178, 179, 180, 181, 189, 203, 204, 208, 209, 210, 211, 215, 259, 261], "typl": 143, "total": [143, 167, 183, 206], "style": [143, 189], "odd": [149, 218, 224, 226, 227, 229], "treat": [149, 174], "carefulli": 149, "That": [152, 189, 201, 211, 215, 259], "primarili": 152, "One": [153, 213, 259, 262], "arrays_and_dtyp": 154, "restor": 155, "counterpart": 156, "liter": [157, 217, 219, 221, 222, 223, 225, 226, 227, 228, 230, 239, 245, 253], "sorter": 157, "control": [157, 210, 213, 214], "land": 157, "exactli": [157, 171, 172], "edg": 157, "satisfi": [157, 174, 188, 189, 205, 206, 260], "condit": [157, 185, 213, 258], "what": [157, 201, 209, 211, 215, 255, 259, 260, 261, 262], "constitut": [157, 167, 183], "among": [157, 205, 206, 255], "argsort": [157, 188], "invok": [157, 260], "signum": 158, "whenev": [159, 261], "2j": 160, "sinh": [160, 172, 188, 203, 205], "indistinguish": [163, 189, 205], "degre": [167, 183, 236, 255], "freedom": [167, 183], "adjust": [167, 183, 259], "popul": [167, 183], "bessel": [167, 183, 204], "conceptu": 170, "regard": [170, 203, 211, 255, 261], "mutat": 170, "check": [170, 189, 205, 231, 235, 236, 245, 247, 254, 261, 262], "select": [170, 189, 259], "analyt": [171, 172, 206], "pole": [171, 172], "tanh": [171, 188, 203, 205], "stem": [172, 235, 248], "patch": 172, "advis": [172, 207, 255], "tensor": [173, 255, 259, 261], "contract": [173, 184, 255, 258], "outer": [173, 203], "dot": [173, 184, 255], "x1_ax": 173, "x2_ax": 173, "repetit": 174, "triangular": [175, 176, 231, 245], "closer": 177, "reconstruct": [178, 180], "distinct": [178, 179, 180, 181, 206, 255], "inverse_indic": [178, 180], "exact": [178, 180, 215], "aggreg": [178, 179], "namedtupl": [178, 179, 180, 235, 245, 246, 248, 255], "third": [178, 248], "fourth": 178, "split": 182, "varianc": 183, "unbias": 183, "mathbf": 184, "overlin": [184, 244], "a_i": 184, "b_i": 184, "yield": [185, 206], "signatur": [188, 201, 215, 259, 260], "subset": [188, 205, 260, 261], "categori": 188, "accuraci": [188, 212, 217, 219, 222, 223, 226, 227, 228, 230], "reflect": 188, "mt": 188, "__abs__": [188, 203], "__bool__": [188, 203, 213], "__complex__": [188, 203, 213], "__float__": [188, 203, 213], "__getitem__": [188, 189], "__index__": [188, 213], "__int__": [188, 203, 213], "to_devic": [188, 210], "overview": 188, "algorithm": [188, 205, 246, 261], "inf": [188, 239, 253, 259], "newaxi": [188, 189], "arang": [188, 260], "asarrai": [188, 203, 209, 261], "empty_lik": 188, "ey": [188, 203], "full_lik": [188, 203], "linspac": [188, 203], "meshgrid": [188, 203], "ones_lik": [188, 203], "tril": 188, "triu": 188, "zeros_lik": 188, "can_cast": 188, "finfo": [188, 203], "iinfo": [188, 203], "result_typ": 188, "acosh": [188, 203, 205], "atan2": [188, 205], "clip": [188, 189], "copysign": 188, "expm1": [188, 203, 205], "hypot": 188, "isfinit": [188, 203], "isinf": [188, 203], "isnan": [188, 203], "log1p": [188, 203, 205], "log2": [188, 203, 205], "log10": [188, 203, 205], "logaddexp": 188, "logical_and": 188, "logical_not": 188, "logical_or": 188, "logical_xor": 188, "signbit": 188, "tan": [188, 203, 205], "trunc": [188, 203], "syntax": [188, 207, 209, 211, 259], "__array_namespace_info__": [188, 191], "default_devic": 188, "linear": [188, 206, 247, 254], "algebra": [188, 206, 244, 254], "matrix_transpos": [188, 255], "tensordot": [188, 203, 255], "vecdot": [188, 203, 255], "manipul": 188, "broadcast_arrai": 188, "broadcast_to": 188, "concat": 188, "expand_dim": [188, 189], "moveaxi": 188, "reshap": [188, 189], "roll": 188, "squeez": 188, "tile": 188, "unstack": 188, "argmax": 188, "argmin": 188, "searchsort": 188, "unique_al": [188, 203], "unique_count": [188, 203], "unique_invers": [188, 203], "unique_valu": [188, 203], "statist": 188, "cumulative_sum": 188, "prod": [188, 203, 219, 223, 227, 230], "__array_api_version__": [188, 200, 203, 256], "syntact": 189, "sugar": 189, "term": [189, 210, 255, 260], "colon": 189, "contrast": [189, 206, 213, 255], "combin": [189, 207, 214, 255], "basic": 189, "noth": 189, "perspect": 189, "item": [189, 207, 259], "2k": 189, "3k": 189, "q": [189, 235, 245], "obtain": [189, 258], "qk": 189, "being": [189, 209, 210, 255, 259, 262], "100": [189, 213, 256], "junk": 189, "consider": [189, 207, 255], "comma": 189, "separ": [189, 203, 209, 254], "exp1": 189, "exp2": 189, "expn": 189, "forth": 189, "decreas": [189, 255], "entri": [189, 219, 220, 223, 224, 227, 230, 259], "retain": 189, "invoc": 189, "manner": [189, 209, 211], "sympi": 189, "flat": 189, "attempt": [189, 205, 206, 207, 210, 211, 259, 261], "dynam": 189, "mask": [189, 259], "filter": 189, "s1": 189, "sm": 189, "s2": 189, "sn": 189, "prohibit": [189, 207], "replac": [189, 213, 244, 262], "iter": 189, "programmat": 191, "queri": 191, "reli": [196, 204, 206, 208, 215, 261], "them": [196, 204, 207, 211, 259, 261], "reproduc": [196, 205], "high": [198, 209, 210, 255, 259], "diagram": [198, 259], "lattic": 198, "particip": [198, 206], "matter": [198, 204, 206], "dash": 198, "undefin": [198, 255], "connect": [198, 258], "rather": [198, 201, 204, 210, 211, 214, 255, 259], "i2": 198, "i1": 198, "i4": 198, "i8": 198, "u1": 198, "u2": 198, "u4": 198, "u8": 198, "f8": 198, "c8": 198, "c16": 198, "regardless": 198, "subject": [198, 246, 258], "met": 198, "give": [198, 206, 209, 210], "No": [201, 256], "run": [201, 260, 261], "varieti": 201, "architectur": 201, "gpu": [201, 209, 210, 261], "distribut": [201, 205, 209, 210, 214, 258], "system": [201, 247, 259], "tpu": [201, 209], "emerg": [201, 209, 259], "instal": [201, 259, 262], "emploi": [201, 208, 210], "parallel": [201, 212, 259, 261], "jit": [201, 204, 259], "put": [201, 259, 261], "constraint": [201, 206, 257], "predict": 201, "itself": [201, 209, 213, 261], "motiv": 201, "importantli": 201, "awar": [201, 215, 261], "layer": [201, 214, 259, 261], "coupl": 201, "downstream": [201, 254, 259, 260], "import": [201, 204, 210, 213, 254, 255, 259, 261, 262], "structur": [201, 215, 259, 260], "interoper": [201, 209], "share": [201, 259], "though": [201, 215, 259, 261], "soft": 201, "arraylib_nam": 201, "constrain": [201, 205], "unwil": 201, "signific": [201, 205, 207, 259], "adopt": [201, 206, 209, 261], "primari": [201, 209], "write": [201, 207, 259, 261], "consequ": [201, 215, 259], "easi": [201, 254], "unambigu": [201, 207, 209, 260], "clear": [201, 207, 209, 259, 261], "significantli": 201, "detract": 201, "experi": [201, 256], "strict": [201, 207], "typic": [201, 207, 209, 211, 256, 259, 261, 262], "good": [201, 204, 207, 210, 215, 259], "anyth": [201, 259], "thin": 201, "conveni": 201, "plan": [202, 259], "previou": [203, 261], "gh": [203, 261], "497": 203, "498": 203, "546": 203, "525": 203, "528": 203, "557": 203, "529": 203, "448": 203, "447": 203, "537": 203, "526": 203, "554": 203, "517": 203, "520": 203, "521": 203, "522": 203, "523": 203, "524": 203, "442": 203, "434": 203, "445": 203, "454": 203, "453": 203, "436": 203, "451": 203, "452": 203, "484": 203, "435": 203, "531": 203, "530": 203, "532": 203, "568": 203, "514": 203, "534": 203, "536": 203, "437": 203, "441": 203, "438": 203, "553": 203, "440": [203, 256], "556": 203, "457": 203, "456": 203, "552": 203, "461": 203, "538": 203, "459": 203, "458": 203, "558": 203, "540": 203, "512": 203, "470": 203, "linalg": [203, 254, 255], "417": 203, "trace": [203, 207, 255, 260], "502": 203, "choleski": [203, 255], "443": 203, "559": 203, "det": [203, 236, 246], "542": 203, "eigh": [203, 255], "543": 203, "eigvalsh": 203, "547": 203, "matrix_norm": 203, "565": 203, "matrix_pow": 203, "549": 203, "matrix_rank": 203, "563": 203, "560": 203, "pinv": 203, "564": 203, "qr": 203, "548": 203, "slogdet": [203, 255], "567": 203, "solv": [203, 215, 244], "566": 203, "svd": [203, 244], "561": 203, "svdval": 203, "562": 203, "541": 203, "vector_norm": 203, "550": [203, 261], "418": 203, "491": 203, "513": 203, "variabl": [203, 214, 247, 262], "515": 203, "527": 203, "573": 203, "480": 203, "485": 203, "496": 203, "503": 203, "427": 203, "416": 203, "fft": [203, 216, 219, 221, 222, 223, 225, 226, 227, 228, 230], "fast": 203, "fourier": [203, 217, 218, 219, 221, 222, 223, 225, 226, 227, 228, 229, 230, 254], "transform": [203, 217, 218, 219, 221, 222, 223, 225, 226, 227, 228, 229, 230, 254, 260], "189": 203, "ifft": [203, 217], "fftn": [203, 223], "ifftn": [203, 219], "rfft": [203, 226, 229], "rfftn": [203, 227], "irfft": [203, 228, 229], "irfttn": 203, "fftfreq": 203, "rfftfreq": 203, "fftshift": [203, 224], "ifftshift": 203, "fix": [203, 210, 259, 261], "clarif": 203, "miss": [203, 259], "464": 203, "clarifi": 203, "429": 203, "typo": 203, "439": 203, "572": 203, "510": 203, "511": 203, "473": 203, "scope": [204, 213, 214, 257, 260], "mention": [204, 211, 261], "There": [204, 207, 209, 210, 215, 259, 261, 262], "direct": [204, 259, 260], "deal": [204, 214, 215, 256, 258], "issu": [204, 206, 207, 209, 210, 214, 259, 261], "assumpt": [204, 209, 256, 257, 259], "rest": [204, 259, 261], "ndarrai": [204, 209, 259, 261], "visual": 204, "often": [204, 206, 211, 255, 259, 260, 261], "difficulti": [204, 208], "relev": [204, 210, 215, 259], "certainti": 204, "inde": 204, "project": [204, 206, 209, 261], "statsmodel": 204, "scikit": [204, 214, 259, 260, 261], "bio": [204, 261], "qutip": 204, "strategi": [204, 210], "learn": [204, 214, 259, 260, 261], "submodul": [204, 254], "doesn": [204, 210, 259], "cupi": [204, 207, 259, 260, 261], "elementwisekernel": 204, "scipi": [204, 214, 259, 260], "astropi": [204, 261], "seem": [204, 209, 261], "almost": [204, 261], "inevit": 204, "someth": [204, 207, 259], "numba": [204, 209, 259, 261], "sens": [204, 213, 259, 261], "tend": [204, 207, 261], "reimplement": 204, "gamma": 204, "drop": [204, 215, 245, 248], "arraylib": 204, "cpython": 204, "backend": [204, 214, 259], "target": [204, 210], "better": [204, 261], "pypi": [204, 260, 261], "quit": [204, 259, 261], "readi": 204, "mainstream": 204, "todai": [204, 207, 255], "onc": [204, 256], "feasibl": [204, 259], "roundtiestoeven": 205, "ti": [205, 255, 259], "certain": [205, 206, 255], "boundari": 205, "reader": 205, "identifi": [205, 210, 260], "lack": 205, "phrase": [205, 211], "recogn": [205, 210], "seek": [205, 255, 260], "optim": [205, 207, 255, 261], "latitud": 205, "although": [205, 224, 246], "freeli": 205, "sun": 205, "microsystem": 205, "With": [205, 260, 261], "imposs": [205, 207, 208, 262], "suit": [205, 257, 259, 260], "span": 205, "report": 205, "averag": 205, "aid": [205, 262], "best": [205, 209, 255, 259], "effort": [205, 260], "theoret": 205, "sound": 205, "robust": 205, "bare": 205, "summat": [205, 255], "unfortun": 205, "impos": [205, 208], "rigor": 205, "sever": [205, 207, 256, 259], "curtail": 205, "unduli": 205, "topologi": 206, "continuum": 206, "onto": [206, 207], "surfac": [206, 259], "stereograph": 206, "coalesc": 206, "3j": 206, "4j": 206, "convei": 206, "niceti": 206, "translat": [206, 261], "neq": 206, "arriv": [206, 259], "opposit": 206, "subtleti": 206, "craft": 206, "intuit": 206, "julia": [206, 261], "minim": [206, 210], "imperfect": 206, "balanc": 206, "appear": [206, 256, 259, 262], "embrac": 206, "transcendent": 206, "wholli": 206, "analysi": [206, 207, 208, 259, 260, 261], "curv": [206, 259], "discontinu": [206, 261], "taken": [206, 259], "pm": 206, "whole": 206, "simpl": [206, 207, 256], "aris": [206, 255, 258, 259], "trigonometr": 206, "domin": 206, "revis": [206, 210], "a_1": 206, "ldot": 206, "a_n": 206, "reflex": 206, "leq": 206, "transit": 206, "antisymmetr": 206, "partial": 206, "establish": [206, 260], "six": 206, "lexicograph": 206, "principl": [206, 260], "situat": [206, 207, 209, 210, 211, 259, 261], "unit": [206, 218, 229], "despit": [206, 209], "admonit": [207, 208], "becom": [207, 209, 259, 261], "trigger": [207, 213], "confid": 207, "pytorch": [207, 210, 259, 260, 261], "mxnet": [207, 259, 260, 261], "save": 207, "faster": 207, "tensorflow": [207, 259, 260, 261], "fundament": [207, 259], "inplac": 207, "update_index": 207, "idx": 207, "solut": [207, 244, 247, 261], "hard": [207, 209, 210, 213, 259], "go": [207, 256], "down": 207, "rout": 207, "val": [207, 213], "veri": [207, 246, 261], "wide": [207, 209, 245, 248, 259], "slightli": 207, "heavili": [207, 261], "you": [207, 262], "_must_": 207, "abstract": [207, 255, 260], "donat": 207, "lapack": [207, 255], "_may_": 207, "overwrit": 207, "whatev": 207, "fastest": 207, "aren": [207, 259], "longer": [207, 255], "problem": [207, 215, 244, 260, 261], "upon": [208, 259], "ahead": 208, "burden": [208, 259], "omiss": 208, "nativ": 209, "layout": 209, "packag": [209, 215, 256, 259, 260, 261], "live": [209, 259], "figur": 209, "contigu": 209, "promin": [209, 259], "releas": [209, 256, 260], "candid": [209, 259], "__cuda_array_interface__": 209, "moment": 209, "tri": [209, 261], "growth": 209, "amd": 209, "undesir": 209, "pattern": [209, 210, 214, 260, 261], "widest": 209, "lot": 209, "3118": 209, "hardli": 209, "mostli": [209, 213, 214, 259], "dealt": [209, 215], "__array__": [209, 261], "attach": 209, "hold": [209, 255], "rfc": [209, 259], "http": [209, 256, 262], "dmlc": 209, "github": [209, 256, 258, 262], "io": 209, "page": [209, 261], "standalon": [209, 262], "outlin": [209, 259], "cover": [209, 259, 262], "usag": [209, 254, 259], "node": 209, "spars": [209, 259], "why": [209, 259], "complet": [209, 214, 245, 256, 259, 261], "scale": 210, "exert": 210, "placement": 210, "global": 210, "switchabl": 210, "transfer": 210, "granular": 210, "downsid": 210, "verbos": 210, "much": [210, 259, 262], "kept": 210, "instanti": 210, "physic": 210, "revisit": 210, "themselv": 210, "expos": [210, 255], "bewar": 210, "framework": [210, 259], "elabor": 210, "polici": 210, "highest": 210, "prioriti": 210, "topic": [210, 214, 257, 259, 261], "pin": 210, "tricki": 210, "sinc": 210, "emit": 211, "misbehav": 211, "forese": 211, "extent": 211, "builtin": 211, "author": [211, 258, 259, 260, 261], "worth": 211, "compli": 211, "eager": [212, 259], "aspect": [213, 262], "impact": [213, 259], "prescrib": 213, "show": 213, "up": [213, 245, 254, 261], "five": 213, "dunder": [213, 256], "serial": 213, "compute_someth": 213, "statement": 213, "do_something_els": 213, "flow": 213, "cond": 213, "won": 214, "further": 214, "exercis": 214, "environ": [214, 255, 259, 262], "bla": [214, 255], "openmp": 214, "n_job": [214, 261], "worker": [214, 261], "chunk": 214, "approach": [214, 259, 260], "auto": [214, 261], "thing": 214, "improv": [214, 259, 261], "fit": [214, 258, 259, 261], "becam": [215, 259], "progress": [215, 262], "superclass": 215, "_basearrai": 215, "subclass": [215, 259], "insid": [215, 254], "typevar": 215, "variat": [215, 260], "don": [215, 261], "said": 215, "subtyp": 215, "hasattr": [216, 254, 255, 259], "ortho": [217, 219, 221, 222, 223, 225, 226, 227, 228, 230], "forward": [217, 219, 221, 222, 223, 225, 226, 227, 228, 230, 259], "discret": [217, 218, 219, 221, 222, 223, 225, 226, 227, 228, 229, 230], "pad": [217, 219, 221, 222, 223, 225, 226, 227, 228, 230], "trim": [217, 219, 221, 222, 223, 225, 226, 227, 228, 230], "orthonorm": [217, 219, 221, 222, 223, 225, 226, 227, 228, 230, 245, 248], "frequenc": [218, 220, 229, 256, 260], "f": [218, 229], "window": [218, 229], "center": 220, "spectrum": 220, "swap": 220, "nyquist": [220, 229], "hermitian": [221, 225, 231, 235, 236], "symmetri": [221, 225], "irfftn": 230, "decomposit": [231, 235, 244, 245, 248, 249, 255], "symmetr": [231, 235, 236], "mathbb": [231, 235, 236, 237, 245, 247, 248], "ll": 231, "h": [231, 235, 244, 248], "qquad": 231, "text": 231, "factor": [231, 248], "offset": [234, 251], "off": [234, 251], "eigenvalu": [235, 236, 255], "lambda": [235, 236], "orthogon": [235, 244, 245, 248, 255], "unitari": [235, 245, 248], "eigenvector": 235, "softwar": [235, 248, 258, 259, 261], "fact": [235, 248], "phi": [235, 248], "eig": [235, 255], "diag": [235, 248], "polynomi": [236, 259], "i_n": [236, 237], "eigval": [236, 255], "xx": 237, "ord": [239, 253], "fro": 239, "nuc": 239, "frobeniu": 239, "nuclear": 239, "singular": [239, 241, 244, 248, 249], "induc": 239, "rtol": [241, 244], "toler": [241, 244], "largest_singular_valu": [241, 244], "epsilon": [241, 244], "moor": 244, "penros": 244, "pseudo": 244, "sigma": [244, 248], "reciproc": 244, "tall": [245, 248], "geq": 245, "necessarili": [245, 262], "linearli": [245, 247, 259], "logabsdet": 246, "again": 246, "equat": 247, "coeffici": 247, "ordin": 247, "full_matric": 248, "u_k": 248, "v_k": 248, "vh": 248, "adjoint": 248, "l1": 253, "manhattan": 253, "l2": 253, "euclidean": 253, "coher": 254, "extension_nam": 254, "regular": [254, 256, 259], "__getattr__": 254, "endeavor": 255, "strai": 255, "far": 255, "restraint": 255, "address": [255, 259, 260, 261], "decis": [255, 259], "accid": 255, "especi": 255, "arisen": 255, "been": [255, 259], "process": [255, 256, 260], "afford": 255, "opportun": 255, "subsequ": [255, 260], "codifi": [255, 260], "theme": 255, "abil": 255, "decim": 255, "restrict": [255, 258], "overli": 255, "compel": 255, "compris": 255, "prudent": 255, "lastli": 255, "polymorph": 255, "dedic": 255, "eignvector": 255, "agnostic": 255, "eschew": 255, "parameter": 255, "bias": 255, "underpin": 255, "cater": 255, "low": 255, "verbatim": 255, "poor": 255, "uplo": 255, "dai": 255, "monopoli": 255, "prolifer": 255, "conserv": [255, 261], "conservat": 255, "delin": 255, "overlap": 255, "confus": [255, 259], "parsimoni": 255, "einsum": 255, "einstein": 255, "vdot": 255, "multi_dot": 255, "chain": 255, "exhibit": 255, "consolid": 255, "propos": [256, 260, 261], "com": [256, 262], "blob": 256, "master": 256, "process_docu": 256, "md": 256, "summari": [256, 260], "matur": 256, "reach": [256, 261], "final": 256, "world": 256, "highli": 256, "strong": 256, "updat": 256, "date": 256, "shall": [256, 258], "alpha": 256, "beta": 256, "rc": 256, "post": 256, "dev": 256, "bugfix": 256, "__version__": 256, "resembl": 256, "year": [256, 259], "evolut": [257, 259], "verif": [257, 259], "benchmark": 257, "changelog": 257, "licens": 257, "websit": 258, "repositori": [258, 260], "mit": 258, "copyright": 258, "consortium": [258, 259], "contributor": 258, "permiss": 258, "herebi": 258, "grant": 258, "charg": 258, "person": 258, "file": [258, 260, 261, 262], "merg": [258, 259], "publish": [258, 260], "sublicens": 258, "sell": 258, "whom": 258, "furnish": 258, "notic": 258, "substanti": 258, "portion": 258, "THE": 258, "AS": 258, "warranti": 258, "OF": 258, "BUT": 258, "TO": 258, "merchant": 258, "FOR": 258, "noninfring": 258, "IN": 258, "NO": 258, "holder": 258, "BE": 258, "liabl": 258, "claim": 258, "damag": 258, "liabil": 258, "action": 258, "tort": 258, "WITH": 258, "wealth": 259, "scienc": 259, "deep": 259, "push": 259, "art": 259, "unintend": 259, "activ": 259, "creativ": 259, "fragment": 259, "multidimension": 259, "xarrai": [259, 260], "pick": 259, "bless": 259, "inconsist": 259, "obviou": 259, "mind": 259, "sure": 259, "rare": [259, 260], "unimport": 259, "scientif": 259, "mid": 259, "1990": 259, "earli": 259, "2000": 259, "numarrai": 259, "2005": 259, "superced": 259, "roughli": 259, "decad": 259, "past": 259, "mainli": 259, "rise": 259, "newer": 259, "inspir": [259, 261], "idea": 259, "seriou": 259, "grew": 259, "quickli": 259, "infeas": 259, "speed": 259, "innov": [259, 260], "group": 259, "assembl": 259, "draft": 259, "presenc": 259, "meta": 259, "concret": 259, "shown": 259, "core": [259, 261], "borrow": 259, "steep": 259, "switch": [259, 261], "accompani": 259, "actual": 259, "task": [259, 261], "schedul": 259, "characterist": 259, "grain": 259, "obstacl": 259, "cython": [259, 261], "datetim": 259, "void": 259, "uniformli": 259, "o": 259, "routin": 259, "bind": [259, 261], "cffi": 259, "ctype": 259, "ufunc": 259, "gufunc": 259, "extra": 259, "huge": 259, "amount": [259, 260, 261], "strength": 259, "advantag": 259, "foreign": 259, "indirect": 259, "program": 259, "pydata": 259, "weld": 259, "bohrium": 259, "arkouda": 259, "legat": 259, "grow": 259, "panda": [259, 260], "matplotlib": [259, 260], "networkx": 259, "xtensor": 259, "xnd": [259, 261], "stdlib": 259, "javascript": 259, "rust": 259, "rrai": 259, "nd4j": 259, "jvm": 259, "numsharp": 259, "dispatch": [259, 261], "pythran": 259, "transon": 259, "onnx": 259, "apach": 259, "tvm": 259, "mlir": 259, "taco": 259, "unumpi": [259, 261], "einop": 259, "arrow": 259, "consult": 259, "simplest": 259, "directli": [259, 261], "package_nam": 259, "uniform": 259, "hinder": 259, "inter": 259, "distinguish": 259, "is_array_api_obj": 259, "peopl": 259, "abc": 259, "inherit": 259, "isinst": 259, "prove": 259, "discov": 259, "assist": 259, "importlib": 259, "metadata": 259, "entry_point": 259, "dict": 259, "deprec": 259, "py3": 259, "supplant": 259, "load": 259, "path": 259, "haven": 259, "measur": 259, "isol": 259, "indispens": 259, "institut": 259, "electr": 259, "electron": 259, "engin": [259, 261], "york": 259, "scott": 259, "bradner": 259, "1997": 259, "word": 259, "2119": 259, "doi": 259, "17487": 259, "rfc2119": 259, "technic": 260, "vacuum": 260, "sometim": 260, "compet": 260, "friction": 260, "focu": 260, "accommod": [260, 261], "foo": 260, "bar": 260, "aspir": 260, "experiment": 260, "channel": 260, "resourc": [260, 261], "novel": 260, "thwart": 260, "reinvent": 260, "proverbi": 260, "wheel": 260, "foundat": 260, "articul": 260, "quantifi": 260, "analyz": 260, "ground": [260, 262], "empir": 260, "acquir": 260, "scrape": 260, "unifi": [260, 261], "extract": 260, "intersect": 260, "complement": 260, "suitabl": 260, "preval": 260, "eas": 260, "leverag": 260, "summar": 260, "tool": [260, 261], "explor": 260, "instrument": 260, "record": 260, "collect": 260, "json": 260, "human": 260, "docstr": 260, "_0": 260, "_arg": 260, "347": 260, "359": 260, "894": 260, "1173": 260, "skimag": 260, "174": 260, "sklearn": 260, "373": 260, "666": 260, "publicli": 260, "stori": 260, "broad": 260, "wider": 261, "wrap": 261, "familiar": 261, "survei": 261, "advanc": 261, "research": 261, "nsf": 261, "pain": 261, "brought": 261, "wish": 261, "multiprocess": 261, "shorten": 261, "fortran": 261, "easili": [261, 262], "pure": 261, "manual": 261, "Then": 261, "hoc": 261, "critic": 261, "corner": 261, "tractabl": 261, "spectral": 261, "periodogram": 261, "spectrogram": 261, "csd": 261, "welch": 261, "stft": 261, "istft": 261, "lombscargl": 261, "40": 261, "sai": [261, 262], "ineffici": 261, "x_np": 261, "asnumpi": 261, "freq": 261, "pxx": 261, "back": 261, "torch": 261, "littl": 261, "flexibl": 261, "py": [261, 262], "rearrang": 261, "_backend": 261, "glue": 261, "loc": 261, "some_func": 261, "get_backend": 261, "disappear": 261, "serv": 261, "50": 261, "tensorli": 261, "kera": 261, "eagerpi": 261, "notabl": 261, "suboptim": 261, "readili": 261, "cpyext": 261, "unsuccess": 261, "xla": 261, "vta": 261, "jump": 261, "hoop": 261, "attain": 261, "got": 261, "cfunc": 261, "np": 261, "assert_array_almost_equ": 261, "pyfunc": 261, "pyarray_cancastarrayto": 261, "assertequ": 261, "spec": 262, "clone": 262, "repo": 262, "pip": 262, "pytest": 262, "hypothesi": 262, "conda": 262, "array_api_tests_modul": 262, "edit": 262, "array_api_test": 262, "_array_modul": 262, "array_modul": 262, "command": 262, "asid": 262, "vendor": 262, "readm": 262}, "objects": {"array_api": [[8, 0, 1, "", "__array_api_version__"], [9, 1, 1, "", "abs"], [10, 1, 1, "", "acos"], [11, 1, 1, "", "acosh"], [12, 1, 1, "", "add"], [13, 1, 1, "", "all"], [14, 1, 1, "", "any"], [15, 1, 1, "", "arange"], [16, 1, 1, "", "argmax"], [17, 1, 1, "", "argmin"], [18, 1, 1, "", "argsort"], [60, 1, 1, "", "asarray"], [61, 1, 1, "", "asin"], [62, 1, 1, "", "asinh"], [63, 1, 1, "", "astype"], [64, 1, 1, "", "atan"], [65, 1, 1, "", "atan2"], [66, 1, 1, "", "atanh"], [67, 1, 1, "", "bitwise_and"], [68, 1, 1, "", "bitwise_invert"], [69, 1, 1, "", "bitwise_left_shift"], [70, 1, 1, "", "bitwise_or"], [71, 1, 1, "", "bitwise_right_shift"], [72, 1, 1, "", "bitwise_xor"], [73, 1, 1, "", "broadcast_arrays"], [74, 1, 1, "", "broadcast_to"], [75, 1, 1, "", "can_cast"], [76, 1, 1, "", "ceil"], [77, 1, 1, "", "clip"], [78, 1, 1, "", "concat"], [79, 1, 1, "", "conj"], [85, 1, 1, "", "copysign"], [86, 1, 1, "", "cos"], [87, 1, 1, "", "cosh"], [88, 1, 1, "", "cumulative_sum"], [90, 1, 1, "", "divide"], [91, 1, 1, "", "empty"], [92, 1, 1, "", "empty_like"], [93, 1, 1, "", "equal"], [94, 1, 1, "", "exp"], [95, 1, 1, "", "expand_dims"], [96, 1, 1, "", "expm1"], [97, 1, 1, "", "eye"], [98, 1, 1, "", "finfo"], [99, 1, 1, "", "flip"], [100, 1, 1, "", "floor"], [101, 1, 1, "", "floor_divide"], [102, 1, 1, "", "from_dlpack"], [103, 1, 1, "", "full"], [104, 1, 1, "", "full_like"], [105, 1, 1, "", "greater"], [106, 1, 1, "", "greater_equal"], [107, 1, 1, "", "hypot"], [108, 1, 1, "", "iinfo"], [109, 1, 1, "", "imag"], [116, 1, 1, "", "isdtype"], [117, 1, 1, "", "isfinite"], [118, 1, 1, "", "isinf"], [119, 1, 1, "", "isnan"], [120, 1, 1, "", "less"], [121, 1, 1, "", "less_equal"], [122, 1, 1, "", "linspace"], [123, 1, 1, "", "log"], [124, 1, 1, "", "log10"], [125, 1, 1, "", "log1p"], [126, 1, 1, "", "log2"], [127, 1, 1, "", "logaddexp"], [128, 1, 1, "", "logical_and"], [129, 1, 1, "", "logical_not"], [130, 1, 1, "", "logical_or"], [131, 1, 1, "", "logical_xor"], [132, 1, 1, "", "matmul"], [133, 1, 1, "", "matrix_transpose"], [134, 1, 1, "", "max"], [135, 1, 1, "", "maximum"], [136, 1, 1, "", "mean"], [137, 1, 1, "", "meshgrid"], [138, 1, 1, "", "min"], [139, 1, 1, "", "minimum"], [140, 1, 1, "", "moveaxis"], [141, 1, 1, "", "multiply"], [142, 1, 1, "", "negative"], [143, 1, 1, "", "nonzero"], [144, 1, 1, "", "not_equal"], [145, 1, 1, "", "ones"], [146, 1, 1, "", "ones_like"], [147, 1, 1, "", "permute_dims"], [148, 1, 1, "", "positive"], [149, 1, 1, "", "pow"], [150, 1, 1, "", "prod"], [151, 1, 1, "", "real"], [152, 1, 1, "", "remainder"], [153, 1, 1, "", "reshape"], [154, 1, 1, "", "result_type"], [155, 1, 1, "", "roll"], [156, 1, 1, "", "round"], [157, 1, 1, "", "searchsorted"], [158, 1, 1, "", "sign"], [159, 1, 1, "", "signbit"], [160, 1, 1, "", "sin"], [161, 1, 1, "", "sinh"], [162, 1, 1, "", "sort"], [163, 1, 1, "", "sqrt"], [164, 1, 1, "", "square"], [165, 1, 1, "", "squeeze"], [166, 1, 1, "", "stack"], [167, 1, 1, "", "std"], [168, 1, 1, "", "subtract"], [169, 1, 1, "", "sum"], [170, 1, 1, "", "take"], [171, 1, 1, "", "tan"], [172, 1, 1, "", "tanh"], [173, 1, 1, "", "tensordot"], [174, 1, 1, "", "tile"], [175, 1, 1, "", "tril"], [176, 1, 1, "", "triu"], [177, 1, 1, "", "trunc"], [178, 1, 1, "", "unique_all"], [179, 1, 1, "", "unique_counts"], [180, 1, 1, "", "unique_inverse"], [181, 1, 1, "", "unique_values"], [182, 1, 1, "", "unstack"], [183, 1, 1, "", "var"], [184, 1, 1, "", "vecdot"], [185, 1, 1, "", "where"], [186, 1, 1, "", "zeros"], [187, 1, 1, "", "zeros_like"]], "array_api.array": [[19, 2, 1, "", "T"], [20, 3, 1, "", "__abs__"], [21, 3, 1, "", "__add__"], [22, 3, 1, "", "__and__"], [23, 3, 1, "", "__array_namespace__"], [24, 3, 1, "", "__bool__"], [25, 3, 1, "", "__complex__"], [26, 3, 1, "", "__dlpack__"], [27, 3, 1, "", "__dlpack_device__"], [28, 3, 1, "", "__eq__"], [29, 3, 1, "", "__float__"], [30, 3, 1, "", "__floordiv__"], [31, 3, 1, "", "__ge__"], [32, 3, 1, "", "__getitem__"], [33, 3, 1, "", "__gt__"], [34, 3, 1, "", "__index__"], [35, 3, 1, "", "__int__"], [36, 3, 1, "", "__invert__"], [37, 3, 1, "", "__le__"], [38, 3, 1, "", "__lshift__"], [39, 3, 1, "", "__lt__"], [40, 3, 1, "", "__matmul__"], [41, 3, 1, "", "__mod__"], [42, 3, 1, "", "__mul__"], [43, 3, 1, "", "__ne__"], [44, 3, 1, "", "__neg__"], [45, 3, 1, "", "__or__"], [46, 3, 1, "", "__pos__"], [47, 3, 1, "", "__pow__"], [48, 3, 1, "", "__rshift__"], [49, 3, 1, "", "__setitem__"], [50, 3, 1, "", "__sub__"], [51, 3, 1, "", "__truediv__"], [52, 3, 1, "", "__xor__"], [53, 2, 1, "", "device"], [54, 2, 1, "", "dtype"], [55, 2, 1, "", "mT"], [56, 2, 1, "", "ndim"], [57, 2, 1, "", "shape"], [58, 2, 1, "", "size"], [59, 3, 1, "", "to_device"]], "array_api.constants": [[80, 0, 1, "", "e"], [81, 0, 1, "", "inf"], [82, 0, 1, "", "nan"], [83, 0, 1, "", "newaxis"], [84, 0, 1, "", "pi"]], "array_api.data_types": [[89, 1, 1, "", "__eq__"]], "array_api.fft": [[217, 1, 1, "", "fft"], [218, 1, 1, "", "fftfreq"], [219, 1, 1, "", "fftn"], [220, 1, 1, "", "fftshift"], [221, 1, 1, "", "hfft"], [222, 1, 1, "", "ifft"], [223, 1, 1, "", "ifftn"], [224, 1, 1, "", "ifftshift"], [225, 1, 1, "", "ihfft"], [226, 1, 1, "", "irfft"], [227, 1, 1, "", "irfftn"], [228, 1, 1, "", "rfft"], [229, 1, 1, "", "rfftfreq"], [230, 1, 1, "", "rfftn"]], "array_api.info": [[110, 1, 1, "", "__array_namespace_info__"], [111, 1, 1, "", "capabilities"], [112, 1, 1, "", "default_device"], [113, 1, 1, "", "default_dtypes"], [114, 1, 1, "", "devices"], [115, 1, 1, "", "dtypes"]], "array_api.linalg": [[231, 1, 1, "", "cholesky"], [232, 1, 1, "", "cross"], [233, 1, 1, "", "det"], [234, 1, 1, "", "diagonal"], [235, 1, 1, "", "eigh"], [236, 1, 1, "", "eigvalsh"], [237, 1, 1, "", "inv"], [238, 1, 1, "", "matmul"], [239, 1, 1, "", "matrix_norm"], [240, 1, 1, "", "matrix_power"], [241, 1, 1, "", "matrix_rank"], [242, 1, 1, "", "matrix_transpose"], [243, 1, 1, "", "outer"], [244, 1, 1, "", "pinv"], [245, 1, 1, "", "qr"], [246, 1, 1, "", "slogdet"], [247, 1, 1, "", "solve"], [248, 1, 1, "", "svd"], [249, 1, 1, "", "svdvals"], [250, 1, 1, "", "tensordot"], [251, 1, 1, "", "trace"], [252, 1, 1, "", "vecdot"], [253, 1, 1, "", "vector_norm"]]}, "objtypes": {"0": "py:data", "1": "py:function", "2": "py:property", "3": "py:method"}, "objnames": {"0": ["py", "data", "Python data"], "1": ["py", "function", "Python function"], "2": ["py", "property", "Python property"], "3": ["py", "method", "Python method"]}, "titleterms": {"arrai": [0, 189, 198, 257, 259, 261], "object": [0, 2, 3, 4, 5, 6, 190, 191, 192, 193, 194, 195, 196, 197, 199, 200, 216, 255, 259], "oper": [0, 205], "arithmet": [0, 205], "bitwis": 0, "comparison": 0, "In": [0, 1, 259], "place": [0, 1], "reflect": 0, "attribut": 0, "method": [0, 7], "broadcast": 1, "overview": 1, "algorithm": 1, "exampl": [1, 204], "semant": [1, 210], "constant": 2, "api": [2, 3, 4, 6, 188, 190, 191, 192, 193, 194, 195, 196, 197, 199, 200, 203, 204, 216, 255, 256, 257, 259, 261], "creation": 3, "function": [3, 4, 6, 7, 190, 192, 193, 194, 195, 196, 197, 199, 205, 216], "data": [4, 5, 143, 178, 179, 180, 181, 189, 203, 208, 209, 260], "type": [4, 5, 198, 203, 215, 261], "us": [5, 201, 204, 209, 260, 261], "default": 5, "categori": 5, "element": 6, "wise": 6, "signatur": 7, "__array_api_version__": 8, "ab": 9, "aco": 10, "acosh": 11, "add": [12, 261], "all": 13, "ani": 14, "arang": 15, "argmax": 16, "argmin": 17, "argsort": 18, "t": 19, "__abs__": 20, "__add__": 21, "__and__": 22, "__array_namespace__": 23, "__bool__": 24, "__complex__": 25, "__dlpack__": 26, "tip": [26, 60], "__dlpack_device__": 27, "__eq__": [28, 89], "__float__": 29, "__floordiv__": 30, "__ge__": 31, "__getitem__": 32, "__gt__": 33, "__index__": 34, "__int__": 35, "__invert__": 36, "__le__": 37, "__lshift__": 38, "__lt__": 39, "__matmul__": 40, "__mod__": 41, "__mul__": 42, "__ne__": 43, "__neg__": 44, "__or__": 45, "__pos__": 46, "__pow__": 47, "__rshift__": 48, "__setitem__": 49, "__sub__": 50, "__truediv__": 51, "__xor__": 52, "devic": [53, 114, 204, 210], "dtype": [54, 115], "mt": 55, "ndim": 56, "shape": [57, 143, 178, 179, 180, 181, 189, 208], "size": 58, "to_devic": 59, "asarrai": 60, "note": [60, 102, 122, 198], "asin": 61, "asinh": 62, "astyp": 63, "atan": 64, "atan2": 65, "atanh": 66, "bitwise_and": 67, "bitwise_invert": 68, "bitwise_left_shift": 69, "bitwise_or": 70, "bitwise_right_shift": 71, "bitwise_xor": 72, "broadcast_arrai": 73, "broadcast_to": 74, "can_cast": 75, "ceil": 76, "clip": 77, "concat": 78, "conj": 79, "e": 80, "inf": 81, "nan": 82, "newaxi": 83, "pi": 84, "copysign": 85, "co": 86, "cosh": 87, "cumulative_sum": 88, "divid": 90, "empti": 91, "empty_lik": 92, "equal": 93, "exp": 94, "expand_dim": 95, "expm1": 96, "ey": 97, "finfo": 98, "flip": 99, "floor": 100, "floor_divid": 101, "from_dlpack": 102, "full": 103, "full_lik": 104, "greater": 105, "greater_equ": 106, "hypot": 107, "iinfo": 108, "imag": 109, "__array_namespace_info__": 110, "capabl": 111, "default_devic": 112, "default_dtyp": 113, "isdtyp": 116, "isfinit": 117, "isinf": 118, "isnan": 119, "less": 120, "less_equ": 121, "linspac": 122, "log": 123, "log10": 124, "log1p": 125, "log2": 126, "logaddexp": 127, "logical_and": 128, "logical_not": 129, "logical_or": 130, "logical_xor": 131, "matmul": [132, 238], "matrix_transpos": [133, 242], "max": 134, "maximum": 135, "mean": 136, "meshgrid": 137, "min": 138, "minimum": 139, "moveaxi": 140, "multipli": 141, "neg": 142, "nonzero": 143, "depend": [143, 178, 179, 180, 181, 189, 201, 208], "output": [143, 178, 179, 180, 181, 189, 208], "not_equ": 144, "ones": 145, "ones_lik": 146, "permute_dim": 147, "posit": 148, "pow": 149, "prod": 150, "real": 151, "remaind": 152, "reshap": 153, "result_typ": 154, "roll": 155, "round": 156, "searchsort": 157, "sign": [158, 198], "signbit": 159, "sin": 160, "sinh": 161, "sort": [162, 196], "sqrt": 163, "squar": 164, "squeez": 165, "stack": 166, "std": 167, "subtract": 168, "sum": 169, "take": 170, "tan": 171, "tanh": 172, "tensordot": [173, 250], "tile": 174, "tril": 175, "triu": 176, "trunc": 177, "unique_al": 178, "unique_count": 179, "unique_invers": 180, "unique_valu": 181, "unstack": 182, "var": 183, "vecdot": [184, 252], "where": 185, "zero": 186, "zeros_lik": 187, "specif": 188, "index": [189, 190], "singl": 189, "axi": 189, "slice": 189, "syntax": [189, 210], "multi": 189, "boolean": 189, "return": 189, "valu": [189, 206], "inspect": 191, "linear": [192, 205, 255], "algebra": [192, 205, 255], "manipul": 193, "search": 194, "set": 195, "statist": [197, 205], "promot": [198, 206], "rule": 198, "integ": 198, "tabl": 198, "unsign": 198, "mix": 198, "float": 198, "point": 198, "python": [198, 204, 257, 261], "scalar": 198, "util": 199, "version": [200, 203, 256], "assumpt": 201, "hardwar": [201, 261], "softwar": 201, "environ": 201, "backward": [201, 256], "compat": [201, 256], "product": 201, "code": [201, 204], "interact": 201, "benchmark": 202, "suit": [202, 262], "changelog": 203, "per": 203, "standard": [203, 204, 256, 257, 259], "v2022": 203, "12": 203, "updat": 203, "complex": [203, 206], "number": [203, 204, 206], "support": [203, 204, 209, 210, 261], "extens": [203, 204, 216, 254, 255, 256], "addit": 203, "errata": 203, "c": 204, "situat": 204, "cython": 204, "usag": [204, 210, 216, 255, 257, 260], "1": [204, 261], "packag": 204, "i": 204, "mostli": 204, "pure": 204, "limit": 204, "2": [204, 261], "contain": 204, "lot": 204, "3": [204, 261], "numpi": 204, "directli": 204, "other": [204, 257], "longer": 204, "term": [204, 259], "approach": 204, "further": 204, "hpy": 204, "accuraci": 205, "mathemat": 205, "The": 206, "plane": 206, "branch": 206, "cut": 206, "order": 206, "base": 206, "copi": 207, "view": 207, "behaviour": 207, "mutabl": 207, "mutat": 207, "interchang": 209, "mechan": 209, "dlpack": 209, "an": [209, 259], "memori": 209, "tensor": 209, "structur": 209, "non": [209, 259], "case": [209, 261], "intend": 210, "assign": 210, "out": [210, 259], "scope": [210, 256, 259], "except": 211, "design": [212, 255, 260], "topic": 212, "constraint": 212, "lazi": 213, "v": 213, "eager": 213, "execut": 213, "parallel": 214, "static": 215, "fourier": 216, "transform": 216, "name": [216, 255], "fft": 217, "fftfreq": 218, "fftn": 219, "fftshift": 220, "hfft": 221, "ifft": 222, "ifftn": 223, "ifftshift": 224, "ihfft": 225, "irfft": 226, "irfftn": 227, "rfft": 228, "rfftfreq": 229, "rfftn": 230, "choleski": 231, "cross": 232, "det": 233, "diagon": 234, "eigh": 235, "eigvalsh": 236, "inv": 237, "matrix_norm": 239, "matrix_pow": 240, "matrix_rank": 241, "outer": 243, "pinv": 244, "qr": 245, "slogdet": 246, "solv": 247, "svd": 248, "svdval": 249, "trace": 251, "vector_norm": 253, "modul": 254, "principl": 255, "futur": 256, "evolut": 256, "content": 257, "context": 257, "methodologi": 257, "licens": 258, "purpos": 259, "introduct": [259, 260], "thi": 259, "histori": 259, "includ": 259, "goal": 259, "implic": 259, "stakehold": 259, "how": 259, "read": 259, "document": 259, "adopt": 259, "check": 259, "complianc": 259, "discover": 259, "conform": [259, 262], "implement": 259, "option": 259, "featur": 259, "definit": 259, "norm": 259, "refer": 259, "decis": 260, "make": [260, 261], "concret": 261, "acceler": 261, "distribut": 261, "scipi": 261, "simplifi": 261, "einop": 261, "remov": 261, "backend": 261, "system": 261, "ad": 261, "xtensor": 261, "4": 261, "jit": 261, "compil": 261, "comput": 261, "easier": 261, "more": 261, "robust": 261, "verif": 262, "test": 262, "measur": 262, "run": 262}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.todo": 2, "sphinx": 57}, "alltitles": {"Array object": [[0, "array-object"]], "Operators": [[0, "operators"]], "Arithmetic Operators": [[0, "arithmetic-operators"], [0, "id26"], [0, "id29"]], "Array Operators": [[0, "array-operators"], [0, "id27"], [0, "id30"]], "Bitwise Operators": [[0, "bitwise-operators"], [0, "id28"], [0, "id31"]], "Comparison Operators": [[0, "comparison-operators"]], "In-place Operators": [[0, "in-place-operators"]], "Reflected Operators": [[0, "reflected-operators"]], "Attributes": [[0, "attributes"]], "Methods": [[0, "methods"]], "Broadcasting": [[1, "broadcasting"]], "Overview": [[1, "overview"]], "Algorithm": [[1, "algorithm"]], "Examples": [[1, "examples"]], "In-place Semantics": [[1, "in-place-semantics"]], "Constants": [[2, "constants"]], "Objects in API": [[2, "objects-in-api"], [3, "objects-in-api"], [4, "objects-in-api"], [6, "objects-in-api"], [190, "objects-in-api"], [191, "objects-in-api"], [192, "objects-in-api"], [193, "objects-in-api"], [194, "objects-in-api"], [195, "objects-in-api"], [196, "objects-in-api"], [197, "objects-in-api"], [199, "objects-in-api"], [200, "objects-in-api"], [216, "objects-in-api"], [255, "objects-in-api"]], "Creation Functions": [[3, "creation-functions"]], "Data Type Functions": [[4, "data-type-functions"]], "Data Types": [[5, "data-types"], [203, "data-types"]], "Use of data type objects": [[5, "use-of-data-type-objects"]], "Default Data Types": [[5, "default-data-types"]], "Data Type Categories": [[5, "data-type-categories"]], "Element-wise Functions": [[6, "element-wise-functions"]], "Function and method signatures": [[7, "function-and-method-signatures"]], "__array_api_version__": [[8, "array-api-version"]], "abs": [[9, "abs"]], "acos": [[10, "acos"]], "acosh": [[11, "acosh"]], "add": [[12, "add"]], "all": [[13, "all"]], "any": [[14, "any"]], "arange": [[15, "arange"]], "argmax": [[16, "argmax"]], "argmin": [[17, "argmin"]], "argsort": [[18, "argsort"]], "T": [[19, "t"]], "__abs__": [[20, "abs"]], "__add__": [[21, "add"]], "__and__": [[22, "and"]], "__array_namespace__": [[23, "array-namespace"]], "__bool__": [[24, "bool"]], "__complex__": [[25, "complex"]], "__dlpack__": [[26, "dlpack"]], "Tip": [[26, null], [60, null]], "__dlpack_device__": [[27, "dlpack-device"]], "__eq__": [[28, "eq"], [89, "eq"]], "__float__": [[29, "float"]], "__floordiv__": [[30, "floordiv"]], "__ge__": [[31, "ge"]], "__getitem__": [[32, "getitem"]], "__gt__": [[33, "gt"]], "__index__": [[34, "index"]], "__int__": [[35, "int"]], "__invert__": [[36, "invert"]], "__le__": [[37, "le"]], "__lshift__": [[38, "lshift"]], "__lt__": [[39, "lt"]], "__matmul__": [[40, "matmul"]], "__mod__": [[41, "mod"]], "__mul__": [[42, "mul"]], "__ne__": [[43, "ne"]], "__neg__": [[44, "neg"]], "__or__": [[45, "or"]], "__pos__": [[46, "pos"]], "__pow__": [[47, "pow"]], "__rshift__": [[48, "rshift"]], "__setitem__": [[49, "setitem"]], "__sub__": [[50, "sub"]], "__truediv__": [[51, "truediv"]], "__xor__": [[52, "xor"]], "device": [[53, "device"]], "dtype": [[54, "dtype"]], "mT": [[55, "mt"]], "ndim": [[56, "ndim"]], "shape": [[57, "shape"]], "size": [[58, "size"]], "to_device": [[59, "to-device"]], "asarray": [[60, "asarray"]], "Note": [[60, null], [102, null], [122, null]], "asin": [[61, "asin"]], "asinh": [[62, "asinh"]], "astype": [[63, "astype"]], "atan": [[64, "atan"]], "atan2": [[65, "atan2"]], "atanh": [[66, "atanh"]], "bitwise_and": [[67, "bitwise-and"]], "bitwise_invert": [[68, "bitwise-invert"]], "bitwise_left_shift": [[69, "bitwise-left-shift"]], "bitwise_or": [[70, "bitwise-or"]], "bitwise_right_shift": [[71, "bitwise-right-shift"]], "bitwise_xor": [[72, "bitwise-xor"]], "broadcast_arrays": [[73, "broadcast-arrays"]], "broadcast_to": [[74, "broadcast-to"]], "can_cast": [[75, "can-cast"]], "ceil": [[76, "ceil"]], "clip": [[77, "clip"]], "concat": [[78, "concat"]], "conj": [[79, "conj"]], "e": [[80, "e"]], "inf": [[81, "inf"]], "nan": [[82, "nan"]], "newaxis": [[83, "newaxis"]], "pi": [[84, "pi"]], "copysign": [[85, "copysign"]], "cos": [[86, "cos"]], "cosh": [[87, "cosh"]], "cumulative_sum": [[88, "cumulative-sum"]], "divide": [[90, "divide"]], "empty": [[91, "empty"]], "empty_like": [[92, "empty-like"]], "equal": [[93, "equal"]], "exp": [[94, "exp"]], "expand_dims": [[95, "expand-dims"]], "expm1": [[96, "expm1"]], "eye": [[97, "eye"]], "finfo": [[98, "finfo"]], "flip": [[99, "flip"]], "floor": [[100, "floor"]], "floor_divide": [[101, "floor-divide"]], "from_dlpack": [[102, "from-dlpack"]], "full": [[103, "full"]], "full_like": [[104, "full-like"]], "greater": [[105, "greater"]], "greater_equal": [[106, "greater-equal"]], "hypot": [[107, "hypot"]], "iinfo": [[108, "iinfo"]], "imag": [[109, "imag"]], "__array_namespace_info__": [[110, "array-namespace-info"]], "capabilities": [[111, "capabilities"]], "default_device": [[112, "default-device"]], "default_dtypes": [[113, "default-dtypes"]], "devices": [[114, "devices"]], "dtypes": [[115, "dtypes"]], "isdtype": [[116, "isdtype"]], "isfinite": [[117, "isfinite"]], "isinf": [[118, "isinf"]], "isnan": [[119, "isnan"]], "less": [[120, "less"]], "less_equal": [[121, "less-equal"]], "linspace": [[122, "linspace"]], "log": [[123, "log"]], "log10": [[124, "log10"]], "log1p": [[125, "log1p"]], "log2": [[126, "log2"]], "logaddexp": [[127, "logaddexp"]], "logical_and": [[128, "logical-and"]], "logical_not": [[129, "logical-not"]], "logical_or": [[130, "logical-or"]], "logical_xor": [[131, "logical-xor"]], "matmul": [[132, "matmul"], [238, "matmul"]], "matrix_transpose": [[133, "matrix-transpose"], [242, "matrix-transpose"]], "max": [[134, "max"]], "maximum": [[135, "maximum"]], "mean": [[136, "mean"]], "meshgrid": [[137, "meshgrid"]], "min": [[138, "min"]], "minimum": [[139, "minimum"]], "moveaxis": [[140, "moveaxis"]], "multiply": [[141, "multiply"]], "negative": [[142, "negative"]], "nonzero": [[143, "nonzero"]], "Data-dependent output shape": [[143, null], [178, null], [179, null], [180, null], [181, null], [189, null], [208, null]], "not_equal": [[144, "not-equal"]], "ones": [[145, "ones"]], "ones_like": [[146, "ones-like"]], "permute_dims": [[147, "permute-dims"]], "positive": [[148, "positive"]], "pow": [[149, "pow"]], "prod": [[150, "prod"]], "real": [[151, "real"]], "remainder": [[152, "remainder"]], "reshape": [[153, "reshape"]], "result_type": [[154, "result-type"]], "roll": [[155, "roll"]], "round": [[156, "round"]], "searchsorted": [[157, "searchsorted"]], "sign": [[158, "sign"]], "signbit": [[159, "signbit"]], "sin": [[160, "sin"]], "sinh": [[161, "sinh"]], "sort": [[162, "sort"]], "sqrt": [[163, "sqrt"]], "square": [[164, "square"]], "squeeze": [[165, "squeeze"]], "stack": [[166, "stack"]], "std": [[167, "std"]], "subtract": [[168, "subtract"]], "sum": [[169, "sum"]], "take": [[170, "take"]], "tan": [[171, "tan"]], "tanh": [[172, "tanh"]], "tensordot": [[173, "tensordot"], [250, "tensordot"]], "tile": [[174, "tile"]], "tril": [[175, "tril"]], "triu": [[176, "triu"]], "trunc": [[177, "trunc"]], "unique_all": [[178, "unique-all"]], "unique_counts": [[179, "unique-counts"]], "unique_inverse": [[180, "unique-inverse"]], "unique_values": [[181, "unique-values"]], "unstack": [[182, "unstack"]], "var": [[183, "var"]], "vecdot": [[184, "vecdot"], [252, "vecdot"]], "where": [[185, "where"]], "zeros": [[186, "zeros"]], "zeros_like": [[187, "zeros-like"]], "API specification": [[188, "api-specification"], [188, null]], "Indexing": [[189, "indexing"]], "Single-axis Indexing": [[189, "single-axis-indexing"]], "Slice Syntax": [[189, "slice-syntax"]], "Multi-axis Indexing": [[189, "multi-axis-indexing"]], "Boolean Array Indexing": [[189, "boolean-array-indexing"]], "Return Values": [[189, "return-values"]], "Indexing Functions": [[190, "indexing-functions"]], "Inspection": [[191, "inspection"]], "Inspection APIs": [[191, "inspection-apis"]], "Linear Algebra Functions": [[192, "linear-algebra-functions"]], "Manipulation Functions": [[193, "manipulation-functions"]], "Searching Functions": [[194, "searching-functions"]], "Set Functions": [[195, "set-functions"]], "Sorting Functions": [[196, "sorting-functions"]], "Statistical Functions": [[197, "statistical-functions"], [205, "statistical-functions"]], "Type Promotion Rules": [[198, "type-promotion-rules"]], "Rules": [[198, "rules"]], "Signed integer type promotion table": [[198, "signed-integer-type-promotion-table"]], "Unsigned integer type promotion table": [[198, "unsigned-integer-type-promotion-table"]], "Mixed unsigned and signed integer type promotion table": [[198, "mixed-unsigned-and-signed-integer-type-promotion-table"]], "Floating-point type promotion table": [[198, "floating-point-type-promotion-table"]], "Notes": [[198, "notes"]], "Mixing arrays with Python scalars": [[198, "mixing-arrays-with-python-scalars"]], "Utility Functions": [[199, "utility-functions"]], "Version": [[200, "version"]], "Assumptions": [[201, "assumptions"]], "Hardware and software environments": [[201, "hardware-and-software-environments"]], "Dependencies": [[201, "dependencies"]], "Backwards compatibility": [[201, "backwards-compatibility"], [256, "backwards-compatibility"]], "Production code & interactive use": [[201, "production-code-interactive-use"]], "Benchmark suite": [[202, "benchmark-suite"]], "Changelog per API standard version": [[203, "changelog-per-api-standard-version"]], "Changelog": [[203, "changelog"]], "v2022.12": [[203, "v2022-12"]], "Updates": [[203, "updates"]], "APIs": [[203, "apis"], [203, "id2"]], "Complex Number Support": [[203, "complex-number-support"], [203, "id1"]], "Extensions": [[203, "extensions"], [203, "id3"], [254, "extensions"]], "Additions": [[203, "additions"]], "Errata": [[203, "errata"]], "C API": [[204, "c-api"]], "Example situations for C/Cython usage": [[204, "example-situations-for-c-cython-usage"]], "Situation 1: a Python package that is mostly pure Python, with a limited number of Cython extensions": [[204, "situation-1-a-python-package-that-is-mostly-pure-python-with-a-limited-number-of-cython-extensions"]], "Situation 2: a Python package that contains a lot of Cython code": [[204, "situation-2-a-python-package-that-contains-a-lot-of-cython-code"]], "Situation 3: a Python package that uses the NumPy or Python C API directly": [[204, "situation-3-a-python-package-that-uses-the-numpy-or-python-c-api-directly"]], "Device support": [[204, "device-support"], [210, "device-support"]], "Other longer-term approaches": [[204, "other-longer-term-approaches"]], "Further Python API standardization": [[204, "further-python-api-standardization"]], "HPy": [[204, "hpy"]], "Accuracy": [[205, "accuracy"]], "Arithmetic Operations": [[205, "arithmetic-operations"]], "Mathematical Functions": [[205, "mathematical-functions"]], "Linear Algebra": [[205, "linear-algebra"]], "Complex Numbers": [[206, "complex-numbers"]], "The Complex Plane": [[206, "the-complex-plane"]], "Branch Cuts": [[206, "branch-cuts"]], "Complex Number Ordering": [[206, "complex-number-ordering"]], "Valued-based Promotion": [[206, "valued-based-promotion"]], "Copy-view behaviour and mutability": [[207, "copy-view-behaviour-and-mutability"]], "Mutating views": [[207, null]], "Data-dependent output shapes": [[208, "data-dependent-output-shapes"]], "Data interchange mechanisms": [[209, "data-interchange-mechanisms"]], "DLPack: An in-memory tensor structure": [[209, "dlpack-an-in-memory-tensor-structure"]], "Non-supported use cases": [[209, "non-supported-use-cases"]], "Intended usage": [[210, "intended-usage"]], "Syntax for device assignment": [[210, "syntax-for-device-assignment"]], "Semantics": [[210, "semantics"]], "Out of scope for device support": [[210, "out-of-scope-for-device-support"]], "Exceptions": [[211, "exceptions"]], "Design topics & constraints": [[212, "design-topics-constraints"], [212, null]], "Lazy vs. eager execution": [[213, "lazy-vs-eager-execution"]], "Parallelism": [[214, "parallelism"]], "Static typing": [[215, "static-typing"]], "Fourier transform Functions": [[216, "fourier-transform-functions"]], "Extension name and usage": [[216, "extension-name-and-usage"], [255, "extension-name-and-usage"]], "fft": [[217, "fft"]], "fftfreq": [[218, "fftfreq"]], "fftn": [[219, "fftn"]], "fftshift": [[220, "fftshift"]], "hfft": [[221, "hfft"]], "ifft": [[222, "ifft"]], "ifftn": [[223, "ifftn"]], "ifftshift": [[224, "ifftshift"]], "ihfft": [[225, "ihfft"]], "irfft": [[226, "irfft"]], "irfftn": [[227, "irfftn"]], "rfft": [[228, "rfft"]], "rfftfreq": [[229, "rfftfreq"]], "rfftn": [[230, "rfftn"]], "cholesky": [[231, "cholesky"]], "cross": [[232, "cross"]], "det": [[233, "det"]], "diagonal": [[234, "diagonal"]], "eigh": [[235, "eigh"]], "eigvalsh": [[236, "eigvalsh"]], "inv": [[237, "inv"]], "matrix_norm": [[239, "matrix-norm"]], "matrix_power": [[240, "matrix-power"]], "matrix_rank": [[241, "matrix-rank"]], "outer": [[243, "outer"]], "pinv": [[244, "pinv"]], "qr": [[245, "qr"]], "slogdet": [[246, "slogdet"]], "solve": [[247, "solve"]], "svd": [[248, "svd"]], "svdvals": [[249, "svdvals"]], "trace": [[251, "trace"]], "vector_norm": [[253, "vector-norm"]], "Extension modules:": [[254, null]], "Linear Algebra Extension": [[255, "linear-algebra-extension"]], "Design Principles": [[255, "design-principles"]], "Future API standard evolution": [[256, "future-api-standard-evolution"]], "Scope extensions": [[256, "scope-extensions"]], "Versioning": [[256, "versioning"]], "Python array API standard": [[257, "python-array-api-standard"]], "Contents": [[257, "contents"]], "Context": [[257, null]], "API": [[257, null]], "Methodology and Usage": [[257, null]], "Other": [[257, null]], "License": [[258, "license"]], "Purpose and scope": [[259, "purpose-and-scope"]], "Introduction": [[259, "introduction"], [260, "introduction"]], "This API standard": [[259, "this-api-standard"]], "History": [[259, "history"]], "Scope (includes out-of-scope / non-goals)": [[259, "scope-includes-out-of-scope-non-goals"]], "In scope": [[259, "in-scope"]], "Out of scope": [[259, "out-of-scope"]], "Implications of in/out of scope": [[259, "implications-of-in-out-of-scope"]], "Stakeholders": [[259, "stakeholders"]], "How to read this document": [[259, "how-to-read-this-document"]], "How to adopt this API": [[259, "how-to-adopt-this-api"]], "Checking an array object for Compliance": [[259, "checking-an-array-object-for-compliance"]], "Discoverability of conforming implementations": [[259, "discoverability-of-conforming-implementations"]], "Optional feature": [[259, null]], "Conformance": [[259, "conformance"]], "Terms and Definitions": [[259, "terms-and-definitions"]], "Normative References": [[259, "normative-references"]], "Usage Data": [[260, "usage-data"]], "Design": [[260, "design"]], "Usage": [[260, "usage"]], "Use in Decision-Making": [[260, "use-in-decision-making"]], "Use cases": [[261, "use-cases"]], "Types of use cases": [[261, "types-of-use-cases"]], "Concrete use cases": [[261, "concrete-use-cases"]], "Use case 1: add hardware accelerator and distributed support to SciPy": [[261, "use-case-1-add-hardware-accelerator-and-distributed-support-to-scipy"]], "Use case 2: simplify einops by removing the backend system": [[261, "use-case-2-simplify-einops-by-removing-the-backend-system"]], "Use case 3: adding a Python API to xtensor": [[261, "use-case-3-adding-a-python-api-to-xtensor"]], "Use case 4: make JIT compilation of array computations easier and more robust": [[261, "use-case-4-make-jit-compilation-of-array-computations-easier-and-more-robust"]], "Verification - test suite": [[262, "verification-test-suite"]], "Measuring conformance": [[262, "measuring-conformance"]], "Running the tests": [[262, "running-the-tests"]]}, "indexentries": {"__array_api_version__ (in module array_api)": [[8, "array_api.__array_api_version__"]], "abs() (in module array_api)": [[9, "array_api.abs"]], "acos() (in module array_api)": [[10, "array_api.acos"]], "acosh() (in module array_api)": [[11, "array_api.acosh"]], "add() (in module array_api)": [[12, "array_api.add"]], "all() (in module array_api)": [[13, "array_api.all"]], "any() (in module array_api)": [[14, "array_api.any"]], "arange() (in module array_api)": [[15, "array_api.arange"]], "argmax() (in module array_api)": [[16, "array_api.argmax"]], "argmin() (in module array_api)": [[17, "array_api.argmin"]], "argsort() (in module array_api)": [[18, "array_api.argsort"]], "t (array property)": [[19, "array_api.array.T"]], "__abs__() (array method)": [[20, "array_api.array.__abs__"]], "__add__() (array method)": [[21, "array_api.array.__add__"]], "__and__() (array method)": [[22, "array_api.array.__and__"]], "__array_namespace__() (array method)": [[23, "array_api.array.__array_namespace__"]], "__bool__() (array method)": [[24, "array_api.array.__bool__"]], "__complex__() (array method)": [[25, "array_api.array.__complex__"]], "__dlpack__() (array method)": [[26, "array_api.array.__dlpack__"]], "__dlpack_device__() (array method)": [[27, "array_api.array.__dlpack_device__"]], "__eq__() (array method)": [[28, "array_api.array.__eq__"]], "__float__() (array method)": [[29, "array_api.array.__float__"]], "__floordiv__() (array method)": [[30, "array_api.array.__floordiv__"]], "__ge__() (array method)": [[31, "array_api.array.__ge__"]], "__getitem__() (array method)": [[32, "array_api.array.__getitem__"]], "__gt__() (array method)": [[33, "array_api.array.__gt__"]], "__index__() (array method)": [[34, "array_api.array.__index__"]], "__int__() (array method)": [[35, "array_api.array.__int__"]], "__invert__() (array method)": [[36, "array_api.array.__invert__"]], "__le__() (array method)": [[37, "array_api.array.__le__"]], "__lshift__() (array method)": [[38, "array_api.array.__lshift__"]], "__lt__() (array method)": [[39, "array_api.array.__lt__"]], "__matmul__() (array method)": [[40, "array_api.array.__matmul__"]], "__mod__() (array method)": [[41, "array_api.array.__mod__"]], "__mul__() (array method)": [[42, "array_api.array.__mul__"]], "__ne__() (array method)": [[43, "array_api.array.__ne__"]], "__neg__() (array method)": [[44, "array_api.array.__neg__"]], "__or__() (array method)": [[45, "array_api.array.__or__"]], "__pos__() (array method)": [[46, "array_api.array.__pos__"]], "__pow__() (array method)": [[47, "array_api.array.__pow__"]], "__rshift__() (array method)": [[48, "array_api.array.__rshift__"]], "__setitem__() (array method)": [[49, "array_api.array.__setitem__"]], "__sub__() (array method)": [[50, "array_api.array.__sub__"]], "__truediv__() (array method)": [[51, "array_api.array.__truediv__"]], "__xor__() (array method)": [[52, "array_api.array.__xor__"]], "device (array property)": [[53, "array_api.array.device"]], "dtype (array property)": [[54, "array_api.array.dtype"]], "mt (array property)": [[55, "array_api.array.mT"]], "ndim (array property)": [[56, "array_api.array.ndim"]], "shape (array property)": [[57, "array_api.array.shape"]], "size (array property)": [[58, "array_api.array.size"]], "to_device() (array method)": [[59, "array_api.array.to_device"]], "asarray() (in module array_api)": [[60, "array_api.asarray"]], "asin() (in module array_api)": [[61, "array_api.asin"]], "asinh() (in module array_api)": [[62, "array_api.asinh"]], "astype() (in module array_api)": [[63, "array_api.astype"]], "atan() (in module array_api)": [[64, "array_api.atan"]], "atan2() (in module array_api)": [[65, "array_api.atan2"]], "atanh() (in module array_api)": [[66, "array_api.atanh"]], "bitwise_and() (in module array_api)": [[67, "array_api.bitwise_and"]], "bitwise_invert() (in module array_api)": [[68, "array_api.bitwise_invert"]], "bitwise_left_shift() (in module array_api)": [[69, "array_api.bitwise_left_shift"]], "bitwise_or() (in module array_api)": [[70, "array_api.bitwise_or"]], "bitwise_right_shift() (in module array_api)": [[71, "array_api.bitwise_right_shift"]], "bitwise_xor() (in module array_api)": [[72, "array_api.bitwise_xor"]], "broadcast_arrays() (in module array_api)": [[73, "array_api.broadcast_arrays"]], "broadcast_to() (in module array_api)": [[74, "array_api.broadcast_to"]], "can_cast() (in module array_api)": [[75, "array_api.can_cast"]], "ceil() (in module array_api)": [[76, "array_api.ceil"]], "clip() (in module array_api)": [[77, "array_api.clip"]], "concat() (in module array_api)": [[78, "array_api.concat"]], "conj() (in module array_api)": [[79, "array_api.conj"]], "e (in module array_api.constants)": [[80, "array_api.constants.e"]], "inf (in module array_api.constants)": [[81, "array_api.constants.inf"]], "nan (in module array_api.constants)": [[82, "array_api.constants.nan"]], "newaxis (in module array_api.constants)": [[83, "array_api.constants.newaxis"]], "pi (in module array_api.constants)": [[84, "array_api.constants.pi"]], "copysign() (in module array_api)": [[85, "array_api.copysign"]], "cos() (in module array_api)": [[86, "array_api.cos"]], "cosh() (in module array_api)": [[87, "array_api.cosh"]], "cumulative_sum() (in module array_api)": [[88, "array_api.cumulative_sum"]], "__eq__() (in module array_api.data_types)": [[89, "array_api.data_types.__eq__"]], "divide() (in module array_api)": [[90, "array_api.divide"]], "empty() (in module array_api)": [[91, "array_api.empty"]], "empty_like() (in module array_api)": [[92, "array_api.empty_like"]], "equal() (in module array_api)": [[93, "array_api.equal"]], "exp() (in module array_api)": [[94, "array_api.exp"]], "expand_dims() (in module array_api)": [[95, "array_api.expand_dims"]], "expm1() (in module array_api)": [[96, "array_api.expm1"]], "eye() (in module array_api)": [[97, "array_api.eye"]], "finfo() (in module array_api)": [[98, "array_api.finfo"]], "flip() (in module array_api)": [[99, "array_api.flip"]], "floor() (in module array_api)": [[100, "array_api.floor"]], "floor_divide() (in module array_api)": [[101, "array_api.floor_divide"]], "from_dlpack() (in module array_api)": [[102, "array_api.from_dlpack"]], "full() (in module array_api)": [[103, "array_api.full"]], "full_like() (in module array_api)": [[104, "array_api.full_like"]], "greater() (in module array_api)": [[105, "array_api.greater"]], "greater_equal() (in module array_api)": [[106, "array_api.greater_equal"]], "hypot() (in module array_api)": [[107, "array_api.hypot"]], "iinfo() (in module array_api)": [[108, "array_api.iinfo"]], "imag() (in module array_api)": [[109, "array_api.imag"]], "__array_namespace_info__() (in module array_api.info)": [[110, "array_api.info.__array_namespace_info__"]], "capabilities() (in module array_api.info)": [[111, "array_api.info.capabilities"]], "default_device() (in module array_api.info)": [[112, "array_api.info.default_device"]], "default_dtypes() (in module array_api.info)": [[113, "array_api.info.default_dtypes"]], "devices() (in module array_api.info)": [[114, "array_api.info.devices"]], "dtypes() (in module array_api.info)": [[115, "array_api.info.dtypes"]], "isdtype() (in module array_api)": [[116, "array_api.isdtype"]], "isfinite() (in module array_api)": [[117, "array_api.isfinite"]], "isinf() (in module array_api)": [[118, "array_api.isinf"]], "isnan() (in module array_api)": [[119, "array_api.isnan"]], "less() (in module array_api)": [[120, "array_api.less"]], "less_equal() (in module array_api)": [[121, "array_api.less_equal"]], "linspace() (in module array_api)": [[122, "array_api.linspace"]], "log() (in module array_api)": [[123, "array_api.log"]], "log10() (in module array_api)": [[124, "array_api.log10"]], "log1p() (in module array_api)": [[125, "array_api.log1p"]], "log2() (in module array_api)": [[126, "array_api.log2"]], "logaddexp() (in module array_api)": [[127, "array_api.logaddexp"]], "logical_and() (in module array_api)": [[128, "array_api.logical_and"]], "logical_not() (in module array_api)": [[129, "array_api.logical_not"]], "logical_or() (in module array_api)": [[130, "array_api.logical_or"]], "logical_xor() (in module array_api)": [[131, "array_api.logical_xor"]], "matmul() (in module array_api)": [[132, "array_api.matmul"]], "matrix_transpose() (in module array_api)": [[133, "array_api.matrix_transpose"]], "max() (in module array_api)": [[134, "array_api.max"]], "maximum() (in module array_api)": [[135, "array_api.maximum"]], "mean() (in module array_api)": [[136, "array_api.mean"]], "meshgrid() (in module array_api)": [[137, "array_api.meshgrid"]], "min() (in module array_api)": [[138, "array_api.min"]], "minimum() (in module array_api)": [[139, "array_api.minimum"]], "moveaxis() (in module array_api)": [[140, "array_api.moveaxis"]], "multiply() (in module array_api)": [[141, "array_api.multiply"]], "negative() (in module array_api)": [[142, "array_api.negative"]], "nonzero() (in module array_api)": [[143, "array_api.nonzero"]], "not_equal() (in module array_api)": [[144, "array_api.not_equal"]], "ones() (in module array_api)": [[145, "array_api.ones"]], "ones_like() (in module array_api)": [[146, "array_api.ones_like"]], "permute_dims() (in module array_api)": [[147, "array_api.permute_dims"]], "positive() (in module array_api)": [[148, "array_api.positive"]], "pow() (in module array_api)": [[149, "array_api.pow"]], "prod() (in module array_api)": [[150, "array_api.prod"]], "real() (in module array_api)": [[151, "array_api.real"]], "remainder() (in module array_api)": [[152, "array_api.remainder"]], "reshape() (in module array_api)": [[153, "array_api.reshape"]], "result_type() (in module array_api)": [[154, "array_api.result_type"]], "roll() (in module array_api)": [[155, "array_api.roll"]], "round() (in module array_api)": [[156, "array_api.round"]], "searchsorted() (in module array_api)": [[157, "array_api.searchsorted"]], "sign() (in module array_api)": [[158, "array_api.sign"]], "signbit() (in module array_api)": [[159, "array_api.signbit"]], "sin() (in module array_api)": [[160, "array_api.sin"]], "sinh() (in module array_api)": [[161, "array_api.sinh"]], "sort() (in module array_api)": [[162, "array_api.sort"]], "sqrt() (in module array_api)": [[163, "array_api.sqrt"]], "square() (in module array_api)": [[164, "array_api.square"]], "squeeze() (in module array_api)": [[165, "array_api.squeeze"]], "stack() (in module array_api)": [[166, "array_api.stack"]], "std() (in module array_api)": [[167, "array_api.std"]], "subtract() (in module array_api)": [[168, "array_api.subtract"]], "sum() (in module array_api)": [[169, "array_api.sum"]], "take() (in module array_api)": [[170, "array_api.take"]], "tan() (in module array_api)": [[171, "array_api.tan"]], "tanh() (in module array_api)": [[172, "array_api.tanh"]], "tensordot() (in module array_api)": [[173, "array_api.tensordot"]], "tile() (in module array_api)": [[174, "array_api.tile"]], "tril() (in module array_api)": [[175, "array_api.tril"]], "triu() (in module array_api)": [[176, "array_api.triu"]], "trunc() (in module array_api)": [[177, "array_api.trunc"]], "unique_all() (in module array_api)": [[178, "array_api.unique_all"]], "unique_counts() (in module array_api)": [[179, "array_api.unique_counts"]], "unique_inverse() (in module array_api)": [[180, "array_api.unique_inverse"]], "unique_values() (in module array_api)": [[181, "array_api.unique_values"]], "unstack() (in module array_api)": [[182, "array_api.unstack"]], "var() (in module array_api)": [[183, "array_api.var"]], "vecdot() (in module array_api)": [[184, "array_api.vecdot"]], "where() (in module array_api)": [[185, "array_api.where"]], "zeros() (in module array_api)": [[186, "array_api.zeros"]], "zeros_like() (in module array_api)": [[187, "array_api.zeros_like"]], "fft() (in module array_api.fft)": [[217, "array_api.fft.fft"]], "fftfreq() (in module array_api.fft)": [[218, "array_api.fft.fftfreq"]], "fftn() (in module array_api.fft)": [[219, "array_api.fft.fftn"]], "fftshift() (in module array_api.fft)": [[220, "array_api.fft.fftshift"]], "hfft() (in module array_api.fft)": [[221, "array_api.fft.hfft"]], "ifft() (in module array_api.fft)": [[222, "array_api.fft.ifft"]], "ifftn() (in module array_api.fft)": [[223, "array_api.fft.ifftn"]], "ifftshift() (in module array_api.fft)": [[224, "array_api.fft.ifftshift"]], "ihfft() (in module array_api.fft)": [[225, "array_api.fft.ihfft"]], "irfft() (in module array_api.fft)": [[226, "array_api.fft.irfft"]], "irfftn() (in module array_api.fft)": [[227, "array_api.fft.irfftn"]], "rfft() (in module array_api.fft)": [[228, "array_api.fft.rfft"]], "rfftfreq() (in module array_api.fft)": [[229, "array_api.fft.rfftfreq"]], "rfftn() (in module array_api.fft)": [[230, "array_api.fft.rfftn"]], "cholesky() (in module array_api.linalg)": [[231, "array_api.linalg.cholesky"]], "cross() (in module array_api.linalg)": [[232, "array_api.linalg.cross"]], "det() (in module array_api.linalg)": [[233, "array_api.linalg.det"]], "diagonal() (in module array_api.linalg)": [[234, "array_api.linalg.diagonal"]], "eigh() (in module array_api.linalg)": [[235, "array_api.linalg.eigh"]], "eigvalsh() (in module array_api.linalg)": [[236, "array_api.linalg.eigvalsh"]], "inv() (in module array_api.linalg)": [[237, "array_api.linalg.inv"]], "matmul() (in module array_api.linalg)": [[238, "array_api.linalg.matmul"]], "matrix_norm() (in module array_api.linalg)": [[239, "array_api.linalg.matrix_norm"]], "matrix_power() (in module array_api.linalg)": [[240, "array_api.linalg.matrix_power"]], "matrix_rank() (in module array_api.linalg)": [[241, "array_api.linalg.matrix_rank"]], "matrix_transpose() (in module array_api.linalg)": [[242, "array_api.linalg.matrix_transpose"]], "outer() (in module array_api.linalg)": [[243, "array_api.linalg.outer"]], "pinv() (in module array_api.linalg)": [[244, "array_api.linalg.pinv"]], "qr() (in module array_api.linalg)": [[245, "array_api.linalg.qr"]], "slogdet() (in module array_api.linalg)": [[246, "array_api.linalg.slogdet"]], "solve() (in module array_api.linalg)": [[247, "array_api.linalg.solve"]], "svd() (in module array_api.linalg)": [[248, "array_api.linalg.svd"]], "svdvals() (in module array_api.linalg)": [[249, "array_api.linalg.svdvals"]], "tensordot() (in module array_api.linalg)": [[250, "array_api.linalg.tensordot"]], "trace() (in module array_api.linalg)": [[251, "array_api.linalg.trace"]], "vecdot() (in module array_api.linalg)": [[252, "array_api.linalg.vecdot"]], "vector_norm() (in module array_api.linalg)": [[253, "array_api.linalg.vector_norm"]]}})