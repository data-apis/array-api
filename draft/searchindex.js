Search.setIndex({"docnames": ["API_specification/array_object", "API_specification/broadcasting", "API_specification/constants", "API_specification/creation_functions", "API_specification/data_type_functions", "API_specification/data_types", "API_specification/elementwise_functions", "API_specification/function_and_method_signatures", "API_specification/generated/array_api.__array_api_version__", "API_specification/generated/array_api.abs", "API_specification/generated/array_api.acos", "API_specification/generated/array_api.acosh", "API_specification/generated/array_api.add", "API_specification/generated/array_api.all", "API_specification/generated/array_api.any", "API_specification/generated/array_api.arange", "API_specification/generated/array_api.argmax", "API_specification/generated/array_api.argmin", "API_specification/generated/array_api.argsort", "API_specification/generated/array_api.array.T", "API_specification/generated/array_api.array.__abs__", "API_specification/generated/array_api.array.__add__", "API_specification/generated/array_api.array.__and__", "API_specification/generated/array_api.array.__array_namespace__", "API_specification/generated/array_api.array.__bool__", "API_specification/generated/array_api.array.__complex__", "API_specification/generated/array_api.array.__dlpack__", "API_specification/generated/array_api.array.__dlpack_device__", "API_specification/generated/array_api.array.__eq__", "API_specification/generated/array_api.array.__float__", "API_specification/generated/array_api.array.__floordiv__", "API_specification/generated/array_api.array.__ge__", "API_specification/generated/array_api.array.__getitem__", "API_specification/generated/array_api.array.__gt__", "API_specification/generated/array_api.array.__index__", "API_specification/generated/array_api.array.__int__", "API_specification/generated/array_api.array.__invert__", "API_specification/generated/array_api.array.__le__", "API_specification/generated/array_api.array.__lshift__", "API_specification/generated/array_api.array.__lt__", "API_specification/generated/array_api.array.__matmul__", "API_specification/generated/array_api.array.__mod__", "API_specification/generated/array_api.array.__mul__", "API_specification/generated/array_api.array.__ne__", "API_specification/generated/array_api.array.__neg__", "API_specification/generated/array_api.array.__or__", "API_specification/generated/array_api.array.__pos__", "API_specification/generated/array_api.array.__pow__", "API_specification/generated/array_api.array.__rshift__", "API_specification/generated/array_api.array.__setitem__", "API_specification/generated/array_api.array.__sub__", "API_specification/generated/array_api.array.__truediv__", "API_specification/generated/array_api.array.__xor__", "API_specification/generated/array_api.array.device", "API_specification/generated/array_api.array.dtype", "API_specification/generated/array_api.array.mT", "API_specification/generated/array_api.array.ndim", "API_specification/generated/array_api.array.shape", "API_specification/generated/array_api.array.size", "API_specification/generated/array_api.array.to_device", "API_specification/generated/array_api.asarray", "API_specification/generated/array_api.asin", "API_specification/generated/array_api.asinh", "API_specification/generated/array_api.astype", "API_specification/generated/array_api.atan", "API_specification/generated/array_api.atan2", "API_specification/generated/array_api.atanh", "API_specification/generated/array_api.bitwise_and", "API_specification/generated/array_api.bitwise_invert", "API_specification/generated/array_api.bitwise_left_shift", "API_specification/generated/array_api.bitwise_or", "API_specification/generated/array_api.bitwise_right_shift", "API_specification/generated/array_api.bitwise_xor", "API_specification/generated/array_api.broadcast_arrays", "API_specification/generated/array_api.broadcast_to", "API_specification/generated/array_api.can_cast", "API_specification/generated/array_api.ceil", "API_specification/generated/array_api.clip", "API_specification/generated/array_api.concat", "API_specification/generated/array_api.conj", "API_specification/generated/array_api.constants.e", "API_specification/generated/array_api.constants.inf", "API_specification/generated/array_api.constants.nan", "API_specification/generated/array_api.constants.newaxis", "API_specification/generated/array_api.constants.pi", "API_specification/generated/array_api.copysign", "API_specification/generated/array_api.cos", "API_specification/generated/array_api.cosh", "API_specification/generated/array_api.cumulative_sum", "API_specification/generated/array_api.data_types.__eq__", "API_specification/generated/array_api.divide", "API_specification/generated/array_api.empty", "API_specification/generated/array_api.empty_like", "API_specification/generated/array_api.equal", "API_specification/generated/array_api.exp", "API_specification/generated/array_api.expand_dims", "API_specification/generated/array_api.expm1", "API_specification/generated/array_api.eye", "API_specification/generated/array_api.finfo", "API_specification/generated/array_api.flip", "API_specification/generated/array_api.floor", "API_specification/generated/array_api.floor_divide", "API_specification/generated/array_api.from_dlpack", "API_specification/generated/array_api.full", "API_specification/generated/array_api.full_like", "API_specification/generated/array_api.greater", "API_specification/generated/array_api.greater_equal", "API_specification/generated/array_api.hypot", "API_specification/generated/array_api.iinfo", "API_specification/generated/array_api.imag", "API_specification/generated/array_api.info.__array_namespace_info__", "API_specification/generated/array_api.info.capabilities", "API_specification/generated/array_api.info.default_device", "API_specification/generated/array_api.info.default_dtypes", "API_specification/generated/array_api.info.devices", "API_specification/generated/array_api.info.dtypes", "API_specification/generated/array_api.isdtype", "API_specification/generated/array_api.isfinite", "API_specification/generated/array_api.isinf", "API_specification/generated/array_api.isnan", "API_specification/generated/array_api.less", "API_specification/generated/array_api.less_equal", "API_specification/generated/array_api.linspace", "API_specification/generated/array_api.log", "API_specification/generated/array_api.log10", "API_specification/generated/array_api.log1p", "API_specification/generated/array_api.log2", "API_specification/generated/array_api.logaddexp", "API_specification/generated/array_api.logical_and", "API_specification/generated/array_api.logical_not", "API_specification/generated/array_api.logical_or", "API_specification/generated/array_api.logical_xor", "API_specification/generated/array_api.matmul", "API_specification/generated/array_api.matrix_transpose", "API_specification/generated/array_api.max", "API_specification/generated/array_api.maximum", "API_specification/generated/array_api.mean", "API_specification/generated/array_api.meshgrid", "API_specification/generated/array_api.min", "API_specification/generated/array_api.minimum", "API_specification/generated/array_api.moveaxis", "API_specification/generated/array_api.multiply", "API_specification/generated/array_api.negative", "API_specification/generated/array_api.nextafter", "API_specification/generated/array_api.nonzero", "API_specification/generated/array_api.not_equal", "API_specification/generated/array_api.ones", "API_specification/generated/array_api.ones_like", "API_specification/generated/array_api.permute_dims", "API_specification/generated/array_api.positive", "API_specification/generated/array_api.pow", "API_specification/generated/array_api.prod", "API_specification/generated/array_api.real", "API_specification/generated/array_api.reciprocal", "API_specification/generated/array_api.remainder", "API_specification/generated/array_api.repeat", "API_specification/generated/array_api.reshape", "API_specification/generated/array_api.result_type", "API_specification/generated/array_api.roll", "API_specification/generated/array_api.round", "API_specification/generated/array_api.searchsorted", "API_specification/generated/array_api.sign", "API_specification/generated/array_api.signbit", "API_specification/generated/array_api.sin", "API_specification/generated/array_api.sinh", "API_specification/generated/array_api.sort", "API_specification/generated/array_api.sqrt", "API_specification/generated/array_api.square", "API_specification/generated/array_api.squeeze", "API_specification/generated/array_api.stack", "API_specification/generated/array_api.std", "API_specification/generated/array_api.subtract", "API_specification/generated/array_api.sum", "API_specification/generated/array_api.take", "API_specification/generated/array_api.tan", "API_specification/generated/array_api.tanh", "API_specification/generated/array_api.tensordot", "API_specification/generated/array_api.tile", "API_specification/generated/array_api.tril", "API_specification/generated/array_api.triu", "API_specification/generated/array_api.trunc", "API_specification/generated/array_api.unique_all", "API_specification/generated/array_api.unique_counts", "API_specification/generated/array_api.unique_inverse", "API_specification/generated/array_api.unique_values", "API_specification/generated/array_api.unstack", "API_specification/generated/array_api.var", "API_specification/generated/array_api.vecdot", "API_specification/generated/array_api.where", "API_specification/generated/array_api.zeros", "API_specification/generated/array_api.zeros_like", "API_specification/index", "API_specification/indexing", "API_specification/indexing_functions", "API_specification/inspection", "API_specification/linear_algebra_functions", "API_specification/manipulation_functions", "API_specification/searching_functions", "API_specification/set_functions", "API_specification/sorting_functions", "API_specification/statistical_functions", "API_specification/type_promotion", "API_specification/utility_functions", "API_specification/version", "assumptions", "benchmark_suite", "changelog", "design_topics/C_API", "design_topics/accuracy", "design_topics/complex_numbers", "design_topics/copies_views_and_mutation", "design_topics/data_dependent_output_shapes", "design_topics/data_interchange", "design_topics/device_support", "design_topics/exceptions", "design_topics/index", "design_topics/lazy_eager", "design_topics/parallelism", "design_topics/static_typing", "extensions/fourier_transform_functions", "extensions/generated/array_api.fft.fft", "extensions/generated/array_api.fft.fftfreq", "extensions/generated/array_api.fft.fftn", "extensions/generated/array_api.fft.fftshift", "extensions/generated/array_api.fft.hfft", "extensions/generated/array_api.fft.ifft", "extensions/generated/array_api.fft.ifftn", "extensions/generated/array_api.fft.ifftshift", "extensions/generated/array_api.fft.ihfft", "extensions/generated/array_api.fft.irfft", "extensions/generated/array_api.fft.irfftn", "extensions/generated/array_api.fft.rfft", "extensions/generated/array_api.fft.rfftfreq", "extensions/generated/array_api.fft.rfftn", "extensions/generated/array_api.linalg.cholesky", "extensions/generated/array_api.linalg.cross", "extensions/generated/array_api.linalg.det", "extensions/generated/array_api.linalg.diagonal", "extensions/generated/array_api.linalg.eigh", "extensions/generated/array_api.linalg.eigvalsh", "extensions/generated/array_api.linalg.inv", "extensions/generated/array_api.linalg.matmul", "extensions/generated/array_api.linalg.matrix_norm", "extensions/generated/array_api.linalg.matrix_power", "extensions/generated/array_api.linalg.matrix_rank", "extensions/generated/array_api.linalg.matrix_transpose", "extensions/generated/array_api.linalg.outer", "extensions/generated/array_api.linalg.pinv", "extensions/generated/array_api.linalg.qr", "extensions/generated/array_api.linalg.slogdet", "extensions/generated/array_api.linalg.solve", "extensions/generated/array_api.linalg.svd", "extensions/generated/array_api.linalg.svdvals", "extensions/generated/array_api.linalg.tensordot", "extensions/generated/array_api.linalg.trace", "extensions/generated/array_api.linalg.vecdot", "extensions/generated/array_api.linalg.vector_norm", "extensions/index", "extensions/linear_algebra_functions", "future_API_evolution", "index", "license", "purpose_and_scope", "usage_data", "use_cases", "verification_test_suite"], "filenames": ["API_specification/array_object.rst", "API_specification/broadcasting.rst", "API_specification/constants.rst", "API_specification/creation_functions.rst", "API_specification/data_type_functions.rst", "API_specification/data_types.rst", "API_specification/elementwise_functions.rst", "API_specification/function_and_method_signatures.rst", "API_specification/generated/array_api.__array_api_version__.rst", "API_specification/generated/array_api.abs.rst", "API_specification/generated/array_api.acos.rst", "API_specification/generated/array_api.acosh.rst", "API_specification/generated/array_api.add.rst", "API_specification/generated/array_api.all.rst", "API_specification/generated/array_api.any.rst", "API_specification/generated/array_api.arange.rst", "API_specification/generated/array_api.argmax.rst", "API_specification/generated/array_api.argmin.rst", "API_specification/generated/array_api.argsort.rst", "API_specification/generated/array_api.array.T.rst", "API_specification/generated/array_api.array.__abs__.rst", "API_specification/generated/array_api.array.__add__.rst", "API_specification/generated/array_api.array.__and__.rst", "API_specification/generated/array_api.array.__array_namespace__.rst", "API_specification/generated/array_api.array.__bool__.rst", "API_specification/generated/array_api.array.__complex__.rst", "API_specification/generated/array_api.array.__dlpack__.rst", "API_specification/generated/array_api.array.__dlpack_device__.rst", "API_specification/generated/array_api.array.__eq__.rst", "API_specification/generated/array_api.array.__float__.rst", "API_specification/generated/array_api.array.__floordiv__.rst", "API_specification/generated/array_api.array.__ge__.rst", "API_specification/generated/array_api.array.__getitem__.rst", "API_specification/generated/array_api.array.__gt__.rst", "API_specification/generated/array_api.array.__index__.rst", "API_specification/generated/array_api.array.__int__.rst", "API_specification/generated/array_api.array.__invert__.rst", "API_specification/generated/array_api.array.__le__.rst", "API_specification/generated/array_api.array.__lshift__.rst", "API_specification/generated/array_api.array.__lt__.rst", "API_specification/generated/array_api.array.__matmul__.rst", "API_specification/generated/array_api.array.__mod__.rst", "API_specification/generated/array_api.array.__mul__.rst", "API_specification/generated/array_api.array.__ne__.rst", "API_specification/generated/array_api.array.__neg__.rst", "API_specification/generated/array_api.array.__or__.rst", "API_specification/generated/array_api.array.__pos__.rst", "API_specification/generated/array_api.array.__pow__.rst", "API_specification/generated/array_api.array.__rshift__.rst", "API_specification/generated/array_api.array.__setitem__.rst", "API_specification/generated/array_api.array.__sub__.rst", "API_specification/generated/array_api.array.__truediv__.rst", "API_specification/generated/array_api.array.__xor__.rst", "API_specification/generated/array_api.array.device.rst", "API_specification/generated/array_api.array.dtype.rst", "API_specification/generated/array_api.array.mT.rst", "API_specification/generated/array_api.array.ndim.rst", "API_specification/generated/array_api.array.shape.rst", "API_specification/generated/array_api.array.size.rst", "API_specification/generated/array_api.array.to_device.rst", "API_specification/generated/array_api.asarray.rst", "API_specification/generated/array_api.asin.rst", "API_specification/generated/array_api.asinh.rst", "API_specification/generated/array_api.astype.rst", "API_specification/generated/array_api.atan.rst", "API_specification/generated/array_api.atan2.rst", "API_specification/generated/array_api.atanh.rst", "API_specification/generated/array_api.bitwise_and.rst", "API_specification/generated/array_api.bitwise_invert.rst", "API_specification/generated/array_api.bitwise_left_shift.rst", "API_specification/generated/array_api.bitwise_or.rst", "API_specification/generated/array_api.bitwise_right_shift.rst", "API_specification/generated/array_api.bitwise_xor.rst", "API_specification/generated/array_api.broadcast_arrays.rst", "API_specification/generated/array_api.broadcast_to.rst", "API_specification/generated/array_api.can_cast.rst", "API_specification/generated/array_api.ceil.rst", "API_specification/generated/array_api.clip.rst", "API_specification/generated/array_api.concat.rst", "API_specification/generated/array_api.conj.rst", "API_specification/generated/array_api.constants.e.rst", "API_specification/generated/array_api.constants.inf.rst", "API_specification/generated/array_api.constants.nan.rst", "API_specification/generated/array_api.constants.newaxis.rst", "API_specification/generated/array_api.constants.pi.rst", "API_specification/generated/array_api.copysign.rst", "API_specification/generated/array_api.cos.rst", "API_specification/generated/array_api.cosh.rst", "API_specification/generated/array_api.cumulative_sum.rst", "API_specification/generated/array_api.data_types.__eq__.rst", "API_specification/generated/array_api.divide.rst", "API_specification/generated/array_api.empty.rst", "API_specification/generated/array_api.empty_like.rst", "API_specification/generated/array_api.equal.rst", "API_specification/generated/array_api.exp.rst", "API_specification/generated/array_api.expand_dims.rst", "API_specification/generated/array_api.expm1.rst", "API_specification/generated/array_api.eye.rst", "API_specification/generated/array_api.finfo.rst", "API_specification/generated/array_api.flip.rst", "API_specification/generated/array_api.floor.rst", "API_specification/generated/array_api.floor_divide.rst", "API_specification/generated/array_api.from_dlpack.rst", "API_specification/generated/array_api.full.rst", "API_specification/generated/array_api.full_like.rst", "API_specification/generated/array_api.greater.rst", "API_specification/generated/array_api.greater_equal.rst", "API_specification/generated/array_api.hypot.rst", "API_specification/generated/array_api.iinfo.rst", "API_specification/generated/array_api.imag.rst", "API_specification/generated/array_api.info.__array_namespace_info__.rst", "API_specification/generated/array_api.info.capabilities.rst", "API_specification/generated/array_api.info.default_device.rst", "API_specification/generated/array_api.info.default_dtypes.rst", "API_specification/generated/array_api.info.devices.rst", "API_specification/generated/array_api.info.dtypes.rst", "API_specification/generated/array_api.isdtype.rst", "API_specification/generated/array_api.isfinite.rst", "API_specification/generated/array_api.isinf.rst", "API_specification/generated/array_api.isnan.rst", "API_specification/generated/array_api.less.rst", "API_specification/generated/array_api.less_equal.rst", "API_specification/generated/array_api.linspace.rst", "API_specification/generated/array_api.log.rst", "API_specification/generated/array_api.log10.rst", "API_specification/generated/array_api.log1p.rst", "API_specification/generated/array_api.log2.rst", "API_specification/generated/array_api.logaddexp.rst", "API_specification/generated/array_api.logical_and.rst", "API_specification/generated/array_api.logical_not.rst", "API_specification/generated/array_api.logical_or.rst", "API_specification/generated/array_api.logical_xor.rst", "API_specification/generated/array_api.matmul.rst", "API_specification/generated/array_api.matrix_transpose.rst", "API_specification/generated/array_api.max.rst", "API_specification/generated/array_api.maximum.rst", "API_specification/generated/array_api.mean.rst", "API_specification/generated/array_api.meshgrid.rst", "API_specification/generated/array_api.min.rst", "API_specification/generated/array_api.minimum.rst", "API_specification/generated/array_api.moveaxis.rst", "API_specification/generated/array_api.multiply.rst", "API_specification/generated/array_api.negative.rst", "API_specification/generated/array_api.nextafter.rst", "API_specification/generated/array_api.nonzero.rst", "API_specification/generated/array_api.not_equal.rst", "API_specification/generated/array_api.ones.rst", "API_specification/generated/array_api.ones_like.rst", "API_specification/generated/array_api.permute_dims.rst", "API_specification/generated/array_api.positive.rst", "API_specification/generated/array_api.pow.rst", "API_specification/generated/array_api.prod.rst", "API_specification/generated/array_api.real.rst", "API_specification/generated/array_api.reciprocal.rst", "API_specification/generated/array_api.remainder.rst", "API_specification/generated/array_api.repeat.rst", "API_specification/generated/array_api.reshape.rst", "API_specification/generated/array_api.result_type.rst", "API_specification/generated/array_api.roll.rst", "API_specification/generated/array_api.round.rst", "API_specification/generated/array_api.searchsorted.rst", "API_specification/generated/array_api.sign.rst", "API_specification/generated/array_api.signbit.rst", "API_specification/generated/array_api.sin.rst", "API_specification/generated/array_api.sinh.rst", "API_specification/generated/array_api.sort.rst", "API_specification/generated/array_api.sqrt.rst", "API_specification/generated/array_api.square.rst", "API_specification/generated/array_api.squeeze.rst", "API_specification/generated/array_api.stack.rst", "API_specification/generated/array_api.std.rst", "API_specification/generated/array_api.subtract.rst", "API_specification/generated/array_api.sum.rst", "API_specification/generated/array_api.take.rst", "API_specification/generated/array_api.tan.rst", "API_specification/generated/array_api.tanh.rst", "API_specification/generated/array_api.tensordot.rst", "API_specification/generated/array_api.tile.rst", "API_specification/generated/array_api.tril.rst", "API_specification/generated/array_api.triu.rst", "API_specification/generated/array_api.trunc.rst", "API_specification/generated/array_api.unique_all.rst", "API_specification/generated/array_api.unique_counts.rst", "API_specification/generated/array_api.unique_inverse.rst", "API_specification/generated/array_api.unique_values.rst", "API_specification/generated/array_api.unstack.rst", "API_specification/generated/array_api.var.rst", "API_specification/generated/array_api.vecdot.rst", "API_specification/generated/array_api.where.rst", "API_specification/generated/array_api.zeros.rst", "API_specification/generated/array_api.zeros_like.rst", "API_specification/index.rst", "API_specification/indexing.rst", "API_specification/indexing_functions.rst", "API_specification/inspection.rst", "API_specification/linear_algebra_functions.rst", "API_specification/manipulation_functions.rst", "API_specification/searching_functions.rst", "API_specification/set_functions.rst", "API_specification/sorting_functions.rst", "API_specification/statistical_functions.rst", "API_specification/type_promotion.rst", "API_specification/utility_functions.rst", "API_specification/version.rst", "assumptions.md", "benchmark_suite.md", "changelog.rst", "design_topics/C_API.rst", "design_topics/accuracy.rst", "design_topics/complex_numbers.rst", "design_topics/copies_views_and_mutation.rst", "design_topics/data_dependent_output_shapes.rst", "design_topics/data_interchange.rst", "design_topics/device_support.rst", "design_topics/exceptions.rst", "design_topics/index.rst", "design_topics/lazy_eager.rst", "design_topics/parallelism.rst", "design_topics/static_typing.rst", "extensions/fourier_transform_functions.rst", "extensions/generated/array_api.fft.fft.rst", "extensions/generated/array_api.fft.fftfreq.rst", "extensions/generated/array_api.fft.fftn.rst", "extensions/generated/array_api.fft.fftshift.rst", "extensions/generated/array_api.fft.hfft.rst", "extensions/generated/array_api.fft.ifft.rst", "extensions/generated/array_api.fft.ifftn.rst", "extensions/generated/array_api.fft.ifftshift.rst", "extensions/generated/array_api.fft.ihfft.rst", "extensions/generated/array_api.fft.irfft.rst", "extensions/generated/array_api.fft.irfftn.rst", "extensions/generated/array_api.fft.rfft.rst", "extensions/generated/array_api.fft.rfftfreq.rst", "extensions/generated/array_api.fft.rfftn.rst", "extensions/generated/array_api.linalg.cholesky.rst", "extensions/generated/array_api.linalg.cross.rst", "extensions/generated/array_api.linalg.det.rst", "extensions/generated/array_api.linalg.diagonal.rst", "extensions/generated/array_api.linalg.eigh.rst", "extensions/generated/array_api.linalg.eigvalsh.rst", "extensions/generated/array_api.linalg.inv.rst", "extensions/generated/array_api.linalg.matmul.rst", "extensions/generated/array_api.linalg.matrix_norm.rst", "extensions/generated/array_api.linalg.matrix_power.rst", "extensions/generated/array_api.linalg.matrix_rank.rst", "extensions/generated/array_api.linalg.matrix_transpose.rst", "extensions/generated/array_api.linalg.outer.rst", "extensions/generated/array_api.linalg.pinv.rst", "extensions/generated/array_api.linalg.qr.rst", "extensions/generated/array_api.linalg.slogdet.rst", "extensions/generated/array_api.linalg.solve.rst", "extensions/generated/array_api.linalg.svd.rst", "extensions/generated/array_api.linalg.svdvals.rst", "extensions/generated/array_api.linalg.tensordot.rst", "extensions/generated/array_api.linalg.trace.rst", "extensions/generated/array_api.linalg.vecdot.rst", "extensions/generated/array_api.linalg.vector_norm.rst", "extensions/index.rst", "extensions/linear_algebra_functions.rst", "future_API_evolution.md", "index.rst", "license.rst", "purpose_and_scope.md", "usage_data.md", "use_cases.md", "verification_test_suite.md"], "titles": ["Array object", "Broadcasting", "Constants", "Creation Functions", "Data Type Functions", "Data Types", "Element-wise Functions", "Function and method signatures", "__array_api_version__", "abs", "acos", "acosh", "add", "all", "any", "arange", "argmax", "argmin", "argsort", "T", "__abs__", "__add__", "__and__", "__array_namespace__", "__bool__", "__complex__", "__dlpack__", "__dlpack_device__", "__eq__", "__float__", "__floordiv__", "__ge__", "__getitem__", "__gt__", "__index__", "__int__", "__invert__", "__le__", "__lshift__", "__lt__", "__matmul__", "__mod__", "__mul__", "__ne__", "__neg__", "__or__", "__pos__", "__pow__", "__rshift__", "__setitem__", "__sub__", "__truediv__", "__xor__", "device", "dtype", "mT", "ndim", "shape", "size", "to_device", "asarray", "asin", "asinh", "astype", "atan", "atan2", "atanh", "bitwise_and", "bitwise_invert", "bitwise_left_shift", "bitwise_or", "bitwise_right_shift", "bitwise_xor", "broadcast_arrays", "broadcast_to", "can_cast", "ceil", "clip", "concat", "conj", "e", "inf", "nan", "newaxis", "pi", "copysign", "cos", "cosh", "cumulative_sum", "__eq__", "divide", "empty", "empty_like", "equal", "exp", "expand_dims", "expm1", "eye", "finfo", "flip", "floor", "floor_divide", "from_dlpack", "full", "full_like", "greater", "greater_equal", "hypot", "iinfo", "imag", "__array_namespace_info__", "capabilities", "default_device", "default_dtypes", "devices", "dtypes", "isdtype", "isfinite", "isinf", "isnan", "less", "less_equal", "linspace", "log", "log10", "log1p", "log2", "logaddexp", "logical_and", "logical_not", "logical_or", "logical_xor", "matmul", "matrix_transpose", "max", "maximum", "mean", "meshgrid", "min", "minimum", "moveaxis", "multiply", "negative", "nextafter", "nonzero", "not_equal", "ones", "ones_like", "permute_dims", "positive", "pow", "prod", "real", "reciprocal", "remainder", "repeat", "reshape", "result_type", "roll", "round", "searchsorted", "sign", "signbit", "sin", "sinh", "sort", "sqrt", "square", "squeeze", "stack", "std", "subtract", "sum", "take", "tan", "tanh", "tensordot", "tile", "tril", "triu", "trunc", "unique_all", "unique_counts", "unique_inverse", "unique_values", "unstack", "var", "vecdot", "where", "zeros", "zeros_like", "API specification", "Indexing", "Indexing Functions", "Inspection", "Linear Algebra Functions", "Manipulation Functions", "Searching Functions", "Set Functions", "Sorting Functions", "Statistical Functions", "Type Promotion Rules", "Utility Functions", "Version", "Assumptions", "Benchmark suite", "Changelog per API standard version", "C API", "Accuracy", "Complex Numbers", "Copy-view behaviour and mutability", "Data-dependent output shapes", "Data interchange mechanisms", "Device support", "Exceptions", "Design topics &amp; constraints", "Lazy vs. eager execution", "Parallelism", "Static typing", "Fourier transform Functions", "fft", "fftfreq", "fftn", "fftshift", "hfft", "ifft", "ifftn", "ifftshift", "ihfft", "irfft", "irfftn", "rfft", "rfftfreq", "rfftn", "cholesky", "cross", "det", "diagonal", "eigh", "eigvalsh", "inv", "matmul", "matrix_norm", "matrix_power", "matrix_rank", "matrix_transpose", "outer", "pinv", "qr", "slogdet", "solve", "svd", "svdvals", "tensordot", "trace", "vecdot", "vector_norm", "Extensions", "Linear Algebra Extension", "Future API standard evolution", "Python array API standard", "License", "Purpose and scope", "Usage Data", "Use cases", "Verification - test suite"], "terms": {"api": [0, 1, 5, 7, 8, 23, 26, 63, 102, 110, 111, 115, 116, 192, 201, 204, 208, 209, 210, 212, 213, 214, 215, 216, 217, 218, 257, 261, 263, 265], "specif": [0, 1, 2, 3, 4, 5, 6, 8, 19, 23, 26, 49, 51, 59, 63, 78, 90, 101, 111, 113, 115, 116, 122, 128, 129, 130, 131, 134, 135, 136, 138, 139, 150, 155, 157, 160, 169, 170, 173, 176, 181, 182, 186, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 206, 207, 208, 209, 210, 211, 212, 213, 214, 216, 218, 219, 238, 239, 257, 258, 259, 260, 262, 263, 264, 265], "A": [0, 1, 2, 3, 4, 5, 7, 13, 14, 26, 57, 97, 102, 116, 155, 169, 185, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 207, 210, 212, 213, 216, 217, 218, 219, 220, 222, 224, 225, 226, 228, 229, 230, 231, 233, 247, 250, 258, 261, 262, 263, 264], "conform": [0, 2, 3, 4, 5, 8, 9, 16, 17, 18, 31, 33, 37, 39, 59, 60, 96, 105, 106, 107, 111, 115, 116, 120, 121, 122, 125, 134, 135, 138, 139, 150, 155, 160, 165, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 206, 208, 209, 212, 219, 258], "implement": [0, 2, 3, 4, 5, 8, 9, 10, 11, 16, 17, 18, 20, 23, 24, 25, 26, 29, 30, 31, 33, 34, 35, 37, 39, 40, 41, 44, 47, 49, 51, 59, 60, 61, 62, 63, 64, 65, 66, 77, 86, 87, 88, 90, 94, 96, 101, 102, 103, 104, 105, 106, 107, 111, 116, 120, 121, 122, 123, 124, 125, 126, 132, 134, 135, 136, 138, 139, 141, 142, 144, 150, 151, 153, 154, 155, 157, 160, 163, 164, 165, 167, 170, 172, 174, 175, 181, 182, 183, 184, 186, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 206, 207, 208, 209, 210, 211, 212, 213, 214, 216, 218, 219, 222, 223, 226, 227, 230, 233, 234, 238, 239, 248, 250, 254, 257, 258, 259, 263, 264], "standard": [0, 2, 3, 4, 5, 7, 26, 98, 102, 116, 124, 126, 170, 175, 186, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 208, 209, 210, 212, 213, 214, 216, 217, 218, 257, 258, 261, 263, 264], "must": [0, 1, 2, 3, 4, 5, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 76, 77, 78, 79, 85, 86, 87, 88, 90, 91, 92, 93, 94, 95, 96, 97, 99, 100, 101, 102, 103, 104, 105, 106, 107, 109, 111, 113, 114, 115, 116, 117, 118, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 206, 208, 209, 210, 212, 214, 216, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 242, 243, 244, 246, 247, 248, 249, 250, 251, 252, 254, 256, 257, 258, 259, 262, 263], "provid": [0, 2, 3, 4, 5, 13, 14, 26, 59, 88, 95, 99, 102, 114, 116, 137, 140, 151, 155, 157, 169, 170, 172, 173, 185, 186, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 206, 207, 209, 210, 212, 213, 214, 217, 218, 219, 220, 222, 225, 226, 229, 230, 231, 233, 243, 254, 257, 258, 259, 261, 262, 263, 264], "support": [0, 1, 2, 3, 4, 5, 7, 9, 10, 11, 12, 13, 14, 16, 17, 18, 20, 21, 24, 26, 29, 31, 33, 35, 37, 39, 40, 42, 43, 44, 46, 47, 50, 51, 53, 57, 59, 60, 61, 62, 63, 64, 66, 86, 87, 88, 89, 90, 93, 94, 96, 97, 98, 101, 102, 103, 104, 105, 106, 107, 111, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 128, 129, 130, 131, 132, 134, 135, 137, 138, 139, 141, 142, 144, 145, 146, 147, 149, 150, 151, 155, 159, 161, 163, 164, 165, 166, 167, 171, 172, 173, 174, 175, 176, 181, 182, 183, 184, 187, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 204, 208, 209, 210, 215, 218, 219, 234, 235, 236, 238, 239, 240, 242, 243, 244, 246, 247, 248, 249, 250, 251, 252, 254, 256, 257, 258, 262, 263], "an": [0, 1, 5, 7, 9, 10, 11, 12, 13, 14, 15, 18, 19, 20, 21, 22, 23, 26, 28, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 76, 77, 78, 79, 83, 85, 86, 87, 88, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 114, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 192, 199, 201, 204, 206, 207, 208, 209, 210, 211, 213, 214, 216, 217, 218, 220, 221, 222, 224, 225, 226, 228, 229, 230, 231, 232, 233, 234, 235, 237, 238, 239, 240, 242, 243, 244, 247, 248, 249, 250, 251, 252, 254, 256, 257, 258, 259, 261, 263, 264], "have": [0, 1, 2, 5, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 55, 57, 58, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 76, 77, 78, 79, 85, 86, 87, 88, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 103, 104, 105, 106, 107, 108, 109, 111, 113, 115, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 192, 204, 206, 207, 209, 210, 213, 216, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 242, 243, 244, 246, 247, 248, 249, 250, 251, 252, 254, 256, 258, 259, 262, 263, 264], "follow": [0, 1, 2, 3, 4, 5, 7, 10, 11, 12, 26, 44, 49, 61, 62, 64, 66, 88, 90, 98, 101, 103, 108, 110, 111, 113, 115, 116, 123, 125, 141, 142, 150, 154, 159, 166, 176, 181, 182, 183, 184, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 204, 206, 208, 209, 211, 212, 213, 214, 219, 220, 222, 224, 225, 226, 228, 229, 230, 231, 233, 242, 248, 256, 258, 259, 261, 262, 263, 264], "furthermor": [0, 262, 265], "minimum": [0, 9, 17, 20, 44, 134, 138, 142, 191, 206, 208], "rank": [0, 1, 13, 14, 95, 137, 140, 144, 160, 169, 173, 176, 177, 185, 187, 192, 206, 220, 222, 224, 225, 226, 228, 229, 230, 231, 233, 235, 242, 244, 248, 250, 254, 256, 262], "i": [0, 1, 2, 5, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 23, 24, 25, 26, 29, 30, 31, 33, 34, 35, 37, 39, 40, 41, 42, 43, 44, 47, 49, 51, 55, 57, 59, 60, 61, 62, 63, 64, 65, 66, 69, 71, 74, 76, 77, 78, 79, 83, 85, 86, 87, 88, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 109, 113, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 132, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 199, 201, 204, 205, 206, 208, 209, 210, 212, 213, 214, 216, 217, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 242, 243, 244, 246, 247, 248, 249, 250, 251, 252, 254, 256, 257, 258, 259, 261, 262, 263, 264, 265], "e": [0, 1, 2, 5, 7, 9, 10, 11, 18, 19, 20, 26, 40, 43, 47, 49, 51, 55, 57, 62, 63, 65, 66, 69, 71, 76, 77, 78, 86, 87, 88, 90, 93, 94, 95, 100, 101, 102, 107, 109, 115, 116, 122, 123, 124, 125, 126, 132, 134, 136, 137, 138, 140, 141, 142, 144, 145, 146, 147, 149, 150, 151, 152, 154, 155, 157, 159, 160, 162, 163, 164, 165, 166, 168, 169, 170, 172, 173, 174, 175, 176, 177, 181, 182, 183, 184, 186, 191, 192, 199, 201, 206, 207, 208, 209, 210, 211, 212, 213, 216, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 233, 235, 238, 239, 242, 244, 247, 249, 250, 251, 252, 254, 256, 257, 258, 259, 262, 263, 264], "number": [0, 1, 5, 9, 10, 11, 12, 13, 14, 16, 17, 18, 25, 26, 31, 33, 35, 37, 39, 44, 56, 58, 60, 61, 62, 63, 64, 65, 66, 73, 76, 79, 82, 87, 88, 90, 93, 94, 95, 96, 97, 98, 100, 101, 103, 105, 106, 107, 108, 109, 111, 117, 118, 120, 121, 122, 123, 125, 134, 135, 136, 137, 138, 139, 140, 141, 142, 144, 145, 146, 147, 148, 150, 151, 152, 154, 155, 157, 158, 159, 160, 161, 162, 164, 165, 166, 167, 169, 170, 172, 173, 175, 176, 177, 180, 181, 182, 185, 186, 187, 192, 199, 201, 212, 215, 220, 222, 224, 225, 226, 228, 229, 230, 231, 233, 234, 238, 239, 240, 244, 248, 249, 250, 251, 254, 258, 262, 263], "dimens": [0, 1, 13, 14, 16, 17, 19, 40, 55, 56, 57, 58, 78, 88, 95, 99, 111, 132, 133, 134, 136, 138, 140, 144, 148, 151, 155, 156, 158, 168, 169, 170, 172, 173, 176, 177, 178, 179, 181, 182, 183, 184, 185, 186, 187, 192, 201, 220, 222, 223, 224, 225, 226, 228, 229, 230, 231, 233, 234, 235, 236, 237, 238, 239, 240, 242, 243, 244, 247, 248, 249, 250, 251, 252, 254, 256, 262], "0": [0, 1, 5, 9, 10, 11, 12, 15, 24, 25, 26, 29, 35, 38, 48, 57, 61, 62, 63, 64, 65, 66, 69, 71, 76, 78, 85, 86, 87, 90, 93, 94, 95, 96, 97, 98, 100, 101, 107, 123, 124, 125, 126, 134, 135, 136, 138, 139, 141, 143, 148, 150, 151, 153, 154, 159, 160, 161, 162, 163, 164, 166, 169, 170, 172, 174, 175, 176, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 192, 199, 201, 209, 210, 221, 223, 232, 237, 242, 249, 251, 252, 254, 256, 262, 264], "1": [0, 1, 7, 10, 11, 13, 14, 15, 18, 25, 26, 27, 29, 35, 40, 61, 62, 63, 64, 65, 66, 85, 86, 87, 88, 94, 95, 96, 97, 98, 101, 122, 123, 124, 125, 126, 132, 146, 147, 148, 150, 151, 153, 155, 156, 160, 161, 162, 165, 169, 170, 174, 175, 176, 177, 178, 179, 186, 187, 192, 209, 210, 217, 220, 221, 222, 224, 225, 226, 228, 229, 230, 231, 232, 233, 235, 238, 240, 242, 250, 251, 252, 256], "2": [0, 1, 5, 7, 9, 10, 11, 26, 27, 40, 61, 62, 64, 65, 66, 80, 86, 87, 90, 123, 125, 126, 132, 164, 167, 174, 175, 176, 177, 192, 209, 210, 218, 221, 224, 228, 229, 230, 231, 232, 233, 242, 244, 247, 248, 249, 250, 251, 252, 253, 254, 256], "3": [0, 1, 5, 7, 27, 84, 173, 177, 204, 209, 210, 213, 235], "4": [0, 1, 5, 10, 11, 27, 62, 65, 123, 125, 177, 192, 217, 263], "explicitli": [0, 26, 40, 63, 111, 132, 173, 176, 192, 204, 206, 234, 238, 239, 248, 250, 258, 262, 264], "document": [0, 5, 7, 59, 101, 116, 155, 194, 199, 207, 209, 212, 214, 257, 259, 261, 263, 264, 265], "maximum": [0, 1, 16, 26, 111, 122, 134, 138, 191, 206, 208, 242], "n": [0, 1, 13, 14, 40, 55, 86, 88, 95, 122, 132, 133, 136, 137, 140, 144, 148, 151, 155, 160, 169, 170, 172, 174, 175, 176, 177, 178, 179, 185, 186, 187, 192, 206, 220, 221, 222, 224, 225, 226, 228, 229, 230, 231, 232, 233, 234, 235, 237, 238, 239, 240, 242, 243, 244, 246, 247, 248, 251, 252, 254, 256, 262], "zero": [0, 5, 13, 14, 16, 17, 24, 25, 29, 30, 34, 35, 40, 41, 47, 63, 65, 69, 88, 90, 95, 96, 97, 101, 107, 125, 128, 129, 130, 131, 132, 134, 135, 136, 137, 138, 139, 141, 144, 146, 147, 150, 151, 154, 160, 162, 170, 172, 178, 179, 180, 181, 182, 183, 184, 186, 187, 190, 191, 192, 199, 201, 206, 207, 209, 212, 220, 222, 223, 224, 225, 226, 228, 229, 230, 231, 233, 236, 243, 244, 247, 248, 249, 256, 264], "dimension": [0, 13, 14, 15, 16, 17, 19, 24, 25, 29, 34, 35, 40, 88, 97, 122, 132, 134, 136, 137, 138, 144, 151, 155, 160, 170, 172, 173, 181, 182, 183, 184, 186, 187, 192, 201, 206, 218, 220, 222, 224, 225, 226, 228, 229, 230, 231, 233, 235, 236, 239, 240, 244, 246, 247, 256, 258, 262], "apart": 0, "from": [0, 5, 13, 14, 15, 19, 26, 44, 59, 60, 63, 75, 78, 88, 92, 99, 101, 102, 103, 104, 107, 122, 123, 125, 137, 142, 147, 150, 151, 156, 157, 166, 168, 170, 172, 173, 175, 181, 183, 186, 187, 188, 190, 192, 201, 204, 206, 207, 208, 209, 212, 213, 214, 216, 220, 222, 224, 225, 226, 228, 229, 230, 231, 233, 235, 238, 249, 251, 254, 258, 259, 261, 262, 263, 264, 265], "ndim": [0, 187, 191, 235, 248, 251, 252], "devic": [0, 5, 15, 26, 27, 59, 60, 63, 91, 92, 97, 102, 103, 104, 110, 112, 113, 115, 122, 146, 147, 155, 178, 179, 189, 190, 191, 192, 194, 206, 212, 215, 221, 232, 248, 258, 262, 264], "dtype": [0, 5, 15, 26, 60, 63, 73, 75, 88, 89, 91, 92, 97, 98, 102, 103, 104, 108, 110, 116, 122, 146, 147, 151, 157, 172, 189, 190, 191, 201, 204, 206, 212, 218, 254, 262, 263, 264], "all": [0, 5, 15, 19, 23, 26, 60, 63, 87, 90, 97, 99, 102, 111, 115, 141, 158, 164, 175, 177, 178, 179, 185, 187, 191, 192, 204, 206, 207, 209, 210, 211, 212, 213, 214, 216, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 233, 235, 247, 249, 250, 256, 257, 258, 261, 262, 264, 265], "thi": [0, 1, 5, 7, 15, 19, 26, 34, 58, 59, 63, 71, 78, 96, 101, 102, 107, 111, 115, 116, 122, 125, 128, 129, 130, 131, 136, 144, 150, 154, 155, 169, 170, 173, 181, 182, 183, 184, 186, 191, 192, 199, 201, 204, 206, 207, 208, 209, 210, 211, 212, 213, 214, 216, 217, 218, 219, 220, 222, 223, 225, 226, 229, 230, 231, 233, 248, 249, 250, 251, 257, 258, 259, 261, 263, 264, 265], "return": [0, 5, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 194, 199, 206, 207, 208, 210, 212, 213, 216, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 242, 243, 244, 246, 247, 248, 249, 250, 251, 252, 254, 256, 258, 262, 264], "tupl": [0, 1, 13, 14, 26, 27, 32, 49, 57, 74, 78, 91, 99, 103, 115, 116, 134, 136, 138, 140, 144, 146, 148, 151, 156, 158, 168, 169, 170, 172, 176, 177, 181, 182, 183, 185, 186, 189, 192, 204, 238, 248, 249, 251, 253, 256, 262], "includ": [0, 1, 7, 9, 13, 14, 15, 16, 17, 20, 21, 23, 28, 30, 40, 41, 42, 43, 47, 51, 88, 107, 111, 115, 116, 118, 122, 132, 134, 136, 138, 151, 155, 166, 170, 172, 186, 191, 192, 201, 206, 207, 208, 209, 210, 211, 212, 213, 217, 242, 256, 258, 259, 261, 263, 264], "those": [0, 5, 7, 15, 23, 88, 90, 113, 115, 141, 144, 151, 155, 172, 201, 206, 209, 210, 213, 214, 216, 248, 251, 252, 254, 257, 258, 259, 262, 263, 264], "mean": [0, 26, 191, 204, 210, 212, 213, 218, 259, 262], "var": [0, 191], "std": [0, 191], "which": [0, 1, 5, 7, 8, 13, 14, 15, 16, 17, 18, 19, 26, 30, 40, 41, 44, 59, 60, 63, 75, 77, 78, 83, 88, 91, 92, 95, 97, 98, 99, 101, 102, 103, 104, 107, 108, 111, 113, 114, 115, 122, 132, 134, 136, 138, 142, 144, 146, 147, 151, 154, 155, 158, 160, 165, 169, 170, 172, 173, 174, 178, 179, 181, 182, 183, 184, 185, 186, 187, 189, 190, 192, 206, 207, 208, 209, 210, 211, 212, 213, 214, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 235, 242, 250, 251, 252, 254, 256, 257, 258, 259, 262, 263, 264], "some": [0, 96, 101, 113, 115, 125, 192, 207, 208, 209, 210, 213, 218, 262, 264, 265], "common": [0, 192, 201, 204, 213, 216, 217, 258, 262, 263, 264], "librari": [0, 5, 7, 26, 51, 57, 58, 59, 60, 63, 90, 96, 101, 102, 111, 113, 115, 116, 122, 125, 128, 129, 130, 131, 134, 135, 136, 138, 139, 144, 155, 160, 170, 175, 181, 182, 183, 184, 186, 191, 192, 204, 206, 207, 208, 209, 210, 211, 212, 213, 214, 216, 217, 218, 234, 238, 239, 248, 250, 257, 258, 259, 262, 263, 264, 265], "g": [0, 5, 9, 19, 20, 26, 47, 51, 57, 77, 88, 90, 102, 107, 109, 115, 116, 122, 134, 138, 141, 144, 151, 152, 155, 157, 159, 172, 177, 181, 182, 183, 184, 192, 199, 201, 206, 207, 208, 209, 210, 211, 212, 213, 216, 224, 228, 229, 230, 231, 233, 238, 239, 242, 249, 251, 252, 254, 256, 257, 258, 259, 262, 263, 264], "numpi": [0, 19, 63, 192, 204, 209, 210, 212, 213, 258, 262, 263, 264, 265], "scalar": [0, 2, 49, 60, 191, 192, 206, 216, 256, 264], "valu": [0, 1, 2, 5, 7, 9, 10, 11, 12, 15, 16, 17, 18, 20, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 37, 39, 41, 43, 49, 51, 57, 58, 60, 61, 62, 63, 64, 65, 66, 76, 77, 78, 85, 86, 87, 88, 89, 90, 91, 93, 94, 96, 97, 98, 100, 101, 103, 104, 105, 106, 107, 111, 113, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 134, 135, 136, 138, 139, 141, 143, 144, 145, 146, 150, 151, 154, 155, 159, 160, 161, 162, 163, 164, 165, 166, 170, 172, 173, 174, 175, 180, 181, 182, 183, 184, 186, 187, 189, 191, 199, 201, 204, 206, 208, 210, 211, 212, 216, 218, 221, 224, 228, 229, 230, 231, 232, 233, 234, 238, 239, 240, 242, 243, 244, 247, 248, 249, 250, 251, 252, 254, 256, 258, 262, 264], "rational": [0, 7, 88, 151, 172, 192, 212, 213, 254, 257, 259, 262], "alwai": [0, 12, 26, 42, 60, 63, 98, 102, 141, 156, 192, 204, 209, 210, 213, 238], "necessari": [0, 26, 60, 90, 102, 141, 156, 177, 192, 210, 262], "acceler": [0, 5, 107, 155, 204, 212], "where": [0, 1, 7, 13, 14, 15, 26, 47, 57, 65, 86, 87, 90, 94, 96, 97, 101, 103, 104, 124, 125, 126, 137, 141, 144, 148, 150, 155, 160, 161, 163, 164, 169, 170, 174, 175, 177, 185, 186, 187, 191, 192, 201, 207, 209, 212, 213, 216, 220, 222, 224, 225, 226, 228, 229, 230, 231, 233, 234, 235, 238, 239, 240, 242, 244, 247, 248, 249, 250, 251, 252, 254, 258, 262, 263, 264], "non": [0, 1, 7, 13, 14, 16, 17, 63, 128, 129, 130, 131, 134, 136, 138, 144, 151, 170, 176, 186, 187, 192, 201, 206, 207, 213, 220, 222, 225, 226, 229, 230, 231, 233, 235, 236, 238, 242, 244, 251, 256, 264], "could": [0, 26, 181, 182, 183, 184, 204, 210, 217, 258, 262, 264], "forc": 0, "synchron": [0, 26, 59, 155, 262], "delai": [0, 24, 25, 29, 34, 35, 204, 216, 262], "execut": [0, 201, 204, 213, 215, 217, 262, 264], "model": [0, 57, 58, 90, 141, 209, 216, 264], "repres": [0, 8, 11, 12, 23, 24, 25, 26, 29, 34, 35, 62, 66, 87, 90, 101, 137, 141, 164, 174, 175, 206, 208, 212, 213, 249, 263, 264], "futur": [0, 26, 102, 205, 209, 210, 213, 217, 218, 238, 239, 260, 262, 264], "python": [0, 2, 5, 7, 24, 25, 26, 29, 34, 35, 49, 60, 101, 102, 154, 191, 192, 204, 206, 209, 212, 214, 216, 217, 218, 259, 261, 262, 263], "x": [0, 1, 5, 7, 9, 10, 11, 13, 14, 16, 17, 18, 20, 26, 61, 62, 63, 64, 65, 66, 68, 74, 76, 77, 79, 85, 86, 87, 88, 92, 94, 95, 96, 99, 100, 102, 104, 109, 117, 118, 119, 123, 124, 125, 126, 129, 133, 134, 136, 138, 140, 142, 144, 147, 148, 149, 151, 152, 153, 155, 156, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 172, 173, 174, 175, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 190, 192, 209, 210, 218, 219, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 233, 234, 236, 237, 238, 239, 240, 242, 243, 244, 245, 247, 248, 249, 250, 251, 252, 254, 256, 258, 262, 264], "__pos__": [0, 191, 206], "po": 0, "__neg__": [0, 191, 206], "neg": [0, 13, 14, 15, 44, 47, 65, 78, 88, 90, 95, 97, 99, 101, 118, 123, 125, 141, 150, 154, 158, 162, 166, 173, 176, 187, 191, 192, 206, 209, 220, 222, 224, 225, 226, 228, 229, 230, 231, 233, 235, 256, 262], "x1": [0, 7, 12, 40, 65, 67, 69, 70, 71, 72, 77, 85, 90, 93, 101, 105, 106, 107, 120, 121, 127, 128, 130, 131, 132, 135, 139, 141, 143, 145, 150, 154, 160, 171, 176, 187, 188, 206, 235, 241, 246, 250, 253, 255], "x2": [0, 7, 12, 40, 65, 67, 69, 70, 71, 72, 85, 90, 93, 101, 105, 106, 107, 120, 121, 127, 128, 130, 131, 132, 135, 139, 141, 143, 145, 150, 154, 160, 171, 176, 187, 188, 206, 235, 241, 246, 250, 253, 255], "__add__": [0, 50, 191, 206], "add": [0, 7, 21, 88, 171, 172, 191, 192, 206, 207, 208, 213, 254], "__sub__": [0, 191, 206], "sub": [0, 192], "__mul__": [0, 191, 206], "mul": 0, "__truediv__": [0, 191, 206], "truediv": 0, "__floordiv__": [0, 191], "floordiv": 0, "__mod__": [0, 191], "mod": 0, "__pow__": [0, 191, 206], "pow": [0, 47, 191, 206, 208], "should": [0, 1, 5, 7, 9, 10, 11, 12, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 29, 30, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 50, 51, 52, 55, 57, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 76, 77, 79, 85, 86, 87, 88, 90, 94, 95, 96, 98, 100, 101, 102, 105, 106, 107, 109, 113, 115, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 134, 135, 136, 137, 138, 139, 141, 142, 143, 149, 150, 151, 152, 153, 154, 156, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 170, 171, 172, 174, 175, 176, 178, 179, 180, 181, 182, 183, 184, 186, 187, 192, 199, 206, 207, 208, 209, 212, 213, 214, 218, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 233, 234, 235, 236, 238, 239, 240, 242, 243, 244, 247, 248, 249, 250, 251, 252, 254, 256, 257, 258, 262, 264, 265], "defin": [0, 5, 12, 23, 30, 41, 49, 60, 65, 79, 90, 101, 103, 104, 115, 122, 134, 135, 136, 138, 139, 140, 141, 154, 161, 166, 167, 170, 178, 179, 186, 187, 191, 194, 199, 206, 208, 209, 218, 222, 223, 226, 227, 230, 233, 234, 238, 239, 240, 247, 248, 250, 258, 263, 264, 265], "real": [0, 5, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 24, 25, 29, 30, 31, 33, 35, 37, 39, 41, 44, 51, 60, 61, 62, 63, 64, 65, 66, 76, 77, 85, 86, 87, 88, 90, 91, 93, 94, 96, 97, 98, 100, 101, 103, 105, 106, 107, 113, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 134, 135, 136, 138, 139, 141, 142, 143, 144, 145, 146, 147, 150, 151, 154, 159, 160, 161, 162, 163, 164, 165, 166, 170, 172, 174, 175, 180, 186, 187, 189, 191, 201, 206, 209, 221, 224, 228, 229, 230, 231, 232, 233, 234, 238, 239, 240, 242, 244, 247, 248, 249, 250, 251, 252, 254, 256, 259], "data": [0, 1, 2, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76, 77, 78, 79, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 111, 113, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 156, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 186, 187, 188, 189, 190, 191, 194, 201, 204, 207, 209, 210, 213, 215, 216, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 242, 243, 244, 246, 247, 248, 249, 250, 251, 252, 254, 256, 258, 259, 260, 261, 262, 265], "type": [0, 2, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 55, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76, 77, 78, 79, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 113, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 190, 191, 192, 194, 204, 207, 209, 210, 212, 214, 215, 216, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 242, 243, 244, 246, 247, 248, 249, 250, 251, 252, 254, 256, 258, 259, 262, 263], "__matmul__": [0, 191, 206], "matmul": [0, 40, 191, 201, 206, 258], "The": [0, 1, 5, 7, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 22, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 55, 57, 58, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 76, 77, 78, 79, 85, 86, 87, 88, 90, 93, 94, 96, 99, 100, 101, 102, 105, 106, 107, 109, 110, 111, 113, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 138, 139, 140, 141, 142, 143, 144, 145, 148, 149, 150, 151, 152, 153, 154, 155, 159, 160, 161, 162, 163, 164, 165, 166, 167, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 186, 187, 188, 192, 201, 204, 206, 207, 208, 210, 211, 212, 213, 216, 217, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 242, 243, 244, 246, 247, 248, 249, 250, 251, 252, 254, 256, 257, 258, 259, 261, 262, 263, 264, 265], "__invert__": [0, 191], "inv": [0, 206, 258], "invert": [0, 68, 240, 243, 250], "__inv__": 0, "__and__": [0, 191], "__or__": [0, 191], "__xor__": [0, 191], "xor": [0, 72, 131], "__lshift__": [0, 191], "lshift": 0, "__rshift__": [0, 191], "rshift": 0, "integ": [0, 5, 9, 13, 14, 15, 20, 22, 26, 29, 30, 34, 35, 36, 38, 41, 44, 45, 47, 48, 51, 52, 60, 67, 68, 69, 70, 71, 72, 76, 77, 88, 90, 100, 101, 103, 104, 108, 111, 115, 116, 122, 134, 136, 138, 142, 150, 151, 154, 155, 157, 159, 160, 170, 172, 173, 180, 186, 187, 191, 192, 206, 208, 209, 220, 222, 224, 225, 226, 228, 229, 230, 231, 233, 235, 243, 244, 254, 256, 262], "boolean": [0, 5, 22, 24, 25, 26, 29, 35, 36, 43, 45, 52, 57, 60, 63, 67, 68, 70, 72, 88, 89, 102, 103, 104, 111, 115, 116, 122, 128, 129, 130, 131, 144, 191, 201, 206], "__lt__": [0, 191, 206], "lt": 0, "__le__": [0, 191, 206], "le": 0, "__gt__": [0, 191, 206], "gt": [0, 248, 251], "__ge__": [0, 191, 206], "ge": 0, "__eq__": [0, 191, 206, 213], "eq": 0, "__ne__": [0, 191, 206], "ne": 0, "ar": [0, 1, 5, 7, 15, 16, 17, 19, 23, 24, 25, 26, 27, 29, 34, 35, 40, 49, 55, 58, 60, 77, 85, 86, 89, 90, 94, 97, 98, 99, 101, 102, 107, 114, 115, 122, 128, 129, 130, 131, 132, 141, 144, 150, 155, 158, 159, 163, 174, 175, 177, 181, 183, 187, 192, 201, 204, 206, 207, 208, 209, 210, 211, 212, 213, 214, 216, 217, 218, 220, 221, 222, 223, 225, 226, 227, 229, 230, 231, 232, 233, 235, 238, 239, 244, 247, 248, 251, 257, 258, 259, 262, 263, 264, 265], "onli": [0, 1, 5, 7, 16, 17, 23, 26, 40, 57, 58, 63, 99, 102, 107, 113, 115, 116, 122, 128, 129, 130, 131, 132, 136, 170, 186, 187, 191, 192, 201, 204, 206, 207, 209, 210, 212, 213, 214, 216, 218, 223, 235, 240, 247, 248, 250, 258, 259, 262, 263, 264, 265], "other": [0, 5, 21, 22, 23, 26, 28, 30, 31, 33, 37, 38, 39, 40, 41, 42, 43, 45, 47, 48, 50, 51, 52, 63, 89, 90, 96, 101, 102, 125, 140, 141, 170, 186, 192, 194, 204, 206, 208, 209, 210, 211, 212, 213, 214, 218, 235, 247, 257, 258, 261, 262, 264], "ani": [0, 1, 9, 10, 11, 23, 24, 25, 26, 28, 29, 34, 35, 43, 59, 61, 62, 66, 89, 93, 107, 117, 118, 145, 166, 191, 192, 201, 206, 209, 210, 212, 218, 251, 259, 261, 262, 265], "For": [0, 1, 5, 7, 9, 10, 11, 12, 16, 17, 18, 20, 24, 25, 26, 29, 30, 31, 33, 35, 37, 39, 41, 44, 57, 58, 61, 62, 64, 65, 66, 76, 79, 85, 86, 87, 88, 90, 93, 94, 96, 100, 101, 105, 106, 107, 113, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 134, 135, 137, 138, 139, 141, 142, 143, 145, 150, 151, 153, 154, 155, 159, 160, 161, 162, 163, 164, 165, 166, 167, 169, 172, 174, 175, 180, 181, 182, 183, 184, 192, 199, 204, 208, 209, 211, 213, 216, 221, 230, 232, 249, 251, 252, 254, 262, 264, 265], "backward": [0, 13, 14, 16, 17, 18, 31, 33, 37, 39, 105, 106, 120, 121, 122, 134, 135, 138, 139, 154, 165, 187, 192, 206, 209, 210, 214, 220, 222, 224, 225, 226, 228, 229, 230, 231, 233, 235, 262], "compat": [0, 1, 12, 13, 14, 16, 17, 18, 21, 22, 26, 28, 30, 31, 33, 37, 38, 39, 40, 41, 42, 43, 45, 47, 48, 49, 50, 51, 52, 65, 67, 69, 70, 71, 72, 74, 77, 85, 90, 93, 101, 105, 106, 107, 120, 121, 122, 127, 128, 130, 131, 132, 134, 135, 136, 138, 139, 141, 143, 145, 150, 151, 154, 155, 156, 165, 170, 171, 172, 186, 187, 188, 201, 206, 209, 210, 214, 235, 242, 244, 247, 250, 256, 262, 264], "mai": [0, 5, 7, 15, 16, 17, 18, 23, 26, 28, 31, 33, 37, 39, 43, 51, 57, 58, 59, 60, 89, 90, 93, 101, 102, 105, 106, 107, 110, 115, 116, 120, 121, 122, 128, 129, 130, 131, 134, 135, 136, 138, 139, 141, 144, 145, 155, 156, 160, 165, 170, 175, 181, 182, 183, 184, 186, 191, 192, 199, 201, 204, 207, 208, 209, 210, 211, 212, 213, 214, 216, 217, 218, 238, 248, 249, 251, 257, 258, 262, 263, 264], "complex": [0, 5, 9, 10, 11, 12, 13, 14, 16, 17, 18, 20, 21, 24, 25, 29, 31, 33, 35, 37, 39, 40, 42, 43, 44, 46, 47, 50, 51, 60, 61, 62, 63, 64, 66, 79, 86, 87, 88, 90, 93, 94, 96, 97, 98, 103, 104, 105, 106, 107, 109, 113, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 132, 134, 135, 137, 138, 139, 141, 142, 144, 145, 146, 147, 149, 150, 151, 152, 159, 161, 163, 164, 165, 166, 167, 171, 172, 174, 175, 176, 181, 182, 183, 184, 187, 201, 208, 212, 213, 215, 216, 220, 222, 224, 225, 226, 228, 229, 230, 231, 233, 234, 235, 236, 238, 239, 240, 242, 243, 244, 246, 247, 248, 249, 250, 251, 252, 254, 256, 258, 262, 263], "howev": [0, 5, 16, 17, 18, 31, 33, 37, 39, 57, 88, 101, 105, 106, 107, 116, 120, 121, 122, 134, 135, 138, 139, 155, 160, 165, 173, 174, 175, 204, 207, 208, 209, 210, 211, 213, 258, 259, 262, 264], "inequ": [0, 16, 17, 18, 31, 33, 37, 39, 105, 106, 120, 121, 134, 135, 138, 139, 165], "unspecifi": [0, 5, 10, 11, 16, 17, 18, 30, 31, 33, 37, 39, 41, 47, 51, 60, 62, 66, 77, 78, 87, 90, 94, 96, 101, 103, 104, 105, 106, 120, 121, 122, 134, 135, 138, 139, 150, 154, 160, 164, 165, 166, 169, 173, 175, 192, 199, 201, 206, 222, 223, 226, 227, 230, 233, 238, 239, 262], "thu": [0, 5, 16, 17, 18, 30, 31, 33, 37, 39, 41, 47, 57, 60, 71, 77, 101, 103, 104, 105, 106, 120, 121, 122, 134, 135, 138, 139, 150, 154, 160, 165, 174, 175, 192, 199, 208, 209, 222, 223, 226, 227, 230, 233, 238, 239, 251, 258], "depend": [0, 5, 9, 10, 11, 16, 17, 18, 20, 26, 29, 31, 33, 37, 39, 44, 47, 51, 57, 58, 59, 61, 62, 63, 64, 65, 66, 77, 86, 87, 90, 94, 96, 105, 106, 111, 120, 121, 122, 123, 124, 125, 126, 141, 142, 150, 160, 163, 164, 165, 174, 175, 188, 199, 201, 208, 209, 212, 215, 216, 218, 238, 239, 248, 249, 250, 251, 258, 262, 264, 265], "see": [0, 5, 10, 11, 12, 13, 14, 16, 17, 18, 21, 22, 26, 28, 30, 31, 33, 34, 37, 38, 39, 40, 41, 42, 43, 45, 47, 48, 49, 50, 51, 52, 53, 59, 61, 62, 64, 65, 66, 67, 69, 70, 71, 72, 74, 77, 85, 90, 93, 96, 101, 102, 104, 105, 106, 107, 111, 114, 120, 121, 123, 125, 127, 128, 130, 131, 132, 134, 135, 136, 138, 139, 141, 143, 144, 145, 150, 151, 153, 154, 155, 157, 161, 165, 166, 167, 170, 171, 172, 181, 182, 183, 184, 186, 187, 188, 191, 192, 201, 203, 204, 207, 209, 211, 212, 213, 218, 235, 242, 244, 247, 250, 256, 257, 262, 263, 264, 265], "order": [0, 5, 7, 16, 17, 18, 19, 26, 31, 33, 37, 39, 55, 60, 63, 65, 89, 99, 101, 102, 105, 106, 120, 121, 134, 135, 138, 139, 144, 155, 160, 165, 174, 175, 176, 181, 182, 183, 184, 192, 199, 201, 206, 208, 211, 212, 214, 229, 230, 238, 239, 242, 251, 252, 256, 258, 259, 262, 263], "chang": [0, 1, 9, 10, 11, 12, 13, 14, 20, 21, 24, 25, 26, 29, 34, 35, 40, 42, 43, 44, 46, 47, 50, 51, 59, 60, 61, 62, 63, 64, 66, 86, 87, 90, 93, 94, 96, 97, 98, 102, 103, 104, 117, 118, 119, 122, 123, 124, 125, 126, 132, 134, 137, 138, 141, 142, 144, 145, 146, 147, 149, 150, 151, 156, 159, 161, 163, 164, 166, 167, 171, 172, 173, 174, 175, 176, 181, 182, 183, 184, 187, 204, 220, 221, 222, 224, 225, 226, 229, 230, 232, 234, 235, 236, 238, 239, 240, 242, 243, 244, 246, 247, 248, 249, 250, 251, 252, 254, 256, 259, 262, 264, 265], "shape": [0, 1, 18, 40, 55, 63, 73, 74, 78, 88, 91, 92, 95, 99, 103, 104, 111, 132, 133, 137, 146, 147, 156, 158, 160, 165, 169, 173, 176, 177, 178, 179, 185, 187, 189, 190, 191, 206, 215, 216, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 236, 237, 238, 239, 240, 242, 243, 244, 246, 247, 248, 249, 250, 251, 252, 254, 262, 264], "result": [0, 1, 5, 9, 10, 11, 12, 13, 14, 15, 16, 17, 20, 21, 22, 24, 25, 28, 29, 30, 31, 33, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 76, 77, 79, 85, 86, 87, 90, 93, 94, 96, 100, 101, 105, 106, 107, 109, 117, 118, 119, 120, 121, 123, 124, 125, 126, 127, 128, 129, 130, 131, 134, 135, 136, 138, 139, 141, 142, 143, 145, 149, 150, 151, 152, 153, 154, 155, 157, 159, 160, 161, 162, 163, 164, 166, 167, 169, 170, 171, 172, 174, 175, 176, 180, 181, 186, 192, 199, 201, 206, 208, 209, 210, 216, 234, 235, 237, 242, 243, 249, 250, 256, 262, 263, 264, 265], "promot": [0, 1, 5, 10, 11, 12, 21, 22, 30, 40, 41, 42, 44, 45, 47, 49, 50, 51, 52, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 75, 78, 85, 86, 87, 90, 94, 96, 101, 104, 107, 122, 123, 124, 125, 126, 127, 132, 135, 136, 139, 141, 142, 150, 153, 154, 157, 163, 164, 166, 167, 169, 170, 171, 174, 175, 176, 186, 187, 188, 191, 206, 234, 235, 240, 242, 243, 244, 246, 247, 248, 249, 250, 256, 258], "rule": [0, 5, 7, 10, 11, 12, 21, 22, 30, 40, 41, 42, 44, 45, 47, 49, 50, 51, 52, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 75, 78, 85, 86, 87, 88, 90, 94, 96, 101, 103, 104, 107, 122, 123, 124, 125, 126, 127, 132, 135, 139, 141, 142, 150, 153, 154, 157, 161, 163, 164, 166, 167, 169, 171, 174, 175, 176, 187, 188, 191, 192, 206, 209, 212, 234, 235, 240, 242, 243, 244, 246, 247, 248, 249, 250, 256, 258, 262, 264], "broadcast": [0, 12, 13, 14, 16, 17, 21, 22, 28, 30, 31, 33, 37, 38, 39, 40, 41, 42, 43, 45, 47, 48, 49, 50, 51, 52, 65, 67, 69, 70, 71, 72, 73, 74, 77, 85, 90, 93, 101, 105, 106, 107, 120, 121, 127, 128, 130, 131, 132, 134, 135, 136, 138, 139, 141, 143, 145, 150, 151, 154, 155, 170, 171, 172, 176, 186, 187, 188, 191, 206, 235, 242, 244, 247, 250, 256, 262], "same": [0, 5, 7, 9, 12, 15, 18, 19, 20, 26, 32, 36, 38, 40, 41, 46, 48, 50, 55, 59, 63, 68, 73, 74, 76, 77, 78, 79, 88, 90, 92, 95, 98, 99, 100, 101, 102, 104, 109, 132, 133, 134, 136, 137, 138, 140, 141, 143, 147, 148, 149, 150, 151, 152, 154, 155, 156, 158, 159, 160, 161, 165, 168, 169, 170, 171, 172, 173, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 190, 192, 201, 204, 206, 209, 210, 212, 213, 218, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 233, 234, 236, 237, 238, 240, 243, 247, 248, 249, 251, 252, 254, 257, 258, 262, 264], "behavior": [0, 5, 47, 49, 59, 60, 63, 77, 90, 101, 103, 104, 107, 122, 141, 150, 154, 160, 173, 181, 182, 183, 184, 191, 192, 194, 201, 204, 206, 208, 209, 216, 217, 222, 223, 226, 227, 230, 233, 258, 259, 262, 263, 264, 265], "special": [0, 9, 10, 11, 12, 20, 21, 24, 25, 28, 29, 30, 35, 41, 42, 43, 47, 51, 61, 62, 64, 65, 66, 76, 85, 86, 87, 88, 90, 93, 94, 96, 100, 101, 107, 117, 118, 119, 123, 124, 125, 126, 127, 134, 135, 136, 138, 139, 141, 143, 145, 150, 151, 153, 154, 159, 161, 162, 163, 164, 166, 167, 170, 172, 174, 175, 180, 186, 206, 207, 209, 249, 254], "case": [0, 1, 5, 7, 9, 10, 11, 12, 15, 20, 21, 24, 25, 26, 28, 29, 30, 35, 41, 42, 43, 47, 51, 60, 61, 62, 64, 65, 66, 76, 85, 86, 87, 88, 90, 93, 94, 96, 100, 101, 102, 107, 117, 118, 119, 123, 124, 125, 126, 127, 134, 135, 136, 137, 138, 139, 141, 143, 145, 150, 151, 153, 154, 159, 161, 162, 163, 164, 166, 167, 170, 172, 174, 175, 180, 186, 192, 204, 206, 207, 208, 209, 210, 213, 214, 216, 248, 249, 251, 254, 258, 260, 262, 265], "its": [0, 5, 26, 40, 73, 90, 98, 132, 141, 156, 158, 208, 209, 212, 213, 257, 262, 263, 264], "respect": [0, 9, 12, 20, 21, 22, 28, 30, 31, 33, 37, 38, 39, 41, 42, 43, 45, 48, 50, 51, 52, 65, 67, 69, 70, 71, 72, 77, 87, 90, 93, 101, 105, 106, 107, 113, 120, 121, 122, 127, 128, 130, 131, 135, 137, 139, 140, 141, 143, 145, 154, 164, 171, 174, 175, 176, 181, 182, 187, 206, 208, 211, 213, 238, 248, 251], "binari": [0, 5, 67, 70, 72, 174, 175, 207], "two": [0, 1, 5, 15, 19, 40, 55, 65, 71, 97, 102, 132, 133, 137, 159, 176, 178, 179, 181, 182, 183, 184, 187, 192, 201, 212, 213, 216, 217, 222, 223, 226, 227, 230, 233, 234, 236, 237, 238, 239, 240, 242, 243, 244, 246, 247, 248, 249, 250, 251, 252, 254, 258, 262, 263, 264, 265], "operand": [0, 1, 9, 10, 11, 12, 24, 25, 29, 35, 61, 62, 64, 65, 66, 76, 85, 86, 87, 88, 90, 93, 94, 96, 100, 101, 107, 117, 118, 119, 123, 124, 125, 126, 127, 134, 135, 138, 139, 141, 143, 145, 150, 151, 153, 154, 159, 161, 162, 163, 164, 166, 167, 172, 174, 175, 180, 201, 206, 208, 249, 254], "assign": [0, 210], "exampl": [0, 5, 12, 23, 26, 115, 116, 169, 191, 192, 204, 209, 210, 211, 213, 216, 217, 218, 254, 258, 262, 264, 265], "after": [0, 1, 26, 40, 132, 166, 177], "addit": [0, 5, 7, 12, 26, 50, 59, 88, 115, 171, 191, 192, 201, 207, 209, 212, 258, 262, 263, 265], "modifi": [0, 26, 210, 261], "equal": [0, 1, 9, 10, 11, 18, 20, 21, 22, 26, 28, 30, 31, 33, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 58, 61, 62, 63, 64, 65, 66, 69, 71, 77, 87, 89, 94, 96, 97, 103, 104, 107, 116, 118, 123, 124, 125, 126, 136, 144, 145, 146, 147, 150, 151, 159, 164, 165, 166, 170, 172, 173, 175, 176, 177, 181, 182, 183, 184, 186, 191, 192, 199, 206, 209, 213, 220, 222, 224, 225, 226, 228, 229, 230, 231, 233, 235, 237, 243, 244, 247, 248, 249, 250, 254, 262], "equival": [0, 20, 21, 22, 28, 30, 31, 33, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 71, 101, 107, 128, 129, 130, 131, 154, 159, 173, 192, 201, 209, 210, 244, 247, 250, 256, 262], "discuss": [0, 93, 145, 206, 212, 213, 217, 262, 263, 264], "copi": [0, 1, 26, 59, 60, 63, 102, 156, 165, 206, 207, 212, 213, 215, 261, 262], "view": [0, 102, 215], "behaviour": [0, 215, 262, 264], "mutabl": [0, 215], "via": [0, 26, 101, 102, 173, 192, 207, 212, 213, 217, 219, 247, 257, 258, 259, 262], "__iadd__": 0, "__isub__": 0, "__imul__": 0, "__itruediv__": 0, "__ifloordiv__": 0, "__ipow__": 0, "__imod__": 0, "__imatmul__": 0, "__iand__": 0, "__ior__": 0, "__ixor__": 0, "__ilshift__": 0, "__irshift__": 0, "appli": [0, 12, 77, 78, 85, 90, 141, 157, 159, 169, 176, 192, 201, 204, 209, 220, 222, 225, 226, 229, 230, 231, 233, 244, 247, 258, 262, 264], "match": [0, 1, 5, 9, 20, 26, 63, 101, 154, 176, 181, 182, 214, 224, 228, 229, 230, 231, 233, 238, 239, 242, 256, 264], "op": [0, 201], "__radd__": 0, "__rsub__": 0, "__rmul__": 0, "__rtruediv__": 0, "__rfloordiv__": 0, "__rpow__": 0, "__rmod__": 0, "__rmatmul__": 0, "__rand__": 0, "__ror__": 0, "__rxor__": 0, "__rlshift__": 0, "__rrshift__": 0, "arrai": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 83, 85, 86, 87, 88, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 193, 194, 195, 196, 197, 198, 199, 200, 202, 203, 204, 206, 207, 208, 209, 210, 211, 212, 213, 214, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 263, 265], "refer": [1, 13, 14, 96, 97, 125, 170, 176, 177, 186, 187, 192, 209, 210, 218, 220, 222, 224, 225, 226, 228, 229, 230, 231, 233, 235, 250], "automat": [1, 262], "implicit": [1, 212, 213, 216, 262], "expans": [1, 262], "size": [1, 13, 14, 88, 95, 122, 144, 158, 168, 173, 176, 187, 191, 192, 211, 217, 220, 222, 224, 225, 226, 228, 229, 230, 231, 233, 235, 237, 246, 248, 251, 262], "without": [1, 7, 26, 57, 102, 113, 115, 144, 155, 156, 181, 182, 183, 184, 204, 207, 208, 211, 261, 262, 264], "purpos": [1, 5, 96, 107, 125, 204, 249, 258, 260, 261, 264], "make": [1, 7, 204, 207, 208, 210, 212, 216, 220, 222, 224, 225, 226, 228, 229, 230, 231, 233, 257, 259, 262], "differ": [1, 12, 26, 49, 50, 77, 78, 88, 90, 98, 101, 102, 141, 151, 169, 171, 172, 192, 204, 210, 213, 214, 216, 227, 238, 248, 249, 251, 254, 258, 262, 263, 264], "element": [1, 9, 10, 11, 12, 13, 14, 15, 20, 21, 22, 24, 25, 28, 29, 30, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 54, 58, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 76, 77, 79, 85, 86, 87, 88, 90, 93, 94, 96, 97, 99, 100, 101, 103, 104, 105, 106, 107, 109, 117, 118, 119, 120, 121, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 134, 135, 136, 138, 139, 141, 142, 143, 144, 145, 149, 150, 151, 152, 153, 154, 155, 156, 158, 159, 160, 161, 162, 163, 164, 166, 167, 168, 170, 171, 172, 173, 174, 175, 177, 178, 179, 180, 181, 182, 183, 184, 186, 188, 191, 192, 206, 208, 220, 222, 224, 225, 226, 228, 229, 230, 231, 233, 235, 238, 247, 248, 249, 251, 254, 262], "wise": [1, 9, 10, 12, 20, 21, 22, 28, 30, 31, 33, 36, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 61, 64, 65, 67, 68, 69, 70, 71, 72, 77, 79, 85, 90, 93, 101, 105, 106, 107, 109, 120, 121, 127, 128, 129, 130, 131, 135, 139, 141, 143, 145, 150, 152, 153, 154, 171, 191, 206, 208, 262], "oper": [1, 12, 19, 24, 26, 34, 40, 57, 58, 59, 61, 64, 71, 86, 88, 90, 101, 124, 126, 132, 141, 150, 151, 153, 154, 157, 163, 167, 172, 174, 176, 191, 192, 198, 201, 206, 209, 210, 211, 212, 213, 254, 258, 259, 262, 263, 264], "facilit": [1, 199, 204], "user": [1, 7, 26, 110, 175, 204, 207, 208, 210, 213, 217, 258, 262, 263, 264], "ergonom": 1, "encourag": [1, 262, 263], "avoid": [1, 9, 63, 90, 96, 101, 107, 125, 141, 156, 207, 210, 213, 216, 258, 262, 264], "unnecessari": [1, 258], "can": [1, 7, 26, 60, 75, 110, 114, 116, 192, 201, 204, 207, 209, 210, 212, 213, 218, 247, 248, 251, 257, 258, 262, 263, 264, 265], "potenti": [1, 26, 96, 111, 125, 155, 210, 262], "enabl": [1, 26, 102, 213, 217, 218, 262], "more": [1, 5, 7, 15, 19, 26, 40, 58, 60, 63, 73, 88, 96, 99, 101, 125, 132, 144, 150, 155, 173, 181, 182, 183, 184, 192, 201, 204, 207, 208, 209, 210, 211, 212, 213, 214, 217, 218, 222, 223, 226, 227, 230, 233, 249, 258, 259, 262, 263, 265], "memori": [1, 26, 60, 102, 204, 210, 211, 213, 262, 264], "effici": [1, 204, 210], "through": [1, 60, 65, 257, 259, 263, 264], "vector": [1, 40, 132, 137, 187, 235, 246, 251, 252, 256, 258, 262], "reduc": [1, 13, 14, 16, 17, 134, 136, 138, 151, 170, 172, 186, 192, 248, 251, 258, 263, 264], "consumpt": [1, 26, 263], "cach": 1, "local": [1, 213], "given": [1, 23, 99, 122, 158, 160, 185, 201, 206, 209, 210, 213, 214, 218, 239, 249, 258, 259, 262, 264], "involv": [1, 12, 90, 101, 141, 150, 157, 201, 208, 209, 213, 217], "singleton": [1, 13, 14, 16, 17, 95, 134, 136, 138, 151, 168, 170, 172, 177, 186, 242, 256, 262], "whose": [1, 5, 9, 11, 19, 20, 26, 47, 55, 62, 66, 85, 86, 87, 97, 99, 102, 133, 150, 158, 162, 163, 164, 173, 174, 175, 176, 178, 179, 181, 182, 183, 192, 210, 224, 228, 229, 230, 231, 233, 234, 236, 237, 238, 239, 240, 242, 243, 244, 246, 247, 248, 249, 250, 251, 252, 254, 256, 262, 264], "one": [1, 15, 19, 26, 40, 51, 58, 60, 63, 73, 75, 88, 90, 95, 97, 99, 101, 102, 115, 116, 122, 132, 137, 141, 144, 146, 147, 155, 160, 168, 173, 181, 182, 183, 184, 187, 192, 204, 207, 209, 210, 212, 213, 216, 217, 218, 220, 222, 224, 225, 226, 227, 228, 229, 230, 231, 233, 246, 247, 248, 256, 258, 259, 262, 264], "virtual": 1, "repeat": [1, 191, 192, 206, 264], "across": [1, 5, 90, 101, 141, 175, 206, 208, 209, 213, 257, 262], "correspond": [1, 16, 17, 23, 47, 59, 65, 73, 77, 102, 111, 112, 113, 150, 156, 158, 160, 170, 176, 181, 182, 183, 184, 186, 187, 192, 206, 208, 222, 226, 230, 233, 235, 238, 242, 261, 262], "If": [1, 5, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 23, 24, 25, 26, 29, 34, 35, 40, 44, 47, 51, 55, 57, 59, 60, 61, 62, 63, 64, 65, 66, 74, 76, 77, 78, 85, 86, 87, 88, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 107, 111, 113, 115, 116, 117, 118, 119, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 150, 151, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 168, 169, 170, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 189, 190, 192, 207, 209, 213, 219, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 233, 234, 235, 238, 239, 240, 242, 243, 244, 247, 248, 249, 250, 251, 254, 256, 257, 258, 262, 264], "unequ": 1, "lower": [1, 77, 97, 178, 234], "higher": [1, 5, 26, 192, 207, 258, 263], "prepend": [1, 40, 95, 132, 177], "until": [1, 26, 177], "store": [1, 26, 213, 254], "determin": [1, 10, 11, 12, 13, 14, 21, 22, 26, 30, 40, 41, 42, 44, 45, 47, 50, 51, 52, 61, 62, 64, 65, 66, 67, 69, 70, 71, 72, 75, 78, 85, 86, 87, 88, 90, 94, 96, 101, 107, 117, 118, 119, 123, 124, 125, 126, 127, 132, 135, 139, 141, 142, 150, 153, 154, 162, 163, 164, 166, 167, 171, 173, 174, 175, 176, 181, 182, 183, 184, 187, 188, 201, 206, 209, 212, 213, 220, 222, 224, 225, 226, 228, 229, 230, 231, 233, 234, 235, 236, 237, 240, 242, 243, 244, 246, 247, 248, 249, 250, 254, 256, 258, 262], "let": [1, 9, 10, 11, 12, 62, 66, 85, 87, 88, 93, 94, 96, 102, 117, 118, 119, 122, 123, 125, 136, 145, 151, 155, 160, 161, 164, 166, 170, 172, 175, 177, 186, 187, 192, 217, 220, 222, 224, 225, 226, 228, 229, 230, 231, 233, 234, 238, 239, 240, 248, 250, 251, 254], "b": [1, 9, 10, 11, 12, 57, 62, 66, 87, 90, 93, 94, 96, 101, 117, 118, 119, 122, 123, 125, 141, 145, 161, 164, 166, 169, 175, 187, 192, 206, 209, 210, 214, 247, 250, 264], "both": [1, 40, 44, 47, 51, 65, 77, 88, 90, 98, 101, 102, 107, 122, 132, 142, 150, 151, 172, 175, 176, 187, 192, 209, 210, 212, 216, 218, 235, 254, 258, 262, 263], "shape1": 1, "describ": [1, 5, 12, 88, 90, 93, 115, 116, 141, 145, 150, 151, 172, 194, 201, 209, 212, 216, 221, 232, 254, 262], "shape2": 1, "n1": [1, 137], "len": [1, 137, 177], "n2": [1, 137], "max": [1, 26, 77, 98, 108, 111, 177, 191, 192, 206, 242, 244, 247], "temporari": 1, "list": [1, 73, 78, 114, 137, 169, 192, 204, 206, 213, 262, 264], "length": [1, 15, 107, 137, 156, 176, 192, 221, 223, 224, 227, 232, 251, 252], "while": [1, 101, 115, 122, 128, 129, 130, 131, 136, 140, 160, 170, 181, 182, 186, 191, 192, 199, 204, 206, 209, 210, 211, 213, 216, 247, 258, 263, 264, 265], "d1": 1, "els": [1, 26, 204, 263], "d2": 1, "set": [1, 18, 26, 49, 65, 102, 162, 165, 170, 178, 179, 181, 183, 184, 186, 191, 192, 206, 207, 208, 209, 210, 213, 214, 217, 218, 220, 222, 224, 225, 226, 228, 229, 230, 231, 233, 234, 238, 239, 240, 244, 247, 248, 250, 251, 257, 258, 262, 264, 265], "th": [1, 97, 177, 192, 222, 226, 230, 233], "throw": 1, "except": [1, 7, 13, 14, 26, 74, 78, 88, 97, 102, 122, 144, 155, 169, 173, 185, 192, 201, 204, 206, 208, 210, 213, 215, 216, 220, 222, 224, 225, 226, 228, 229, 230, 231, 233, 247, 259, 262, 263, 264], "demonstr": 1, "applic": [1, 26, 88, 151, 155, 172, 201, 254, 258, 262, 263], "4d": 1, "8": [1, 5, 7, 27, 177, 201, 204], "6": [1, 7, 177], "3d": 1, "7": [1, 7, 27, 218], "5": [1, 192, 262], "2d": 1, "1d": 1, "15": 1, "do": [1, 26, 90, 141, 154, 199, 204, 207, 209, 210, 212, 213, 214, 258, 259, 261, 262, 264, 265], "doe": [1, 15, 26, 102, 145, 173, 192, 201, 204, 207, 208, 209, 210, 211, 213, 214, 216, 218, 258, 262, 264, 265], "second": [1, 12, 65, 67, 69, 70, 71, 72, 93, 105, 106, 107, 120, 121, 127, 128, 130, 131, 132, 135, 139, 141, 143, 145, 150, 169, 171, 176, 181, 182, 183, 187, 188, 235, 238, 246, 248, 249, 251, 252, 262], "append": [1, 40, 69, 95, 132, 237], "As": [1, 122, 150, 181, 182, 183, 184, 204, 212, 218, 264], "impli": [1, 181, 182, 183, 184, 261, 262], "__setitem__": [1, 173, 191, 206], "Such": [1, 208, 258], "right": [1, 69, 71, 107, 160, 166, 207, 251, 261], "hand": [1, 201], "left": [1, 5, 60, 69, 101, 103, 160, 173, 192, 201, 238, 239, 251, 262], "index": [1, 5, 16, 17, 18, 32, 34, 49, 57, 83, 97, 111, 113, 137, 140, 144, 160, 169, 173, 176, 181, 182, 183, 191, 206, 222, 226, 230, 233, 262, 264], "perform": [1, 5, 13, 14, 26, 40, 59, 60, 90, 107, 132, 141, 155, 176, 192, 207, 208, 209, 210, 211, 212, 220, 222, 225, 226, 227, 229, 230, 231, 233, 251, 252, 258, 262, 263, 264], "empti": [1, 13, 14, 15, 151, 172, 191, 192, 206, 254, 262], "ok": 1, "allow": [1, 24, 25, 26, 29, 34, 35, 113, 115, 150, 156, 176, 192, 206, 207, 208, 210, 213, 216, 217, 258, 264], "NOT": [1, 129, 261], "adher": [2, 7, 8, 191, 192, 204, 257, 262], "convent": [2, 7, 10, 11, 26, 40, 61, 62, 64, 65, 66, 88, 123, 125, 132, 150, 166, 191, 192, 199, 209, 213, 257, 258, 263], "each": [2, 9, 10, 11, 12, 20, 21, 22, 26, 28, 30, 31, 33, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 76, 77, 79, 85, 86, 87, 90, 93, 94, 96, 100, 101, 105, 106, 107, 109, 114, 117, 118, 119, 120, 121, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 135, 137, 139, 140, 141, 142, 143, 144, 145, 149, 150, 152, 153, 154, 155, 158, 159, 160, 161, 162, 163, 164, 166, 167, 169, 171, 174, 175, 176, 177, 180, 181, 182, 192, 204, 206, 208, 212, 216, 218, 230, 234, 235, 236, 240, 242, 243, 244, 247, 248, 249, 250, 251, 252, 257, 258, 262, 263, 264], "float": [2, 5, 9, 10, 11, 12, 13, 14, 15, 20, 21, 24, 25, 28, 29, 30, 31, 33, 34, 35, 37, 39, 40, 41, 42, 43, 44, 47, 49, 50, 51, 60, 61, 62, 63, 64, 65, 66, 76, 77, 79, 80, 81, 82, 84, 85, 86, 87, 88, 90, 91, 93, 94, 96, 97, 98, 100, 101, 103, 104, 107, 109, 113, 115, 116, 117, 118, 119, 122, 123, 124, 125, 126, 127, 132, 134, 135, 136, 138, 139, 141, 142, 143, 144, 145, 146, 147, 150, 151, 152, 153, 154, 157, 159, 160, 161, 162, 163, 164, 166, 167, 170, 171, 172, 174, 175, 176, 180, 181, 182, 183, 184, 186, 187, 189, 191, 199, 206, 208, 209, 216, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 236, 238, 239, 240, 242, 243, 244, 247, 248, 249, 250, 251, 252, 254, 256, 258, 262, 263], "point": [2, 5, 9, 10, 11, 12, 13, 14, 15, 20, 24, 25, 26, 29, 34, 35, 40, 41, 42, 44, 47, 50, 51, 60, 61, 62, 63, 64, 65, 66, 76, 77, 79, 80, 81, 82, 84, 85, 86, 87, 88, 90, 91, 93, 94, 96, 97, 98, 100, 101, 103, 104, 107, 109, 113, 115, 116, 117, 118, 119, 122, 123, 124, 125, 126, 127, 132, 134, 135, 136, 138, 139, 141, 142, 143, 144, 145, 146, 147, 150, 151, 152, 153, 154, 157, 159, 160, 161, 162, 163, 164, 166, 167, 170, 171, 172, 174, 175, 176, 180, 181, 182, 183, 184, 186, 187, 189, 191, 199, 206, 208, 209, 213, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 236, 238, 239, 240, 242, 243, 244, 247, 248, 249, 250, 251, 252, 254, 256, 258, 262, 264], "creat": [3, 15, 60, 91, 92, 97, 102, 103, 104, 122, 146, 147, 189, 190, 198, 204, 213, 221, 232, 258, 262], "main": [5, 97, 178, 179, 207, 212, 237, 254, 257, 264], "namespac": [5, 7, 23, 110, 194, 204, 206, 219, 257, 258, 259, 262, 265], "under": [5, 257, 261, 262], "specifi": [5, 13, 14, 15, 16, 17, 18, 26, 29, 59, 60, 63, 74, 78, 88, 91, 95, 98, 99, 103, 113, 115, 116, 122, 146, 151, 154, 155, 158, 168, 169, 172, 173, 177, 178, 179, 181, 182, 183, 184, 187, 189, 192, 201, 206, 208, 209, 210, 212, 213, 214, 218, 220, 222, 223, 224, 225, 226, 228, 229, 230, 231, 233, 237, 254, 256, 258, 259, 262, 264, 265], "name": [5, 7, 23, 26, 101, 115, 181, 182, 183, 192, 209, 238, 247, 248, 249, 251, 257, 262, 263], "descript": [5, 7, 206, 208, 242, 256], "bool": [5, 13, 14, 16, 17, 18, 22, 24, 26, 28, 31, 33, 37, 39, 43, 45, 49, 52, 60, 63, 75, 88, 89, 93, 102, 103, 104, 105, 106, 115, 116, 117, 118, 119, 120, 121, 122, 128, 129, 130, 131, 134, 136, 138, 145, 151, 156, 162, 165, 170, 172, 186, 201, 206, 216, 234, 242, 251, 256], "true": [5, 13, 14, 16, 17, 18, 24, 25, 26, 29, 35, 60, 63, 75, 88, 93, 98, 101, 102, 111, 117, 118, 119, 122, 128, 129, 130, 131, 134, 136, 138, 144, 145, 151, 156, 162, 165, 170, 172, 181, 182, 183, 184, 186, 188, 192, 206, 234, 242, 251, 256, 258], "fals": [5, 13, 14, 16, 17, 18, 24, 25, 26, 29, 35, 60, 63, 75, 88, 93, 102, 111, 117, 118, 119, 122, 128, 129, 130, 131, 134, 136, 138, 145, 151, 156, 162, 165, 170, 172, 181, 182, 183, 184, 186, 192, 234, 242, 251, 256], "int8": [5, 115, 116, 201], "bit": [5, 68, 69, 71, 85, 88, 98, 108, 151, 162, 172, 201, 206, 208, 254], "sign": [5, 9, 10, 11, 12, 15, 20, 41, 44, 62, 65, 66, 71, 85, 87, 88, 90, 94, 96, 101, 115, 116, 123, 125, 134, 135, 138, 139, 141, 142, 150, 151, 154, 160, 162, 164, 166, 172, 175, 181, 182, 183, 184, 191, 199, 206, 209, 248, 249, 254], "exist": [5, 7, 26, 60, 78, 102, 204, 206, 209, 212, 213, 214, 240, 259, 262, 263], "interv": [5, 10, 11, 13, 14, 15, 61, 62, 64, 66, 95, 122, 123, 125, 140, 169, 176, 178, 179, 185, 187, 192, 220, 222, 224, 225, 226, 228, 229, 230, 231, 233, 235, 259], "128": 5, "127": 5, "int16": [5, 88, 115, 116, 151, 172, 201, 254], "16": [5, 201], "32": [5, 201], "767": 5, "int32": [5, 88, 115, 116, 151, 172, 201, 254], "147": 5, "483": 5, "647": 5, "int64": [5, 88, 115, 116, 151, 172, 201, 254], "64": [5, 201], "9": [5, 27], "223": 5, "372": 5, "036": 5, "854": 5, "775": 5, "807": 5, "uint8": [5, 115, 116, 201], "unsign": [5, 88, 115, 116, 151, 172, 191, 254], "255": 5, "uint16": [5, 88, 115, 116, 151, 172, 201, 254], "65": 5, "535": [5, 206], "uint32": [5, 88, 115, 116, 151, 172, 201, 254], "294": 5, "967": 5, "295": 5, "uint64": [5, 115, 116, 201], "18": 5, "446": [5, 206], "744": [5, 206], "073": 5, "709": [5, 206], "551": [5, 206], "615": 5, "float32": [5, 109, 115, 116, 152, 201, 249, 251, 252], "ieee": [5, 12, 65, 80, 81, 82, 84, 90, 96, 98, 107, 125, 141, 154, 166, 174, 175, 191, 199, 208, 209, 262], "754": [5, 12, 65, 80, 81, 82, 84, 90, 96, 98, 107, 125, 141, 154, 166, 174, 175, 191, 199, 208, 209, 262], "singl": [5, 7, 24, 25, 29, 34, 35, 113, 115, 181, 182, 191, 201, 206, 207, 209, 212, 213, 218, 258, 262, 263, 264], "precis": [5, 9, 20, 42, 60, 98, 103, 104, 109, 141, 152, 166, 201, 206, 208, 224, 228, 229, 230, 231, 233, 238, 239, 242, 249, 251, 252, 256, 262], "2019": [5, 12, 90, 96, 107, 125, 141, 191, 208, 262, 264], "float64": [5, 9, 20, 115, 116, 201, 224, 228, 229, 230, 231, 233, 238, 239, 242, 256], "doubl": [5, 176, 201, 206], "complex64": [5, 109, 115, 116, 152, 201, 206, 249, 251, 252], "imaginari": [5, 10, 11, 12, 13, 14, 44, 61, 62, 63, 64, 66, 79, 87, 90, 93, 94, 96, 98, 109, 123, 125, 141, 142, 144, 145, 146, 147, 150, 159, 164, 166, 175, 206, 209], "compon": [5, 10, 11, 12, 13, 14, 44, 62, 63, 66, 79, 87, 90, 93, 94, 96, 98, 109, 123, 125, 141, 142, 144, 145, 146, 147, 150, 152, 159, 164, 166, 174, 175, 181, 182, 183, 184, 206, 209, 223, 232], "complex128": [5, 9, 20, 115, 116, 201, 206, 224, 228, 229, 230, 231, 233, 238, 239, 242, 256], "method": [5, 26, 34, 102, 191, 194, 204, 210, 212, 213, 216, 217, 218, 262, 263, 264], "attribut": [5, 23, 98, 108, 191, 203, 206, 259, 262, 263, 264], "requir": [5, 10, 11, 24, 25, 29, 34, 35, 59, 61, 62, 63, 64, 66, 88, 102, 107, 116, 151, 166, 169, 172, 173, 175, 181, 182, 184, 185, 191, 192, 199, 201, 204, 206, 207, 208, 209, 210, 211, 212, 213, 216, 218, 220, 221, 222, 224, 225, 226, 229, 230, 232, 235, 254, 257, 258, 262, 263, 264], "beyond": [5, 158, 201, 262], "It": [5, 23, 26, 102, 204, 210, 212, 262, 264, 265], "also": [5, 7, 26, 34, 102, 107, 161, 201, 204, 209, 210, 211, 212, 218, 222, 226, 230, 233, 251, 257, 264], "subnorm": [5, 107], "k": [5, 40, 97, 107, 132, 144, 178, 179, 192, 234, 238, 239, 240, 248, 250, 251, 252, 254, 262], "denorm": [5, 107], "gradual": [5, 107, 262], "underflow": [5, 9, 90, 101, 107, 249], "hardwar": [5, 53, 107, 155, 208, 212, 213, 238, 251, 258, 262], "univers": [5, 107, 207, 213, 258, 262], "mani": [5, 107, 177, 262, 264], "platform": [5, 26, 107], "compil": [5, 107, 175, 204, 207, 211, 262], "toggl": [5, 107], "daz": [5, 107], "flush": [5, 107], "ftz": [5, 107], "increas": [5, 107, 208, 263], "guard": [5, 107], "against": [5, 40, 73, 107, 132, 175, 192, 244, 247, 265], "time": [5, 7, 16, 17, 26, 107, 155, 181, 182, 204, 206, 211, 212, 217, 234, 238, 239, 240, 248, 250, 251, 258, 262, 264], "attack": [5, 107], "accordingli": [5, 10, 11, 13, 14, 16, 17, 59, 61, 62, 64, 66, 90, 96, 101, 107, 122, 123, 125, 134, 136, 137, 138, 141, 144, 151, 155, 160, 166, 170, 172, 181, 182, 183, 184, 186, 192, 201, 208, 209, 210, 211, 213, 242, 248, 256, 258], "vari": [5, 107, 160, 175, 181, 182, 183, 184, 201, 208], "function": [5, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 26, 28, 29, 30, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 60, 61, 62, 64, 65, 66, 74, 78, 86, 87, 88, 94, 96, 99, 102, 107, 114, 115, 116, 122, 123, 125, 128, 129, 130, 131, 132, 136, 144, 150, 151, 154, 155, 156, 161, 163, 164, 165, 166, 169, 170, 172, 173, 174, 175, 176, 177, 181, 182, 183, 184, 185, 186, 187, 191, 194, 204, 206, 207, 209, 210, 211, 212, 213, 216, 217, 218, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 233, 234, 235, 238, 239, 240, 244, 247, 248, 249, 250, 251, 252, 254, 257, 258, 259, 262, 263, 264], "access": [5, 26, 32, 102, 110, 192, 206, 212, 257, 259, 262], "variou": [5, 206], "cast": [5, 29, 49, 60, 63, 75, 88, 151, 172, 201, 209, 254, 262, 264], "introspect": 5, "isdtyp": [5, 191, 206], "integr": [5, 63, 113, 115, 116], "keyword": [5, 7, 26, 63, 88, 114, 137, 151, 172, 191, 206, 210, 213, 217, 218, 254, 258, 259, 262, 263, 264], "affect": [5, 15, 49, 210, 213], "intermedi": [5, 9, 107], "calcul": [5, 9, 10, 11, 12, 20, 21, 42, 47, 50, 61, 62, 64, 65, 66, 86, 87, 88, 90, 94, 96, 123, 124, 125, 126, 127, 134, 136, 138, 141, 150, 151, 163, 164, 166, 170, 171, 172, 174, 175, 186, 206, 249], "implementor": [5, 257], "free": [5, 213, 261], "when": [5, 7, 12, 16, 17, 26, 47, 49, 59, 63, 90, 96, 101, 102, 107, 113, 115, 122, 125, 134, 135, 138, 139, 141, 150, 151, 155, 156, 160, 170, 172, 175, 186, 188, 191, 192, 201, 206, 207, 209, 210, 211, 212, 214, 216, 217, 218, 220, 222, 224, 225, 226, 228, 229, 230, 231, 233, 234, 238, 240, 244, 247, 248, 249, 250, 251, 252, 254, 258, 262, 263, 264], "accumul": 5, "reduct": [5, 13, 14], "long": [5, 110, 218], "ha": [5, 9, 13, 14, 20, 23, 29, 34, 35, 40, 44, 47, 55, 86, 87, 88, 90, 94, 95, 96, 101, 104, 132, 136, 137, 140, 141, 142, 144, 150, 151, 163, 164, 168, 170, 172, 173, 174, 175, 176, 177, 181, 182, 183, 184, 186, 192, 201, 204, 209, 212, 213, 216, 217, 235, 242, 250, 251, 254, 256, 258, 259, 262, 264, 265], "wai": [5, 26, 63, 102, 204, 207, 213, 214, 259, 262, 263, 264, 265], "f4": [5, 201], "ensur": [5, 26, 160, 204, 208, 258, 262, 263, 264], "portabl": [5, 59, 122, 208, 210, 213, 214, 262], "consum": [5, 26, 63, 113, 115, 204, 209, 210, 218, 257, 262, 263], "recommend": [5, 7, 19, 23, 26, 122, 128, 129, 130, 131, 136, 154, 170, 186, 199, 206, 208, 212, 213, 262], "guidanc": [5, 7, 49, 206, 207, 214, 262], "govern": [5, 50, 171, 201, 258, 259], "interact": [5, 209], "either": [5, 9, 10, 11, 12, 24, 26, 35, 40, 65, 77, 87, 88, 90, 93, 94, 96, 98, 101, 102, 107, 110, 116, 117, 118, 122, 123, 124, 125, 126, 127, 132, 134, 135, 138, 139, 141, 143, 151, 154, 161, 162, 163, 166, 172, 174, 175, 176, 192, 208, 209, 210, 214, 218, 249, 254, 262, 263, 265], "whether": [5, 13, 14, 26, 59, 60, 63, 88, 89, 102, 111, 116, 119, 122, 156, 162, 206, 213, 234, 238, 239, 248, 250, 257, 261, 262, 264], "otherwis": [5, 13, 14, 15, 16, 17, 26, 59, 60, 63, 75, 102, 111, 113, 115, 134, 136, 138, 151, 155, 156, 160, 161, 170, 172, 186, 187, 188, 191, 192, 204, 213, 234, 236, 242, 249, 250, 256, 261], "note": [5, 7, 9, 10, 11, 12, 13, 14, 20, 21, 24, 25, 26, 29, 34, 35, 40, 42, 43, 44, 46, 47, 50, 51, 59, 61, 62, 63, 64, 65, 66, 76, 77, 79, 85, 86, 87, 88, 90, 93, 94, 96, 97, 98, 100, 101, 103, 104, 107, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 123, 124, 125, 126, 127, 132, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 150, 151, 152, 153, 154, 155, 159, 160, 161, 162, 163, 164, 166, 167, 170, 171, 172, 173, 174, 175, 176, 177, 180, 181, 182, 183, 184, 185, 186, 187, 191, 192, 206, 212, 216, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 238, 239, 240, 242, 243, 244, 246, 247, 248, 249, 250, 251, 252, 254, 256, 262, 263, 264, 265], "possibl": [5, 26, 60, 101, 102, 134, 138, 156, 174, 175, 204, 207, 208, 209, 210, 212, 213, 214, 216, 218, 258, 262, 263, 264, 265], "multipl": [5, 7, 13, 14, 16, 17, 40, 42, 44, 132, 134, 136, 138, 141, 142, 151, 170, 172, 186, 192, 204, 207, 209, 212, 213, 217, 218, 239, 240, 258, 259, 262, 264], "In": [5, 12, 19, 26, 59, 88, 90, 93, 101, 116, 118, 119, 141, 145, 151, 154, 161, 172, 191, 192, 194, 201, 208, 209, 212, 214, 229, 230, 248, 249, 251, 254, 258, 259, 263, 264, 265], "clearli": [5, 59, 116, 199, 209, 258, 259], "warn": [5, 155, 214], "about": [5, 7, 26, 98, 108, 210, 258, 262, 264, 265], "": [5, 26, 29, 32, 49, 58, 59, 60, 80, 101, 102, 137, 154, 170, 177, 178, 179, 186, 192, 199, 204, 206, 207, 208, 209, 210, 212, 213, 216, 218, 222, 226, 230, 233, 247, 251, 252, 258, 259, 262, 264], "organ": [5, 206, 258, 263, 264], "within": [5, 15, 27, 192, 201, 204, 206, 209, 213, 220, 222, 225, 226, 229, 230, 231, 233, 262], "numer": [5, 9, 12, 20, 21, 40, 42, 44, 46, 47, 50, 51, 88, 90, 101, 115, 116, 117, 118, 119, 132, 137, 141, 142, 149, 150, 151, 159, 161, 167, 171, 172, 176, 201, 208, 220, 222, 225, 226, 229, 230, 231, 233, 235, 246, 247, 249, 254, 258, 262, 264], "accord": [5, 12, 60, 71, 75, 88, 90, 98, 101, 103, 122, 141, 150, 160, 161, 170, 186, 187, 192, 208, 209], "These": [5, 210, 238, 263], "intend": [5, 88, 151, 172, 204, 254], "posit": [7, 9, 10, 11, 13, 14, 20, 46, 62, 65, 66, 81, 90, 95, 97, 98, 101, 118, 123, 125, 140, 141, 144, 154, 158, 162, 164, 166, 175, 191, 192, 204, 206, 208, 218, 232, 234, 248, 263], "paramet": [7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 113, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 204, 206, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 242, 243, 244, 246, 247, 248, 249, 250, 251, 252, 254, 256, 258], "extern": [7, 264], "usabl": 7, "accept": [7, 26, 128, 129, 130, 131, 136, 154, 170, 186, 204, 259], "call": [7, 34, 212, 213, 216, 249, 262, 263, 264], "argument": [7, 10, 11, 26, 40, 61, 62, 63, 64, 65, 66, 86, 88, 107, 114, 123, 125, 132, 151, 157, 160, 163, 166, 172, 174, 175, 176, 191, 201, 206, 208, 210, 212, 213, 220, 222, 225, 226, 229, 230, 231, 233, 254, 258, 262, 263, 264], "map": [7, 209, 210], "base": [7, 47, 57, 58, 94, 95, 123, 124, 125, 126, 150, 181, 182, 183, 184, 192, 206, 210, 216, 218, 258, 259, 262, 263, 264], "sole": [7, 192, 199, 258], "incompat": [7, 26, 74, 102, 204, 259, 262], "us": [7, 19, 26, 27, 59, 60, 83, 98, 102, 107, 122, 124, 126, 158, 181, 183, 191, 192, 201, 206, 208, 209, 210, 211, 213, 214, 217, 218, 219, 220, 222, 224, 225, 226, 228, 229, 230, 231, 233, 257, 258, 259, 260, 261, 262, 265], "normal": [7, 78, 169, 220, 222, 224, 225, 226, 228, 229, 230, 231, 233], "practic": [7, 19, 192, 258, 263], "avail": [7, 102, 114, 204, 212, 257, 259, 263], "still": [7, 26, 218, 258, 263, 264, 265], "consid": [7, 26, 63, 102, 128, 129, 130, 131, 181, 182, 183, 184, 209, 213, 232, 247, 258, 262, 264, 265], "compliant": [7, 26, 51, 90, 96, 102, 122, 125, 128, 129, 130, 131, 134, 135, 136, 138, 139, 170, 186, 208, 211, 213, 259, 262], "altern": [7, 210, 212, 265], "thei": [7, 26, 201, 207, 212, 213, 217, 218, 257, 258, 259, 262, 264, 265], "were": [7, 101, 155, 160, 206, 262], "option": [7, 13, 14, 15, 16, 17, 23, 26, 57, 58, 59, 60, 63, 77, 78, 88, 91, 92, 97, 99, 102, 103, 104, 113, 115, 122, 134, 136, 138, 146, 147, 151, 155, 156, 158, 160, 170, 172, 173, 186, 189, 190, 191, 206, 217, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 242, 244, 247, 254, 256, 258, 263, 264], "lead": [7, 101, 209, 248, 251, 262], "readabl": [7, 201, 258, 263], "code": [7, 59, 201, 210, 211, 213, 216, 218, 258, 262, 263, 264], "easier": [7, 204, 210, 258], "evolv": [7, 204, 258], "over": [7, 13, 14, 26, 122, 134, 136, 138, 151, 170, 172, 173, 176, 186, 187, 208, 209, 210, 212, 213, 217, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 233, 235, 254, 256, 258, 262], "ad": [7, 9, 10, 11, 12, 13, 14, 20, 21, 24, 26, 29, 35, 40, 42, 43, 44, 46, 47, 50, 51, 60, 61, 62, 63, 64, 66, 86, 87, 90, 93, 94, 96, 97, 98, 102, 103, 104, 117, 118, 119, 122, 123, 124, 125, 126, 132, 137, 141, 142, 144, 145, 146, 147, 149, 150, 151, 159, 161, 163, 164, 166, 167, 171, 172, 174, 175, 176, 181, 182, 183, 184, 187, 192, 205, 206, 207, 213, 234, 235, 236, 238, 239, 240, 242, 243, 244, 246, 247, 248, 249, 250, 251, 252, 254, 256, 259], "worri": 7, "xi": [7, 137], "annot": [7, 206, 218, 262], "individu": [7, 160, 213, 216, 217, 218, 221, 232, 262, 263], "aim": [7, 207, 218, 257, 258, 259, 262, 263, 264, 265], "strongli": [7, 210, 264], "look": [7, 264], "like": [7, 204, 207, 209, 210, 216, 218, 259, 262, 263, 264], "funcnam": 7, "key1": 7, "key2": 7, "none": [7, 13, 14, 15, 16, 17, 23, 26, 32, 49, 57, 58, 59, 60, 63, 77, 78, 83, 88, 91, 92, 97, 99, 102, 103, 104, 111, 113, 115, 122, 134, 136, 138, 146, 147, 151, 155, 156, 158, 160, 170, 172, 173, 186, 189, 190, 192, 206, 213, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 242, 244, 247, 254, 255, 256, 262, 263, 265], "out": [7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 192, 206, 207, 210, 212, 216, 217, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 242, 243, 244, 246, 247, 248, 249, 250, 251, 252, 254, 256, 261, 264], "int": [7, 13, 14, 15, 16, 17, 18, 21, 22, 26, 27, 28, 30, 31, 32, 33, 34, 35, 37, 38, 39, 41, 42, 43, 45, 47, 48, 49, 50, 51, 52, 56, 57, 58, 59, 60, 74, 77, 78, 88, 91, 95, 97, 98, 99, 101, 103, 104, 108, 122, 134, 136, 138, 140, 146, 148, 151, 155, 156, 158, 165, 168, 169, 170, 172, 173, 176, 177, 178, 179, 185, 186, 187, 189, 192, 201, 216, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 235, 237, 242, 243, 253, 254, 255, 256, 263], "str": [7, 8, 23, 115, 116, 137, 263], "modulo": 7, "self": [7, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 59, 89, 206, 264], "few": [7, 208, 216, 262, 264], "enhanc": 7, "default": [7, 13, 14, 15, 16, 17, 18, 23, 26, 59, 60, 63, 77, 78, 88, 91, 92, 97, 99, 102, 103, 104, 112, 113, 115, 122, 134, 136, 137, 138, 144, 146, 147, 151, 155, 156, 158, 160, 165, 169, 170, 172, 176, 178, 179, 181, 182, 183, 185, 186, 187, 189, 190, 191, 192, 206, 208, 213, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 242, 244, 247, 248, 251, 254, 256], "form": [7, 23, 26, 40, 79, 132, 133, 178, 179, 210, 234, 236, 237, 238, 239, 240, 242, 243, 244, 247, 248, 249, 250, 251, 252, 254, 259, 263], "question": [7, 207, 262], "commonli": [7, 170, 186, 207, 209, 211, 257, 258, 262, 263], "written": [7, 204, 262, 264], "yyyi": [8, 23, 259], "mm": [8, 23, 259], "string": [8, 23, 115, 116, 206, 259, 262], "version": [8, 9, 10, 11, 12, 13, 14, 20, 21, 23, 24, 25, 26, 29, 34, 35, 40, 42, 43, 44, 46, 47, 50, 51, 59, 60, 61, 62, 63, 64, 66, 77, 79, 85, 86, 87, 88, 90, 93, 94, 96, 97, 98, 102, 103, 104, 107, 108, 109, 116, 117, 118, 119, 122, 123, 124, 125, 126, 132, 134, 135, 137, 138, 139, 140, 141, 142, 144, 145, 146, 147, 149, 150, 151, 152, 155, 159, 160, 161, 162, 163, 164, 166, 167, 171, 172, 173, 174, 175, 176, 177, 181, 182, 183, 184, 185, 187, 191, 204, 207, 213, 217, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 238, 239, 240, 242, 243, 244, 246, 247, 248, 249, 250, 251, 252, 254, 256, 260, 262, 264], "absolut": [9, 20, 85, 161, 208, 210, 242, 243, 249, 258], "x_i": [9, 10, 11, 61, 62, 64, 66, 68, 76, 77, 79, 86, 87, 94, 96, 100, 109, 117, 118, 119, 123, 124, 125, 126, 129, 134, 136, 138, 142, 149, 152, 153, 159, 161, 162, 163, 164, 166, 167, 170, 174, 175, 180, 186], "input": [9, 10, 11, 12, 13, 14, 16, 17, 18, 20, 26, 30, 41, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 75, 76, 77, 78, 79, 85, 86, 87, 88, 90, 92, 93, 94, 95, 96, 99, 100, 101, 102, 104, 105, 106, 107, 109, 116, 117, 118, 119, 120, 121, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 190, 191, 199, 204, 206, 209, 211, 213, 214, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 242, 243, 244, 246, 247, 248, 249, 251, 252, 254, 256, 258, 262, 264], "magnitud": [9, 12, 20, 85, 90, 101, 107, 141, 206, 251, 252], "represent": [9, 12, 20, 29, 44, 67, 70, 72, 80, 81, 82, 84, 90, 98, 101, 108, 141, 142, 143, 174, 175, 208, 212, 263], "known": [9, 161, 208, 211, 212], "norm": [9, 220, 222, 224, 225, 226, 228, 229, 230, 231, 233, 242, 256, 258], "modulu": [9, 154], "z": [9, 10, 11, 61, 62, 64, 66, 123, 209], "bj": [9, 12, 79, 90, 141], "comput": [9, 12, 28, 31, 33, 37, 39, 40, 43, 57, 58, 67, 70, 72, 79, 88, 89, 90, 93, 95, 101, 105, 106, 107, 120, 121, 128, 129, 130, 131, 132, 134, 135, 136, 138, 139, 141, 142, 144, 145, 149, 151, 155, 170, 172, 176, 181, 182, 183, 184, 186, 187, 192, 206, 208, 211, 216, 220, 221, 222, 224, 225, 226, 228, 229, 230, 231, 232, 233, 234, 235, 238, 239, 240, 242, 244, 247, 248, 249, 250, 251, 252, 254, 256, 258, 262], "operatornam": [9, 10, 11, 61, 62, 64, 66, 86, 87, 161, 163, 164, 174, 175, 209, 238, 239, 249, 251], "sqrt": [9, 10, 11, 61, 62, 191, 206, 209, 220, 222, 224, 225, 226, 228, 229, 230, 231, 233, 256], "take": [9, 123, 125, 150, 166, 191, 206, 213, 218, 262], "care": [9, 210, 258], "undu": [9, 211], "overflow": [9, 12, 88, 90, 101, 107, 122, 151, 172, 201, 249, 254, 258], "dure": [9, 40, 59, 107, 132, 170, 186, 201, 204, 247, 262, 263], "stage": [9, 107, 259], "contain": [9, 10, 11, 12, 13, 14, 15, 16, 17, 20, 21, 22, 23, 26, 28, 30, 31, 32, 33, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 76, 77, 78, 79, 85, 86, 87, 88, 90, 91, 92, 93, 94, 96, 100, 101, 102, 105, 106, 107, 109, 110, 111, 113, 115, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 159, 160, 161, 162, 163, 164, 166, 167, 170, 171, 172, 174, 175, 176, 178, 179, 180, 181, 182, 183, 184, 186, 187, 189, 192, 206, 208, 209, 210, 212, 216, 217, 221, 222, 223, 226, 227, 230, 232, 233, 234, 235, 236, 237, 238, 239, 240, 242, 243, 244, 246, 247, 248, 249, 250, 251, 252, 254, 256, 262, 264], "nan": [9, 10, 11, 12, 13, 14, 24, 25, 35, 61, 62, 63, 64, 65, 66, 76, 85, 86, 87, 90, 93, 94, 96, 100, 101, 107, 117, 118, 119, 123, 124, 125, 126, 127, 134, 135, 136, 138, 139, 141, 143, 145, 150, 154, 159, 160, 161, 162, 163, 164, 166, 170, 174, 175, 180, 181, 182, 183, 184, 186, 191, 199, 209, 262], "infin": [9, 10, 11, 12, 13, 14, 24, 25, 35, 62, 63, 64, 65, 66, 76, 81, 86, 87, 90, 93, 94, 96, 100, 101, 107, 117, 118, 123, 124, 125, 126, 127, 134, 138, 141, 145, 150, 154, 159, 162, 163, 164, 166, 174, 175, 180, 209, 249, 256], "imag": [9, 10, 11, 12, 24, 62, 63, 66, 87, 93, 94, 96, 117, 118, 119, 122, 123, 125, 145, 159, 161, 164, 166, 175, 191, 206, 207, 262, 263, 264], "finit": [9, 10, 11, 12, 25, 35, 42, 62, 65, 66, 87, 90, 93, 94, 96, 101, 107, 111, 117, 118, 123, 125, 141, 145, 150, 154, 162, 164, 166, 175, 208], "2022": [9, 10, 11, 12, 13, 14, 20, 21, 24, 25, 26, 29, 35, 40, 42, 43, 44, 46, 47, 50, 51, 60, 61, 62, 63, 64, 66, 79, 86, 87, 90, 93, 94, 96, 97, 98, 103, 104, 108, 109, 116, 117, 118, 119, 122, 123, 124, 125, 126, 132, 137, 141, 142, 144, 145, 146, 147, 149, 150, 151, 152, 159, 161, 163, 164, 166, 167, 171, 172, 173, 174, 175, 176, 181, 182, 183, 184, 187, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 238, 239, 240, 242, 243, 244, 246, 247, 248, 249, 250, 251, 252, 254, 256], "12": [9, 10, 11, 12, 13, 14, 20, 21, 24, 25, 26, 29, 34, 35, 40, 42, 43, 44, 46, 47, 50, 51, 59, 60, 61, 62, 63, 64, 66, 77, 79, 85, 86, 87, 88, 90, 93, 94, 96, 97, 98, 102, 103, 104, 107, 108, 109, 116, 117, 118, 119, 122, 123, 124, 125, 126, 132, 134, 135, 137, 138, 139, 140, 141, 142, 144, 145, 146, 147, 149, 150, 151, 152, 155, 159, 160, 161, 162, 163, 164, 166, 167, 171, 172, 173, 174, 175, 176, 177, 181, 182, 183, 184, 185, 187, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 238, 239, 240, 242, 243, 244, 246, 247, 248, 249, 250, 251, 252, 254, 256, 259], "approxim": [10, 11, 47, 61, 62, 64, 65, 66, 86, 87, 94, 96, 101, 123, 124, 125, 126, 150, 163, 164, 174, 175, 208, 244, 247], "princip": [10, 11, 61, 62, 64, 66, 123, 166, 209, 258], "invers": [10, 11, 61, 62, 64, 65, 66, 209, 220, 222, 225, 226, 227, 228, 229, 230, 231, 233, 240, 243, 247, 258], "cosin": [10, 11, 86, 87, 175], "express": [10, 61, 63, 64, 65, 86, 163, 174, 192, 201, 210, 258, 261], "radian": [10, 61, 64, 65, 86, 163, 174], "arc": [10, 61, 64], "frac": [10, 11, 61, 62, 64, 66, 86, 87, 90, 122, 124, 126, 161, 163, 164, 174, 175, 209, 249], "pi": [10, 11, 61, 62, 64, 66, 87, 123, 125, 164, 174, 175, 191], "j": [10, 11, 12, 25, 61, 62, 64, 66, 87, 90, 94, 96, 122, 123, 125, 141, 160, 161, 163, 164, 166, 174, 175, 192, 209, 238, 251, 254], "ln": [10, 11, 61, 62, 64, 66, 123], "zj": [10, 61, 62, 64, 66], "conj": [10, 11, 61, 62, 64, 66, 87, 94, 96, 123, 124, 125, 126, 164, 166, 175, 191, 206], "multi": [10, 11, 61, 62, 64, 66, 191, 209, 212, 213, 235, 264], "branch": [10, 11, 61, 62, 64, 65, 66, 86, 87, 90, 94, 96, 123, 125, 141, 150, 163, 164, 166, 174, 175, 262], "cut": [10, 11, 61, 62, 64, 66, 86, 87, 94, 96, 123, 125, 150, 163, 164, 166, 174, 175, 262], "plane": [10, 11, 61, 62, 64, 66, 86, 87, 90, 94, 96, 141, 163, 164, 166, 174, 175, 262], "By": [10, 11, 13, 14, 61, 62, 64, 65, 66, 88, 123, 125, 134, 136, 138, 150, 151, 166, 170, 172, 186, 187, 208, 209, 235, 258, 263], "place": [10, 11, 15, 60, 61, 62, 63, 64, 66, 91, 92, 97, 102, 103, 104, 122, 146, 147, 158, 189, 190, 191, 199, 201, 206, 210, 213, 221, 232, 247], "line": [10, 11, 61, 62, 64, 66, 174, 175, 201, 209, 262, 263, 264, 265], "segment": [10, 11, 61, 62, 64, 66, 209], "infti": [10, 11, 61, 62, 64, 66, 86, 123, 125, 150, 166, 209], "axi": [10, 11, 13, 14, 16, 17, 18, 61, 62, 64, 66, 78, 88, 95, 99, 123, 125, 134, 136, 138, 140, 150, 151, 155, 158, 165, 166, 168, 169, 170, 172, 173, 176, 177, 185, 186, 187, 191, 206, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 233, 235, 242, 255, 256, 262], "rang": [10, 61, 62, 64, 66, 77, 88, 123, 125, 151, 166, 172, 192, 206, 212, 254, 262], "strip": [10, 61, 62, 64, 66, 123, 125], "unbound": [10, 61, 62, 64, 66, 123, 125], "along": [10, 11, 13, 14, 16, 17, 18, 61, 62, 64, 66, 78, 88, 97, 99, 123, 125, 134, 136, 138, 151, 155, 158, 165, 166, 169, 170, 172, 173, 174, 175, 177, 185, 186, 187, 192, 206, 220, 222, 224, 225, 226, 228, 229, 230, 231, 233, 235, 254, 256, 258], "c99": [10, 11, 61, 62, 64, 66, 90, 123, 125, 141, 150, 166, 209, 259], "provision": [10, 11, 61, 62, 64, 66, 123, 125, 150, 166, 209], "statu": [10, 11, 61, 62, 64, 66, 123, 125, 150, 166, 209], "greater": [10, 11, 33, 38, 48, 61, 62, 65, 66, 69, 71, 77, 85, 90, 100, 101, 123, 125, 150, 154, 161, 162, 164, 166, 168, 175, 191, 192, 220, 222, 224, 225, 226, 228, 229, 230, 231, 233, 235, 243], "than": [10, 11, 19, 26, 38, 40, 47, 48, 49, 55, 61, 62, 63, 65, 66, 69, 71, 76, 77, 85, 88, 90, 98, 99, 100, 101, 102, 123, 124, 125, 126, 132, 141, 150, 151, 154, 161, 162, 164, 166, 168, 170, 172, 173, 175, 180, 181, 182, 183, 184, 186, 192, 201, 204, 207, 210, 213, 214, 217, 220, 222, 224, 225, 226, 228, 229, 230, 231, 233, 235, 242, 243, 244, 247, 254, 256, 258, 259, 262, 264], "less": [10, 11, 39, 47, 61, 65, 66, 76, 85, 90, 101, 123, 124, 125, 126, 150, 154, 161, 162, 166, 170, 186, 191, 192, 210, 220, 222, 224, 225, 226, 228, 229, 230, 231, 233, 242, 243, 244, 247, 256, 262], "\u03c0": [10, 64, 65, 84], "0j": [10, 11, 12, 25, 62, 63, 66, 87, 94, 96, 97, 123, 125, 146, 147, 161, 164, 166, 175, 209, 249], "nonzero": [10, 11, 12, 62, 66, 87, 90, 94, 96, 101, 141, 164, 175, 191, 192, 206, 247], "3\u03c0": [10, 65], "hyperbol": [11, 62, 66, 86, 87, 163, 164, 174, 175, 209], "aco": [11, 61, 191, 206, 208], "simpli": [11, 96, 125, 207, 218, 262, 264], "upper": [11, 77, 97, 179, 206, 234, 248], "half": [11, 15, 66, 122, 140, 166, 176, 192, 223], "area": [11, 62, 66], "sector": [11, 62, 66], "\u03c0j": [11, 62, 66, 123, 125], "3\u03c0j": [11, 123, 125], "sum": [12, 21, 88, 107, 127, 151, 191, 206, 242, 254, 256, 258], "x1_i": [12, 65, 67, 69, 70, 71, 72, 85, 90, 93, 101, 105, 106, 107, 120, 121, 127, 128, 130, 131, 135, 139, 141, 143, 145, 150, 154, 171, 188, 206], "x2_i": [12, 65, 67, 69, 70, 71, 72, 85, 90, 93, 101, 105, 106, 107, 120, 121, 127, 128, 130, 131, 135, 139, 141, 143, 145, 150, 154, 171, 188, 206], "first": [12, 16, 17, 19, 65, 67, 69, 70, 71, 72, 88, 93, 105, 106, 107, 120, 121, 127, 128, 130, 131, 132, 135, 139, 141, 143, 145, 150, 158, 169, 171, 174, 175, 176, 181, 182, 183, 187, 188, 192, 209, 235, 238, 246, 248, 249, 251, 252, 258, 262, 263, 264, 265], "remain": [12, 90, 93, 101, 116, 118, 119, 141, 145, 154, 156, 161, 192, 210, 233], "neither": [12, 40, 90, 101, 132, 141, 176, 251, 263], "nor": [12, 90, 101, 141, 251, 263], "mathemat": [12, 19, 65, 84, 86, 87, 90, 96, 101, 123, 125, 141, 163, 164, 174, 175, 191, 209, 242, 256], "round": [12, 15, 76, 90, 100, 101, 141, 166, 180, 191, 206, 208], "nearest": [12, 90, 141, 159, 180, 208], "mode": [12, 90, 141, 208, 220, 222, 224, 225, 226, 228, 229, 230, 231, 233, 248], "too": [12, 26, 90, 101, 141, 258, 262], "larg": [12, 90, 101, 141, 212, 218, 249, 262], "appropri": [12, 26, 90, 101, 141, 209, 214], "commut": 12, "associ": [12, 42, 141, 194, 201, 244, 247, 250, 258, 261, 263], "tabl": [12, 90, 141, 191], "c": [12, 90, 93, 122, 141, 144, 145, 155, 169, 170, 175, 186, 192, 206, 209, 212, 215, 234, 238, 239, 240, 248, 250, 251, 259, 261, 262, 264], "d": [12, 90, 93, 122, 141, 145, 201, 221, 232], "dj": [12, 90, 141], "independ": [12, 90, 141, 159, 192, 204, 212, 235, 248, 250, 258, 259, 262], "abov": [12, 88, 90, 93, 123, 125, 141, 145, 150, 151, 166, 172, 178, 179, 192, 201, 209, 210, 212, 213, 216, 237, 238, 254, 258, 261, 264], "similarli": [12, 57, 116, 137, 201, 234, 251], "henc": [12, 79, 95, 144, 155, 181, 182, 183, 184, 192, 207, 209, 210, 211, 212, 216, 217, 218, 262, 264], "z1": 12, "z2": 12, "keepdim": [13, 14, 16, 17, 134, 136, 138, 151, 170, 172, 186, 242, 256], "test": [13, 14, 89, 117, 118, 119, 206, 208, 260, 262, 263, 264], "evalu": [13, 14, 22, 30, 36, 38, 41, 44, 45, 46, 48, 51, 52, 94, 96, 123, 124, 125, 126, 142, 149, 161, 162, 167, 204, 262], "union": [13, 14, 15, 21, 22, 26, 28, 30, 31, 32, 33, 37, 38, 39, 41, 42, 43, 45, 47, 48, 49, 50, 51, 52, 59, 60, 75, 77, 78, 91, 98, 99, 103, 104, 108, 115, 116, 122, 134, 136, 138, 140, 146, 151, 155, 157, 158, 168, 169, 170, 172, 176, 186, 189, 223, 227, 242, 244, 247, 256, 263], "ax": [13, 14, 16, 17, 19, 55, 56, 99, 134, 136, 138, 140, 148, 151, 158, 168, 170, 172, 176, 177, 186, 187, 192, 206, 222, 223, 226, 227, 230, 233, 235, 242, 247, 250, 253, 256], "logic": [13, 14, 24, 26, 90, 93, 128, 129, 130, 131, 141, 145, 213, 216, 222, 226, 230, 233], "AND": [13, 67, 93, 128, 261], "entir": [13, 14, 86, 87, 94, 96, 134, 136, 138, 151, 163, 164, 170, 172, 186], "valid": [13, 14, 26, 27, 95, 114, 140, 169, 176, 185, 192, 208, 216, 220, 222, 224, 225, 226, 228, 229, 230, 231, 233, 238, 248, 251, 263], "count": [13, 14, 78, 88, 99, 173, 181, 182, 187, 192, 206, 220, 222, 224, 225, 226, 228, 229, 230, 231, 233, 235, 239], "last": [13, 14, 18, 19, 55, 78, 88, 99, 158, 165, 169, 173, 176, 187, 192, 220, 222, 224, 225, 226, 228, 229, 230, 231, 233, 235, 237, 242, 248, 251, 254], "invalid": [13, 14, 23, 95, 214, 262], "rais": [13, 14, 19, 23, 24, 25, 26, 29, 34, 35, 40, 47, 51, 55, 60, 74, 90, 94, 95, 102, 122, 132, 134, 138, 144, 150, 156, 168, 169, 185, 187, 192, 201, 204, 206, 212, 213, 214, 216, 235, 243, 262], "wa": [13, 14, 19, 26, 101, 134, 136, 138, 151, 170, 172, 186, 201, 213, 218, 262, 264], "OR": [14, 24, 70, 130, 145, 261], "start": [15, 122, 192, 206, 218, 262, 264], "stop": [15, 122, 192, 206, 263], "step": [15, 122, 192, 263], "evenli": [15, 122], "space": [15, 122, 221, 223, 232], "open": [15, 122, 140, 176, 192], "inclus": [15, 192, 262], "end": [15, 65, 86, 122, 161, 163, 174, 175, 199, 210, 249, 262, 263, 264], "exclus": [15, 192], "distanc": [15, 107], "between": [15, 26, 47, 51, 65, 78, 90, 93, 98, 122, 134, 135, 138, 139, 145, 150, 169, 181, 182, 183, 184, 201, 209, 210, 213, 221, 232, 258, 262, 264], "adjac": 15, "output": [15, 60, 63, 78, 88, 91, 92, 95, 97, 99, 102, 103, 104, 111, 122, 137, 146, 147, 156, 158, 160, 168, 169, 173, 177, 189, 190, 204, 206, 209, 210, 213, 215, 216, 218, 220, 221, 222, 224, 225, 226, 229, 230, 231, 232, 233, 254, 262], "infer": [15, 60, 63, 92, 103, 104, 147, 156, 190, 211, 258, 263], "cannot": [15, 26, 57, 102, 174, 175, 206, 209, 211, 262], "guarante": [15, 59, 181, 183, 204, 209, 213, 262, 264], "error": [15, 19, 23, 24, 25, 26, 29, 34, 35, 51, 55, 90, 102, 134, 138, 174, 175, 201, 208, 249, 262], "ceil": [15, 191], "indic": [16, 17, 18, 26, 60, 88, 89, 102, 111, 116, 122, 140, 144, 158, 160, 161, 173, 176, 178, 179, 181, 183, 192, 201, 206, 256, 262], "occur": [16, 17, 75, 107, 174, 175, 181, 182, 183, 184, 209, 263], "occurr": [16, 17, 181], "comparison": [16, 17, 18, 31, 33, 37, 39, 93, 105, 106, 120, 121, 134, 135, 138, 139, 145, 165, 191, 209, 259, 263], "search": [16, 17, 160, 191], "flatten": [16, 17, 78, 155, 158, 181, 182, 183, 184, 256, 258], "descend": [18, 165, 251, 252], "stabl": [18, 165, 212], "sort": [18, 160, 191, 206, 238, 239, 251, 252], "ascend": [18, 160, 165, 206], "stabil": [18, 165], "maintain": [18, 165, 207, 262, 264], "rel": [18, 19, 55, 99, 135, 139, 158, 165, 206, 237, 244, 247, 254], "compar": [18, 165, 181, 182, 183, 184, 208, 213, 263, 265], "properti": [19, 53, 54, 55, 56, 57, 58, 115, 206, 209, 213, 218, 262], "transpos": [19, 40, 55, 132, 133, 176, 234, 238, 247, 251, 258], "instanc": [19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 55, 59, 89, 201, 204, 206, 213], "permut": [19, 55, 148], "revers": [19, 55, 65, 99], "origin": [19, 55, 65, 107, 140, 156, 158, 206, 210, 220, 222, 225, 226, 229, 230, 231, 233, 262, 263], "limit": [19, 98, 108, 116, 208, 258, 261], "matric": [19, 40, 55, 132, 133, 137, 178, 179, 234, 236, 237, 238, 239, 240, 242, 243, 244, 247, 248, 249, 250, 251, 252, 254, 258], "deviat": [19, 170, 208, 214, 262, 264], "et": [19, 251, 252], "al": 19, "intent": [19, 65], "found": [19, 209, 212, 264, 265], "problemat": [19, 63, 207, 210], "conflict": 19, "definit": [19, 86, 87, 163, 164, 174, 175, 206, 234, 263], "batch": [19, 256, 258], "cetera": [19, 251, 252], "permute_dim": [19, 191], "interfac": [19, 212, 258, 262, 264], "ab": [20, 107, 150, 191, 206, 242, 256], "augend": 21, "addend": 21, "self_i": [22, 28, 30, 31, 33, 36, 37, 38, 39, 41, 43, 44, 45, 46, 48, 50, 51, 52], "other_i": [22, 28, 30, 31, 33, 37, 38, 39, 41, 43, 45, 47, 48, 50, 51, 52], "bitwise_and": [22, 191], "api_vers": [23, 262], "object": [23, 24, 25, 26, 29, 34, 35, 53, 57, 59, 60, 89, 98, 102, 108, 110, 112, 113, 114, 191, 192, 201, 204, 206, 210, 212, 213, 216, 218, 257, 259, 263, 264], "2020": [23, 218, 259, 261, 262], "10": [23, 27, 124, 192, 262], "latest": [23, 212], "modul": [23, 204, 259, 263, 264, 265], "everi": [23, 103, 104, 248, 262], "top": [23, 204, 262, 264], "level": [23, 201, 207, 212, 213, 257, 258, 262, 263], "public": [23, 257, 263, 264], "well": [23, 207, 209, 212, 213, 248, 264, 265], "part": [23, 35, 178, 179, 201, 206, 212, 217, 259, 262, 264], "convert": [24, 25, 29, 34, 35, 60, 102, 201, 206, 207, 209, 212, 262, 264], "handl": [24, 26, 61, 64, 86, 88, 102, 124, 126, 150, 151, 153, 161, 163, 167, 172, 174, 206, 207, 209, 210, 213, 214, 254, 262], "lazi": [24, 25, 29, 34, 35, 204, 206, 215, 264], "languag": [24, 25, 29, 34, 35, 210, 214, 216, 258, 262, 264], "therefor": [24, 25, 29, 34, 35, 204, 212, 213, 214, 216, 218, 259, 262, 264], "abl": [24, 25, 29, 34, 35, 102, 210, 212, 213, 262, 264], "kind": [24, 25, 26, 29, 34, 35, 47, 51, 77, 90, 98, 102, 104, 108, 113, 115, 116, 150, 201, 206, 216, 258, 261], "here": [24, 25, 26, 29, 34, 35, 192, 201, 210, 212, 217, 218, 264], "valueerror": [24, 25, 26, 29, 34, 35, 60, 102, 156, 168, 264], "instead": [24, 25, 29, 34, 35, 63, 209, 212, 216, 263, 264], "2023": [24, 25, 26, 29, 34, 35, 59, 63, 77, 85, 88, 102, 107, 134, 135, 138, 139, 140, 151, 155, 160, 162, 172, 173, 176, 177, 181, 182, 183, 184, 185, 187, 220, 221, 222, 224, 225, 226, 229, 230, 232, 235, 254], "new": [25, 26, 77, 79, 85, 88, 95, 98, 102, 103, 104, 107, 108, 109, 116, 135, 139, 140, 146, 147, 152, 155, 156, 160, 162, 169, 173, 177, 185, 189, 190, 204, 206, 207, 210, 212, 213, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 259, 262, 263, 264], "stream": [26, 59, 213], "max_vers": [26, 206], "dl_devic": [26, 206], "enum": [26, 27], "pycapsul": 26, "export": [26, 102, 206, 212, 263], "from_dlpack": [26, 27, 191, 206, 212], "dlpack": [26, 27, 102, 206], "capsul": 26, "cuda": [26, 27, 207, 212, 264], "rocm": [26, 27, 207], "pointer": 26, "produc": [26, 238, 248, 251, 264], "instruct": 26, "safe": [26, 122], "insert": [26, 95, 160, 206], "wait": 26, "event": [26, 261], "larger": [26, 98, 158, 170, 186, 247], "below": [26, 101, 102, 178, 179, 194, 212, 213, 237, 254], "signal": [26, 224, 228, 264], "ownership": 26, "stai": 26, "On": 26, "cpu": [26, 27, 204, 207, 212, 213, 258, 262, 264], "queue": [26, 59, 213], "similar": [26, 154, 192, 207, 209, 211, 262, 263, 264], "mechan": [26, 102, 204, 206, 207, 215, 257, 262], "most": [26, 204, 213, 238, 258, 262, 264], "yet": [26, 218, 262], "sycl": 26, "want": [26, 90, 141, 207, 211, 212, 262, 264, 265], "cl": 26, "agre": 26, "assum": [26, 86, 102, 163, 174, 204, 209, 213, 257, 262], "legaci": 26, "per": [26, 155, 207, 212, 260], "thread": [26, 262, 264], "disallow": 26, "due": [26, 42, 57, 58, 122, 141, 155, 173, 208, 209, 258, 262], "ambigu": [26, 63, 101, 210], "construct": [26, 177, 204, 206, 207, 216, 262], "particular": [26, 192, 207, 209, 212, 213, 218, 258, 261, 262, 264, 265], "kdlcpu": 26, "safeti": [26, 59], "prefer": [26, 101, 204, 258, 264], "develop": [26, 208, 262, 263, 264, 265], "who": [26, 208, 262, 263], "think": 26, "cost": 26, "caller": 26, "major": [26, 144, 155, 192, 259], "minor": [26, 259], "verifi": [26, 262], "even": [26, 90, 141, 150, 159, 208, 209, 210, 221, 223, 227, 232, 248, 258, 262, 264], "pass": [26, 65, 204, 208, 213], "format": [26, 27, 259], "__dlpack_device__": [26, 102, 191, 212], "buffererror": [26, 102, 206, 212], "v2023": [26, 102], "mandat": [26, 102, 262], "offer": [26, 102, 207, 212, 213, 217, 262, 264], "referenc": [26, 262], "underli": [26, 67, 70, 72, 102, 208, 249, 258], "interpret": [26, 102, 107, 209, 210, 265], "enumer": 26, "made": [26, 102, 204, 209, 257, 259, 262, 264], "never": [26, 60, 102, 156, 212, 262], "deem": [26, 102], "cross": [26, 102, 206, 213, 258, 262], "movement": [26, 102], "request": [26, 102, 262], "reus": [26, 60, 102, 210, 262], "buffer": [26, 60, 102, 210, 212], "happen": [26, 102, 210, 213, 216, 258], "dlpack_flag_bitmask_is_copi": 26, "flag": 26, "understood": [26, 201], "interchang": [26, 102, 204, 207, 215, 262], "detail": [26, 102, 144, 155, 181, 182, 183, 184, 191, 192, 203, 204, 211, 213, 217, 258, 262, 264], "stride": [26, 102, 210, 212], "fail": [26, 102, 262], "reason": [26, 102, 154, 175, 210, 212, 214, 258, 262, 263], "incorrect": 26, "scheme": [26, 259], "semver": 26, "abi": [26, 207, 212], "break": [26, 214], "introduc": [26, 63, 101, 158, 218, 263], "goe": 26, "togeth": [26, 201, 212], "dlmanagedtensorvers": 26, "struct": 26, "later": 26, "introduct": 26, "becaus": [26, 201, 207, 210, 213, 214, 216, 218, 238, 251, 262, 264, 265], "keep": [26, 201, 207, 262], "march": 26, "2025": 26, "onward": 26, "ideal": [26, 258], "late": 26, "okai": 26, "we": [26, 209, 251, 262], "get": [26, 98, 108, 207, 210, 212, 213], "now": [26, 102, 216, 262, 264], "our_own_dlpack_vers": 26, "fill": [26, 103, 104, 146, 147, 189, 190, 206], "field": [26, 181, 182, 183, 209, 238, 248, 249, 251, 262], "understand": [26, 247, 262, 263], "u": [26, 234, 247, 251], "just": [26, 262, 264], "our": 26, "elif": 26, "fine": [26, 218, 262], "own": [26, 204, 210, 262], "re": [26, 158, 207, 210, 218, 264], "intern": [26, 264], "did": 26, "older": [26, 175, 212, 259, 262], "around": [26, 263], "y": [26, 65, 102, 209, 210, 264], "dlmanagedtensor": 26, "so": [26, 98, 102, 110, 192, 199, 212, 258, 261, 262, 265], "tell": 26, "old": 26, "exchang": [26, 102, 212], "And": [26, 192, 213], "try": [26, 218, 262], "succe": 26, "info": [26, 110], "dltensor_vers": 26, "need": [26, 192, 207, 208, 210, 212, 214, 218, 258, 259, 262, 263, 264, 265], "used_dltensor_vers": 26, "done": [26, 204], "typeerror": [26, 29, 34, 35, 262, 264], "read": [26, 206, 210], "dlpack_flag_bitmask_read_onli": 26, "ignor": [26, 137, 258], "respons": 26, "isn": [26, 207], "t": [26, 191, 207, 210, 213, 217, 218, 262, 264], "id": 27, "meant": 27, "device_typ": 27, "device_id": 27, "member": 27, "cpu_pin": 27, "opencl": 27, "vulkan": 27, "metal": 27, "vpi": 27, "cuda_manag": 27, "13": 27, "one_api": 27, "14": [27, 259], "truth": [28, 31, 33, 37, 39, 43, 89, 93, 105, 106, 120, 121, 145, 265], "outsid": [29, 169, 185, 192, 201, 206, 212], "bound": [29, 77, 173, 192, 201, 206, 218], "divis": [30, 41, 71, 90, 101, 154, 161, 209], "floor_divid": [30, 191], "greater_equ": [31, 191], "kei": [32, 49, 111, 113, 115, 262], "slice": [32, 49, 185, 191, 210], "ellipsi": [32, 49, 192], "pep": [34, 40, 101, 132, 212, 259], "357": 34, "overflowerror": 35, "bitwise_invert": [36, 191], "less_equ": [37, 191], "bitwise_left_shift": [38, 191], "matrix": [40, 55, 132, 133, 137, 176, 178, 179, 234, 236, 237, 238, 239, 240, 242, 243, 244, 247, 248, 249, 250, 251, 252, 254, 258, 262], "product": [40, 42, 58, 132, 141, 151, 176, 187, 206, 235, 246, 258], "semant": [40, 101, 132, 154, 173, 191, 192, 204, 210, 212, 214, 216, 217, 258, 262, 263, 264], "built": [40, 132, 192, 201, 262], "465": [40, 132], "least": [40, 90, 115, 116, 132, 141, 144, 181, 182, 183, 184, 207, 208, 247], "m": [40, 55, 132, 133, 137, 155, 160, 176, 177, 178, 179, 192, 220, 222, 224, 225, 226, 228, 229, 230, 231, 233, 234, 236, 237, 238, 239, 240, 242, 243, 244, 246, 247, 248, 249, 250, 251, 252, 254], "remov": [40, 132, 168, 192, 209, 237, 254], "innermost": [40, 132, 133, 178, 179, 234, 236, 237, 238, 239, 240, 242, 243, 244, 247, 248, 249, 250, 251, 252, 254], "conjug": [40, 79, 132, 176, 187, 206, 234, 238, 251, 258], "transposit": [40, 132, 176], "desir": [40, 63, 75, 132, 140, 176, 208, 209, 212, 218], "prior": [40, 132, 176], "inner": [40, 132, 206, 238, 258], "stack": [40, 55, 132, 133, 178, 179, 191, 217, 234, 236, 237, 238, 239, 240, 242, 243, 244, 247, 248, 249, 250, 251, 252, 254, 258], "l": [40, 132, 234, 254], "remaind": [41, 191, 192], "multipli": [42, 151, 167, 191, 206, 208, 238, 251], "not_equ": [43, 191, 206], "negat": [44, 79, 142], "bitwise_or": [45, 191], "exponenti": [47, 94, 96, 127, 150, 209], "power": [47, 71, 94, 150, 209, 243, 264], "expon": [47, 150, 243], "versu": [47, 51, 63, 77, 90, 141, 150, 206], "bitwise_right_shift": [48, 191], "mix": [49, 122, 136, 157, 170, 186, 191, 206, 210, 213, 258, 262], "how": [49, 90, 141, 204, 208, 213, 217, 263, 264, 265], "minuend": 50, "subtrahend": 50, "subtract": [50, 191, 206, 208], "choos": [51, 57, 59, 90, 101, 122, 128, 129, 130, 131, 134, 135, 136, 138, 139, 141, 144, 155, 170, 181, 182, 183, 184, 186, 191, 192, 199, 209, 210, 211, 213, 216, 262, 264], "divid": [51, 101, 153, 161, 191, 192, 206, 208], "bitwise_xor": [52, 191], "resid": [53, 59, 95, 140, 176, 192, 206, 212, 262], "fewer": 55, "unknown": [57, 58, 155], "graph": [57, 58, 144, 155, 181, 182, 183, 184, 192, 211, 216, 262], "static": [57, 211, 215], "resolv": [57, 60, 88, 95, 101, 103, 104, 151, 172, 222, 223, 226, 227, 230, 233, 254, 262], "know": [57, 144, 155, 181, 182, 183, 184, 204, 207, 208, 211, 262, 264], "content": [57, 211, 261], "warrant": 57, "custom": [57, 207, 214], "immut": 57, "retriev": [57, 192, 204, 219, 258, 264], "behav": [57, 209], "current": [59, 113, 115, 173, 199, 210, 213, 218, 262, 263, 264], "__dlpack__": [59, 102, 191, 206, 212], "caveat": 59, "would": [59, 60, 156, 160, 192, 206, 210, 216, 258, 262, 264], "locat": [59, 210], "explicit": [59, 60, 102, 173, 176, 213, 264], "enqueu": 59, "asynchron": 59, "explain": [59, 207], "clarifi": [59, 134, 138, 181, 182, 183, 206], "obj": 60, "nestedsequ": 60, "supportsbufferprotocol": 60, "possibli": [60, 217, 262], "nest": [60, 217], "sequenc": [60, 78, 122, 169, 176, 185, 192, 206, 222, 223, 226, 227, 230, 233, 253], "protocol": [60, 204, 212, 218, 262, 264], "turn": [60, 204, 257], "memoryview": 60, "preced": [60, 209, 212, 213], "mixtur": 60, "convers": [60, 122, 206, 207, 262], "obei": [60, 122], "permit": [60, 63, 122, 211, 261], "To": [60, 101, 192, 206, 208, 209, 218, 262, 263, 265], "array_api": [60, 262], "astyp": [60, 191, 206], "exce": [60, 103, 104, 122], "sine": [61, 62, 163, 164, 175], "1j": [61, 64, 86, 87, 94, 96, 107, 163, 164, 174], "asinh": [61, 191, 206, 208], "asin": [62, 191, 206, 208], "irrespect": [63, 209], "histor": [63, 175, 258], "discard": 63, "choic": [63, 170, 186, 204, 208, 209, 213, 214, 216, 217, 258, 259, 262, 264], "arbitrari": [63, 73, 111, 137, 157, 208], "achiev": [63, 192, 208], "outcom": 63, "clariti": 63, "newli": [63, 213], "alloc": [63, 178, 179, 211, 213], "tangent": [64, 65, 66, 174, 175], "atanh": [64, 191, 206, 208], "quotient": [65, 90, 101, 192], "domain": [65, 206, 208, 209, 262, 264], "notat": 65, "denot": [65, 187, 247], "pair": [65, 101, 235, 251], "codomain": 65, "quadrant": 65, "chosen": [65, 188, 212], "angl": [65, 87, 107, 164, 175], "rai": 65, "role": 65, "coordin": [65, 123, 137, 174, 175, 217, 262], "tradit": 65, "atan": [66, 191, 206, 208], "bitwis": [67, 70, 72, 191], "flip": [68, 191], "shift": [69, 71, 158, 223, 227], "arithmet": [71, 90, 136, 141, 191, 201, 209, 262], "propag": [71, 102, 134, 136, 138, 170, 186, 208], "floor": [71, 101, 191], "anoth": [73, 75, 102, 192, 204, 206, 207, 209, 210, 212, 213, 216, 238, 251, 262, 264], "from_": 75, "smallest": [76, 98, 108, 242], "closest": [76, 100, 101, 159], "alreadi": [76, 100, 141, 159, 180, 212, 214, 259, 264], "min": [77, 98, 108, 178, 179, 187, 191, 206, 235, 242, 248, 251, 252, 256], "clamp": [77, 206], "join": [78, 169, 201], "befor": [78, 88, 151, 160, 172, 181, 182, 183, 184, 187, 206, 209, 235, 254, 262], "concaten": 78, "leav": [78, 140, 169, 192, 199, 206, 208, 210, 247], "famili": [78, 169], "intxx": [78, 169, 201], "floatxx": [78, 169, 201], "718281828459045": 80, "euler": 80, "constant": [80, 84, 191, 192, 206], "71828182845904523536028747135266249775724709369995": 80, "Not": 82, "alia": [83, 115, 192, 206, 241, 245, 253, 255], "141592653589793": 84, "1415926535897932384626433": 84, "compos": [85, 201, 206], "begin": [86, 161, 163, 174, 175, 192, 199, 249, 264], "align": [86, 163, 174, 175, 206, 208, 263], "sum_": [86, 187], "2n": [86, 123], "jx": [86, 163, 174], "cosh": [86, 175, 191, 206, 208], "period": [87, 164, 174, 175], "ci": [87, 94, 96, 164, 264], "v": [87, 94, 96, 160, 164, 215, 247, 251, 262], "co": [87, 94, 96, 164, 191, 206, 208], "sin": [87, 94, 96, 164, 191, 206, 208, 210, 218], "include_initi": 88, "cumul": [88, 206], "unless": [88, 141, 151, 172, 191, 254], "smaller": [88, 151, 158, 172, 254, 264], "latter": [88, 101, 151, 172, 192, 204, 209, 212, 254, 263], "help": [88, 151, 172, 207, 208, 217, 254], "prevent": [88, 151, 172, 254], "initi": [88, 210, 262], "ident": [88, 187, 209, 227, 239, 240, 243, 262], "success": [88, 151, 172, 254], "dividend": [90, 101, 154], "divisor": [90, 101, 154, 170, 186], "small": [90, 101, 141, 208, 244, 247, 249, 262, 264], "gener": [90, 122, 141, 154, 176, 204, 207, 209, 214, 258, 262, 263], "textbook": [90, 141], "formula": [90, 124, 126, 141], "ac": [90, 141, 209], "bd": [90, 141], "bc": [90, 141, 209], "riemann": [90, 141, 209], "sphere": [90, 141, 209], "infinit": [90, 111, 141, 166, 208, 209], "usual": [90, 141, 262], "interest": [90, 141, 208], "unlik": [90, 141, 259, 262], "consist": [90, 101, 115, 116, 122, 141, 160, 176, 192, 199, 209, 213, 218, 229, 230, 231, 233, 238, 247, 258, 262], "uniniti": [91, 92], "deriv": [92, 104, 147, 190, 192, 214, 263], "natur": [94, 123, 124, 125, 126, 150, 249, 258], "logarithm": [94, 123, 124, 125, 126, 127, 150, 249, 258], "expand": [95, 192, 264], "close": [95, 96, 122, 125, 159, 192, 262, 264], "indexerror": [95, 192], "exp": [96, 127, 150, 191, 206, 208, 249], "accur": [96, 125, 208, 249], "fdlibm": [96, 125, 208], "n_row": 97, "n_col": 97, "ones": [97, 147, 177, 191, 206, 210, 214, 262], "diagon": [97, 178, 179, 238, 247, 248, 254, 258], "elsewher": [97, 188, 209], "row": [97, 144, 155, 192, 242, 248, 250, 251], "column": [97, 238, 242, 248, 250, 251, 262], "finfo_object": [98, 206], "machin": [98, 108, 244, 247, 262], "inform": [98, 108, 262, 263, 264, 265], "occupi": [98, 108], "ep": [98, 244, 247, 262], "next": [98, 143, 262], "largest": [98, 108, 242, 251, 252], "smallest_norm": 98, "full": [98, 191, 206, 210, 248, 250, 251, 264], "preserv": [99, 160, 192, 206, 209, 213], "reorder": [99, 140], "greatest": [100, 101], "238": 101, "goal": [101, 207, 210, 258, 264], "disambigu": 101, "toward": [101, 158, 208, 258, 263], "former": [101, 192, 209, 263], "overload": [101, 258], "led": 101, "subtl": 101, "bug": [101, 264, 265], "expect": [101, 115, 175, 201, 206, 208, 209, 211, 212, 213, 214, 218, 262], "design": [101, 206, 208, 260, 262, 264, 265], "ill": [101, 258], "diverg": [101, 265], "strictli": 101, "relat": [101, 192, 209, 213, 217, 258, 262, 264], "surpris": [101, 209], "unexpect": [101, 209, 214, 262], "enough": [102, 204, 207, 218, 257, 259, 262], "materi": [102, 212], "attributeerror": [102, 212], "present": [102, 115, 210, 211, 213, 257, 258, 259, 262], "suggest": [102, 264], "correctli": [102, 208], "move": [102, 140, 206, 213, 264], "agnost": 102, "fashion": 102, "illustr": [102, 210, 218], "def": [102, 218, 262, 263, 264], "func": 102, "xp_x": 102, "__array_namespace__": [102, 191, 219, 258, 262], "xp_y": 102, "work": [102, 207, 210, 212, 218, 262, 264, 265], "xxxxx": 102, "address": [102, 206, 258, 262, 263, 264], "unsupport": [102, 206], "fill_valu": [103, 104], "squar": [107, 166, 191, 206, 209, 234, 236, 238, 239, 240, 243, 247, 249, 250, 258], "root": [107, 166, 206, 209, 239], "hypotenus": 107, "triangl": 107, "side": [107, 160, 192, 212], "naiv": 107, "correct": [107, 170, 186, 210], "iinfo_object": [108, 206], "inspect": [110, 191], "util": [110, 191, 194, 206, 259, 262, 263], "class": [110, 194, 218, 262, 263], "xp": [110, 219, 257, 258, 262], "capabl": [110, 191, 194, 206], "default_dtyp": [110, 191, 206], "dictionari": [111, 113, 115, 206], "fulli": [111, 213], "complianc": 111, "exclud": [111, 122, 192, 201], "demarc": [111, 211], "throughout": 111, "defaultdatatyp": 113, "concept": [113, 115, 192, 210, 262], "context": [113, 115, 209, 213, 263], "manag": [113, 115, 207, 213], "runtim": [114, 217, 218, 259, 262, 264], "creation": [114, 191, 204, 213, 262], "datatyp": 115, "decid": [115, 262], "belong": [115, 116, 210], "shorthand": [115, 116, 192], "canon": 115, "float16": 116, "bfloat16": [116, 262], "int128": 116, "short": [116, 209, 262, 263], "extend": [116, 192, 209, 262], "extens": [116, 260, 264], "num": 122, "endpoint": 122, "delta_": 122, "textrm": [122, 161, 249], "sampl": [122, 170, 186, 221, 227, 232, 263], "nonneg": [122, 176, 192], "concern": [122, 155, 173, 206, 213, 217, 262], "polar": 123, "r": [123, 177, 192, 234, 238, 239, 240, 248, 250, 251, 262, 264], "theta": 123, "continu": [123, 125, 150, 166, 209, 238, 251, 262], "account": [123, 125, 150, 166, 262], "log_": [124, 126], "log": [124, 125, 126, 127, 150, 191, 206, 208], "mxn": [133, 178, 179, 237, 242, 244, 247, 248, 254], "sentinel": [134, 138], "xy": 137, "grid": 137, "cartesian": 137, "ij": 137, "effect": [137, 170, 186, 213, 265], "ni": 137, "n3": 137, "nn": 137, "three": [137, 213], "p": [137, 239, 242, 256], "sourc": [140, 263, 265], "destin": 140, "uniqu": [140, 176, 181, 182, 183, 184, 206, 209, 222, 223, 226, 227, 230, 233, 238, 240, 248, 250, 251, 258], "state": [141, 191, 192, 262], "cdot": [141, 163, 167, 174, 187], "y_i": [142, 149], "direct": [143, 207, 262, 263], "build": [144, 155, 181, 182, 183, 184, 192, 204, 211, 217, 262], "jax": [144, 155, 181, 182, 183, 184, 192, 210, 211, 262, 263, 264], "dask": [144, 155, 181, 182, 183, 184, 192, 210, 211, 217, 262, 263, 264], "etc": [144, 155, 181, 182, 183, 184, 192, 211, 259], "find": [144, 155, 160, 181, 182, 183, 184, 192, 206, 211, 262, 263], "difficult": [144, 155, 181, 182, 183, 184, 192, 208, 211, 262], "omit": [144, 155, 181, 182, 183, 184, 192, 211, 212, 216], "section": [144, 155, 181, 182, 183, 184, 192, 206, 207, 211, 212, 213, 214, 218, 262, 264], "typl": 144, "total": [144, 170, 186, 209], "style": [144, 155, 192], "odd": [150, 221, 227, 229, 230, 232], "treat": [150, 177], "carefulli": 150, "That": [154, 192, 204, 214, 218, 262], "primarili": 154, "basi": 155, "liter": [155, 160, 220, 222, 224, 225, 226, 228, 229, 230, 231, 233, 242, 248, 256], "repetit": [155, 177], "prod": [155, 191, 206, 222, 226, 230, 233], "caus": 155, "advis": [155, 175, 210, 258], "regard": [155, 173, 206, 214, 258, 264], "degrad": 155, "One": [156, 216, 262, 265], "arrays_and_dtyp": 157, "restor": 158, "counterpart": 159, "sorter": 160, "control": [160, 213, 216, 217], "land": 160, "exactli": [160, 174, 175], "edg": 160, "satisfi": [160, 177, 191, 192, 208, 209, 263], "condit": [160, 188, 216, 261], "what": [160, 204, 212, 214, 218, 258, 262, 263, 264, 265], "constitut": [160, 170, 186], "among": [160, 208, 209, 258], "argsort": [160, 191], "invok": [160, 263], "signum": 161, "whenev": [162, 264], "2j": 163, "sinh": [163, 175, 191, 206, 208], "indistinguish": [166, 192, 208], "degre": [170, 186, 239, 258], "freedom": [170, 186], "adjust": [170, 186, 262], "popul": [170, 186], "bessel": [170, 186, 207], "conceptu": 173, "mutat": 173, "check": [173, 192, 208, 234, 238, 239, 248, 250, 257, 264, 265], "select": [173, 192, 262], "analyt": [174, 175, 209], "pole": [174, 175], "tanh": [174, 191, 206, 208], "stem": [175, 238, 251], "patch": 175, "tensor": [176, 258, 262, 264], "contract": [176, 187, 258, 261], "outer": [176, 206], "dot": [176, 187, 258], "x1_ax": 176, "x2_ax": 176, "triangular": [178, 179, 234, 248], "closer": 180, "reconstruct": [181, 183], "distinct": [181, 182, 183, 184, 209, 258], "inverse_indic": [181, 183], "exact": [181, 183, 218], "aggreg": [181, 182], "namedtupl": [181, 182, 183, 238, 248, 249, 251, 258], "third": [181, 251], "fourth": 181, "split": [185, 206], "varianc": 186, "unbias": 186, "mathbf": 187, "overlin": [187, 247], "a_i": 187, "b_i": 187, "restrict": [187, 235, 258, 261], "yield": [188, 209], "signatur": [191, 204, 218, 262, 263], "subset": [191, 208, 263, 264], "categori": 191, "accuraci": [191, 215, 220, 222, 225, 226, 229, 230, 231, 233], "reflect": 191, "mt": 191, "__abs__": [191, 206], "__bool__": [191, 206, 216], "__complex__": [191, 206, 216], "__float__": [191, 206, 216], "__getitem__": [191, 192, 206], "__index__": [191, 206, 216], "__int__": [191, 206, 216], "to_devic": [191, 206, 213], "overview": 191, "algorithm": [191, 208, 249, 264], "inf": [191, 242, 256, 262], "newaxi": [191, 192, 206], "arang": [191, 263], "asarrai": [191, 206, 212, 264], "empty_lik": 191, "ey": [191, 206], "full_lik": [191, 206], "linspac": [191, 206], "meshgrid": [191, 206], "ones_lik": [191, 206], "tril": 191, "triu": 191, "zeros_lik": 191, "can_cast": 191, "finfo": [191, 206], "iinfo": [191, 206], "result_typ": 191, "acosh": [191, 206, 208], "atan2": [191, 208], "clip": [191, 192, 206], "copysign": [191, 206], "expm1": [191, 206, 208], "hypot": [191, 206], "isfinit": [191, 206], "isinf": [191, 206], "isnan": [191, 206], "log1p": [191, 206, 208], "log2": [191, 206, 208], "log10": [191, 206, 208], "logaddexp": 191, "logical_and": 191, "logical_not": 191, "logical_or": 191, "logical_xor": 191, "nextaft": 191, "reciproc": [191, 247], "signbit": [191, 206], "tan": [191, 206, 208], "trunc": [191, 206], "syntax": [191, 210, 212, 214, 262], "__array_namespace_info__": [191, 194, 206], "default_devic": [191, 206], "linear": [191, 209, 250, 257], "algebra": [191, 209, 247, 257], "matrix_transpos": [191, 258], "tensordot": [191, 206, 258], "vecdot": [191, 206, 258], "manipul": 191, "broadcast_arrai": 191, "broadcast_to": 191, "concat": 191, "expand_dim": [191, 192], "moveaxi": [191, 206], "reshap": [191, 192], "roll": 191, "squeez": 191, "tile": [191, 206], "unstack": [191, 206], "argmax": 191, "argmin": 191, "searchsort": [191, 206], "unique_al": [191, 206], "unique_count": [191, 206], "unique_invers": [191, 206], "unique_valu": [191, 206], "statist": 191, "cumulative_sum": [191, 206], "__array_api_version__": [191, 203, 206, 259], "syntact": 192, "sugar": 192, "term": [192, 213, 258, 263], "colon": 192, "contrast": [192, 209, 216, 258], "combin": [192, 210, 217, 258], "basic": 192, "noth": 192, "perspect": 192, "item": [192, 210, 262], "2k": 192, "3k": 192, "q": [192, 238, 248], "obtain": [192, 261], "qk": 192, "being": [192, 212, 213, 258, 262, 265], "100": [192, 216, 259], "junk": 192, "consider": [192, 210, 258], "comma": 192, "separ": [192, 206, 212, 257], "exp1": 192, "exp2": 192, "expn": 192, "forth": 192, "decreas": [192, 258], "entri": [192, 222, 223, 226, 227, 230, 233, 262], "retain": 192, "invoc": 192, "manner": [192, 212, 214], "sympi": 192, "flat": 192, "attempt": [192, 208, 209, 210, 213, 214, 262, 264], "dynam": 192, "mask": [192, 262], "filter": 192, "s1": 192, "sm": 192, "s2": 192, "sn": 192, "prohibit": [192, 210], "replac": [192, 216, 247, 265], "iter": 192, "programmat": 194, "queri": 194, "reli": [199, 207, 209, 211, 218, 264], "them": [199, 207, 210, 214, 262, 264], "reproduc": [199, 208], "high": [201, 212, 213, 258, 262], "diagram": [201, 262], "lattic": 201, "particip": [201, 209], "matter": [201, 207, 209], "dash": 201, "undefin": [201, 258], "connect": [201, 261], "rather": [201, 204, 207, 213, 214, 217, 258, 262], "i2": 201, "i1": 201, "i4": 201, "i8": 201, "u1": 201, "u2": 201, "u4": 201, "u8": 201, "f8": 201, "c8": 201, "c16": 201, "regardless": 201, "subject": [201, 249, 261], "met": 201, "give": [201, 209, 212, 213], "No": [204, 259], "run": [204, 263, 264], "varieti": 204, "architectur": 204, "gpu": [204, 212, 213, 264], "distribut": [204, 208, 212, 213, 217, 261], "system": [204, 250, 262], "tpu": [204, 212], "emerg": [204, 212, 262], "instal": [204, 262, 265], "emploi": [204, 211, 213], "parallel": [204, 215, 262, 264], "jit": [204, 207, 262], "put": [204, 262, 264], "constraint": [204, 209, 260], "predict": 204, "itself": [204, 212, 216, 264], "motiv": 204, "importantli": 204, "awar": [204, 218, 264], "layer": [204, 217, 262, 264], "coupl": 204, "downstream": [204, 257, 262, 263], "import": [204, 207, 213, 216, 257, 258, 262, 264, 265], "structur": [204, 218, 262, 263], "interoper": [204, 212], "share": [204, 262], "though": [204, 218, 262, 264], "soft": 204, "arraylib_nam": 204, "constrain": [204, 208], "unwil": 204, "signific": [204, 208, 210, 262], "adopt": [204, 209, 212, 264], "primari": [204, 212], "write": [204, 210, 262, 264], "consequ": [204, 218, 262], "easi": [204, 257], "unambigu": [204, 210, 212, 263], "clear": [204, 210, 212, 262, 264], "significantli": 204, "detract": 204, "experi": [204, 259], "strict": [204, 210], "typic": [204, 210, 212, 214, 259, 262, 264, 265], "good": [204, 207, 210, 213, 218, 262], "anyth": [204, 262], "thin": 204, "conveni": 204, "plan": [205, 262], "previou": [206, 264], "gh": [206, 264], "613": 206, "687": 206, "eager": [206, 215, 262], "708": 206, "revis": [206, 209, 213], "702": 206, "relax": 206, "730": 206, "749": 206, "intrins": 206, "652": 206, "602": 206, "741": 206, "665": 206, "751": 206, "701": 206, "625": 206, "742": 206, "752": 206, "fft": [206, 219, 222, 224, 225, 226, 228, 229, 230, 231, 233], "720": 206, "746": 206, "backport": 206, "689": 206, "715": 206, "693": 206, "653": 206, "703": 206, "713": 206, "656": 206, "690": 206, "699": 206, "705": 206, "692": 206, "604": 206, "740": 206, "fftn": [206, 226], "hfft": 206, "ifft": [206, 220], "ifftn": [206, 222], "irfft": [206, 231, 232], "irfftn": [206, 233], "fftfreq": 206, "rfftfreq": 206, "linalg": [206, 257, 258], "trace": [206, 210, 258, 263], "fix": [206, 213, 262, 264], "clarif": 206, "674": 206, "736": 206, "typo": 206, "633": 206, "681": 206, "706": 206, "miss": [206, 262], "639": 206, "issu": [206, 207, 209, 210, 212, 213, 217, 262, 264], "qr": 206, "661": 206, "choleski": [206, 258], "677": 206, "svd": [206, 247], "619": 206, "666": [206, 263], "644": 206, "622": 206, "723": 206, "497": 206, "498": 206, "546": 206, "525": 206, "528": 206, "557": 206, "529": 206, "448": 206, "447": 206, "537": 206, "526": 206, "554": 206, "517": 206, "520": 206, "521": 206, "522": 206, "523": 206, "524": 206, "442": 206, "434": 206, "445": 206, "454": 206, "453": 206, "436": 206, "451": 206, "452": 206, "484": 206, "435": 206, "531": 206, "530": 206, "532": 206, "568": 206, "514": 206, "534": 206, "536": 206, "437": 206, "441": 206, "438": 206, "553": 206, "440": [206, 259], "556": 206, "457": 206, "456": 206, "552": 206, "461": 206, "538": 206, "459": 206, "458": 206, "558": 206, "540": 206, "512": 206, "470": 206, "417": 206, "502": 206, "443": 206, "559": 206, "det": [206, 239, 249], "542": 206, "eigh": [206, 258], "543": 206, "eigvalsh": 206, "547": 206, "matrix_norm": 206, "565": 206, "matrix_pow": 206, "549": 206, "matrix_rank": 206, "563": 206, "560": 206, "pinv": 206, "564": 206, "548": 206, "slogdet": [206, 258], "567": 206, "solv": [206, 218, 247], "566": 206, "561": 206, "svdval": 206, "562": 206, "541": 206, "vector_norm": 206, "550": [206, 264], "418": 206, "491": 206, "513": 206, "variabl": [206, 217, 250, 265], "515": 206, "527": 206, "573": 206, "480": 206, "485": 206, "496": 206, "503": 206, "427": 206, "416": 206, "fast": 206, "fourier": [206, 220, 221, 222, 224, 225, 226, 228, 229, 230, 231, 232, 233, 257], "transform": [206, 220, 221, 222, 224, 225, 226, 228, 229, 230, 231, 232, 233, 257, 263], "189": 206, "rfft": [206, 229, 232], "rfftn": [206, 230], "irfttn": 206, "fftshift": [206, 227], "ifftshift": 206, "464": 206, "429": 206, "439": 206, "572": 206, "510": 206, "511": 206, "473": 206, "scope": [207, 216, 217, 260, 263], "mention": [207, 214, 264], "There": [207, 210, 212, 213, 218, 262, 264, 265], "deal": [207, 217, 218, 259, 261], "assumpt": [207, 212, 259, 260, 262], "rest": [207, 262, 264], "ndarrai": [207, 212, 262, 264], "visual": 207, "often": [207, 209, 214, 258, 262, 263, 264], "difficulti": [207, 211], "relev": [207, 213, 218, 262], "certainti": 207, "inde": 207, "project": [207, 209, 212, 264], "statsmodel": 207, "scikit": [207, 217, 262, 263, 264], "bio": [207, 264], "qutip": 207, "strategi": [207, 213], "learn": [207, 217, 262, 263, 264], "submodul": [207, 257], "doesn": [207, 213, 262], "cupi": [207, 210, 262, 263, 264], "elementwisekernel": 207, "scipi": [207, 217, 262, 263], "astropi": [207, 264], "seem": [207, 212, 264], "almost": [207, 264], "inevit": 207, "someth": [207, 210, 262], "numba": [207, 212, 262, 264], "sens": [207, 216, 262, 264], "tend": [207, 210, 264], "reimplement": 207, "gamma": 207, "drop": [207, 218, 248, 251], "arraylib": 207, "cpython": 207, "backend": [207, 217, 262], "target": [207, 213], "better": [207, 264], "pypi": [207, 263, 264], "quit": [207, 262, 264], "readi": 207, "mainstream": 207, "todai": [207, 210, 258], "onc": [207, 259], "feasibl": [207, 262], "roundtiestoeven": 208, "ti": [208, 258, 262], "certain": [208, 209, 258], "boundari": 208, "reader": 208, "identifi": [208, 213, 263], "lack": 208, "phrase": [208, 214], "recogn": [208, 213], "seek": [208, 258, 263], "optim": [208, 210, 258, 264], "latitud": 208, "although": [208, 227, 249], "freeli": 208, "sun": 208, "microsystem": 208, "With": [208, 263, 264], "imposs": [208, 210, 211, 265], "suit": [208, 260, 262, 263], "span": 208, "report": 208, "averag": 208, "aid": [208, 265], "best": [208, 212, 258, 262], "effort": [208, 263], "theoret": 208, "sound": 208, "robust": 208, "bare": 208, "summat": [208, 258], "unfortun": 208, "impos": [208, 211], "rigor": 208, "sever": [208, 210, 259, 262], "curtail": 208, "unduli": 208, "topologi": 209, "continuum": 209, "onto": [209, 210], "surfac": [209, 262], "stereograph": 209, "coalesc": 209, "3j": 209, "4j": 209, "convei": 209, "niceti": 209, "translat": [209, 264], "neq": 209, "arriv": [209, 262], "opposit": 209, "subtleti": 209, "craft": 209, "intuit": 209, "julia": [209, 264], "minim": [209, 213], "imperfect": 209, "balanc": 209, "appear": [209, 259, 262, 265], "embrac": 209, "transcendent": 209, "wholli": 209, "analysi": [209, 210, 211, 262, 263, 264], "curv": [209, 262], "discontinu": [209, 264], "taken": [209, 262], "pm": 209, "whole": 209, "simpl": [209, 210, 259], "aris": [209, 258, 261, 262], "trigonometr": 209, "domin": 209, "a_1": 209, "ldot": 209, "a_n": 209, "reflex": 209, "leq": 209, "transit": 209, "antisymmetr": 209, "partial": 209, "establish": [209, 263], "six": 209, "lexicograph": 209, "principl": [209, 263], "situat": [209, 210, 212, 213, 214, 262, 264], "unit": [209, 221, 232], "despit": [209, 212], "admonit": [210, 211], "becom": [210, 212, 262, 264], "trigger": [210, 216], "confid": 210, "pytorch": [210, 213, 262, 263, 264], "mxnet": [210, 262, 263, 264], "save": 210, "faster": 210, "tensorflow": [210, 262, 263, 264], "fundament": [210, 262], "inplac": 210, "update_index": 210, "idx": 210, "solut": [210, 247, 250, 264], "hard": [210, 212, 213, 216, 262], "go": [210, 259], "down": 210, "rout": 210, "val": [210, 216], "veri": [210, 249, 264], "wide": [210, 212, 248, 251, 262], "slightli": 210, "heavili": [210, 264], "you": [210, 265], "_must_": 210, "abstract": [210, 258, 263], "donat": 210, "lapack": [210, 258], "_may_": 210, "overwrit": 210, "whatev": 210, "fastest": 210, "aren": [210, 262], "longer": [210, 258], "problem": [210, 218, 247, 263, 264], "upon": [211, 262], "ahead": 211, "burden": [211, 262], "omiss": 211, "nativ": 212, "layout": 212, "packag": [212, 218, 259, 262, 263, 264], "live": [212, 262], "figur": 212, "contigu": 212, "promin": [212, 262], "releas": [212, 259, 263], "candid": [212, 262], "__cuda_array_interface__": 212, "moment": 212, "tri": [212, 264], "growth": 212, "amd": 212, "undesir": 212, "pattern": [212, 213, 217, 263, 264], "widest": 212, "lot": 212, "3118": 212, "hardli": 212, "mostli": [212, 216, 217, 262], "dealt": [212, 218], "__array__": [212, 264], "attach": 212, "hold": [212, 258], "rfc": [212, 262], "http": [212, 259, 265], "dmlc": 212, "github": [212, 259, 261, 265], "io": 212, "page": [212, 264], "standalon": [212, 265], "outlin": [212, 262], "cover": [212, 262, 265], "usag": [212, 257, 262], "node": 212, "spars": [212, 262], "why": [212, 262], "complet": [212, 217, 248, 259, 262, 264], "scale": 213, "exert": 213, "placement": 213, "global": 213, "switchabl": 213, "transfer": 213, "granular": 213, "downsid": 213, "verbos": 213, "much": [213, 262, 265], "kept": 213, "instanti": 213, "physic": 213, "revisit": 213, "themselv": 213, "expos": [213, 258], "bewar": 213, "framework": [213, 262], "elabor": 213, "polici": 213, "highest": 213, "prioriti": 213, "topic": [213, 217, 260, 262, 264], "pin": 213, "tricki": 213, "sinc": 213, "emit": 214, "misbehav": 214, "forese": 214, "extent": 214, "builtin": 214, "author": [214, 261, 262, 263, 264], "worth": 214, "compli": 214, "aspect": [216, 265], "impact": [216, 262], "prescrib": 216, "show": 216, "up": [216, 248, 257, 264], "five": 216, "dunder": [216, 259], "serial": 216, "compute_someth": 216, "statement": 216, "do_something_els": 216, "flow": 216, "cond": 216, "won": 217, "further": 217, "exercis": 217, "environ": [217, 258, 262, 265], "bla": [217, 258], "openmp": 217, "n_job": [217, 264], "worker": [217, 264], "chunk": 217, "approach": [217, 262, 263], "auto": [217, 264], "thing": 217, "improv": [217, 262, 264], "fit": [217, 261, 262, 264], "becam": [218, 262], "progress": [218, 265], "superclass": 218, "_basearrai": 218, "subclass": [218, 262], "insid": [218, 257], "typevar": 218, "variat": [218, 263], "don": [218, 264], "said": 218, "subtyp": 218, "hasattr": [219, 257, 258, 262], "ortho": [220, 222, 224, 225, 226, 228, 229, 230, 231, 233], "forward": [220, 222, 224, 225, 226, 228, 229, 230, 231, 233, 262], "discret": [220, 221, 222, 224, 225, 226, 228, 229, 230, 231, 232, 233], "pad": [220, 222, 224, 225, 226, 228, 229, 230, 231, 233], "trim": [220, 222, 224, 225, 226, 228, 229, 230, 231, 233], "orthonorm": [220, 222, 224, 225, 226, 228, 229, 230, 231, 233, 248, 251], "frequenc": [221, 223, 232, 259, 263], "f": [221, 232], "window": [221, 232], "center": 223, "spectrum": 223, "swap": 223, "nyquist": [223, 232], "hermitian": [224, 228, 234, 238, 239], "symmetri": [224, 228], "decomposit": [234, 238, 247, 248, 251, 252, 258], "symmetr": [234, 238, 239], "mathbb": [234, 238, 239, 240, 248, 250, 251], "ll": 234, "h": [234, 238, 247, 251], "qquad": 234, "text": 234, "factor": [234, 251], "offset": [237, 254], "off": [237, 254], "eigenvalu": [238, 239, 258], "lambda": [238, 239], "orthogon": [238, 247, 248, 251, 258], "unitari": [238, 248, 251], "eigenvector": 238, "softwar": [238, 251, 261, 262, 264], "fact": [238, 251], "phi": [238, 251], "eig": [238, 258], "diag": [238, 251], "polynomi": [239, 262], "i_n": [239, 240], "eigval": [239, 258], "xx": 240, "ord": [242, 256], "fro": 242, "nuc": 242, "frobeniu": 242, "nuclear": 242, "singular": [242, 244, 247, 251, 252], "induc": 242, "rtol": [244, 247], "toler": [244, 247], "largest_singular_valu": [244, 247], "epsilon": [244, 247], "moor": 247, "penros": 247, "pseudo": 247, "sigma": [247, 251], "tall": [248, 251], "geq": 248, "necessarili": [248, 265], "linearli": [248, 250, 262], "logabsdet": 249, "again": 249, "equat": 250, "coeffici": 250, "ordin": 250, "full_matric": 251, "u_k": 251, "v_k": 251, "vh": 251, "adjoint": 251, "l1": 256, "manhattan": 256, "l2": 256, "euclidean": 256, "coher": 257, "extension_nam": 257, "regular": [257, 259, 262], "__getattr__": 257, "endeavor": 258, "strai": 258, "far": 258, "restraint": 258, "decis": [258, 262], "accid": 258, "especi": 258, "arisen": 258, "been": [258, 262], "process": [258, 259, 263], "afford": 258, "opportun": 258, "subsequ": [258, 263], "codifi": [258, 263], "theme": 258, "abil": 258, "decim": 258, "overli": 258, "compel": 258, "compris": 258, "prudent": 258, "lastli": 258, "polymorph": 258, "dedic": 258, "eignvector": 258, "agnostic": 258, "eschew": 258, "parameter": 258, "bias": 258, "underpin": 258, "cater": 258, "low": 258, "verbatim": 258, "poor": 258, "uplo": 258, "dai": 258, "monopoli": 258, "prolifer": 258, "conserv": [258, 264], "conservat": 258, "delin": 258, "overlap": 258, "confus": [258, 262], "parsimoni": 258, "einsum": 258, "einstein": 258, "vdot": 258, "multi_dot": 258, "chain": 258, "exhibit": 258, "consolid": 258, "propos": [259, 263, 264], "com": [259, 265], "blob": 259, "master": 259, "process_docu": 259, "md": 259, "summari": [259, 263], "matur": 259, "reach": [259, 264], "final": 259, "world": 259, "highli": 259, "strong": 259, "updat": 259, "date": 259, "shall": [259, 261], "alpha": 259, "beta": 259, "rc": 259, "post": 259, "dev": 259, "bugfix": 259, "__version__": 259, "resembl": 259, "year": [259, 262], "evolut": [260, 262], "verif": [260, 262], "benchmark": 260, "changelog": 260, "licens": 260, "websit": 261, "repositori": [261, 263], "mit": 261, "copyright": 261, "2024": 261, "consortium": [261, 262], "contributor": 261, "permiss": 261, "herebi": 261, "grant": 261, "charg": 261, "person": 261, "file": [261, 263, 264, 265], "merg": [261, 262], "publish": [261, 263], "sublicens": 261, "sell": 261, "whom": 261, "furnish": 261, "notic": 261, "substanti": 261, "portion": 261, "THE": 261, "AS": 261, "warranti": 261, "OF": 261, "BUT": 261, "TO": 261, "merchant": 261, "FOR": 261, "noninfring": 261, "IN": 261, "NO": 261, "holder": 261, "BE": 261, "liabl": 261, "claim": 261, "damag": 261, "liabil": 261, "action": 261, "tort": 261, "WITH": 261, "wealth": 262, "scienc": 262, "deep": 262, "push": 262, "art": 262, "unintend": 262, "activ": 262, "creativ": 262, "fragment": 262, "multidimension": 262, "xarrai": [262, 263], "pick": 262, "bless": 262, "inconsist": 262, "obviou": 262, "mind": 262, "sure": 262, "rare": [262, 263], "unimport": 262, "scientif": 262, "mid": 262, "1990": 262, "earli": 262, "2000": 262, "numarrai": 262, "2005": 262, "superced": 262, "roughli": 262, "decad": 262, "past": 262, "mainli": 262, "rise": 262, "newer": 262, "inspir": [262, 264], "idea": 262, "seriou": 262, "grew": 262, "quickli": 262, "infeas": 262, "speed": 262, "innov": [262, 263], "group": 262, "assembl": 262, "draft": 262, "presenc": 262, "meta": 262, "concret": 262, "shown": 262, "core": [262, 264], "borrow": 262, "steep": 262, "switch": [262, 264], "accompani": 262, "actual": 262, "task": [262, 264], "schedul": 262, "characterist": 262, "grain": 262, "obstacl": 262, "cython": [262, 264], "datetim": 262, "void": 262, "uniformli": 262, "o": 262, "routin": 262, "bind": [262, 264], "cffi": 262, "ctype": 262, "ufunc": 262, "gufunc": 262, "extra": 262, "huge": 262, "amount": [262, 263, 264], "strength": 262, "advantag": 262, "foreign": 262, "indirect": 262, "program": 262, "pydata": 262, "weld": 262, "bohrium": 262, "arkouda": 262, "legat": 262, "grow": 262, "panda": [262, 263], "matplotlib": [262, 263], "networkx": 262, "xtensor": 262, "xnd": [262, 264], "stdlib": 262, "javascript": 262, "rust": 262, "rrai": 262, "nd4j": 262, "jvm": 262, "numsharp": 262, "dispatch": [262, 264], "pythran": 262, "transon": 262, "onnx": 262, "apach": 262, "tvm": 262, "mlir": 262, "taco": 262, "unumpi": [262, 264], "einop": 262, "arrow": 262, "consult": 262, "simplest": 262, "directli": [262, 264], "package_nam": 262, "uniform": 262, "hinder": 262, "inter": 262, "distinguish": 262, "is_array_api_obj": 262, "peopl": 262, "abc": 262, "inherit": 262, "isinst": 262, "prove": 262, "discov": 262, "assist": 262, "importlib": 262, "metadata": 262, "entry_point": 262, "dict": 262, "deprec": 262, "py3": 262, "supplant": 262, "load": 262, "path": 262, "haven": 262, "measur": 262, "isol": 262, "indispens": 262, "institut": 262, "electr": 262, "electron": 262, "engin": [262, 264], "york": 262, "scott": 262, "bradner": 262, "1997": 262, "word": 262, "2119": 262, "doi": 262, "17487": 262, "rfc2119": 262, "technic": 263, "vacuum": 263, "sometim": 263, "compet": 263, "friction": 263, "focu": 263, "accommod": [263, 264], "foo": 263, "bar": 263, "aspir": 263, "experiment": 263, "channel": 263, "resourc": [263, 264], "novel": 263, "thwart": 263, "reinvent": 263, "proverbi": 263, "wheel": 263, "foundat": 263, "articul": 263, "quantifi": 263, "analyz": 263, "ground": [263, 265], "empir": 263, "acquir": 263, "scrape": 263, "unifi": [263, 264], "extract": 263, "intersect": 263, "complement": 263, "suitabl": 263, "preval": 263, "eas": 263, "leverag": 263, "summar": 263, "tool": [263, 264], "explor": 263, "instrument": 263, "record": 263, "collect": 263, "json": 263, "human": 263, "docstr": 263, "_0": 263, "_arg": 263, "347": 263, "359": 263, "894": 263, "1173": 263, "skimag": 263, "174": 263, "sklearn": 263, "373": 263, "publicli": 263, "stori": 263, "broad": 263, "wider": 264, "wrap": 264, "familiar": 264, "survei": 264, "advanc": 264, "research": 264, "nsf": 264, "pain": 264, "brought": 264, "wish": 264, "multiprocess": 264, "shorten": 264, "fortran": 264, "easili": [264, 265], "pure": 264, "manual": 264, "Then": 264, "hoc": 264, "critic": 264, "corner": 264, "tractabl": 264, "spectral": 264, "periodogram": 264, "spectrogram": 264, "csd": 264, "welch": 264, "stft": 264, "istft": 264, "lombscargl": 264, "40": 264, "sai": [264, 265], "ineffici": 264, "x_np": 264, "asnumpi": 264, "freq": 264, "pxx": 264, "back": 264, "torch": 264, "littl": 264, "flexibl": 264, "py": [264, 265], "rearrang": 264, "_backend": 264, "glue": 264, "loc": 264, "some_func": 264, "get_backend": 264, "disappear": 264, "serv": 264, "50": 264, "tensorli": 264, "kera": 264, "eagerpi": 264, "notabl": 264, "suboptim": 264, "readili": 264, "cpyext": 264, "unsuccess": 264, "xla": 264, "vta": 264, "jump": 264, "hoop": 264, "attain": 264, "got": 264, "cfunc": 264, "np": 264, "assert_array_almost_equ": 264, "pyfunc": 264, "pyarray_cancastarrayto": 264, "assertequ": 264, "spec": 265, "clone": 265, "repo": 265, "pip": 265, "pytest": 265, "hypothesi": 265, "conda": 265, "array_api_tests_modul": 265, "edit": 265, "array_api_test": 265, "_array_modul": 265, "array_modul": 265, "command": 265, "asid": 265, "vendor": 265, "readm": 265}, "objects": {"array_api": [[8, 0, 1, "", "__array_api_version__"], [9, 1, 1, "", "abs"], [10, 1, 1, "", "acos"], [11, 1, 1, "", "acosh"], [12, 1, 1, "", "add"], [13, 1, 1, "", "all"], [14, 1, 1, "", "any"], [15, 1, 1, "", "arange"], [16, 1, 1, "", "argmax"], [17, 1, 1, "", "argmin"], [18, 1, 1, "", "argsort"], [60, 1, 1, "", "asarray"], [61, 1, 1, "", "asin"], [62, 1, 1, "", "asinh"], [63, 1, 1, "", "astype"], [64, 1, 1, "", "atan"], [65, 1, 1, "", "atan2"], [66, 1, 1, "", "atanh"], [67, 1, 1, "", "bitwise_and"], [68, 1, 1, "", "bitwise_invert"], [69, 1, 1, "", "bitwise_left_shift"], [70, 1, 1, "", "bitwise_or"], [71, 1, 1, "", "bitwise_right_shift"], [72, 1, 1, "", "bitwise_xor"], [73, 1, 1, "", "broadcast_arrays"], [74, 1, 1, "", "broadcast_to"], [75, 1, 1, "", "can_cast"], [76, 1, 1, "", "ceil"], [77, 1, 1, "", "clip"], [78, 1, 1, "", "concat"], [79, 1, 1, "", "conj"], [85, 1, 1, "", "copysign"], [86, 1, 1, "", "cos"], [87, 1, 1, "", "cosh"], [88, 1, 1, "", "cumulative_sum"], [90, 1, 1, "", "divide"], [91, 1, 1, "", "empty"], [92, 1, 1, "", "empty_like"], [93, 1, 1, "", "equal"], [94, 1, 1, "", "exp"], [95, 1, 1, "", "expand_dims"], [96, 1, 1, "", "expm1"], [97, 1, 1, "", "eye"], [98, 1, 1, "", "finfo"], [99, 1, 1, "", "flip"], [100, 1, 1, "", "floor"], [101, 1, 1, "", "floor_divide"], [102, 1, 1, "", "from_dlpack"], [103, 1, 1, "", "full"], [104, 1, 1, "", "full_like"], [105, 1, 1, "", "greater"], [106, 1, 1, "", "greater_equal"], [107, 1, 1, "", "hypot"], [108, 1, 1, "", "iinfo"], [109, 1, 1, "", "imag"], [116, 1, 1, "", "isdtype"], [117, 1, 1, "", "isfinite"], [118, 1, 1, "", "isinf"], [119, 1, 1, "", "isnan"], [120, 1, 1, "", "less"], [121, 1, 1, "", "less_equal"], [122, 1, 1, "", "linspace"], [123, 1, 1, "", "log"], [124, 1, 1, "", "log10"], [125, 1, 1, "", "log1p"], [126, 1, 1, "", "log2"], [127, 1, 1, "", "logaddexp"], [128, 1, 1, "", "logical_and"], [129, 1, 1, "", "logical_not"], [130, 1, 1, "", "logical_or"], [131, 1, 1, "", "logical_xor"], [132, 1, 1, "", "matmul"], [133, 1, 1, "", "matrix_transpose"], [134, 1, 1, "", "max"], [135, 1, 1, "", "maximum"], [136, 1, 1, "", "mean"], [137, 1, 1, "", "meshgrid"], [138, 1, 1, "", "min"], [139, 1, 1, "", "minimum"], [140, 1, 1, "", "moveaxis"], [141, 1, 1, "", "multiply"], [142, 1, 1, "", "negative"], [143, 1, 1, "", "nextafter"], [144, 1, 1, "", "nonzero"], [145, 1, 1, "", "not_equal"], [146, 1, 1, "", "ones"], [147, 1, 1, "", "ones_like"], [148, 1, 1, "", "permute_dims"], [149, 1, 1, "", "positive"], [150, 1, 1, "", "pow"], [151, 1, 1, "", "prod"], [152, 1, 1, "", "real"], [153, 1, 1, "", "reciprocal"], [154, 1, 1, "", "remainder"], [155, 1, 1, "", "repeat"], [156, 1, 1, "", "reshape"], [157, 1, 1, "", "result_type"], [158, 1, 1, "", "roll"], [159, 1, 1, "", "round"], [160, 1, 1, "", "searchsorted"], [161, 1, 1, "", "sign"], [162, 1, 1, "", "signbit"], [163, 1, 1, "", "sin"], [164, 1, 1, "", "sinh"], [165, 1, 1, "", "sort"], [166, 1, 1, "", "sqrt"], [167, 1, 1, "", "square"], [168, 1, 1, "", "squeeze"], [169, 1, 1, "", "stack"], [170, 1, 1, "", "std"], [171, 1, 1, "", "subtract"], [172, 1, 1, "", "sum"], [173, 1, 1, "", "take"], [174, 1, 1, "", "tan"], [175, 1, 1, "", "tanh"], [176, 1, 1, "", "tensordot"], [177, 1, 1, "", "tile"], [178, 1, 1, "", "tril"], [179, 1, 1, "", "triu"], [180, 1, 1, "", "trunc"], [181, 1, 1, "", "unique_all"], [182, 1, 1, "", "unique_counts"], [183, 1, 1, "", "unique_inverse"], [184, 1, 1, "", "unique_values"], [185, 1, 1, "", "unstack"], [186, 1, 1, "", "var"], [187, 1, 1, "", "vecdot"], [188, 1, 1, "", "where"], [189, 1, 1, "", "zeros"], [190, 1, 1, "", "zeros_like"]], "array_api.array": [[19, 2, 1, "", "T"], [20, 3, 1, "", "__abs__"], [21, 3, 1, "", "__add__"], [22, 3, 1, "", "__and__"], [23, 3, 1, "", "__array_namespace__"], [24, 3, 1, "", "__bool__"], [25, 3, 1, "", "__complex__"], [26, 3, 1, "", "__dlpack__"], [27, 3, 1, "", "__dlpack_device__"], [28, 3, 1, "", "__eq__"], [29, 3, 1, "", "__float__"], [30, 3, 1, "", "__floordiv__"], [31, 3, 1, "", "__ge__"], [32, 3, 1, "", "__getitem__"], [33, 3, 1, "", "__gt__"], [34, 3, 1, "", "__index__"], [35, 3, 1, "", "__int__"], [36, 3, 1, "", "__invert__"], [37, 3, 1, "", "__le__"], [38, 3, 1, "", "__lshift__"], [39, 3, 1, "", "__lt__"], [40, 3, 1, "", "__matmul__"], [41, 3, 1, "", "__mod__"], [42, 3, 1, "", "__mul__"], [43, 3, 1, "", "__ne__"], [44, 3, 1, "", "__neg__"], [45, 3, 1, "", "__or__"], [46, 3, 1, "", "__pos__"], [47, 3, 1, "", "__pow__"], [48, 3, 1, "", "__rshift__"], [49, 3, 1, "", "__setitem__"], [50, 3, 1, "", "__sub__"], [51, 3, 1, "", "__truediv__"], [52, 3, 1, "", "__xor__"], [53, 2, 1, "", "device"], [54, 2, 1, "", "dtype"], [55, 2, 1, "", "mT"], [56, 2, 1, "", "ndim"], [57, 2, 1, "", "shape"], [58, 2, 1, "", "size"], [59, 3, 1, "", "to_device"]], "array_api.constants": [[80, 0, 1, "", "e"], [81, 0, 1, "", "inf"], [82, 0, 1, "", "nan"], [83, 0, 1, "", "newaxis"], [84, 0, 1, "", "pi"]], "array_api.data_types": [[89, 1, 1, "", "__eq__"]], "array_api.fft": [[220, 1, 1, "", "fft"], [221, 1, 1, "", "fftfreq"], [222, 1, 1, "", "fftn"], [223, 1, 1, "", "fftshift"], [224, 1, 1, "", "hfft"], [225, 1, 1, "", "ifft"], [226, 1, 1, "", "ifftn"], [227, 1, 1, "", "ifftshift"], [228, 1, 1, "", "ihfft"], [229, 1, 1, "", "irfft"], [230, 1, 1, "", "irfftn"], [231, 1, 1, "", "rfft"], [232, 1, 1, "", "rfftfreq"], [233, 1, 1, "", "rfftn"]], "array_api.info": [[110, 1, 1, "", "__array_namespace_info__"], [111, 1, 1, "", "capabilities"], [112, 1, 1, "", "default_device"], [113, 1, 1, "", "default_dtypes"], [114, 1, 1, "", "devices"], [115, 1, 1, "", "dtypes"]], "array_api.linalg": [[234, 1, 1, "", "cholesky"], [235, 1, 1, "", "cross"], [236, 1, 1, "", "det"], [237, 1, 1, "", "diagonal"], [238, 1, 1, "", "eigh"], [239, 1, 1, "", "eigvalsh"], [240, 1, 1, "", "inv"], [241, 1, 1, "", "matmul"], [242, 1, 1, "", "matrix_norm"], [243, 1, 1, "", "matrix_power"], [244, 1, 1, "", "matrix_rank"], [245, 1, 1, "", "matrix_transpose"], [246, 1, 1, "", "outer"], [247, 1, 1, "", "pinv"], [248, 1, 1, "", "qr"], [249, 1, 1, "", "slogdet"], [250, 1, 1, "", "solve"], [251, 1, 1, "", "svd"], [252, 1, 1, "", "svdvals"], [253, 1, 1, "", "tensordot"], [254, 1, 1, "", "trace"], [255, 1, 1, "", "vecdot"], [256, 1, 1, "", "vector_norm"]]}, "objtypes": {"0": "py:data", "1": "py:function", "2": "py:property", "3": "py:method"}, "objnames": {"0": ["py", "data", "Python data"], "1": ["py", "function", "Python function"], "2": ["py", "property", "Python property"], "3": ["py", "method", "Python method"]}, "titleterms": {"arrai": [0, 192, 201, 260, 262, 264], "object": [0, 2, 3, 4, 5, 6, 193, 194, 195, 196, 197, 198, 199, 200, 202, 203, 219, 258, 262], "oper": [0, 208], "arithmet": [0, 208], "bitwis": 0, "comparison": 0, "In": [0, 1, 262], "place": [0, 1], "reflect": 0, "attribut": 0, "method": [0, 7], "broadcast": 1, "overview": 1, "algorithm": 1, "exampl": [1, 207], "semant": [1, 213], "constant": 2, "api": [2, 3, 4, 6, 191, 193, 194, 195, 196, 197, 198, 199, 200, 202, 203, 206, 207, 219, 258, 259, 260, 262, 264], "creation": 3, "function": [3, 4, 6, 7, 193, 195, 196, 197, 198, 199, 200, 202, 208, 219], "data": [4, 5, 144, 155, 181, 182, 183, 184, 192, 206, 211, 212, 263], "type": [4, 5, 201, 206, 218, 264], "us": [5, 204, 207, 212, 263, 264], "default": 5, "categori": 5, "element": 6, "wise": 6, "signatur": 7, "__array_api_version__": 8, "ab": 9, "aco": 10, "acosh": 11, "add": [12, 264], "all": 13, "ani": 14, "arang": 15, "argmax": 16, "argmin": 17, "argsort": 18, "t": 19, "__abs__": 20, "__add__": 21, "__and__": 22, "__array_namespace__": 23, "__bool__": 24, "__complex__": 25, "__dlpack__": 26, "tip": [26, 60], "__dlpack_device__": 27, "__eq__": [28, 89], "__float__": 29, "__floordiv__": 30, "__ge__": 31, "__getitem__": 32, "__gt__": 33, "__index__": 34, "__int__": 35, "__invert__": 36, "__le__": 37, "__lshift__": 38, "__lt__": 39, "__matmul__": 40, "__mod__": 41, "__mul__": 42, "__ne__": 43, "__neg__": 44, "__or__": 45, "__pos__": 46, "__pow__": 47, "__rshift__": 48, "__setitem__": 49, "__sub__": 50, "__truediv__": 51, "__xor__": 52, "devic": [53, 114, 207, 213], "dtype": [54, 115], "mt": 55, "ndim": 56, "shape": [57, 144, 155, 181, 182, 183, 184, 192, 211], "size": 58, "to_devic": 59, "asarrai": 60, "note": [60, 102, 122, 201], "asin": 61, "asinh": 62, "astyp": 63, "atan": 64, "atan2": 65, "atanh": 66, "bitwise_and": 67, "bitwise_invert": 68, "bitwise_left_shift": 69, "bitwise_or": 70, "bitwise_right_shift": 71, "bitwise_xor": 72, "broadcast_arrai": 73, "broadcast_to": 74, "can_cast": 75, "ceil": 76, "clip": 77, "concat": 78, "conj": 79, "e": 80, "inf": 81, "nan": 82, "newaxi": 83, "pi": 84, "copysign": 85, "co": 86, "cosh": 87, "cumulative_sum": 88, "divid": 90, "empti": 91, "empty_lik": 92, "equal": 93, "exp": 94, "expand_dim": 95, "expm1": 96, "ey": 97, "finfo": 98, "flip": 99, "floor": 100, "floor_divid": 101, "from_dlpack": 102, "full": 103, "full_lik": 104, "greater": 105, "greater_equ": 106, "hypot": 107, "iinfo": 108, "imag": 109, "__array_namespace_info__": 110, "capabl": 111, "default_devic": 112, "default_dtyp": 113, "isdtyp": 116, "isfinit": 117, "isinf": 118, "isnan": 119, "less": 120, "less_equ": 121, "linspac": 122, "log": 123, "log10": 124, "log1p": 125, "log2": 126, "logaddexp": 127, "logical_and": 128, "logical_not": 129, "logical_or": 130, "logical_xor": 131, "matmul": [132, 241], "matrix_transpos": [133, 245], "max": 134, "maximum": 135, "mean": 136, "meshgrid": 137, "min": 138, "minimum": 139, "moveaxi": 140, "multipli": 141, "neg": 142, "nextaft": 143, "nonzero": 144, "depend": [144, 155, 181, 182, 183, 184, 192, 204, 211], "output": [144, 155, 181, 182, 183, 184, 192, 211], "not_equ": 145, "ones": 146, "ones_lik": 147, "permute_dim": 148, "posit": 149, "pow": 150, "prod": 151, "real": 152, "reciproc": 153, "remaind": 154, "repeat": 155, "reshap": 156, "result_typ": 157, "roll": 158, "round": 159, "searchsort": 160, "sign": [161, 201], "signbit": 162, "sin": 163, "sinh": 164, "sort": [165, 199], "sqrt": 166, "squar": 167, "squeez": 168, "stack": 169, "std": 170, "subtract": 171, "sum": 172, "take": 173, "tan": 174, "tanh": 175, "tensordot": [176, 253], "tile": 177, "tril": 178, "triu": 179, "trunc": 180, "unique_al": 181, "unique_count": 182, "unique_invers": 183, "unique_valu": 184, "unstack": 185, "var": 186, "vecdot": [187, 255], "where": 188, "zero": 189, "zeros_lik": 190, "specif": 191, "index": [192, 193], "singl": 192, "axi": 192, "slice": 192, "syntax": [192, 213], "multi": 192, "boolean": 192, "return": 192, "valu": [192, 209], "inspect": [194, 206], "linear": [195, 208, 258], "algebra": [195, 208, 258], "manipul": 196, "search": 197, "set": 198, "statist": [200, 208], "promot": [201, 209], "rule": 201, "integ": 201, "tabl": 201, "unsign": 201, "mix": 201, "float": 201, "point": 201, "python": [201, 207, 260, 264], "scalar": 201, "util": 202, "version": [203, 206, 259], "assumpt": 204, "hardwar": [204, 264], "softwar": 204, "environ": 204, "backward": [204, 259], "compat": [204, 259], "product": 204, "code": [204, 207], "interact": 204, "benchmark": 205, "suit": [205, 265], "changelog": 206, "per": 206, "standard": [206, 207, 259, 260, 262], "v2023": 206, "12": 206, "updat": 206, "norm": [206, 262], "extens": [206, 207, 219, 257, 258, 259], "addit": 206, "break": 206, "chang": 206, "errata": 206, "v2022": 206, "complex": [206, 209], "number": [206, 207, 209], "support": [206, 207, 212, 213, 264], "c": 207, "situat": 207, "cython": 207, "usag": [207, 213, 219, 258, 260, 263], "1": [207, 264], "packag": 207, "i": 207, "mostli": 207, "pure": 207, "limit": 207, "2": [207, 264], "contain": 207, "lot": 207, "3": [207, 264], "numpi": 207, "directli": 207, "other": [207, 260], "longer": 207, "term": [207, 262], "approach": 207, "further": 207, "hpy": 207, "accuraci": 208, "mathemat": 208, "The": 209, "plane": 209, "branch": 209, "cut": 209, "order": 209, "base": 209, "copi": 210, "view": 210, "behaviour": 210, "mutabl": 210, "mutat": 210, "interchang": 212, "mechan": 212, "dlpack": 212, "an": [212, 262], "memori": 212, "tensor": 212, "structur": 212, "non": [212, 262], "case": [212, 264], "intend": 213, "assign": 213, "out": [213, 262], "scope": [213, 259, 262], "except": 214, "design": [215, 258, 263], "topic": 215, "constraint": 215, "lazi": 216, "v": 216, "eager": 216, "execut": 216, "parallel": 217, "static": 218, "fourier": 219, "transform": 219, "name": [219, 258], "fft": 220, "fftfreq": 221, "fftn": 222, "fftshift": 223, "hfft": 224, "ifft": 225, "ifftn": 226, "ifftshift": 227, "ihfft": 228, "irfft": 229, "irfftn": 230, "rfft": 231, "rfftfreq": 232, "rfftn": 233, "choleski": 234, "cross": 235, "det": 236, "diagon": 237, "eigh": 238, "eigvalsh": 239, "inv": 240, "matrix_norm": 242, "matrix_pow": 243, "matrix_rank": 244, "outer": 246, "pinv": 247, "qr": 248, "slogdet": 249, "solv": 250, "svd": 251, "svdval": 252, "trace": 254, "vector_norm": 256, "modul": 257, "principl": 258, "futur": 259, "evolut": 259, "content": 260, "context": 260, "methodologi": 260, "licens": 261, "purpos": 262, "introduct": [262, 263], "thi": 262, "histori": 262, "includ": 262, "goal": 262, "implic": 262, "stakehold": 262, "how": 262, "read": 262, "document": 262, "adopt": 262, "check": 262, "complianc": 262, "discover": 262, "conform": [262, 265], "implement": 262, "option": 262, "featur": 262, "definit": 262, "refer": 262, "decis": 263, "make": [263, 264], "concret": 264, "acceler": 264, "distribut": 264, "scipi": 264, "simplifi": 264, "einop": 264, "remov": 264, "backend": 264, "system": 264, "ad": 264, "xtensor": 264, "4": 264, "jit": 264, "compil": 264, "comput": 264, "easier": 264, "more": 264, "robust": 264, "verif": 265, "test": 265, "measur": 265, "run": 265}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.todo": 2, "sphinx": 60}, "alltitles": {"Array object": [[0, "array-object"]], "Operators": [[0, "operators"]], "Arithmetic Operators": [[0, "arithmetic-operators"], [0, "id26"], [0, "id29"]], "Array Operators": [[0, "array-operators"], [0, "id27"], [0, "id30"]], "Bitwise Operators": [[0, "bitwise-operators"], [0, "id28"], [0, "id31"]], "Comparison Operators": [[0, "comparison-operators"]], "In-place Operators": [[0, "in-place-operators"]], "Reflected Operators": [[0, "reflected-operators"]], "Attributes": [[0, "attributes"]], "Methods": [[0, "methods"]], "Broadcasting": [[1, "broadcasting"]], "Overview": [[1, "overview"]], "Algorithm": [[1, "algorithm"]], "Examples": [[1, "examples"]], "In-place Semantics": [[1, "in-place-semantics"]], "Constants": [[2, "constants"]], "Objects in API": [[2, "objects-in-api"], [3, "objects-in-api"], [4, "objects-in-api"], [6, "objects-in-api"], [193, "objects-in-api"], [194, "objects-in-api"], [195, "objects-in-api"], [196, "objects-in-api"], [197, "objects-in-api"], [198, "objects-in-api"], [199, "objects-in-api"], [200, "objects-in-api"], [202, "objects-in-api"], [203, "objects-in-api"], [219, "objects-in-api"], [258, "objects-in-api"]], "Creation Functions": [[3, "creation-functions"]], "Data Type Functions": [[4, "data-type-functions"]], "Data Types": [[5, "data-types"], [206, "data-types"]], "Use of data type objects": [[5, "use-of-data-type-objects"]], "Default Data Types": [[5, "default-data-types"]], "Data Type Categories": [[5, "data-type-categories"]], "Element-wise Functions": [[6, "element-wise-functions"]], "Function and method signatures": [[7, "function-and-method-signatures"]], "__array_api_version__": [[8, "array-api-version"]], "abs": [[9, "abs"]], "acos": [[10, "acos"]], "acosh": [[11, "acosh"]], "add": [[12, "add"]], "all": [[13, "all"]], "any": [[14, "any"]], "arange": [[15, "arange"]], "argmax": [[16, "argmax"]], "argmin": [[17, "argmin"]], "argsort": [[18, "argsort"]], "T": [[19, "t"]], "__abs__": [[20, "abs"]], "__add__": [[21, "add"]], "__and__": [[22, "and"]], "__array_namespace__": [[23, "array-namespace"]], "__bool__": [[24, "bool"]], "__complex__": [[25, "complex"]], "__dlpack__": [[26, "dlpack"]], "Tip": [[26, null], [60, null]], "__dlpack_device__": [[27, "dlpack-device"]], "__eq__": [[28, "eq"], [89, "eq"]], "__float__": [[29, "float"]], "__floordiv__": [[30, "floordiv"]], "__ge__": [[31, "ge"]], "__getitem__": [[32, "getitem"]], "__gt__": [[33, "gt"]], "__index__": [[34, "index"]], "__int__": [[35, "int"]], "__invert__": [[36, "invert"]], "__le__": [[37, "le"]], "__lshift__": [[38, "lshift"]], "__lt__": [[39, "lt"]], "__matmul__": [[40, "matmul"]], "__mod__": [[41, "mod"]], "__mul__": [[42, "mul"]], "__ne__": [[43, "ne"]], "__neg__": [[44, "neg"]], "__or__": [[45, "or"]], "__pos__": [[46, "pos"]], "__pow__": [[47, "pow"]], "__rshift__": [[48, "rshift"]], "__setitem__": [[49, "setitem"]], "__sub__": [[50, "sub"]], "__truediv__": [[51, "truediv"]], "__xor__": [[52, "xor"]], "device": [[53, "device"]], "dtype": [[54, "dtype"]], "mT": [[55, "mt"]], "ndim": [[56, "ndim"]], "shape": [[57, "shape"]], "size": [[58, "size"]], "to_device": [[59, "to-device"]], "asarray": [[60, "asarray"]], "Note": [[60, null], [102, null], [122, null]], "asin": [[61, "asin"]], "asinh": [[62, "asinh"]], "astype": [[63, "astype"]], "atan": [[64, "atan"]], "atan2": [[65, "atan2"]], "atanh": [[66, "atanh"]], "bitwise_and": [[67, "bitwise-and"]], "bitwise_invert": [[68, "bitwise-invert"]], "bitwise_left_shift": [[69, "bitwise-left-shift"]], "bitwise_or": [[70, "bitwise-or"]], "bitwise_right_shift": [[71, "bitwise-right-shift"]], "bitwise_xor": [[72, "bitwise-xor"]], "broadcast_arrays": [[73, "broadcast-arrays"]], "broadcast_to": [[74, "broadcast-to"]], "can_cast": [[75, "can-cast"]], "ceil": [[76, "ceil"]], "clip": [[77, "clip"]], "concat": [[78, "concat"]], "conj": [[79, "conj"]], "e": [[80, "e"]], "inf": [[81, "inf"]], "nan": [[82, "nan"]], "newaxis": [[83, "newaxis"]], "pi": [[84, "pi"]], "copysign": [[85, "copysign"]], "cos": [[86, "cos"]], "cosh": [[87, "cosh"]], "cumulative_sum": [[88, "cumulative-sum"]], "divide": [[90, "divide"]], "empty": [[91, "empty"]], "empty_like": [[92, "empty-like"]], "equal": [[93, "equal"]], "exp": [[94, "exp"]], "expand_dims": [[95, "expand-dims"]], "expm1": [[96, "expm1"]], "eye": [[97, "eye"]], "finfo": [[98, "finfo"]], "flip": [[99, "flip"]], "floor": [[100, "floor"]], "floor_divide": [[101, "floor-divide"]], "from_dlpack": [[102, "from-dlpack"]], "full": [[103, "full"]], "full_like": [[104, "full-like"]], "greater": [[105, "greater"]], "greater_equal": [[106, "greater-equal"]], "hypot": [[107, "hypot"]], "iinfo": [[108, "iinfo"]], "imag": [[109, "imag"]], "__array_namespace_info__": [[110, "array-namespace-info"]], "capabilities": [[111, "capabilities"]], "default_device": [[112, "default-device"]], "default_dtypes": [[113, "default-dtypes"]], "devices": [[114, "devices"]], "dtypes": [[115, "dtypes"]], "isdtype": [[116, "isdtype"]], "isfinite": [[117, "isfinite"]], "isinf": [[118, "isinf"]], "isnan": [[119, "isnan"]], "less": [[120, "less"]], "less_equal": [[121, "less-equal"]], "linspace": [[122, "linspace"]], "log": [[123, "log"]], "log10": [[124, "log10"]], "log1p": [[125, "log1p"]], "log2": [[126, "log2"]], "logaddexp": [[127, "logaddexp"]], "logical_and": [[128, "logical-and"]], "logical_not": [[129, "logical-not"]], "logical_or": [[130, "logical-or"]], "logical_xor": [[131, "logical-xor"]], "matmul": [[132, "matmul"], [241, "matmul"]], "matrix_transpose": [[133, "matrix-transpose"], [245, "matrix-transpose"]], "max": [[134, "max"]], "maximum": [[135, "maximum"]], "mean": [[136, "mean"]], "meshgrid": [[137, "meshgrid"]], "min": [[138, "min"]], "minimum": [[139, "minimum"]], "moveaxis": [[140, "moveaxis"]], "multiply": [[141, "multiply"]], "negative": [[142, "negative"]], "nextafter": [[143, "nextafter"]], "nonzero": [[144, "nonzero"]], "Data-dependent output shape": [[144, null], [155, null], [181, null], [182, null], [183, null], [184, null], [192, null], [211, null]], "not_equal": [[145, "not-equal"]], "ones": [[146, "ones"]], "ones_like": [[147, "ones-like"]], "permute_dims": [[148, "permute-dims"]], "positive": [[149, "positive"]], "pow": [[150, "pow"]], "prod": [[151, "prod"]], "real": [[152, "real"]], "reciprocal": [[153, "reciprocal"]], "remainder": [[154, "remainder"]], "repeat": [[155, "repeat"]], "reshape": [[156, "reshape"]], "result_type": [[157, "result-type"]], "roll": [[158, "roll"]], "round": [[159, "round"]], "searchsorted": [[160, "searchsorted"]], "sign": [[161, "sign"]], "signbit": [[162, "signbit"]], "sin": [[163, "sin"]], "sinh": [[164, "sinh"]], "sort": [[165, "sort"]], "sqrt": [[166, "sqrt"]], "square": [[167, "square"]], "squeeze": [[168, "squeeze"]], "stack": [[169, "stack"]], "std": [[170, "std"]], "subtract": [[171, "subtract"]], "sum": [[172, "sum"]], "take": [[173, "take"]], "tan": [[174, "tan"]], "tanh": [[175, "tanh"]], "tensordot": [[176, "tensordot"], [253, "tensordot"]], "tile": [[177, "tile"]], "tril": [[178, "tril"]], "triu": [[179, "triu"]], "trunc": [[180, "trunc"]], "unique_all": [[181, "unique-all"]], "unique_counts": [[182, "unique-counts"]], "unique_inverse": [[183, "unique-inverse"]], "unique_values": [[184, "unique-values"]], "unstack": [[185, "unstack"]], "var": [[186, "var"]], "vecdot": [[187, "vecdot"], [255, "vecdot"]], "where": [[188, "where"]], "zeros": [[189, "zeros"]], "zeros_like": [[190, "zeros-like"]], "API specification": [[191, "api-specification"], [191, null]], "Indexing": [[192, "indexing"]], "Single-axis Indexing": [[192, "single-axis-indexing"]], "Slice Syntax": [[192, "slice-syntax"]], "Multi-axis Indexing": [[192, "multi-axis-indexing"]], "Boolean Array Indexing": [[192, "boolean-array-indexing"]], "Return Values": [[192, "return-values"]], "Indexing Functions": [[193, "indexing-functions"]], "Inspection": [[194, "inspection"]], "Inspection APIs": [[194, "inspection-apis"], [206, "inspection-apis"]], "Linear Algebra Functions": [[195, "linear-algebra-functions"]], "Manipulation Functions": [[196, "manipulation-functions"]], "Searching Functions": [[197, "searching-functions"]], "Set Functions": [[198, "set-functions"]], "Sorting Functions": [[199, "sorting-functions"]], "Statistical Functions": [[200, "statistical-functions"], [208, "statistical-functions"]], "Type Promotion Rules": [[201, "type-promotion-rules"]], "Rules": [[201, "rules"]], "Signed integer type promotion table": [[201, "signed-integer-type-promotion-table"]], "Unsigned integer type promotion table": [[201, "unsigned-integer-type-promotion-table"]], "Mixed unsigned and signed integer type promotion table": [[201, "mixed-unsigned-and-signed-integer-type-promotion-table"]], "Floating-point type promotion table": [[201, "floating-point-type-promotion-table"]], "Notes": [[201, "notes"]], "Mixing arrays with Python scalars": [[201, "mixing-arrays-with-python-scalars"]], "Utility Functions": [[202, "utility-functions"]], "Version": [[203, "version"]], "Assumptions": [[204, "assumptions"]], "Hardware and software environments": [[204, "hardware-and-software-environments"]], "Dependencies": [[204, "dependencies"]], "Backwards compatibility": [[204, "backwards-compatibility"], [259, "backwards-compatibility"]], "Production code & interactive use": [[204, "production-code-interactive-use"]], "Benchmark suite": [[205, "benchmark-suite"]], "Changelog per API standard version": [[206, "changelog-per-api-standard-version"]], "Changelog": [[206, "changelog"]], "v2023.12": [[206, "v2023-12"]], "Updates": [[206, "updates"], [206, "id3"]], "Normative": [[206, "normative"]], "APIs": [[206, "apis"], [206, "id1"], [206, "id4"], [206, "id8"]], "Extensions": [[206, "extensions"], [206, "id2"], [206, "id5"], [206, "id9"], [257, "extensions"]], "Additions": [[206, "additions"], [206, "id7"]], "Breaking Changes": [[206, "breaking-changes"]], "Errata": [[206, "errata"], [206, "id10"]], "v2022.12": [[206, "v2022-12"]], "Complex Number Support": [[206, "complex-number-support"], [206, "id6"]], "C API": [[207, "c-api"]], "Example situations for C/Cython usage": [[207, "example-situations-for-c-cython-usage"]], "Situation 1: a Python package that is mostly pure Python, with a limited number of Cython extensions": [[207, "situation-1-a-python-package-that-is-mostly-pure-python-with-a-limited-number-of-cython-extensions"]], "Situation 2: a Python package that contains a lot of Cython code": [[207, "situation-2-a-python-package-that-contains-a-lot-of-cython-code"]], "Situation 3: a Python package that uses the NumPy or Python C API directly": [[207, "situation-3-a-python-package-that-uses-the-numpy-or-python-c-api-directly"]], "Device support": [[207, "device-support"], [213, "device-support"]], "Other longer-term approaches": [[207, "other-longer-term-approaches"]], "Further Python API standardization": [[207, "further-python-api-standardization"]], "HPy": [[207, "hpy"]], "Accuracy": [[208, "accuracy"]], "Arithmetic Operations": [[208, "arithmetic-operations"]], "Mathematical Functions": [[208, "mathematical-functions"]], "Linear Algebra": [[208, "linear-algebra"]], "Complex Numbers": [[209, "complex-numbers"]], "The Complex Plane": [[209, "the-complex-plane"]], "Branch Cuts": [[209, "branch-cuts"]], "Complex Number Ordering": [[209, "complex-number-ordering"]], "Valued-based Promotion": [[209, "valued-based-promotion"]], "Copy-view behaviour and mutability": [[210, "copy-view-behaviour-and-mutability"]], "Mutating views": [[210, null]], "Data-dependent output shapes": [[211, "data-dependent-output-shapes"]], "Data interchange mechanisms": [[212, "data-interchange-mechanisms"]], "DLPack: An in-memory tensor structure": [[212, "dlpack-an-in-memory-tensor-structure"]], "Non-supported use cases": [[212, "non-supported-use-cases"]], "Intended usage": [[213, "intended-usage"]], "Syntax for device assignment": [[213, "syntax-for-device-assignment"]], "Semantics": [[213, "semantics"]], "Out of scope for device support": [[213, "out-of-scope-for-device-support"]], "Exceptions": [[214, "exceptions"]], "Design topics & constraints": [[215, "design-topics-constraints"], [215, null]], "Lazy vs. eager execution": [[216, "lazy-vs-eager-execution"]], "Parallelism": [[217, "parallelism"]], "Static typing": [[218, "static-typing"]], "Fourier transform Functions": [[219, "fourier-transform-functions"]], "Extension name and usage": [[219, "extension-name-and-usage"], [258, "extension-name-and-usage"]], "fft": [[220, "fft"]], "fftfreq": [[221, "fftfreq"]], "fftn": [[222, "fftn"]], "fftshift": [[223, "fftshift"]], "hfft": [[224, "hfft"]], "ifft": [[225, "ifft"]], "ifftn": [[226, "ifftn"]], "ifftshift": [[227, "ifftshift"]], "ihfft": [[228, "ihfft"]], "irfft": [[229, "irfft"]], "irfftn": [[230, "irfftn"]], "rfft": [[231, "rfft"]], "rfftfreq": [[232, "rfftfreq"]], "rfftn": [[233, "rfftn"]], "cholesky": [[234, "cholesky"]], "cross": [[235, "cross"]], "det": [[236, "det"]], "diagonal": [[237, "diagonal"]], "eigh": [[238, "eigh"]], "eigvalsh": [[239, "eigvalsh"]], "inv": [[240, "inv"]], "matrix_norm": [[242, "matrix-norm"]], "matrix_power": [[243, "matrix-power"]], "matrix_rank": [[244, "matrix-rank"]], "outer": [[246, "outer"]], "pinv": [[247, "pinv"]], "qr": [[248, "qr"]], "slogdet": [[249, "slogdet"]], "solve": [[250, "solve"]], "svd": [[251, "svd"]], "svdvals": [[252, "svdvals"]], "trace": [[254, "trace"]], "vector_norm": [[256, "vector-norm"]], "Extension modules:": [[257, null]], "Linear Algebra Extension": [[258, "linear-algebra-extension"]], "Design Principles": [[258, "design-principles"]], "Future API standard evolution": [[259, "future-api-standard-evolution"]], "Scope extensions": [[259, "scope-extensions"]], "Versioning": [[259, "versioning"]], "Python array API standard": [[260, "python-array-api-standard"]], "Contents": [[260, "contents"]], "Context": [[260, null]], "API": [[260, null]], "Methodology and Usage": [[260, null]], "Other": [[260, null]], "License": [[261, "license"]], "Purpose and scope": [[262, "purpose-and-scope"]], "Introduction": [[262, "introduction"], [263, "introduction"]], "This API standard": [[262, "this-api-standard"]], "History": [[262, "history"]], "Scope (includes out-of-scope / non-goals)": [[262, "scope-includes-out-of-scope-non-goals"]], "In scope": [[262, "in-scope"]], "Out of scope": [[262, "out-of-scope"]], "Implications of in/out of scope": [[262, "implications-of-in-out-of-scope"]], "Stakeholders": [[262, "stakeholders"]], "How to read this document": [[262, "how-to-read-this-document"]], "How to adopt this API": [[262, "how-to-adopt-this-api"]], "Checking an array object for Compliance": [[262, "checking-an-array-object-for-compliance"]], "Discoverability of conforming implementations": [[262, "discoverability-of-conforming-implementations"]], "Optional feature": [[262, null]], "Conformance": [[262, "conformance"]], "Terms and Definitions": [[262, "terms-and-definitions"]], "Normative References": [[262, "normative-references"]], "Usage Data": [[263, "usage-data"]], "Design": [[263, "design"]], "Usage": [[263, "usage"]], "Use in Decision-Making": [[263, "use-in-decision-making"]], "Use cases": [[264, "use-cases"]], "Types of use cases": [[264, "types-of-use-cases"]], "Concrete use cases": [[264, "concrete-use-cases"]], "Use case 1: add hardware accelerator and distributed support to SciPy": [[264, "use-case-1-add-hardware-accelerator-and-distributed-support-to-scipy"]], "Use case 2: simplify einops by removing the backend system": [[264, "use-case-2-simplify-einops-by-removing-the-backend-system"]], "Use case 3: adding a Python API to xtensor": [[264, "use-case-3-adding-a-python-api-to-xtensor"]], "Use case 4: make JIT compilation of array computations easier and more robust": [[264, "use-case-4-make-jit-compilation-of-array-computations-easier-and-more-robust"]], "Verification - test suite": [[265, "verification-test-suite"]], "Measuring conformance": [[265, "measuring-conformance"]], "Running the tests": [[265, "running-the-tests"]]}, "indexentries": {"__array_api_version__ (in module array_api)": [[8, "array_api.__array_api_version__"]], "abs() (in module array_api)": [[9, "array_api.abs"]], "acos() (in module array_api)": [[10, "array_api.acos"]], "acosh() (in module array_api)": [[11, "array_api.acosh"]], "add() (in module array_api)": [[12, "array_api.add"]], "all() (in module array_api)": [[13, "array_api.all"]], "any() (in module array_api)": [[14, "array_api.any"]], "arange() (in module array_api)": [[15, "array_api.arange"]], "argmax() (in module array_api)": [[16, "array_api.argmax"]], "argmin() (in module array_api)": [[17, "array_api.argmin"]], "argsort() (in module array_api)": [[18, "array_api.argsort"]], "t (array property)": [[19, "array_api.array.T"]], "__abs__() (array method)": [[20, "array_api.array.__abs__"]], "__add__() (array method)": [[21, "array_api.array.__add__"]], "__and__() (array method)": [[22, "array_api.array.__and__"]], "__array_namespace__() (array method)": [[23, "array_api.array.__array_namespace__"]], "__bool__() (array method)": [[24, "array_api.array.__bool__"]], "__complex__() (array method)": [[25, "array_api.array.__complex__"]], "__dlpack__() (array method)": [[26, "array_api.array.__dlpack__"]], "__dlpack_device__() (array method)": [[27, "array_api.array.__dlpack_device__"]], "__eq__() (array method)": [[28, "array_api.array.__eq__"]], "__float__() (array method)": [[29, "array_api.array.__float__"]], "__floordiv__() (array method)": [[30, "array_api.array.__floordiv__"]], "__ge__() (array method)": [[31, "array_api.array.__ge__"]], "__getitem__() (array method)": [[32, "array_api.array.__getitem__"]], "__gt__() (array method)": [[33, "array_api.array.__gt__"]], "__index__() (array method)": [[34, "array_api.array.__index__"]], "__int__() (array method)": [[35, "array_api.array.__int__"]], "__invert__() (array method)": [[36, "array_api.array.__invert__"]], "__le__() (array method)": [[37, "array_api.array.__le__"]], "__lshift__() (array method)": [[38, "array_api.array.__lshift__"]], "__lt__() (array method)": [[39, "array_api.array.__lt__"]], "__matmul__() (array method)": [[40, "array_api.array.__matmul__"]], "__mod__() (array method)": [[41, "array_api.array.__mod__"]], "__mul__() (array method)": [[42, "array_api.array.__mul__"]], "__ne__() (array method)": [[43, "array_api.array.__ne__"]], "__neg__() (array method)": [[44, "array_api.array.__neg__"]], "__or__() (array method)": [[45, "array_api.array.__or__"]], "__pos__() (array method)": [[46, "array_api.array.__pos__"]], "__pow__() (array method)": [[47, "array_api.array.__pow__"]], "__rshift__() (array method)": [[48, "array_api.array.__rshift__"]], "__setitem__() (array method)": [[49, "array_api.array.__setitem__"]], "__sub__() (array method)": [[50, "array_api.array.__sub__"]], "__truediv__() (array method)": [[51, "array_api.array.__truediv__"]], "__xor__() (array method)": [[52, "array_api.array.__xor__"]], "device (array property)": [[53, "array_api.array.device"]], "dtype (array property)": [[54, "array_api.array.dtype"]], "mt (array property)": [[55, "array_api.array.mT"]], "ndim (array property)": [[56, "array_api.array.ndim"]], "shape (array property)": [[57, "array_api.array.shape"]], "size (array property)": [[58, "array_api.array.size"]], "to_device() (array method)": [[59, "array_api.array.to_device"]], "asarray() (in module array_api)": [[60, "array_api.asarray"]], "asin() (in module array_api)": [[61, "array_api.asin"]], "asinh() (in module array_api)": [[62, "array_api.asinh"]], "astype() (in module array_api)": [[63, "array_api.astype"]], "atan() (in module array_api)": [[64, "array_api.atan"]], "atan2() (in module array_api)": [[65, "array_api.atan2"]], "atanh() (in module array_api)": [[66, "array_api.atanh"]], "bitwise_and() (in module array_api)": [[67, "array_api.bitwise_and"]], "bitwise_invert() (in module array_api)": [[68, "array_api.bitwise_invert"]], "bitwise_left_shift() (in module array_api)": [[69, "array_api.bitwise_left_shift"]], "bitwise_or() (in module array_api)": [[70, "array_api.bitwise_or"]], "bitwise_right_shift() (in module array_api)": [[71, "array_api.bitwise_right_shift"]], "bitwise_xor() (in module array_api)": [[72, "array_api.bitwise_xor"]], "broadcast_arrays() (in module array_api)": [[73, "array_api.broadcast_arrays"]], "broadcast_to() (in module array_api)": [[74, "array_api.broadcast_to"]], "can_cast() (in module array_api)": [[75, "array_api.can_cast"]], "ceil() (in module array_api)": [[76, "array_api.ceil"]], "clip() (in module array_api)": [[77, "array_api.clip"]], "concat() (in module array_api)": [[78, "array_api.concat"]], "conj() (in module array_api)": [[79, "array_api.conj"]], "e (in module array_api.constants)": [[80, "array_api.constants.e"]], "inf (in module array_api.constants)": [[81, "array_api.constants.inf"]], "nan (in module array_api.constants)": [[82, "array_api.constants.nan"]], "newaxis (in module array_api.constants)": [[83, "array_api.constants.newaxis"]], "pi (in module array_api.constants)": [[84, "array_api.constants.pi"]], "copysign() (in module array_api)": [[85, "array_api.copysign"]], "cos() (in module array_api)": [[86, "array_api.cos"]], "cosh() (in module array_api)": [[87, "array_api.cosh"]], "cumulative_sum() (in module array_api)": [[88, "array_api.cumulative_sum"]], "__eq__() (in module array_api.data_types)": [[89, "array_api.data_types.__eq__"]], "divide() (in module array_api)": [[90, "array_api.divide"]], "empty() (in module array_api)": [[91, "array_api.empty"]], "empty_like() (in module array_api)": [[92, "array_api.empty_like"]], "equal() (in module array_api)": [[93, "array_api.equal"]], "exp() (in module array_api)": [[94, "array_api.exp"]], "expand_dims() (in module array_api)": [[95, "array_api.expand_dims"]], "expm1() (in module array_api)": [[96, "array_api.expm1"]], "eye() (in module array_api)": [[97, "array_api.eye"]], "finfo() (in module array_api)": [[98, "array_api.finfo"]], "flip() (in module array_api)": [[99, "array_api.flip"]], "floor() (in module array_api)": [[100, "array_api.floor"]], "floor_divide() (in module array_api)": [[101, "array_api.floor_divide"]], "from_dlpack() (in module array_api)": [[102, "array_api.from_dlpack"]], "full() (in module array_api)": [[103, "array_api.full"]], "full_like() (in module array_api)": [[104, "array_api.full_like"]], "greater() (in module array_api)": [[105, "array_api.greater"]], "greater_equal() (in module array_api)": [[106, "array_api.greater_equal"]], "hypot() (in module array_api)": [[107, "array_api.hypot"]], "iinfo() (in module array_api)": [[108, "array_api.iinfo"]], "imag() (in module array_api)": [[109, "array_api.imag"]], "__array_namespace_info__() (in module array_api.info)": [[110, "array_api.info.__array_namespace_info__"]], "capabilities() (in module array_api.info)": [[111, "array_api.info.capabilities"]], "default_device() (in module array_api.info)": [[112, "array_api.info.default_device"]], "default_dtypes() (in module array_api.info)": [[113, "array_api.info.default_dtypes"]], "devices() (in module array_api.info)": [[114, "array_api.info.devices"]], "dtypes() (in module array_api.info)": [[115, "array_api.info.dtypes"]], "isdtype() (in module array_api)": [[116, "array_api.isdtype"]], "isfinite() (in module array_api)": [[117, "array_api.isfinite"]], "isinf() (in module array_api)": [[118, "array_api.isinf"]], "isnan() (in module array_api)": [[119, "array_api.isnan"]], "less() (in module array_api)": [[120, "array_api.less"]], "less_equal() (in module array_api)": [[121, "array_api.less_equal"]], "linspace() (in module array_api)": [[122, "array_api.linspace"]], "log() (in module array_api)": [[123, "array_api.log"]], "log10() (in module array_api)": [[124, "array_api.log10"]], "log1p() (in module array_api)": [[125, "array_api.log1p"]], "log2() (in module array_api)": [[126, "array_api.log2"]], "logaddexp() (in module array_api)": [[127, "array_api.logaddexp"]], "logical_and() (in module array_api)": [[128, "array_api.logical_and"]], "logical_not() (in module array_api)": [[129, "array_api.logical_not"]], "logical_or() (in module array_api)": [[130, "array_api.logical_or"]], "logical_xor() (in module array_api)": [[131, "array_api.logical_xor"]], "matmul() (in module array_api)": [[132, "array_api.matmul"]], "matrix_transpose() (in module array_api)": [[133, "array_api.matrix_transpose"]], "max() (in module array_api)": [[134, "array_api.max"]], "maximum() (in module array_api)": [[135, "array_api.maximum"]], "mean() (in module array_api)": [[136, "array_api.mean"]], "meshgrid() (in module array_api)": [[137, "array_api.meshgrid"]], "min() (in module array_api)": [[138, "array_api.min"]], "minimum() (in module array_api)": [[139, "array_api.minimum"]], "moveaxis() (in module array_api)": [[140, "array_api.moveaxis"]], "multiply() (in module array_api)": [[141, "array_api.multiply"]], "negative() (in module array_api)": [[142, "array_api.negative"]], "nextafter() (in module array_api)": [[143, "array_api.nextafter"]], "nonzero() (in module array_api)": [[144, "array_api.nonzero"]], "not_equal() (in module array_api)": [[145, "array_api.not_equal"]], "ones() (in module array_api)": [[146, "array_api.ones"]], "ones_like() (in module array_api)": [[147, "array_api.ones_like"]], "permute_dims() (in module array_api)": [[148, "array_api.permute_dims"]], "positive() (in module array_api)": [[149, "array_api.positive"]], "pow() (in module array_api)": [[150, "array_api.pow"]], "prod() (in module array_api)": [[151, "array_api.prod"]], "real() (in module array_api)": [[152, "array_api.real"]], "reciprocal() (in module array_api)": [[153, "array_api.reciprocal"]], "remainder() (in module array_api)": [[154, "array_api.remainder"]], "repeat() (in module array_api)": [[155, "array_api.repeat"]], "reshape() (in module array_api)": [[156, "array_api.reshape"]], "result_type() (in module array_api)": [[157, "array_api.result_type"]], "roll() (in module array_api)": [[158, "array_api.roll"]], "round() (in module array_api)": [[159, "array_api.round"]], "searchsorted() (in module array_api)": [[160, "array_api.searchsorted"]], "sign() (in module array_api)": [[161, "array_api.sign"]], "signbit() (in module array_api)": [[162, "array_api.signbit"]], "sin() (in module array_api)": [[163, "array_api.sin"]], "sinh() (in module array_api)": [[164, "array_api.sinh"]], "sort() (in module array_api)": [[165, "array_api.sort"]], "sqrt() (in module array_api)": [[166, "array_api.sqrt"]], "square() (in module array_api)": [[167, "array_api.square"]], "squeeze() (in module array_api)": [[168, "array_api.squeeze"]], "stack() (in module array_api)": [[169, "array_api.stack"]], "std() (in module array_api)": [[170, "array_api.std"]], "subtract() (in module array_api)": [[171, "array_api.subtract"]], "sum() (in module array_api)": [[172, "array_api.sum"]], "take() (in module array_api)": [[173, "array_api.take"]], "tan() (in module array_api)": [[174, "array_api.tan"]], "tanh() (in module array_api)": [[175, "array_api.tanh"]], "tensordot() (in module array_api)": [[176, "array_api.tensordot"]], "tile() (in module array_api)": [[177, "array_api.tile"]], "tril() (in module array_api)": [[178, "array_api.tril"]], "triu() (in module array_api)": [[179, "array_api.triu"]], "trunc() (in module array_api)": [[180, "array_api.trunc"]], "unique_all() (in module array_api)": [[181, "array_api.unique_all"]], "unique_counts() (in module array_api)": [[182, "array_api.unique_counts"]], "unique_inverse() (in module array_api)": [[183, "array_api.unique_inverse"]], "unique_values() (in module array_api)": [[184, "array_api.unique_values"]], "unstack() (in module array_api)": [[185, "array_api.unstack"]], "var() (in module array_api)": [[186, "array_api.var"]], "vecdot() (in module array_api)": [[187, "array_api.vecdot"]], "where() (in module array_api)": [[188, "array_api.where"]], "zeros() (in module array_api)": [[189, "array_api.zeros"]], "zeros_like() (in module array_api)": [[190, "array_api.zeros_like"]], "fft() (in module array_api.fft)": [[220, "array_api.fft.fft"]], "fftfreq() (in module array_api.fft)": [[221, "array_api.fft.fftfreq"]], "fftn() (in module array_api.fft)": [[222, "array_api.fft.fftn"]], "fftshift() (in module array_api.fft)": [[223, "array_api.fft.fftshift"]], "hfft() (in module array_api.fft)": [[224, "array_api.fft.hfft"]], "ifft() (in module array_api.fft)": [[225, "array_api.fft.ifft"]], "ifftn() (in module array_api.fft)": [[226, "array_api.fft.ifftn"]], "ifftshift() (in module array_api.fft)": [[227, "array_api.fft.ifftshift"]], "ihfft() (in module array_api.fft)": [[228, "array_api.fft.ihfft"]], "irfft() (in module array_api.fft)": [[229, "array_api.fft.irfft"]], "irfftn() (in module array_api.fft)": [[230, "array_api.fft.irfftn"]], "rfft() (in module array_api.fft)": [[231, "array_api.fft.rfft"]], "rfftfreq() (in module array_api.fft)": [[232, "array_api.fft.rfftfreq"]], "rfftn() (in module array_api.fft)": [[233, "array_api.fft.rfftn"]], "cholesky() (in module array_api.linalg)": [[234, "array_api.linalg.cholesky"]], "cross() (in module array_api.linalg)": [[235, "array_api.linalg.cross"]], "det() (in module array_api.linalg)": [[236, "array_api.linalg.det"]], "diagonal() (in module array_api.linalg)": [[237, "array_api.linalg.diagonal"]], "eigh() (in module array_api.linalg)": [[238, "array_api.linalg.eigh"]], "eigvalsh() (in module array_api.linalg)": [[239, "array_api.linalg.eigvalsh"]], "inv() (in module array_api.linalg)": [[240, "array_api.linalg.inv"]], "matmul() (in module array_api.linalg)": [[241, "array_api.linalg.matmul"]], "matrix_norm() (in module array_api.linalg)": [[242, "array_api.linalg.matrix_norm"]], "matrix_power() (in module array_api.linalg)": [[243, "array_api.linalg.matrix_power"]], "matrix_rank() (in module array_api.linalg)": [[244, "array_api.linalg.matrix_rank"]], "matrix_transpose() (in module array_api.linalg)": [[245, "array_api.linalg.matrix_transpose"]], "outer() (in module array_api.linalg)": [[246, "array_api.linalg.outer"]], "pinv() (in module array_api.linalg)": [[247, "array_api.linalg.pinv"]], "qr() (in module array_api.linalg)": [[248, "array_api.linalg.qr"]], "slogdet() (in module array_api.linalg)": [[249, "array_api.linalg.slogdet"]], "solve() (in module array_api.linalg)": [[250, "array_api.linalg.solve"]], "svd() (in module array_api.linalg)": [[251, "array_api.linalg.svd"]], "svdvals() (in module array_api.linalg)": [[252, "array_api.linalg.svdvals"]], "tensordot() (in module array_api.linalg)": [[253, "array_api.linalg.tensordot"]], "trace() (in module array_api.linalg)": [[254, "array_api.linalg.trace"]], "vecdot() (in module array_api.linalg)": [[255, "array_api.linalg.vecdot"]], "vector_norm() (in module array_api.linalg)": [[256, "array_api.linalg.vector_norm"]]}})