Search.setIndex({"docnames": ["API_specification/array_object", "API_specification/broadcasting", "API_specification/constants", "API_specification/creation_functions", "API_specification/data_type_functions", "API_specification/data_types", "API_specification/elementwise_functions", "API_specification/function_and_method_signatures", "API_specification/generated/array_api.__array_api_version__", "API_specification/generated/array_api.abs", "API_specification/generated/array_api.acos", "API_specification/generated/array_api.acosh", "API_specification/generated/array_api.add", "API_specification/generated/array_api.all", "API_specification/generated/array_api.any", "API_specification/generated/array_api.arange", "API_specification/generated/array_api.argmax", "API_specification/generated/array_api.argmin", "API_specification/generated/array_api.argsort", "API_specification/generated/array_api.array.T", "API_specification/generated/array_api.array.__abs__", "API_specification/generated/array_api.array.__add__", "API_specification/generated/array_api.array.__and__", "API_specification/generated/array_api.array.__array_namespace__", "API_specification/generated/array_api.array.__bool__", "API_specification/generated/array_api.array.__complex__", "API_specification/generated/array_api.array.__dlpack__", "API_specification/generated/array_api.array.__dlpack_device__", "API_specification/generated/array_api.array.__eq__", "API_specification/generated/array_api.array.__float__", "API_specification/generated/array_api.array.__floordiv__", "API_specification/generated/array_api.array.__ge__", "API_specification/generated/array_api.array.__getitem__", "API_specification/generated/array_api.array.__gt__", "API_specification/generated/array_api.array.__index__", "API_specification/generated/array_api.array.__int__", "API_specification/generated/array_api.array.__invert__", "API_specification/generated/array_api.array.__le__", "API_specification/generated/array_api.array.__lshift__", "API_specification/generated/array_api.array.__lt__", "API_specification/generated/array_api.array.__matmul__", "API_specification/generated/array_api.array.__mod__", "API_specification/generated/array_api.array.__mul__", "API_specification/generated/array_api.array.__ne__", "API_specification/generated/array_api.array.__neg__", "API_specification/generated/array_api.array.__or__", "API_specification/generated/array_api.array.__pos__", "API_specification/generated/array_api.array.__pow__", "API_specification/generated/array_api.array.__rshift__", "API_specification/generated/array_api.array.__setitem__", "API_specification/generated/array_api.array.__sub__", "API_specification/generated/array_api.array.__truediv__", "API_specification/generated/array_api.array.__xor__", "API_specification/generated/array_api.array.device", "API_specification/generated/array_api.array.dtype", "API_specification/generated/array_api.array.mT", "API_specification/generated/array_api.array.ndim", "API_specification/generated/array_api.array.shape", "API_specification/generated/array_api.array.size", "API_specification/generated/array_api.array.to_device", "API_specification/generated/array_api.asarray", "API_specification/generated/array_api.asin", "API_specification/generated/array_api.asinh", "API_specification/generated/array_api.astype", "API_specification/generated/array_api.atan", "API_specification/generated/array_api.atan2", "API_specification/generated/array_api.atanh", "API_specification/generated/array_api.bitwise_and", "API_specification/generated/array_api.bitwise_invert", "API_specification/generated/array_api.bitwise_left_shift", "API_specification/generated/array_api.bitwise_or", "API_specification/generated/array_api.bitwise_right_shift", "API_specification/generated/array_api.bitwise_xor", "API_specification/generated/array_api.broadcast_arrays", "API_specification/generated/array_api.broadcast_to", "API_specification/generated/array_api.can_cast", "API_specification/generated/array_api.ceil", "API_specification/generated/array_api.clip", "API_specification/generated/array_api.concat", "API_specification/generated/array_api.conj", "API_specification/generated/array_api.constants.e", "API_specification/generated/array_api.constants.inf", "API_specification/generated/array_api.constants.nan", "API_specification/generated/array_api.constants.newaxis", "API_specification/generated/array_api.constants.pi", "API_specification/generated/array_api.copysign", "API_specification/generated/array_api.cos", "API_specification/generated/array_api.cosh", "API_specification/generated/array_api.cumulative_sum", "API_specification/generated/array_api.data_types.__eq__", "API_specification/generated/array_api.diff", "API_specification/generated/array_api.divide", "API_specification/generated/array_api.empty", "API_specification/generated/array_api.empty_like", "API_specification/generated/array_api.equal", "API_specification/generated/array_api.exp", "API_specification/generated/array_api.expand_dims", "API_specification/generated/array_api.expm1", "API_specification/generated/array_api.eye", "API_specification/generated/array_api.finfo", "API_specification/generated/array_api.flip", "API_specification/generated/array_api.floor", "API_specification/generated/array_api.floor_divide", "API_specification/generated/array_api.from_dlpack", "API_specification/generated/array_api.full", "API_specification/generated/array_api.full_like", "API_specification/generated/array_api.greater", "API_specification/generated/array_api.greater_equal", "API_specification/generated/array_api.hypot", "API_specification/generated/array_api.iinfo", "API_specification/generated/array_api.imag", "API_specification/generated/array_api.info.__array_namespace_info__", "API_specification/generated/array_api.info.capabilities", "API_specification/generated/array_api.info.default_device", "API_specification/generated/array_api.info.default_dtypes", "API_specification/generated/array_api.info.devices", "API_specification/generated/array_api.info.dtypes", "API_specification/generated/array_api.isdtype", "API_specification/generated/array_api.isfinite", "API_specification/generated/array_api.isinf", "API_specification/generated/array_api.isnan", "API_specification/generated/array_api.less", "API_specification/generated/array_api.less_equal", "API_specification/generated/array_api.linspace", "API_specification/generated/array_api.log", "API_specification/generated/array_api.log10", "API_specification/generated/array_api.log1p", "API_specification/generated/array_api.log2", "API_specification/generated/array_api.logaddexp", "API_specification/generated/array_api.logical_and", "API_specification/generated/array_api.logical_not", "API_specification/generated/array_api.logical_or", "API_specification/generated/array_api.logical_xor", "API_specification/generated/array_api.matmul", "API_specification/generated/array_api.matrix_transpose", "API_specification/generated/array_api.max", "API_specification/generated/array_api.maximum", "API_specification/generated/array_api.mean", "API_specification/generated/array_api.meshgrid", "API_specification/generated/array_api.min", "API_specification/generated/array_api.minimum", "API_specification/generated/array_api.moveaxis", "API_specification/generated/array_api.multiply", "API_specification/generated/array_api.negative", "API_specification/generated/array_api.nextafter", "API_specification/generated/array_api.nonzero", "API_specification/generated/array_api.not_equal", "API_specification/generated/array_api.ones", "API_specification/generated/array_api.ones_like", "API_specification/generated/array_api.permute_dims", "API_specification/generated/array_api.positive", "API_specification/generated/array_api.pow", "API_specification/generated/array_api.prod", "API_specification/generated/array_api.real", "API_specification/generated/array_api.reciprocal", "API_specification/generated/array_api.remainder", "API_specification/generated/array_api.repeat", "API_specification/generated/array_api.reshape", "API_specification/generated/array_api.result_type", "API_specification/generated/array_api.roll", "API_specification/generated/array_api.round", "API_specification/generated/array_api.searchsorted", "API_specification/generated/array_api.sign", "API_specification/generated/array_api.signbit", "API_specification/generated/array_api.sin", "API_specification/generated/array_api.sinh", "API_specification/generated/array_api.sort", "API_specification/generated/array_api.sqrt", "API_specification/generated/array_api.square", "API_specification/generated/array_api.squeeze", "API_specification/generated/array_api.stack", "API_specification/generated/array_api.std", "API_specification/generated/array_api.subtract", "API_specification/generated/array_api.sum", "API_specification/generated/array_api.take", "API_specification/generated/array_api.tan", "API_specification/generated/array_api.tanh", "API_specification/generated/array_api.tensordot", "API_specification/generated/array_api.tile", "API_specification/generated/array_api.tril", "API_specification/generated/array_api.triu", "API_specification/generated/array_api.trunc", "API_specification/generated/array_api.unique_all", "API_specification/generated/array_api.unique_counts", "API_specification/generated/array_api.unique_inverse", "API_specification/generated/array_api.unique_values", "API_specification/generated/array_api.unstack", "API_specification/generated/array_api.var", "API_specification/generated/array_api.vecdot", "API_specification/generated/array_api.where", "API_specification/generated/array_api.zeros", "API_specification/generated/array_api.zeros_like", "API_specification/index", "API_specification/indexing", "API_specification/indexing_functions", "API_specification/inspection", "API_specification/linear_algebra_functions", "API_specification/manipulation_functions", "API_specification/searching_functions", "API_specification/set_functions", "API_specification/sorting_functions", "API_specification/statistical_functions", "API_specification/type_promotion", "API_specification/utility_functions", "API_specification/version", "assumptions", "benchmark_suite", "changelog", "design_topics/C_API", "design_topics/accuracy", "design_topics/complex_numbers", "design_topics/copies_views_and_mutation", "design_topics/data_dependent_output_shapes", "design_topics/data_interchange", "design_topics/device_support", "design_topics/exceptions", "design_topics/index", "design_topics/lazy_eager", "design_topics/parallelism", "design_topics/static_typing", "extensions/fourier_transform_functions", "extensions/generated/array_api.fft.fft", "extensions/generated/array_api.fft.fftfreq", "extensions/generated/array_api.fft.fftn", "extensions/generated/array_api.fft.fftshift", "extensions/generated/array_api.fft.hfft", "extensions/generated/array_api.fft.ifft", "extensions/generated/array_api.fft.ifftn", "extensions/generated/array_api.fft.ifftshift", "extensions/generated/array_api.fft.ihfft", "extensions/generated/array_api.fft.irfft", "extensions/generated/array_api.fft.irfftn", "extensions/generated/array_api.fft.rfft", "extensions/generated/array_api.fft.rfftfreq", "extensions/generated/array_api.fft.rfftn", "extensions/generated/array_api.linalg.cholesky", "extensions/generated/array_api.linalg.cross", "extensions/generated/array_api.linalg.det", "extensions/generated/array_api.linalg.diagonal", "extensions/generated/array_api.linalg.eigh", "extensions/generated/array_api.linalg.eigvalsh", "extensions/generated/array_api.linalg.inv", "extensions/generated/array_api.linalg.matmul", "extensions/generated/array_api.linalg.matrix_norm", "extensions/generated/array_api.linalg.matrix_power", "extensions/generated/array_api.linalg.matrix_rank", "extensions/generated/array_api.linalg.matrix_transpose", "extensions/generated/array_api.linalg.outer", "extensions/generated/array_api.linalg.pinv", "extensions/generated/array_api.linalg.qr", "extensions/generated/array_api.linalg.slogdet", "extensions/generated/array_api.linalg.solve", "extensions/generated/array_api.linalg.svd", "extensions/generated/array_api.linalg.svdvals", "extensions/generated/array_api.linalg.tensordot", "extensions/generated/array_api.linalg.trace", "extensions/generated/array_api.linalg.vecdot", "extensions/generated/array_api.linalg.vector_norm", "extensions/index", "extensions/linear_algebra_functions", "future_API_evolution", "index", "license", "purpose_and_scope", "usage_data", "use_cases", "verification_test_suite"], "filenames": ["API_specification/array_object.rst", "API_specification/broadcasting.rst", "API_specification/constants.rst", "API_specification/creation_functions.rst", "API_specification/data_type_functions.rst", "API_specification/data_types.rst", "API_specification/elementwise_functions.rst", "API_specification/function_and_method_signatures.rst", "API_specification/generated/array_api.__array_api_version__.rst", "API_specification/generated/array_api.abs.rst", "API_specification/generated/array_api.acos.rst", "API_specification/generated/array_api.acosh.rst", "API_specification/generated/array_api.add.rst", "API_specification/generated/array_api.all.rst", "API_specification/generated/array_api.any.rst", "API_specification/generated/array_api.arange.rst", "API_specification/generated/array_api.argmax.rst", "API_specification/generated/array_api.argmin.rst", "API_specification/generated/array_api.argsort.rst", "API_specification/generated/array_api.array.T.rst", "API_specification/generated/array_api.array.__abs__.rst", "API_specification/generated/array_api.array.__add__.rst", "API_specification/generated/array_api.array.__and__.rst", "API_specification/generated/array_api.array.__array_namespace__.rst", "API_specification/generated/array_api.array.__bool__.rst", "API_specification/generated/array_api.array.__complex__.rst", "API_specification/generated/array_api.array.__dlpack__.rst", "API_specification/generated/array_api.array.__dlpack_device__.rst", "API_specification/generated/array_api.array.__eq__.rst", "API_specification/generated/array_api.array.__float__.rst", "API_specification/generated/array_api.array.__floordiv__.rst", "API_specification/generated/array_api.array.__ge__.rst", "API_specification/generated/array_api.array.__getitem__.rst", "API_specification/generated/array_api.array.__gt__.rst", "API_specification/generated/array_api.array.__index__.rst", "API_specification/generated/array_api.array.__int__.rst", "API_specification/generated/array_api.array.__invert__.rst", "API_specification/generated/array_api.array.__le__.rst", "API_specification/generated/array_api.array.__lshift__.rst", "API_specification/generated/array_api.array.__lt__.rst", "API_specification/generated/array_api.array.__matmul__.rst", "API_specification/generated/array_api.array.__mod__.rst", "API_specification/generated/array_api.array.__mul__.rst", "API_specification/generated/array_api.array.__ne__.rst", "API_specification/generated/array_api.array.__neg__.rst", "API_specification/generated/array_api.array.__or__.rst", "API_specification/generated/array_api.array.__pos__.rst", "API_specification/generated/array_api.array.__pow__.rst", "API_specification/generated/array_api.array.__rshift__.rst", "API_specification/generated/array_api.array.__setitem__.rst", "API_specification/generated/array_api.array.__sub__.rst", "API_specification/generated/array_api.array.__truediv__.rst", "API_specification/generated/array_api.array.__xor__.rst", "API_specification/generated/array_api.array.device.rst", "API_specification/generated/array_api.array.dtype.rst", "API_specification/generated/array_api.array.mT.rst", "API_specification/generated/array_api.array.ndim.rst", "API_specification/generated/array_api.array.shape.rst", "API_specification/generated/array_api.array.size.rst", "API_specification/generated/array_api.array.to_device.rst", "API_specification/generated/array_api.asarray.rst", "API_specification/generated/array_api.asin.rst", "API_specification/generated/array_api.asinh.rst", "API_specification/generated/array_api.astype.rst", "API_specification/generated/array_api.atan.rst", "API_specification/generated/array_api.atan2.rst", "API_specification/generated/array_api.atanh.rst", "API_specification/generated/array_api.bitwise_and.rst", "API_specification/generated/array_api.bitwise_invert.rst", "API_specification/generated/array_api.bitwise_left_shift.rst", "API_specification/generated/array_api.bitwise_or.rst", "API_specification/generated/array_api.bitwise_right_shift.rst", "API_specification/generated/array_api.bitwise_xor.rst", "API_specification/generated/array_api.broadcast_arrays.rst", "API_specification/generated/array_api.broadcast_to.rst", "API_specification/generated/array_api.can_cast.rst", "API_specification/generated/array_api.ceil.rst", "API_specification/generated/array_api.clip.rst", "API_specification/generated/array_api.concat.rst", "API_specification/generated/array_api.conj.rst", "API_specification/generated/array_api.constants.e.rst", "API_specification/generated/array_api.constants.inf.rst", "API_specification/generated/array_api.constants.nan.rst", "API_specification/generated/array_api.constants.newaxis.rst", "API_specification/generated/array_api.constants.pi.rst", "API_specification/generated/array_api.copysign.rst", "API_specification/generated/array_api.cos.rst", "API_specification/generated/array_api.cosh.rst", "API_specification/generated/array_api.cumulative_sum.rst", "API_specification/generated/array_api.data_types.__eq__.rst", "API_specification/generated/array_api.diff.rst", "API_specification/generated/array_api.divide.rst", "API_specification/generated/array_api.empty.rst", "API_specification/generated/array_api.empty_like.rst", "API_specification/generated/array_api.equal.rst", "API_specification/generated/array_api.exp.rst", "API_specification/generated/array_api.expand_dims.rst", "API_specification/generated/array_api.expm1.rst", "API_specification/generated/array_api.eye.rst", "API_specification/generated/array_api.finfo.rst", "API_specification/generated/array_api.flip.rst", "API_specification/generated/array_api.floor.rst", "API_specification/generated/array_api.floor_divide.rst", "API_specification/generated/array_api.from_dlpack.rst", "API_specification/generated/array_api.full.rst", "API_specification/generated/array_api.full_like.rst", "API_specification/generated/array_api.greater.rst", "API_specification/generated/array_api.greater_equal.rst", "API_specification/generated/array_api.hypot.rst", "API_specification/generated/array_api.iinfo.rst", "API_specification/generated/array_api.imag.rst", "API_specification/generated/array_api.info.__array_namespace_info__.rst", "API_specification/generated/array_api.info.capabilities.rst", "API_specification/generated/array_api.info.default_device.rst", "API_specification/generated/array_api.info.default_dtypes.rst", "API_specification/generated/array_api.info.devices.rst", "API_specification/generated/array_api.info.dtypes.rst", "API_specification/generated/array_api.isdtype.rst", "API_specification/generated/array_api.isfinite.rst", "API_specification/generated/array_api.isinf.rst", "API_specification/generated/array_api.isnan.rst", "API_specification/generated/array_api.less.rst", "API_specification/generated/array_api.less_equal.rst", "API_specification/generated/array_api.linspace.rst", "API_specification/generated/array_api.log.rst", "API_specification/generated/array_api.log10.rst", "API_specification/generated/array_api.log1p.rst", "API_specification/generated/array_api.log2.rst", "API_specification/generated/array_api.logaddexp.rst", "API_specification/generated/array_api.logical_and.rst", "API_specification/generated/array_api.logical_not.rst", "API_specification/generated/array_api.logical_or.rst", "API_specification/generated/array_api.logical_xor.rst", "API_specification/generated/array_api.matmul.rst", "API_specification/generated/array_api.matrix_transpose.rst", "API_specification/generated/array_api.max.rst", "API_specification/generated/array_api.maximum.rst", "API_specification/generated/array_api.mean.rst", "API_specification/generated/array_api.meshgrid.rst", "API_specification/generated/array_api.min.rst", "API_specification/generated/array_api.minimum.rst", "API_specification/generated/array_api.moveaxis.rst", "API_specification/generated/array_api.multiply.rst", "API_specification/generated/array_api.negative.rst", "API_specification/generated/array_api.nextafter.rst", "API_specification/generated/array_api.nonzero.rst", "API_specification/generated/array_api.not_equal.rst", "API_specification/generated/array_api.ones.rst", "API_specification/generated/array_api.ones_like.rst", "API_specification/generated/array_api.permute_dims.rst", "API_specification/generated/array_api.positive.rst", "API_specification/generated/array_api.pow.rst", "API_specification/generated/array_api.prod.rst", "API_specification/generated/array_api.real.rst", "API_specification/generated/array_api.reciprocal.rst", "API_specification/generated/array_api.remainder.rst", "API_specification/generated/array_api.repeat.rst", "API_specification/generated/array_api.reshape.rst", "API_specification/generated/array_api.result_type.rst", "API_specification/generated/array_api.roll.rst", "API_specification/generated/array_api.round.rst", "API_specification/generated/array_api.searchsorted.rst", "API_specification/generated/array_api.sign.rst", "API_specification/generated/array_api.signbit.rst", "API_specification/generated/array_api.sin.rst", "API_specification/generated/array_api.sinh.rst", "API_specification/generated/array_api.sort.rst", "API_specification/generated/array_api.sqrt.rst", "API_specification/generated/array_api.square.rst", "API_specification/generated/array_api.squeeze.rst", "API_specification/generated/array_api.stack.rst", "API_specification/generated/array_api.std.rst", "API_specification/generated/array_api.subtract.rst", "API_specification/generated/array_api.sum.rst", "API_specification/generated/array_api.take.rst", "API_specification/generated/array_api.tan.rst", "API_specification/generated/array_api.tanh.rst", "API_specification/generated/array_api.tensordot.rst", "API_specification/generated/array_api.tile.rst", "API_specification/generated/array_api.tril.rst", "API_specification/generated/array_api.triu.rst", "API_specification/generated/array_api.trunc.rst", "API_specification/generated/array_api.unique_all.rst", "API_specification/generated/array_api.unique_counts.rst", "API_specification/generated/array_api.unique_inverse.rst", "API_specification/generated/array_api.unique_values.rst", "API_specification/generated/array_api.unstack.rst", "API_specification/generated/array_api.var.rst", "API_specification/generated/array_api.vecdot.rst", "API_specification/generated/array_api.where.rst", "API_specification/generated/array_api.zeros.rst", "API_specification/generated/array_api.zeros_like.rst", "API_specification/index.rst", "API_specification/indexing.rst", "API_specification/indexing_functions.rst", "API_specification/inspection.rst", "API_specification/linear_algebra_functions.rst", "API_specification/manipulation_functions.rst", "API_specification/searching_functions.rst", "API_specification/set_functions.rst", "API_specification/sorting_functions.rst", "API_specification/statistical_functions.rst", "API_specification/type_promotion.rst", "API_specification/utility_functions.rst", "API_specification/version.rst", "assumptions.md", "benchmark_suite.md", "changelog.rst", "design_topics/C_API.rst", "design_topics/accuracy.rst", "design_topics/complex_numbers.rst", "design_topics/copies_views_and_mutation.rst", "design_topics/data_dependent_output_shapes.rst", "design_topics/data_interchange.rst", "design_topics/device_support.rst", "design_topics/exceptions.rst", "design_topics/index.rst", "design_topics/lazy_eager.rst", "design_topics/parallelism.rst", "design_topics/static_typing.rst", "extensions/fourier_transform_functions.rst", "extensions/generated/array_api.fft.fft.rst", "extensions/generated/array_api.fft.fftfreq.rst", "extensions/generated/array_api.fft.fftn.rst", "extensions/generated/array_api.fft.fftshift.rst", "extensions/generated/array_api.fft.hfft.rst", "extensions/generated/array_api.fft.ifft.rst", "extensions/generated/array_api.fft.ifftn.rst", "extensions/generated/array_api.fft.ifftshift.rst", "extensions/generated/array_api.fft.ihfft.rst", "extensions/generated/array_api.fft.irfft.rst", "extensions/generated/array_api.fft.irfftn.rst", "extensions/generated/array_api.fft.rfft.rst", "extensions/generated/array_api.fft.rfftfreq.rst", "extensions/generated/array_api.fft.rfftn.rst", "extensions/generated/array_api.linalg.cholesky.rst", "extensions/generated/array_api.linalg.cross.rst", "extensions/generated/array_api.linalg.det.rst", "extensions/generated/array_api.linalg.diagonal.rst", "extensions/generated/array_api.linalg.eigh.rst", "extensions/generated/array_api.linalg.eigvalsh.rst", "extensions/generated/array_api.linalg.inv.rst", "extensions/generated/array_api.linalg.matmul.rst", "extensions/generated/array_api.linalg.matrix_norm.rst", "extensions/generated/array_api.linalg.matrix_power.rst", "extensions/generated/array_api.linalg.matrix_rank.rst", "extensions/generated/array_api.linalg.matrix_transpose.rst", "extensions/generated/array_api.linalg.outer.rst", "extensions/generated/array_api.linalg.pinv.rst", "extensions/generated/array_api.linalg.qr.rst", "extensions/generated/array_api.linalg.slogdet.rst", "extensions/generated/array_api.linalg.solve.rst", "extensions/generated/array_api.linalg.svd.rst", "extensions/generated/array_api.linalg.svdvals.rst", "extensions/generated/array_api.linalg.tensordot.rst", "extensions/generated/array_api.linalg.trace.rst", "extensions/generated/array_api.linalg.vecdot.rst", "extensions/generated/array_api.linalg.vector_norm.rst", "extensions/index.rst", "extensions/linear_algebra_functions.rst", "future_API_evolution.md", "index.rst", "license.rst", "purpose_and_scope.md", "usage_data.md", "use_cases.md", "verification_test_suite.md"], "titles": ["Array object", "Broadcasting", "Constants", "Creation Functions", "Data Type Functions", "Data Types", "Element-wise Functions", "Function and method signatures", "__array_api_version__", "abs", "acos", "acosh", "add", "all", "any", "arange", "argmax", "argmin", "argsort", "T", "__abs__", "__add__", "__and__", "__array_namespace__", "__bool__", "__complex__", "__dlpack__", "__dlpack_device__", "__eq__", "__float__", "__floordiv__", "__ge__", "__getitem__", "__gt__", "__index__", "__int__", "__invert__", "__le__", "__lshift__", "__lt__", "__matmul__", "__mod__", "__mul__", "__ne__", "__neg__", "__or__", "__pos__", "__pow__", "__rshift__", "__setitem__", "__sub__", "__truediv__", "__xor__", "device", "dtype", "mT", "ndim", "shape", "size", "to_device", "asarray", "asin", "asinh", "astype", "atan", "atan2", "atanh", "bitwise_and", "bitwise_invert", "bitwise_left_shift", "bitwise_or", "bitwise_right_shift", "bitwise_xor", "broadcast_arrays", "broadcast_to", "can_cast", "ceil", "clip", "concat", "conj", "e", "inf", "nan", "newaxis", "pi", "copysign", "cos", "cosh", "cumulative_sum", "__eq__", "diff", "divide", "empty", "empty_like", "equal", "exp", "expand_dims", "expm1", "eye", "finfo", "flip", "floor", "floor_divide", "from_dlpack", "full", "full_like", "greater", "greater_equal", "hypot", "iinfo", "imag", "__array_namespace_info__", "capabilities", "default_device", "default_dtypes", "devices", "dtypes", "isdtype", "isfinite", "isinf", "isnan", "less", "less_equal", "linspace", "log", "log10", "log1p", "log2", "logaddexp", "logical_and", "logical_not", "logical_or", "logical_xor", "matmul", "matrix_transpose", "max", "maximum", "mean", "meshgrid", "min", "minimum", "moveaxis", "multiply", "negative", "nextafter", "nonzero", "not_equal", "ones", "ones_like", "permute_dims", "positive", "pow", "prod", "real", "reciprocal", "remainder", "repeat", "reshape", "result_type", "roll", "round", "searchsorted", "sign", "signbit", "sin", "sinh", "sort", "sqrt", "square", "squeeze", "stack", "std", "subtract", "sum", "take", "tan", "tanh", "tensordot", "tile", "tril", "triu", "trunc", "unique_all", "unique_counts", "unique_inverse", "unique_values", "unstack", "var", "vecdot", "where", "zeros", "zeros_like", "API specification", "Indexing", "Indexing Functions", "Inspection", "Linear Algebra Functions", "Manipulation Functions", "Searching Functions", "Set Functions", "Sorting Functions", "Statistical Functions", "Type Promotion Rules", "Utility Functions", "Version", "Assumptions", "Benchmark suite", "Changelog per API standard version", "C API", "Accuracy", "Complex Numbers", "Copy-view behaviour and mutability", "Data-dependent output shapes", "Data interchange mechanisms", "Device support", "Exceptions", "Design topics &amp; constraints", "Lazy vs. eager execution", "Parallelism", "Static typing", "Fourier transform Functions", "fft", "fftfreq", "fftn", "fftshift", "hfft", "ifft", "ifftn", "ifftshift", "ihfft", "irfft", "irfftn", "rfft", "rfftfreq", "rfftn", "cholesky", "cross", "det", "diagonal", "eigh", "eigvalsh", "inv", "matmul", "matrix_norm", "matrix_power", "matrix_rank", "matrix_transpose", "outer", "pinv", "qr", "slogdet", "solve", "svd", "svdvals", "tensordot", "trace", "vecdot", "vector_norm", "Extensions", "Linear Algebra Extension", "Future API standard evolution", "Python array API standard", "License", "Purpose and scope", "Usage Data", "Use cases", "Verification - test suite"], "terms": {"api": [0, 1, 5, 7, 8, 23, 26, 63, 103, 111, 112, 116, 117, 193, 202, 205, 209, 210, 211, 213, 214, 215, 216, 217, 218, 219, 258, 262, 264, 266], "specif": [0, 1, 2, 3, 4, 5, 6, 8, 19, 23, 26, 49, 51, 59, 63, 78, 91, 102, 112, 114, 116, 117, 123, 129, 130, 131, 132, 135, 136, 137, 139, 140, 151, 156, 158, 161, 170, 171, 174, 177, 182, 183, 187, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 207, 208, 209, 210, 211, 212, 213, 214, 215, 217, 219, 220, 239, 240, 258, 259, 260, 261, 263, 264, 265, 266], "A": [0, 1, 2, 3, 4, 5, 7, 13, 14, 26, 57, 90, 98, 103, 117, 156, 170, 186, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 208, 211, 213, 214, 217, 218, 219, 220, 221, 223, 225, 226, 227, 229, 230, 231, 232, 234, 248, 251, 259, 262, 263, 264, 265], "conform": [0, 2, 3, 4, 5, 8, 9, 16, 17, 18, 31, 33, 37, 39, 59, 60, 97, 106, 107, 108, 112, 116, 117, 121, 122, 123, 126, 135, 136, 139, 140, 151, 156, 161, 166, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 207, 209, 210, 213, 220, 259], "implement": [0, 2, 3, 4, 5, 8, 9, 10, 11, 16, 17, 18, 20, 23, 24, 25, 26, 29, 30, 31, 33, 34, 35, 37, 39, 40, 41, 44, 47, 49, 51, 59, 60, 61, 62, 63, 64, 65, 66, 77, 86, 87, 88, 91, 95, 97, 102, 103, 104, 105, 106, 107, 108, 112, 117, 121, 122, 123, 124, 125, 126, 127, 133, 135, 136, 137, 139, 140, 142, 143, 145, 151, 152, 154, 155, 156, 158, 161, 164, 165, 166, 168, 171, 173, 175, 176, 182, 183, 184, 185, 187, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 207, 208, 209, 210, 211, 212, 213, 214, 215, 217, 219, 220, 223, 224, 227, 228, 231, 234, 235, 239, 240, 249, 251, 255, 258, 259, 260, 264, 265], "standard": [0, 2, 3, 4, 5, 7, 26, 99, 103, 117, 125, 127, 171, 176, 187, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 209, 210, 211, 213, 214, 215, 217, 218, 219, 258, 259, 262, 264, 265], "must": [0, 1, 2, 3, 4, 5, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 76, 77, 78, 79, 85, 86, 87, 88, 90, 91, 92, 93, 94, 95, 96, 97, 98, 100, 101, 102, 103, 104, 105, 106, 107, 108, 110, 112, 114, 115, 116, 117, 118, 119, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 207, 209, 210, 211, 213, 215, 217, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 243, 244, 245, 247, 248, 249, 250, 251, 252, 253, 255, 257, 258, 259, 260, 263, 264], "provid": [0, 2, 3, 4, 5, 13, 14, 26, 59, 88, 90, 96, 100, 103, 115, 117, 138, 141, 152, 156, 158, 170, 171, 173, 174, 186, 187, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 207, 208, 210, 211, 213, 214, 215, 218, 219, 220, 221, 223, 226, 227, 230, 231, 232, 234, 244, 255, 258, 259, 260, 262, 263, 264, 265], "support": [0, 1, 2, 3, 4, 5, 7, 9, 10, 11, 12, 13, 14, 16, 17, 18, 20, 21, 24, 26, 29, 31, 33, 35, 37, 39, 40, 42, 43, 44, 46, 47, 50, 51, 53, 57, 59, 60, 61, 62, 63, 64, 66, 86, 87, 88, 89, 91, 94, 95, 97, 98, 99, 102, 103, 104, 105, 106, 107, 108, 112, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 129, 130, 131, 132, 133, 135, 136, 138, 139, 140, 142, 143, 145, 146, 147, 148, 150, 151, 152, 156, 160, 162, 164, 165, 166, 167, 168, 172, 173, 174, 175, 176, 177, 182, 183, 184, 185, 188, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 205, 209, 210, 211, 216, 219, 220, 235, 236, 237, 239, 240, 241, 243, 244, 245, 247, 248, 249, 250, 251, 252, 253, 255, 257, 258, 259, 263, 264], "an": [0, 1, 5, 7, 9, 10, 11, 12, 13, 14, 15, 18, 19, 20, 21, 22, 23, 26, 28, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 76, 77, 78, 79, 83, 85, 86, 87, 88, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 115, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 193, 200, 202, 205, 207, 208, 209, 210, 211, 212, 214, 215, 217, 218, 219, 221, 222, 223, 225, 226, 227, 229, 230, 231, 232, 233, 234, 235, 236, 238, 239, 240, 241, 243, 244, 245, 248, 249, 250, 251, 252, 253, 255, 257, 258, 259, 260, 262, 264, 265], "have": [0, 1, 2, 5, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 55, 57, 58, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 76, 77, 78, 79, 85, 86, 87, 88, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 104, 105, 106, 107, 108, 109, 110, 112, 114, 116, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 193, 205, 207, 208, 210, 211, 214, 217, 219, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 243, 244, 245, 247, 248, 249, 250, 251, 252, 253, 255, 257, 259, 260, 263, 264, 265], "follow": [0, 1, 2, 3, 4, 5, 7, 10, 11, 12, 26, 44, 49, 61, 62, 64, 66, 88, 90, 91, 99, 102, 104, 109, 111, 112, 114, 116, 117, 124, 126, 142, 143, 151, 155, 160, 167, 177, 182, 183, 184, 185, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 205, 207, 209, 210, 212, 213, 214, 215, 220, 221, 223, 225, 226, 227, 229, 230, 231, 232, 234, 243, 249, 257, 259, 260, 262, 263, 264, 265], "furthermor": [0, 263, 266], "minimum": [0, 9, 17, 20, 44, 135, 139, 143, 192, 207, 209], "rank": [0, 1, 13, 14, 90, 96, 138, 141, 145, 161, 170, 174, 177, 178, 186, 188, 193, 207, 221, 223, 225, 226, 227, 229, 230, 231, 232, 234, 236, 243, 245, 249, 251, 255, 257, 263], "i": [0, 1, 2, 5, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 23, 24, 25, 26, 29, 30, 31, 33, 34, 35, 37, 39, 40, 41, 42, 43, 44, 47, 49, 51, 55, 57, 59, 60, 61, 62, 63, 64, 65, 66, 69, 71, 74, 76, 77, 78, 79, 83, 85, 86, 87, 88, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 110, 114, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 133, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 200, 202, 205, 206, 207, 209, 210, 211, 213, 214, 215, 217, 218, 219, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 243, 244, 245, 247, 248, 249, 250, 251, 252, 253, 255, 257, 258, 259, 260, 262, 263, 264, 265, 266], "e": [0, 1, 2, 5, 7, 9, 10, 11, 18, 19, 20, 26, 40, 43, 47, 49, 51, 55, 57, 62, 63, 65, 66, 69, 71, 76, 77, 78, 86, 87, 88, 90, 91, 94, 95, 96, 101, 102, 103, 108, 110, 116, 117, 123, 124, 125, 126, 127, 133, 135, 137, 138, 139, 141, 142, 143, 145, 146, 147, 148, 150, 151, 152, 153, 155, 156, 158, 160, 161, 163, 164, 165, 166, 167, 169, 170, 171, 173, 174, 175, 176, 177, 178, 182, 183, 184, 185, 187, 192, 193, 200, 202, 207, 208, 209, 210, 211, 212, 213, 214, 217, 221, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 234, 236, 239, 240, 243, 245, 248, 250, 251, 252, 253, 255, 257, 258, 259, 260, 263, 264, 265], "number": [0, 1, 5, 9, 10, 11, 12, 13, 14, 16, 17, 18, 25, 26, 31, 33, 35, 37, 39, 44, 56, 58, 60, 61, 62, 63, 64, 65, 66, 73, 76, 79, 82, 87, 88, 90, 91, 94, 95, 96, 97, 98, 99, 101, 102, 104, 106, 107, 108, 109, 110, 112, 118, 119, 121, 122, 123, 124, 126, 135, 136, 137, 138, 139, 140, 141, 142, 143, 145, 146, 147, 148, 149, 151, 152, 153, 155, 156, 158, 159, 160, 161, 162, 163, 165, 166, 167, 168, 170, 171, 173, 174, 176, 177, 178, 181, 182, 183, 186, 187, 188, 193, 200, 202, 213, 216, 221, 223, 225, 226, 227, 229, 230, 231, 232, 234, 235, 239, 240, 241, 245, 249, 250, 251, 252, 255, 259, 263, 264], "dimens": [0, 1, 13, 14, 16, 17, 19, 40, 55, 56, 57, 58, 78, 88, 90, 96, 100, 112, 133, 134, 135, 137, 139, 141, 145, 149, 152, 156, 157, 159, 169, 170, 171, 173, 174, 177, 178, 179, 180, 182, 183, 184, 185, 186, 187, 188, 193, 202, 221, 223, 224, 225, 226, 227, 229, 230, 231, 232, 234, 235, 236, 237, 238, 239, 240, 241, 243, 244, 245, 248, 249, 250, 251, 252, 253, 255, 257, 263], "0": [0, 1, 5, 9, 10, 11, 12, 15, 24, 25, 26, 29, 35, 38, 48, 57, 61, 62, 63, 64, 65, 66, 69, 71, 76, 78, 85, 86, 87, 91, 94, 95, 96, 97, 98, 99, 101, 102, 108, 124, 125, 126, 127, 135, 136, 137, 139, 140, 142, 144, 149, 151, 152, 154, 155, 160, 161, 162, 163, 164, 165, 167, 170, 171, 173, 175, 176, 177, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 193, 200, 202, 210, 211, 222, 224, 233, 238, 243, 250, 252, 253, 255, 257, 263, 265], "1": [0, 1, 7, 10, 11, 13, 14, 15, 18, 25, 26, 27, 29, 35, 40, 61, 62, 63, 64, 65, 66, 85, 86, 87, 88, 90, 95, 96, 97, 98, 99, 102, 123, 124, 125, 126, 127, 133, 147, 148, 149, 151, 152, 154, 156, 157, 161, 162, 163, 166, 170, 171, 175, 176, 177, 178, 179, 180, 187, 188, 193, 210, 211, 218, 221, 222, 223, 225, 226, 227, 229, 230, 231, 232, 233, 234, 236, 239, 241, 243, 251, 252, 253, 257], "2": [0, 1, 5, 7, 9, 10, 11, 26, 27, 40, 61, 62, 64, 65, 66, 80, 86, 87, 91, 124, 126, 127, 133, 165, 168, 175, 176, 177, 178, 193, 210, 211, 219, 222, 225, 229, 230, 231, 232, 233, 234, 243, 245, 248, 249, 250, 251, 252, 253, 254, 255, 257], "3": [0, 1, 5, 7, 27, 84, 174, 178, 205, 210, 211, 214, 236], "4": [0, 1, 5, 10, 11, 27, 62, 65, 124, 126, 178, 193, 218, 264], "explicitli": [0, 26, 40, 63, 112, 133, 174, 177, 193, 205, 207, 235, 239, 240, 249, 251, 259, 263, 265], "document": [0, 5, 7, 59, 102, 117, 156, 195, 200, 208, 210, 213, 215, 258, 260, 262, 264, 265, 266], "maximum": [0, 1, 16, 26, 112, 123, 135, 139, 192, 207, 209, 243], "n": [0, 1, 13, 14, 40, 55, 86, 88, 90, 96, 123, 133, 134, 137, 138, 141, 145, 149, 152, 156, 161, 170, 171, 173, 175, 176, 177, 178, 179, 180, 186, 187, 188, 193, 207, 221, 222, 223, 225, 226, 227, 229, 230, 231, 232, 233, 234, 235, 236, 238, 239, 240, 241, 243, 244, 245, 247, 248, 249, 252, 253, 255, 257, 263], "zero": [0, 5, 13, 14, 16, 17, 24, 25, 29, 30, 34, 35, 40, 41, 47, 63, 65, 69, 88, 91, 96, 97, 98, 102, 108, 126, 129, 130, 131, 132, 133, 135, 136, 137, 138, 139, 140, 142, 145, 147, 148, 151, 152, 155, 161, 163, 171, 173, 179, 180, 181, 182, 183, 184, 185, 187, 188, 191, 192, 193, 200, 202, 207, 208, 210, 213, 221, 223, 224, 225, 226, 227, 229, 230, 231, 232, 234, 237, 244, 245, 248, 249, 250, 257, 265], "dimension": [0, 13, 14, 15, 16, 17, 19, 24, 25, 29, 34, 35, 40, 88, 98, 123, 133, 135, 137, 138, 139, 145, 152, 156, 161, 171, 173, 174, 182, 183, 184, 185, 187, 188, 193, 202, 207, 219, 221, 223, 225, 226, 227, 229, 230, 231, 232, 234, 236, 237, 240, 241, 245, 247, 248, 257, 259, 263], "apart": 0, "from": [0, 5, 13, 14, 15, 19, 26, 44, 59, 60, 63, 75, 78, 88, 90, 93, 100, 102, 103, 104, 105, 108, 123, 124, 126, 138, 143, 148, 151, 152, 157, 158, 167, 169, 171, 173, 174, 176, 182, 184, 187, 188, 189, 191, 193, 202, 205, 207, 208, 209, 210, 213, 214, 215, 217, 221, 223, 225, 226, 227, 229, 230, 231, 232, 234, 236, 239, 250, 252, 255, 259, 260, 262, 263, 264, 265, 266], "ndim": [0, 188, 192, 236, 249, 252, 253], "devic": [0, 5, 15, 26, 27, 59, 60, 63, 92, 93, 98, 103, 104, 105, 111, 113, 114, 116, 123, 147, 148, 156, 179, 180, 190, 191, 192, 193, 195, 207, 213, 216, 222, 233, 249, 259, 263, 265], "dtype": [0, 5, 15, 26, 60, 63, 73, 75, 88, 89, 92, 93, 98, 99, 103, 104, 105, 109, 111, 117, 123, 147, 148, 152, 158, 173, 190, 191, 192, 202, 205, 207, 213, 219, 255, 263, 264, 265], "all": [0, 5, 15, 19, 23, 26, 60, 63, 87, 91, 98, 100, 103, 112, 116, 142, 159, 165, 176, 178, 179, 180, 186, 188, 192, 193, 205, 207, 208, 210, 211, 212, 213, 214, 215, 217, 221, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 234, 236, 248, 250, 251, 257, 258, 259, 262, 263, 265, 266], "thi": [0, 1, 5, 7, 15, 19, 26, 34, 58, 59, 63, 71, 78, 97, 102, 103, 108, 112, 116, 117, 123, 126, 129, 130, 131, 132, 137, 145, 151, 155, 156, 170, 171, 174, 182, 183, 184, 185, 187, 192, 193, 200, 202, 205, 207, 208, 209, 210, 211, 212, 213, 214, 215, 217, 218, 219, 220, 221, 223, 224, 226, 227, 230, 231, 232, 234, 249, 250, 251, 252, 258, 259, 260, 262, 264, 265, 266], "return": [0, 5, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 195, 200, 207, 208, 209, 211, 213, 214, 217, 219, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 243, 244, 245, 247, 248, 249, 250, 251, 252, 253, 255, 257, 259, 263, 265], "tupl": [0, 1, 13, 14, 26, 27, 32, 49, 57, 74, 78, 92, 100, 104, 116, 117, 135, 137, 139, 141, 145, 147, 149, 152, 157, 159, 169, 170, 171, 173, 177, 178, 182, 183, 184, 186, 187, 190, 193, 205, 239, 249, 250, 252, 254, 257, 263], "includ": [0, 1, 7, 9, 13, 14, 15, 16, 17, 20, 21, 23, 28, 30, 40, 41, 42, 43, 47, 51, 88, 108, 112, 116, 117, 119, 123, 133, 135, 137, 139, 152, 156, 167, 171, 173, 187, 192, 193, 202, 207, 208, 209, 210, 211, 212, 213, 214, 218, 243, 257, 259, 260, 262, 264, 265], "those": [0, 5, 7, 15, 23, 88, 91, 114, 116, 142, 145, 152, 156, 173, 202, 207, 210, 211, 214, 215, 217, 249, 252, 253, 255, 258, 259, 260, 263, 264, 265], "mean": [0, 26, 192, 205, 211, 213, 214, 219, 260, 263], "var": [0, 192], "std": [0, 192], "which": [0, 1, 5, 7, 8, 13, 14, 15, 16, 17, 18, 19, 26, 30, 40, 41, 44, 59, 60, 63, 75, 77, 78, 83, 88, 90, 92, 93, 96, 98, 99, 100, 102, 103, 104, 105, 108, 109, 112, 114, 115, 116, 123, 133, 135, 137, 139, 143, 145, 147, 148, 152, 155, 156, 159, 161, 166, 170, 171, 173, 174, 175, 179, 180, 182, 183, 184, 185, 186, 187, 188, 190, 191, 193, 207, 208, 209, 210, 211, 212, 213, 214, 215, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 236, 243, 251, 252, 253, 255, 257, 258, 259, 260, 263, 264, 265], "some": [0, 97, 102, 114, 116, 126, 193, 208, 209, 210, 211, 214, 219, 263, 265, 266], "common": [0, 193, 202, 205, 214, 217, 218, 259, 263, 264, 265], "librari": [0, 5, 7, 26, 51, 57, 58, 59, 60, 63, 91, 97, 102, 103, 112, 114, 116, 117, 123, 126, 129, 130, 131, 132, 135, 136, 137, 139, 140, 145, 156, 161, 171, 176, 182, 183, 184, 185, 187, 192, 193, 205, 207, 208, 209, 210, 211, 212, 213, 214, 215, 217, 218, 219, 235, 239, 240, 249, 251, 258, 259, 260, 263, 264, 265, 266], "g": [0, 5, 9, 19, 20, 26, 47, 51, 57, 77, 88, 90, 91, 103, 108, 110, 116, 117, 123, 135, 139, 142, 145, 152, 153, 156, 158, 160, 173, 178, 182, 183, 184, 185, 193, 200, 202, 207, 208, 209, 210, 211, 212, 213, 214, 217, 225, 229, 230, 231, 232, 234, 239, 240, 243, 250, 252, 253, 255, 257, 258, 259, 260, 263, 264, 265], "numpi": [0, 19, 63, 193, 205, 210, 211, 213, 214, 259, 263, 264, 265, 266], "scalar": [0, 2, 49, 60, 192, 193, 207, 217, 257, 265], "valu": [0, 1, 2, 5, 7, 9, 10, 11, 12, 15, 16, 17, 18, 20, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 37, 39, 41, 43, 49, 51, 57, 58, 60, 61, 62, 63, 64, 65, 66, 76, 77, 78, 85, 86, 87, 88, 89, 90, 91, 92, 94, 95, 97, 98, 99, 101, 102, 104, 105, 106, 107, 108, 112, 114, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 135, 136, 137, 139, 140, 142, 144, 145, 146, 147, 151, 152, 155, 156, 160, 161, 162, 163, 164, 165, 166, 167, 171, 173, 174, 175, 176, 181, 182, 183, 184, 185, 187, 188, 190, 192, 200, 202, 205, 207, 209, 211, 212, 213, 217, 219, 222, 225, 229, 230, 231, 232, 233, 234, 235, 239, 240, 241, 243, 244, 245, 248, 249, 250, 251, 252, 253, 255, 257, 259, 263, 265], "rational": [0, 7, 88, 152, 173, 193, 213, 214, 255, 258, 260, 263], "alwai": [0, 12, 26, 42, 60, 63, 99, 103, 142, 157, 193, 205, 210, 211, 214, 239], "necessari": [0, 26, 60, 91, 103, 142, 157, 178, 193, 211, 263], "acceler": [0, 5, 108, 156, 205, 213], "where": [0, 1, 7, 13, 14, 15, 26, 47, 57, 65, 86, 87, 90, 91, 95, 97, 98, 102, 104, 105, 125, 126, 127, 138, 142, 145, 149, 151, 156, 161, 162, 164, 165, 170, 171, 175, 176, 178, 186, 187, 188, 192, 193, 202, 208, 210, 213, 214, 217, 221, 223, 225, 226, 227, 229, 230, 231, 232, 234, 235, 236, 239, 240, 241, 243, 245, 248, 249, 250, 251, 252, 253, 255, 259, 263, 264, 265], "non": [0, 1, 7, 13, 14, 16, 17, 63, 129, 130, 131, 132, 135, 137, 139, 145, 152, 171, 177, 187, 188, 193, 202, 207, 208, 214, 221, 223, 226, 227, 230, 231, 232, 234, 236, 237, 239, 243, 245, 252, 257, 265], "could": [0, 26, 182, 183, 184, 185, 205, 211, 218, 259, 263, 265], "forc": 0, "synchron": [0, 26, 59, 156, 263], "delai": [0, 24, 25, 29, 34, 35, 205, 217, 263], "execut": [0, 202, 205, 214, 216, 218, 263, 265], "model": [0, 57, 58, 91, 142, 210, 217, 265], "repres": [0, 8, 11, 12, 23, 24, 25, 26, 29, 34, 35, 62, 66, 87, 91, 102, 138, 142, 165, 175, 176, 207, 209, 213, 214, 250, 264, 265], "futur": [0, 26, 103, 206, 210, 211, 214, 218, 219, 239, 240, 261, 263, 265], "python": [0, 2, 5, 7, 24, 25, 26, 29, 34, 35, 49, 60, 102, 103, 155, 192, 193, 205, 207, 210, 213, 215, 217, 218, 219, 260, 262, 263, 264], "x": [0, 1, 5, 7, 9, 10, 11, 13, 14, 16, 17, 18, 20, 26, 61, 62, 63, 64, 65, 66, 68, 74, 76, 77, 79, 85, 86, 87, 88, 90, 93, 95, 96, 97, 100, 101, 103, 105, 110, 118, 119, 120, 124, 125, 126, 127, 130, 134, 135, 137, 139, 141, 143, 145, 148, 149, 150, 152, 153, 154, 156, 157, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 173, 174, 175, 176, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 191, 193, 210, 211, 219, 220, 221, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 234, 235, 237, 238, 239, 240, 241, 243, 244, 245, 246, 248, 249, 250, 251, 252, 253, 255, 257, 259, 263, 265], "__pos__": [0, 192, 207], "po": 0, "__neg__": [0, 192, 207], "neg": [0, 13, 14, 15, 44, 47, 65, 78, 88, 90, 91, 96, 98, 100, 102, 119, 124, 126, 142, 151, 155, 159, 163, 167, 174, 177, 188, 192, 193, 207, 210, 221, 223, 225, 226, 227, 229, 230, 231, 232, 234, 236, 257, 263], "x1": [0, 7, 12, 40, 65, 67, 69, 70, 71, 72, 77, 85, 91, 94, 102, 106, 107, 108, 121, 122, 128, 129, 131, 132, 133, 136, 140, 142, 144, 146, 151, 155, 161, 172, 177, 188, 189, 207, 236, 242, 247, 251, 254, 256], "x2": [0, 7, 12, 40, 65, 67, 69, 70, 71, 72, 85, 91, 94, 102, 106, 107, 108, 121, 122, 128, 129, 131, 132, 133, 136, 140, 142, 144, 146, 151, 155, 161, 172, 177, 188, 189, 207, 236, 242, 247, 251, 254, 256], "__add__": [0, 50, 192, 207], "add": [0, 7, 21, 88, 172, 173, 192, 193, 207, 208, 209, 214, 255], "__sub__": [0, 192, 207], "sub": [0, 193], "__mul__": [0, 192, 207], "mul": 0, "__truediv__": [0, 192, 207], "truediv": 0, "__floordiv__": [0, 192], "floordiv": 0, "__mod__": [0, 192], "mod": 0, "__pow__": [0, 192, 207], "pow": [0, 47, 192, 207, 209], "should": [0, 1, 5, 7, 9, 10, 11, 12, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 29, 30, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 50, 51, 52, 55, 57, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 76, 77, 79, 85, 86, 87, 88, 90, 91, 95, 96, 97, 99, 101, 102, 103, 106, 107, 108, 110, 114, 116, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 135, 136, 137, 138, 139, 140, 142, 143, 144, 150, 151, 152, 153, 154, 155, 157, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 171, 172, 173, 175, 176, 177, 179, 180, 181, 182, 183, 184, 185, 187, 188, 193, 200, 207, 208, 209, 210, 213, 214, 215, 219, 221, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 234, 235, 236, 237, 239, 240, 241, 243, 244, 245, 248, 249, 250, 251, 252, 253, 255, 257, 258, 259, 263, 265, 266], "defin": [0, 5, 12, 23, 30, 41, 49, 60, 65, 79, 91, 102, 104, 105, 116, 123, 135, 136, 137, 139, 140, 141, 142, 155, 162, 167, 168, 171, 179, 180, 187, 188, 192, 195, 200, 207, 209, 210, 219, 223, 224, 227, 228, 231, 234, 235, 239, 240, 241, 248, 249, 251, 259, 264, 265, 266], "real": [0, 5, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 24, 25, 29, 30, 31, 33, 35, 37, 39, 41, 44, 51, 60, 61, 62, 63, 64, 65, 66, 76, 77, 85, 86, 87, 88, 91, 92, 94, 95, 97, 98, 99, 101, 102, 104, 106, 107, 108, 114, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 135, 136, 137, 139, 140, 142, 143, 144, 145, 146, 147, 148, 151, 152, 155, 160, 161, 162, 163, 164, 165, 166, 167, 171, 173, 175, 176, 181, 187, 188, 190, 192, 202, 207, 210, 222, 225, 229, 230, 231, 232, 233, 234, 235, 239, 240, 241, 243, 245, 248, 249, 250, 251, 252, 253, 255, 257, 260], "data": [0, 1, 2, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76, 77, 78, 79, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 112, 114, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 157, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 187, 188, 189, 190, 191, 192, 195, 202, 205, 208, 210, 211, 214, 216, 217, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 243, 244, 245, 247, 248, 249, 250, 251, 252, 253, 255, 257, 259, 260, 261, 262, 263, 266], "type": [0, 2, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 55, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76, 77, 78, 79, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 114, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 187, 188, 189, 190, 191, 192, 193, 195, 205, 208, 210, 211, 213, 215, 216, 217, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 243, 244, 245, 247, 248, 249, 250, 251, 252, 253, 255, 257, 259, 260, 263, 264], "__matmul__": [0, 192, 207], "matmul": [0, 40, 192, 202, 207, 259], "The": [0, 1, 5, 7, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 22, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 55, 57, 58, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 76, 77, 78, 79, 85, 86, 87, 88, 90, 91, 94, 95, 97, 100, 101, 102, 103, 106, 107, 108, 110, 111, 112, 114, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 139, 140, 141, 142, 143, 144, 145, 146, 149, 150, 151, 152, 153, 154, 155, 156, 160, 161, 162, 163, 164, 165, 166, 167, 168, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 187, 188, 189, 193, 202, 205, 207, 208, 209, 211, 212, 213, 214, 217, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 243, 244, 245, 247, 248, 249, 250, 251, 252, 253, 255, 257, 258, 259, 260, 262, 263, 264, 265, 266], "__invert__": [0, 192], "inv": [0, 207, 259], "invert": [0, 68, 241, 244, 251], "__inv__": 0, "__and__": [0, 192], "__or__": [0, 192], "__xor__": [0, 192], "xor": [0, 72, 132], "__lshift__": [0, 192], "lshift": 0, "__rshift__": [0, 192], "rshift": 0, "integ": [0, 5, 9, 13, 14, 15, 20, 22, 26, 29, 30, 34, 35, 36, 38, 41, 44, 45, 47, 48, 51, 52, 60, 67, 68, 69, 70, 71, 72, 76, 77, 88, 90, 91, 101, 102, 104, 105, 109, 112, 116, 117, 123, 135, 137, 139, 143, 151, 152, 155, 156, 158, 160, 161, 171, 173, 174, 181, 187, 188, 192, 193, 207, 209, 210, 221, 223, 225, 226, 227, 229, 230, 231, 232, 234, 236, 244, 245, 255, 257, 263], "boolean": [0, 5, 22, 24, 25, 26, 29, 35, 36, 43, 45, 52, 57, 60, 63, 67, 68, 70, 72, 88, 89, 103, 104, 105, 112, 116, 117, 123, 129, 130, 131, 132, 145, 192, 202, 207], "__lt__": [0, 192, 207], "lt": 0, "__le__": [0, 192, 207], "le": 0, "__gt__": [0, 192, 207], "gt": [0, 249, 252], "__ge__": [0, 192, 207], "ge": 0, "__eq__": [0, 192, 207, 214], "eq": 0, "__ne__": [0, 192, 207], "ne": 0, "ar": [0, 1, 5, 7, 15, 16, 17, 19, 23, 24, 25, 26, 27, 29, 34, 35, 40, 49, 55, 58, 60, 77, 85, 86, 89, 90, 91, 95, 98, 99, 100, 102, 103, 108, 115, 116, 123, 129, 130, 131, 132, 133, 142, 145, 151, 156, 159, 160, 164, 175, 176, 178, 182, 184, 188, 193, 202, 205, 207, 208, 209, 210, 211, 212, 213, 214, 215, 217, 218, 219, 221, 222, 223, 224, 226, 227, 228, 230, 231, 232, 233, 234, 236, 239, 240, 245, 248, 249, 252, 258, 259, 260, 263, 264, 265, 266], "onli": [0, 1, 5, 7, 16, 17, 23, 26, 40, 57, 58, 63, 100, 103, 108, 114, 116, 117, 123, 129, 130, 131, 132, 133, 137, 171, 187, 188, 192, 193, 202, 205, 207, 208, 210, 211, 213, 214, 215, 217, 219, 224, 236, 241, 248, 249, 251, 259, 260, 263, 264, 265, 266], "other": [0, 5, 21, 22, 23, 26, 28, 30, 31, 33, 37, 38, 39, 40, 41, 42, 43, 45, 47, 48, 50, 51, 52, 63, 89, 91, 97, 102, 103, 126, 141, 142, 171, 187, 193, 195, 205, 207, 209, 210, 211, 212, 213, 214, 215, 219, 236, 248, 258, 259, 262, 263, 265], "ani": [0, 1, 9, 10, 11, 23, 24, 25, 26, 28, 29, 34, 35, 43, 59, 61, 62, 66, 89, 90, 94, 108, 118, 119, 146, 167, 192, 193, 202, 207, 210, 211, 213, 219, 252, 260, 262, 263, 266], "For": [0, 1, 5, 7, 9, 10, 11, 12, 16, 17, 18, 20, 24, 25, 26, 29, 30, 31, 33, 35, 37, 39, 41, 44, 57, 58, 61, 62, 64, 65, 66, 76, 79, 85, 86, 87, 88, 91, 94, 95, 97, 101, 102, 106, 107, 108, 114, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 135, 136, 138, 139, 140, 142, 143, 144, 146, 151, 152, 154, 155, 156, 160, 161, 162, 163, 164, 165, 166, 167, 168, 170, 173, 175, 176, 181, 182, 183, 184, 185, 193, 200, 205, 209, 210, 212, 214, 217, 222, 231, 233, 250, 252, 253, 255, 263, 265, 266], "backward": [0, 13, 14, 16, 17, 18, 31, 33, 37, 39, 90, 106, 107, 121, 122, 123, 135, 136, 139, 140, 155, 166, 188, 193, 207, 210, 211, 215, 221, 223, 225, 226, 227, 229, 230, 231, 232, 234, 236, 263], "compat": [0, 1, 12, 13, 14, 16, 17, 18, 21, 22, 26, 28, 30, 31, 33, 37, 38, 39, 40, 41, 42, 43, 45, 47, 48, 49, 50, 51, 52, 65, 67, 69, 70, 71, 72, 74, 77, 85, 91, 94, 102, 106, 107, 108, 121, 122, 123, 128, 129, 131, 132, 133, 135, 136, 137, 139, 140, 142, 144, 146, 151, 152, 155, 156, 157, 166, 171, 172, 173, 187, 188, 189, 202, 207, 210, 211, 215, 236, 243, 245, 248, 251, 257, 263, 265], "mai": [0, 5, 7, 15, 16, 17, 18, 23, 26, 28, 31, 33, 37, 39, 43, 51, 57, 58, 59, 60, 89, 90, 91, 94, 102, 103, 106, 107, 108, 111, 116, 117, 121, 122, 123, 129, 130, 131, 132, 135, 136, 137, 139, 140, 142, 145, 146, 156, 157, 161, 166, 171, 176, 182, 183, 184, 185, 187, 192, 193, 200, 202, 205, 208, 209, 210, 211, 212, 213, 214, 215, 217, 218, 219, 239, 249, 250, 252, 258, 259, 263, 264, 265], "complex": [0, 5, 9, 10, 11, 12, 13, 14, 16, 17, 18, 20, 21, 24, 25, 29, 31, 33, 35, 37, 39, 40, 42, 43, 44, 46, 47, 50, 51, 60, 61, 62, 63, 64, 66, 79, 86, 87, 88, 91, 94, 95, 97, 98, 99, 104, 105, 106, 107, 108, 110, 114, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 133, 135, 136, 138, 139, 140, 142, 143, 145, 146, 147, 148, 150, 151, 152, 153, 160, 162, 164, 165, 166, 167, 168, 172, 173, 175, 176, 177, 182, 183, 184, 185, 188, 202, 209, 213, 214, 216, 217, 221, 223, 225, 226, 227, 229, 230, 231, 232, 234, 235, 236, 237, 239, 240, 241, 243, 244, 245, 247, 248, 249, 250, 251, 252, 253, 255, 257, 259, 263, 264], "howev": [0, 5, 16, 17, 18, 31, 33, 37, 39, 57, 88, 102, 106, 107, 108, 117, 121, 122, 123, 135, 136, 139, 140, 156, 161, 166, 174, 175, 176, 205, 208, 209, 210, 211, 212, 214, 259, 260, 263, 265], "inequ": [0, 16, 17, 18, 31, 33, 37, 39, 106, 107, 121, 122, 135, 136, 139, 140, 166], "unspecifi": [0, 5, 10, 11, 16, 17, 18, 30, 31, 33, 37, 39, 41, 47, 51, 60, 62, 66, 77, 78, 87, 91, 95, 97, 102, 104, 105, 106, 107, 121, 122, 123, 135, 136, 139, 140, 151, 155, 161, 165, 166, 167, 170, 174, 176, 193, 200, 202, 207, 223, 224, 227, 228, 231, 234, 239, 240, 263], "thu": [0, 5, 16, 17, 18, 30, 31, 33, 37, 39, 41, 47, 57, 60, 71, 77, 102, 104, 105, 106, 107, 121, 122, 123, 135, 136, 139, 140, 151, 155, 161, 166, 175, 176, 193, 200, 209, 210, 223, 224, 227, 228, 231, 234, 239, 240, 252, 259], "depend": [0, 5, 9, 10, 11, 16, 17, 18, 20, 26, 29, 31, 33, 37, 39, 44, 47, 51, 57, 58, 59, 61, 62, 63, 64, 65, 66, 77, 86, 87, 91, 95, 97, 106, 107, 112, 121, 122, 123, 124, 125, 126, 127, 142, 143, 151, 161, 164, 165, 166, 175, 176, 189, 200, 202, 209, 210, 213, 216, 217, 219, 239, 240, 249, 250, 251, 252, 259, 263, 265, 266], "see": [0, 5, 10, 11, 12, 13, 14, 16, 17, 18, 21, 22, 26, 28, 30, 31, 33, 34, 37, 38, 39, 40, 41, 42, 43, 45, 47, 48, 49, 50, 51, 52, 53, 59, 61, 62, 64, 65, 66, 67, 69, 70, 71, 72, 74, 77, 85, 91, 94, 97, 102, 103, 105, 106, 107, 108, 111, 112, 115, 121, 122, 124, 126, 128, 129, 131, 132, 133, 135, 136, 137, 139, 140, 142, 144, 145, 146, 151, 152, 154, 155, 156, 158, 162, 166, 167, 168, 171, 172, 173, 182, 183, 184, 185, 187, 188, 189, 192, 193, 202, 204, 205, 208, 210, 212, 213, 214, 219, 236, 243, 245, 248, 251, 257, 258, 263, 264, 265, 266], "order": [0, 5, 7, 16, 17, 18, 19, 26, 31, 33, 37, 39, 55, 60, 63, 65, 89, 90, 100, 102, 103, 106, 107, 121, 122, 135, 136, 139, 140, 145, 156, 161, 166, 175, 176, 177, 182, 183, 184, 185, 193, 200, 202, 207, 209, 212, 213, 215, 230, 231, 239, 240, 243, 252, 253, 257, 259, 260, 263, 264], "chang": [0, 1, 9, 10, 11, 12, 13, 14, 20, 21, 24, 25, 26, 29, 34, 35, 40, 42, 43, 44, 46, 47, 50, 51, 59, 60, 61, 62, 63, 64, 66, 86, 87, 91, 94, 95, 97, 98, 99, 103, 104, 105, 118, 119, 120, 123, 124, 125, 126, 127, 133, 135, 138, 139, 142, 143, 145, 146, 147, 148, 150, 151, 152, 157, 160, 162, 164, 165, 167, 168, 172, 173, 174, 175, 176, 177, 182, 183, 184, 185, 188, 205, 221, 222, 223, 225, 226, 227, 230, 231, 233, 235, 236, 237, 239, 240, 241, 243, 244, 245, 247, 248, 249, 250, 251, 252, 253, 255, 257, 260, 263, 265, 266], "shape": [0, 1, 18, 40, 55, 63, 73, 74, 78, 88, 90, 92, 93, 96, 100, 104, 105, 112, 133, 134, 138, 147, 148, 157, 159, 161, 166, 170, 174, 177, 178, 179, 180, 186, 188, 190, 191, 192, 207, 216, 217, 219, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 238, 239, 240, 241, 243, 244, 245, 247, 248, 249, 250, 251, 252, 253, 255, 263, 265], "result": [0, 1, 5, 9, 10, 11, 12, 13, 14, 15, 16, 17, 20, 21, 22, 24, 25, 28, 29, 30, 31, 33, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 76, 77, 79, 85, 86, 87, 91, 94, 95, 97, 101, 102, 106, 107, 108, 110, 118, 119, 120, 121, 122, 124, 125, 126, 127, 128, 129, 130, 131, 132, 135, 136, 137, 139, 140, 142, 143, 144, 146, 150, 151, 152, 153, 154, 155, 156, 158, 160, 161, 162, 163, 164, 165, 167, 168, 170, 171, 172, 173, 175, 176, 177, 181, 182, 187, 193, 200, 202, 207, 209, 210, 211, 217, 235, 236, 238, 243, 244, 250, 251, 257, 263, 264, 265, 266], "promot": [0, 1, 5, 10, 11, 12, 21, 22, 30, 40, 41, 42, 44, 45, 47, 49, 50, 51, 52, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 75, 78, 85, 86, 87, 91, 95, 97, 102, 105, 108, 123, 124, 125, 126, 127, 128, 133, 136, 137, 140, 142, 143, 151, 154, 155, 158, 164, 165, 167, 168, 170, 171, 172, 175, 176, 177, 187, 188, 189, 192, 207, 235, 236, 241, 243, 244, 245, 247, 248, 249, 250, 251, 257, 259], "rule": [0, 5, 7, 10, 11, 12, 21, 22, 30, 40, 41, 42, 44, 45, 47, 49, 50, 51, 52, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 75, 78, 85, 86, 87, 88, 91, 95, 97, 102, 104, 105, 108, 123, 124, 125, 126, 127, 128, 133, 136, 140, 142, 143, 151, 154, 155, 158, 162, 164, 165, 167, 168, 170, 172, 175, 176, 177, 188, 189, 192, 193, 207, 210, 213, 235, 236, 241, 243, 244, 245, 247, 248, 249, 250, 251, 257, 259, 263, 265], "broadcast": [0, 12, 13, 14, 16, 17, 21, 22, 28, 30, 31, 33, 37, 38, 39, 40, 41, 42, 43, 45, 47, 48, 49, 50, 51, 52, 65, 67, 69, 70, 71, 72, 73, 74, 77, 85, 91, 94, 102, 106, 107, 108, 121, 122, 128, 129, 131, 132, 133, 135, 136, 137, 139, 140, 142, 144, 146, 151, 152, 155, 156, 171, 172, 173, 177, 187, 188, 189, 192, 207, 236, 243, 245, 248, 251, 257, 263], "same": [0, 5, 7, 9, 12, 15, 18, 19, 20, 26, 32, 36, 38, 40, 41, 46, 48, 50, 55, 59, 63, 68, 73, 74, 76, 77, 78, 79, 88, 90, 91, 93, 96, 99, 100, 101, 102, 103, 105, 110, 133, 134, 135, 137, 138, 139, 141, 142, 144, 148, 149, 150, 151, 152, 153, 155, 156, 157, 159, 160, 161, 162, 166, 169, 170, 171, 172, 173, 174, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 191, 193, 202, 205, 207, 210, 211, 213, 214, 219, 221, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 234, 235, 237, 238, 239, 241, 244, 248, 249, 250, 252, 253, 255, 258, 259, 263, 265], "behavior": [0, 5, 47, 49, 59, 60, 63, 77, 91, 102, 104, 105, 108, 123, 142, 151, 155, 161, 174, 182, 183, 184, 185, 192, 193, 195, 202, 205, 207, 209, 210, 217, 218, 223, 224, 227, 228, 231, 234, 259, 260, 263, 264, 265, 266], "special": [0, 9, 10, 11, 12, 20, 21, 24, 25, 28, 29, 30, 35, 41, 42, 43, 47, 51, 61, 62, 64, 65, 66, 76, 85, 86, 87, 88, 91, 94, 95, 97, 101, 102, 108, 118, 119, 120, 124, 125, 126, 127, 128, 135, 136, 137, 139, 140, 142, 144, 146, 151, 152, 154, 155, 160, 162, 163, 164, 165, 167, 168, 171, 173, 175, 176, 181, 187, 207, 208, 210, 250, 255], "case": [0, 1, 5, 7, 9, 10, 11, 12, 15, 20, 21, 24, 25, 26, 28, 29, 30, 35, 41, 42, 43, 47, 51, 60, 61, 62, 64, 65, 66, 76, 85, 86, 87, 88, 91, 94, 95, 97, 101, 102, 103, 108, 118, 119, 120, 124, 125, 126, 127, 128, 135, 136, 137, 138, 139, 140, 142, 144, 146, 151, 152, 154, 155, 160, 162, 163, 164, 165, 167, 168, 171, 173, 175, 176, 181, 187, 193, 205, 207, 208, 209, 210, 211, 214, 215, 217, 249, 250, 252, 255, 259, 261, 263, 266], "its": [0, 5, 26, 40, 73, 91, 99, 133, 142, 157, 159, 209, 210, 213, 214, 258, 263, 264, 265], "respect": [0, 9, 12, 20, 21, 22, 28, 30, 31, 33, 37, 38, 39, 41, 42, 43, 45, 48, 50, 51, 52, 65, 67, 69, 70, 71, 72, 77, 87, 91, 94, 102, 106, 107, 108, 114, 121, 122, 123, 128, 129, 131, 132, 136, 138, 140, 141, 142, 144, 146, 155, 165, 172, 175, 176, 177, 182, 183, 188, 207, 209, 212, 214, 239, 249, 252], "binari": [0, 5, 67, 70, 72, 175, 176, 208], "two": [0, 1, 5, 15, 19, 40, 55, 65, 71, 98, 103, 133, 134, 138, 160, 177, 179, 180, 182, 183, 184, 185, 188, 193, 202, 213, 214, 217, 218, 223, 224, 227, 228, 231, 234, 235, 237, 238, 239, 240, 241, 243, 244, 245, 247, 248, 249, 250, 251, 252, 253, 255, 259, 263, 264, 265, 266], "operand": [0, 1, 9, 10, 11, 12, 24, 25, 29, 35, 61, 62, 64, 65, 66, 76, 85, 86, 87, 88, 91, 94, 95, 97, 101, 102, 108, 118, 119, 120, 124, 125, 126, 127, 128, 135, 136, 139, 140, 142, 144, 146, 151, 152, 154, 155, 160, 162, 163, 164, 165, 167, 168, 173, 175, 176, 181, 202, 207, 209, 250, 255], "assign": [0, 211], "exampl": [0, 5, 12, 23, 26, 116, 117, 170, 192, 193, 205, 210, 211, 212, 214, 217, 218, 219, 255, 259, 263, 265, 266], "after": [0, 1, 26, 40, 133, 167, 178], "addit": [0, 5, 7, 12, 26, 50, 59, 88, 116, 172, 192, 193, 202, 208, 210, 213, 259, 263, 264, 266], "modifi": [0, 26, 211, 262], "equal": [0, 1, 9, 10, 11, 18, 20, 21, 22, 26, 28, 30, 31, 33, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 58, 61, 62, 63, 64, 65, 66, 69, 71, 77, 87, 89, 95, 97, 98, 104, 105, 108, 117, 119, 124, 125, 126, 127, 137, 145, 146, 147, 148, 151, 152, 160, 165, 166, 167, 171, 173, 174, 176, 177, 178, 182, 183, 184, 185, 187, 192, 193, 200, 207, 210, 214, 221, 223, 225, 226, 227, 229, 230, 231, 232, 234, 236, 238, 244, 245, 248, 249, 250, 251, 255, 263], "equival": [0, 20, 21, 22, 28, 30, 31, 33, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 71, 102, 108, 129, 130, 131, 132, 155, 160, 174, 193, 202, 210, 211, 245, 248, 251, 257, 263], "discuss": [0, 94, 146, 207, 213, 214, 218, 263, 264, 265], "copi": [0, 1, 26, 59, 60, 63, 103, 157, 166, 207, 208, 213, 214, 216, 262, 263], "view": [0, 103, 216], "behaviour": [0, 216, 263, 265], "mutabl": [0, 216], "via": [0, 26, 102, 103, 174, 193, 208, 213, 214, 218, 220, 248, 258, 259, 260, 263], "__iadd__": 0, "__isub__": 0, "__imul__": 0, "__itruediv__": 0, "__ifloordiv__": 0, "__ipow__": 0, "__imod__": 0, "__imatmul__": 0, "__iand__": 0, "__ior__": 0, "__ixor__": 0, "__ilshift__": 0, "__irshift__": 0, "appli": [0, 12, 77, 78, 85, 91, 142, 158, 160, 170, 177, 193, 202, 205, 210, 221, 223, 226, 227, 230, 231, 232, 234, 245, 248, 259, 263, 265], "match": [0, 1, 5, 9, 20, 26, 63, 102, 155, 177, 182, 183, 215, 225, 229, 230, 231, 232, 234, 239, 240, 243, 257, 265], "op": [0, 202], "__radd__": 0, "__rsub__": 0, "__rmul__": 0, "__rtruediv__": 0, "__rfloordiv__": 0, "__rpow__": 0, "__rmod__": 0, "__rmatmul__": 0, "__rand__": 0, "__ror__": 0, "__rxor__": 0, "__rlshift__": 0, "__rrshift__": 0, "arrai": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 83, 85, 86, 87, 88, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 194, 195, 196, 197, 198, 199, 200, 201, 203, 204, 205, 207, 208, 209, 210, 211, 212, 213, 214, 215, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 264, 266], "refer": [1, 13, 14, 90, 97, 98, 126, 171, 177, 178, 187, 188, 193, 210, 211, 219, 221, 223, 225, 226, 227, 229, 230, 231, 232, 234, 236, 251], "automat": [1, 263], "implicit": [1, 213, 214, 217, 263], "expans": [1, 263], "size": [1, 13, 14, 88, 90, 96, 123, 145, 159, 169, 174, 177, 188, 192, 193, 212, 218, 221, 223, 225, 226, 227, 229, 230, 231, 232, 234, 236, 238, 247, 249, 252, 263], "without": [1, 7, 26, 57, 103, 114, 116, 145, 156, 157, 182, 183, 184, 185, 205, 208, 209, 212, 262, 263, 265], "purpos": [1, 5, 97, 108, 126, 205, 250, 259, 261, 262, 265], "make": [1, 7, 205, 208, 209, 211, 213, 217, 221, 223, 225, 226, 227, 229, 230, 231, 232, 234, 258, 260, 263], "differ": [1, 12, 26, 49, 50, 77, 78, 88, 90, 91, 99, 102, 103, 142, 152, 170, 172, 173, 193, 205, 211, 214, 215, 217, 228, 239, 249, 250, 252, 255, 259, 263, 264, 265], "element": [1, 9, 10, 11, 12, 13, 14, 15, 20, 21, 22, 24, 25, 28, 29, 30, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 54, 58, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 76, 77, 79, 85, 86, 87, 88, 90, 91, 94, 95, 97, 98, 100, 101, 102, 104, 105, 106, 107, 108, 110, 118, 119, 120, 121, 122, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 135, 136, 137, 139, 140, 142, 143, 144, 145, 146, 150, 151, 152, 153, 154, 155, 156, 157, 159, 160, 161, 162, 163, 164, 165, 167, 168, 169, 171, 172, 173, 174, 175, 176, 178, 179, 180, 181, 182, 183, 184, 185, 187, 189, 192, 193, 207, 209, 221, 223, 225, 226, 227, 229, 230, 231, 232, 234, 236, 239, 248, 249, 250, 252, 255, 263], "wise": [1, 9, 10, 12, 20, 21, 22, 28, 30, 31, 33, 36, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 61, 64, 65, 67, 68, 69, 70, 71, 72, 77, 79, 85, 91, 94, 102, 106, 107, 108, 110, 121, 122, 128, 129, 130, 131, 132, 136, 140, 142, 144, 146, 151, 153, 154, 155, 172, 192, 207, 209, 263], "oper": [1, 12, 19, 24, 26, 34, 40, 57, 58, 59, 61, 64, 71, 86, 88, 91, 102, 125, 127, 133, 142, 151, 152, 154, 155, 158, 164, 168, 173, 175, 177, 192, 193, 199, 202, 207, 210, 211, 212, 213, 214, 255, 259, 260, 263, 264, 265], "facilit": [1, 200, 205], "user": [1, 7, 26, 111, 176, 205, 208, 209, 211, 214, 218, 259, 263, 264, 265], "ergonom": 1, "encourag": [1, 263, 264], "avoid": [1, 9, 63, 91, 97, 102, 108, 126, 142, 157, 208, 211, 214, 217, 259, 263, 265], "unnecessari": [1, 259], "can": [1, 7, 26, 60, 75, 111, 115, 117, 193, 202, 205, 208, 210, 211, 213, 214, 219, 248, 249, 252, 258, 259, 263, 264, 265, 266], "potenti": [1, 26, 97, 112, 126, 156, 211, 263], "enabl": [1, 26, 103, 214, 218, 219, 263], "more": [1, 5, 7, 15, 19, 26, 40, 58, 60, 63, 73, 88, 97, 100, 102, 126, 133, 145, 151, 156, 174, 182, 183, 184, 185, 193, 202, 205, 208, 209, 210, 211, 212, 213, 214, 215, 218, 219, 223, 224, 227, 228, 231, 234, 250, 259, 260, 263, 264, 266], "memori": [1, 26, 60, 103, 205, 211, 212, 214, 263, 265], "effici": [1, 205, 211], "through": [1, 60, 65, 258, 260, 264, 265], "vector": [1, 40, 133, 138, 188, 236, 247, 252, 253, 257, 259, 263], "reduc": [1, 13, 14, 16, 17, 135, 137, 139, 152, 171, 173, 187, 193, 249, 252, 259, 264, 265], "consumpt": [1, 26, 264], "cach": 1, "local": [1, 214], "given": [1, 23, 90, 100, 123, 159, 161, 186, 202, 207, 210, 211, 214, 215, 219, 240, 250, 259, 260, 263, 265], "involv": [1, 12, 91, 102, 142, 151, 158, 202, 209, 210, 214, 218], "singleton": [1, 13, 14, 16, 17, 96, 135, 137, 139, 152, 169, 171, 173, 178, 187, 243, 257, 263], "whose": [1, 5, 9, 11, 19, 20, 26, 47, 55, 62, 66, 85, 86, 87, 98, 100, 103, 134, 151, 159, 163, 164, 165, 174, 175, 176, 177, 179, 180, 182, 183, 184, 193, 211, 225, 229, 230, 231, 232, 234, 235, 237, 238, 239, 240, 241, 243, 244, 245, 247, 248, 249, 250, 251, 252, 253, 255, 257, 263, 265], "one": [1, 15, 19, 26, 40, 51, 58, 60, 63, 73, 75, 88, 91, 96, 98, 100, 102, 103, 116, 117, 123, 133, 138, 142, 145, 147, 148, 156, 161, 169, 174, 182, 183, 184, 185, 188, 193, 205, 208, 210, 211, 213, 214, 217, 218, 219, 221, 223, 225, 226, 227, 228, 229, 230, 231, 232, 234, 247, 248, 249, 257, 259, 260, 263, 265], "virtual": 1, "repeat": [1, 192, 193, 207, 265], "across": [1, 5, 91, 102, 142, 176, 207, 209, 210, 214, 258, 263], "correspond": [1, 16, 17, 23, 47, 59, 65, 73, 77, 103, 112, 113, 114, 151, 157, 159, 161, 171, 177, 182, 183, 184, 185, 187, 188, 193, 207, 209, 223, 227, 231, 234, 236, 239, 243, 262, 263], "If": [1, 5, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 23, 24, 25, 26, 29, 34, 35, 40, 44, 47, 51, 55, 57, 59, 60, 61, 62, 63, 64, 65, 66, 74, 76, 77, 78, 85, 86, 87, 88, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 108, 112, 114, 116, 117, 118, 119, 120, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 151, 152, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 169, 170, 171, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 190, 191, 193, 208, 210, 214, 220, 221, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 234, 235, 236, 239, 240, 241, 243, 244, 245, 248, 249, 250, 251, 252, 255, 257, 258, 259, 263, 265], "unequ": 1, "lower": [1, 77, 98, 179, 235], "higher": [1, 5, 26, 90, 193, 208, 259, 264], "prepend": [1, 40, 90, 96, 133, 178], "until": [1, 26, 178], "store": [1, 26, 214, 255], "determin": [1, 10, 11, 12, 13, 14, 21, 22, 26, 30, 40, 41, 42, 44, 45, 47, 50, 51, 52, 61, 62, 64, 65, 66, 67, 69, 70, 71, 72, 75, 78, 85, 86, 87, 88, 90, 91, 95, 97, 102, 108, 118, 119, 120, 124, 125, 126, 127, 128, 133, 136, 140, 142, 143, 151, 154, 155, 163, 164, 165, 167, 168, 172, 174, 175, 176, 177, 182, 183, 184, 185, 188, 189, 202, 207, 210, 213, 214, 221, 223, 225, 226, 227, 229, 230, 231, 232, 234, 235, 236, 237, 238, 241, 243, 244, 245, 247, 248, 249, 250, 251, 255, 257, 259, 263], "let": [1, 9, 10, 11, 12, 62, 66, 85, 87, 88, 90, 94, 95, 97, 103, 118, 119, 120, 123, 124, 126, 137, 146, 152, 156, 161, 162, 165, 167, 171, 173, 176, 178, 187, 188, 193, 218, 221, 223, 225, 226, 227, 229, 230, 231, 232, 234, 235, 239, 240, 241, 249, 251, 252, 255], "b": [1, 9, 10, 11, 12, 57, 62, 66, 87, 91, 94, 95, 97, 102, 118, 119, 120, 123, 124, 126, 142, 146, 162, 165, 167, 170, 176, 188, 193, 207, 210, 211, 215, 248, 251, 265], "both": [1, 40, 44, 47, 51, 65, 77, 88, 91, 99, 102, 103, 108, 123, 133, 143, 151, 152, 173, 176, 177, 188, 193, 210, 211, 213, 217, 219, 236, 255, 259, 263, 264], "shape1": 1, "describ": [1, 5, 12, 88, 91, 94, 116, 117, 142, 146, 151, 152, 173, 195, 202, 210, 213, 217, 222, 233, 255, 263], "shape2": 1, "n1": [1, 90, 138], "len": [1, 138, 178], "n2": [1, 90, 138], "max": [1, 26, 77, 99, 109, 112, 178, 192, 193, 207, 243, 245, 248], "temporari": 1, "list": [1, 73, 78, 111, 115, 138, 170, 193, 205, 207, 214, 263, 265], "length": [1, 15, 108, 138, 157, 177, 193, 222, 224, 225, 228, 233, 252, 253], "while": [1, 102, 116, 123, 129, 130, 131, 132, 137, 141, 161, 171, 182, 183, 187, 192, 193, 200, 205, 207, 210, 211, 212, 214, 217, 248, 259, 264, 265, 266], "d1": 1, "els": [1, 26, 205, 264], "d2": 1, "set": [1, 18, 26, 49, 65, 103, 163, 166, 171, 179, 180, 182, 184, 185, 187, 192, 193, 207, 208, 209, 210, 211, 214, 215, 218, 219, 221, 223, 225, 226, 227, 229, 230, 231, 232, 234, 235, 239, 240, 241, 245, 248, 249, 251, 252, 258, 259, 263, 265, 266], "th": [1, 90, 98, 178, 193, 223, 227, 231, 234], "throw": 1, "except": [1, 7, 13, 14, 26, 74, 78, 88, 90, 98, 103, 123, 145, 156, 170, 174, 186, 193, 202, 205, 207, 209, 211, 214, 216, 217, 221, 223, 225, 226, 227, 229, 230, 231, 232, 234, 248, 260, 263, 264, 265], "demonstr": 1, "applic": [1, 26, 88, 152, 156, 173, 202, 255, 259, 263, 264], "4d": 1, "8": [1, 5, 7, 27, 178, 202, 205], "6": [1, 7, 178], "3d": 1, "7": [1, 7, 27, 219], "5": [1, 193, 263], "2d": 1, "1d": 1, "15": 1, "do": [1, 26, 91, 142, 155, 200, 205, 208, 210, 211, 213, 214, 215, 259, 260, 262, 263, 265, 266], "doe": [1, 15, 26, 103, 146, 174, 193, 202, 205, 208, 209, 210, 211, 212, 214, 215, 217, 219, 259, 263, 265, 266], "second": [1, 12, 65, 67, 69, 70, 71, 72, 94, 106, 107, 108, 121, 122, 128, 129, 131, 132, 133, 136, 140, 142, 144, 146, 151, 170, 172, 177, 182, 183, 184, 188, 189, 236, 239, 247, 249, 250, 252, 253, 263], "append": [1, 40, 69, 90, 96, 133, 238], "As": [1, 123, 151, 182, 183, 184, 185, 205, 213, 219, 265], "impli": [1, 182, 183, 184, 185, 262, 263], "__setitem__": [1, 174, 192, 207], "Such": [1, 209, 259], "right": [1, 69, 71, 108, 161, 167, 208, 252, 262], "hand": [1, 202], "left": [1, 5, 60, 69, 102, 104, 161, 174, 193, 202, 239, 240, 252, 263], "index": [1, 5, 16, 17, 18, 32, 34, 49, 57, 83, 98, 112, 114, 138, 141, 145, 161, 170, 174, 177, 182, 183, 184, 192, 207, 223, 227, 231, 234, 263, 265], "perform": [1, 5, 13, 14, 26, 40, 59, 60, 91, 108, 133, 142, 156, 177, 193, 208, 209, 210, 211, 212, 213, 221, 223, 226, 227, 228, 230, 231, 232, 234, 252, 253, 259, 263, 264, 265], "empti": [1, 13, 14, 15, 152, 173, 192, 193, 207, 255, 263], "ok": 1, "allow": [1, 24, 25, 26, 29, 34, 35, 114, 116, 151, 157, 177, 193, 207, 208, 209, 211, 214, 217, 218, 259, 265], "NOT": [1, 130, 262], "adher": [2, 7, 8, 192, 193, 205, 258, 263], "convent": [2, 7, 10, 11, 26, 40, 61, 62, 64, 65, 66, 88, 124, 126, 133, 151, 167, 192, 193, 200, 210, 214, 258, 259, 264], "each": [2, 9, 10, 11, 12, 20, 21, 22, 26, 28, 30, 31, 33, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 76, 77, 79, 85, 86, 87, 91, 94, 95, 97, 101, 102, 106, 107, 108, 110, 115, 118, 119, 120, 121, 122, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 136, 138, 140, 141, 142, 143, 144, 145, 146, 150, 151, 153, 154, 155, 156, 159, 160, 161, 162, 163, 164, 165, 167, 168, 170, 172, 175, 176, 177, 178, 181, 182, 183, 193, 205, 207, 209, 213, 217, 219, 231, 235, 236, 237, 241, 243, 244, 245, 248, 249, 250, 251, 252, 253, 258, 259, 263, 264, 265], "float": [2, 5, 9, 10, 11, 12, 13, 14, 15, 20, 21, 24, 25, 28, 29, 30, 31, 33, 34, 35, 37, 39, 40, 41, 42, 43, 44, 47, 49, 50, 51, 60, 61, 62, 63, 64, 65, 66, 76, 77, 79, 80, 81, 82, 84, 85, 86, 87, 88, 91, 92, 94, 95, 97, 98, 99, 101, 102, 104, 105, 108, 110, 114, 116, 117, 118, 119, 120, 123, 124, 125, 126, 127, 128, 133, 135, 136, 137, 139, 140, 142, 143, 144, 145, 146, 147, 148, 151, 152, 153, 154, 155, 158, 160, 161, 162, 163, 164, 165, 167, 168, 171, 172, 173, 175, 176, 177, 181, 182, 183, 184, 185, 187, 188, 190, 192, 200, 207, 209, 210, 217, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 239, 240, 241, 243, 244, 245, 248, 249, 250, 251, 252, 253, 255, 257, 259, 263, 264], "point": [2, 5, 9, 10, 11, 12, 13, 14, 15, 20, 24, 25, 26, 29, 34, 35, 40, 41, 42, 44, 47, 50, 51, 60, 61, 62, 63, 64, 65, 66, 76, 77, 79, 80, 81, 82, 84, 85, 86, 87, 88, 91, 92, 94, 95, 97, 98, 99, 101, 102, 104, 105, 108, 110, 114, 116, 117, 118, 119, 120, 123, 124, 125, 126, 127, 128, 133, 135, 136, 137, 139, 140, 142, 143, 144, 145, 146, 147, 148, 151, 152, 153, 154, 155, 158, 160, 161, 162, 163, 164, 165, 167, 168, 171, 172, 173, 175, 176, 177, 181, 182, 183, 184, 185, 187, 188, 190, 192, 200, 207, 209, 210, 214, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 239, 240, 241, 243, 244, 245, 248, 249, 250, 251, 252, 253, 255, 257, 259, 263, 265], "creat": [3, 15, 60, 92, 93, 98, 103, 104, 105, 123, 147, 148, 190, 191, 199, 205, 214, 222, 233, 259, 263], "main": [5, 98, 179, 180, 208, 213, 238, 255, 258, 265], "namespac": [5, 7, 23, 111, 195, 205, 207, 220, 258, 259, 260, 263, 266], "under": [5, 258, 262, 263], "specifi": [5, 13, 14, 15, 16, 17, 18, 26, 29, 59, 60, 63, 74, 78, 88, 90, 92, 96, 99, 100, 104, 114, 116, 117, 123, 147, 152, 155, 156, 159, 169, 170, 173, 174, 178, 179, 180, 182, 183, 184, 185, 188, 190, 193, 202, 207, 209, 210, 211, 213, 214, 215, 219, 221, 223, 224, 225, 226, 227, 229, 230, 231, 232, 234, 238, 255, 257, 259, 260, 263, 265, 266], "name": [5, 7, 23, 26, 102, 116, 182, 183, 184, 193, 210, 239, 248, 249, 250, 252, 258, 263, 264], "descript": [5, 7, 207, 209, 243, 257], "bool": [5, 13, 14, 16, 17, 18, 22, 24, 26, 28, 31, 33, 37, 39, 43, 45, 49, 52, 60, 63, 75, 88, 89, 94, 103, 104, 105, 106, 107, 116, 117, 118, 119, 120, 121, 122, 123, 129, 130, 131, 132, 135, 137, 139, 146, 152, 157, 163, 166, 171, 173, 187, 202, 207, 217, 235, 243, 252, 257], "true": [5, 13, 14, 16, 17, 18, 24, 25, 26, 29, 35, 60, 63, 75, 88, 94, 99, 102, 103, 112, 118, 119, 120, 123, 129, 130, 131, 132, 135, 137, 139, 145, 146, 152, 157, 163, 166, 171, 173, 182, 183, 184, 185, 187, 189, 193, 207, 235, 243, 252, 257, 259], "fals": [5, 13, 14, 16, 17, 18, 24, 25, 26, 29, 35, 60, 63, 75, 88, 94, 103, 112, 118, 119, 120, 123, 129, 130, 131, 132, 135, 137, 139, 146, 152, 157, 163, 166, 171, 173, 182, 183, 184, 185, 187, 193, 235, 243, 252, 257], "int8": [5, 116, 117, 202], "bit": [5, 68, 69, 71, 85, 88, 99, 109, 152, 163, 173, 202, 207, 209, 255], "sign": [5, 9, 10, 11, 12, 15, 20, 41, 44, 62, 65, 66, 71, 85, 87, 88, 91, 95, 97, 102, 116, 117, 124, 126, 135, 136, 139, 140, 142, 143, 151, 152, 155, 161, 163, 165, 167, 173, 176, 182, 183, 184, 185, 192, 200, 207, 210, 249, 250, 255], "exist": [5, 7, 26, 60, 78, 103, 205, 207, 210, 213, 214, 215, 241, 260, 263, 264], "interv": [5, 10, 11, 13, 14, 15, 61, 62, 64, 66, 90, 96, 123, 124, 126, 141, 170, 177, 179, 180, 186, 188, 193, 221, 223, 225, 226, 227, 229, 230, 231, 232, 234, 236, 260], "128": 5, "127": 5, "int16": [5, 88, 116, 117, 152, 173, 202, 255], "16": [5, 202], "32": [5, 202], "767": 5, "int32": [5, 88, 116, 117, 152, 173, 202, 255], "147": 5, "483": 5, "647": 5, "int64": [5, 88, 116, 117, 152, 173, 202, 255], "64": [5, 202], "9": [5, 27], "223": 5, "372": 5, "036": 5, "854": 5, "775": 5, "807": 5, "uint8": [5, 116, 117, 202], "unsign": [5, 88, 116, 117, 152, 173, 192, 255], "255": 5, "uint16": [5, 88, 116, 117, 152, 173, 202, 255], "65": 5, "535": [5, 207], "uint32": [5, 88, 116, 117, 152, 173, 202, 255], "294": 5, "967": 5, "295": 5, "uint64": [5, 116, 117, 202], "18": 5, "446": [5, 207], "744": [5, 207], "073": 5, "709": [5, 207], "551": [5, 207], "615": 5, "float32": [5, 110, 116, 117, 153, 202, 250, 252, 253], "ieee": [5, 12, 65, 80, 81, 82, 84, 91, 97, 99, 108, 126, 142, 155, 167, 175, 176, 192, 200, 209, 210, 263], "754": [5, 12, 65, 80, 81, 82, 84, 91, 97, 99, 108, 126, 142, 155, 167, 175, 176, 192, 200, 209, 210, 263], "singl": [5, 7, 24, 25, 29, 34, 35, 114, 116, 182, 183, 192, 202, 207, 208, 210, 213, 214, 219, 259, 263, 264, 265], "precis": [5, 9, 20, 42, 60, 99, 104, 105, 110, 142, 153, 167, 202, 207, 209, 225, 229, 230, 231, 232, 234, 239, 240, 243, 250, 252, 253, 257, 263], "2019": [5, 12, 91, 97, 108, 126, 142, 192, 209, 263, 265], "float64": [5, 9, 20, 116, 117, 202, 225, 229, 230, 231, 232, 234, 239, 240, 243, 257], "doubl": [5, 177, 202, 207], "complex64": [5, 110, 116, 117, 153, 202, 207, 250, 252, 253], "imaginari": [5, 10, 11, 12, 13, 14, 44, 61, 62, 63, 64, 66, 79, 87, 91, 94, 95, 97, 99, 110, 124, 126, 142, 143, 145, 146, 147, 148, 151, 160, 165, 167, 176, 207, 210], "compon": [5, 10, 11, 12, 13, 14, 44, 62, 63, 66, 79, 87, 91, 94, 95, 97, 99, 110, 124, 126, 142, 143, 145, 146, 147, 148, 151, 153, 160, 165, 167, 175, 176, 182, 183, 184, 185, 207, 210, 224, 233], "complex128": [5, 9, 20, 116, 117, 202, 207, 225, 229, 230, 231, 232, 234, 239, 240, 243, 257], "method": [5, 26, 34, 103, 192, 195, 205, 211, 213, 214, 217, 218, 219, 263, 264, 265], "attribut": [5, 23, 99, 109, 192, 204, 207, 260, 263, 264, 265], "requir": [5, 10, 11, 24, 25, 29, 34, 35, 59, 61, 62, 63, 64, 66, 88, 103, 108, 117, 152, 167, 170, 173, 174, 176, 182, 183, 185, 186, 192, 193, 200, 202, 205, 207, 208, 209, 210, 211, 212, 213, 214, 217, 219, 221, 222, 223, 225, 226, 227, 230, 231, 233, 236, 255, 258, 259, 263, 264, 265], "beyond": [5, 159, 202, 263], "It": [5, 23, 26, 103, 205, 211, 213, 263, 265, 266], "also": [5, 7, 26, 34, 103, 108, 162, 202, 205, 210, 211, 212, 213, 219, 223, 227, 231, 234, 252, 258, 265], "subnorm": [5, 108], "k": [5, 40, 98, 108, 133, 145, 179, 180, 193, 235, 239, 240, 241, 249, 251, 252, 253, 255, 263], "denorm": [5, 108], "gradual": [5, 108, 263], "underflow": [5, 9, 91, 102, 108, 250], "hardwar": [5, 53, 108, 156, 209, 213, 214, 239, 252, 259, 263], "univers": [5, 108, 208, 214, 259, 263], "mani": [5, 108, 178, 263, 265], "platform": [5, 26, 108], "compil": [5, 108, 176, 205, 208, 212, 263], "toggl": [5, 108], "daz": [5, 108], "flush": [5, 108], "ftz": [5, 108], "increas": [5, 108, 209, 264], "guard": [5, 108], "against": [5, 40, 73, 108, 133, 176, 193, 245, 248, 266], "time": [5, 7, 16, 17, 26, 90, 108, 156, 182, 183, 205, 207, 212, 213, 218, 235, 239, 240, 241, 249, 251, 252, 259, 263, 265], "attack": [5, 108], "accordingli": [5, 10, 11, 13, 14, 16, 17, 59, 61, 62, 64, 66, 91, 97, 102, 108, 123, 124, 126, 135, 137, 138, 139, 142, 145, 152, 156, 161, 167, 171, 173, 182, 183, 184, 185, 187, 193, 202, 209, 210, 211, 212, 214, 243, 249, 257, 259], "vari": [5, 108, 161, 176, 182, 183, 184, 185, 202, 209], "function": [5, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 26, 28, 29, 30, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 60, 61, 62, 64, 65, 66, 74, 78, 86, 87, 88, 90, 95, 97, 100, 103, 108, 115, 116, 117, 123, 124, 126, 129, 130, 131, 132, 133, 137, 145, 151, 152, 155, 156, 157, 162, 164, 165, 166, 167, 170, 171, 173, 174, 175, 176, 177, 178, 182, 183, 184, 185, 186, 187, 188, 192, 195, 205, 207, 208, 210, 211, 212, 213, 214, 217, 218, 219, 221, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 234, 235, 236, 239, 240, 241, 245, 248, 249, 250, 251, 252, 253, 255, 258, 259, 260, 263, 264, 265], "access": [5, 26, 32, 103, 111, 193, 207, 213, 258, 260, 263], "variou": [5, 207], "cast": [5, 29, 49, 60, 63, 75, 88, 152, 173, 202, 210, 255, 263, 265], "introspect": 5, "isdtyp": [5, 192, 207], "integr": [5, 63, 114, 116, 117], "keyword": [5, 7, 26, 63, 88, 115, 138, 152, 173, 192, 207, 211, 214, 218, 219, 255, 259, 260, 263, 264, 265], "affect": [5, 15, 49, 211, 214], "intermedi": [5, 9, 108], "calcul": [5, 9, 10, 11, 12, 20, 21, 42, 47, 50, 61, 62, 64, 65, 66, 86, 87, 88, 90, 91, 95, 97, 124, 125, 126, 127, 128, 135, 137, 139, 142, 151, 152, 164, 165, 167, 171, 172, 173, 175, 176, 187, 207, 250], "implementor": [5, 258], "free": [5, 214, 262], "when": [5, 7, 12, 16, 17, 26, 47, 49, 59, 63, 91, 97, 102, 103, 108, 114, 116, 123, 126, 135, 136, 139, 140, 142, 151, 152, 156, 157, 161, 171, 173, 176, 187, 189, 192, 193, 202, 207, 208, 210, 211, 212, 213, 215, 217, 218, 219, 221, 223, 225, 226, 227, 229, 230, 231, 232, 234, 235, 239, 241, 245, 248, 249, 250, 251, 252, 253, 255, 259, 263, 264, 265], "accumul": 5, "reduct": [5, 13, 14], "long": [5, 111, 219], "ha": [5, 9, 13, 14, 20, 23, 29, 34, 35, 40, 44, 47, 55, 86, 87, 88, 91, 95, 96, 97, 102, 105, 133, 137, 138, 141, 142, 143, 145, 151, 152, 164, 165, 169, 171, 173, 174, 175, 176, 177, 178, 182, 183, 184, 185, 187, 193, 202, 205, 210, 213, 214, 217, 218, 236, 243, 251, 252, 255, 257, 259, 260, 263, 265, 266], "wai": [5, 26, 63, 103, 205, 208, 214, 215, 260, 263, 264, 265, 266], "f4": [5, 202], "ensur": [5, 26, 161, 205, 209, 259, 263, 264, 265], "portabl": [5, 59, 123, 209, 211, 214, 215, 263], "consum": [5, 26, 63, 114, 116, 205, 210, 211, 219, 258, 263, 264], "recommend": [5, 7, 19, 23, 26, 123, 129, 130, 131, 132, 137, 155, 171, 187, 200, 207, 209, 213, 214, 263], "guidanc": [5, 7, 49, 207, 208, 215, 263], "govern": [5, 50, 172, 202, 259, 260], "interact": [5, 210], "either": [5, 9, 10, 11, 12, 24, 26, 35, 40, 65, 77, 87, 88, 91, 94, 95, 97, 99, 102, 103, 108, 111, 117, 118, 119, 123, 124, 125, 126, 127, 128, 133, 135, 136, 139, 140, 142, 144, 152, 155, 162, 163, 164, 167, 173, 175, 176, 177, 193, 209, 210, 211, 215, 219, 250, 255, 263, 264, 266], "whether": [5, 13, 14, 26, 59, 60, 63, 88, 89, 103, 112, 117, 120, 123, 157, 163, 207, 214, 235, 239, 240, 249, 251, 258, 262, 263, 265], "otherwis": [5, 13, 14, 15, 16, 17, 26, 59, 60, 63, 75, 103, 112, 114, 116, 135, 137, 139, 152, 156, 157, 161, 162, 171, 173, 187, 188, 189, 192, 193, 205, 214, 235, 237, 243, 250, 251, 257, 262], "note": [5, 7, 9, 10, 11, 12, 13, 14, 20, 21, 24, 25, 26, 29, 34, 35, 40, 42, 43, 44, 46, 47, 50, 51, 59, 61, 62, 63, 64, 65, 66, 76, 77, 79, 85, 86, 87, 88, 90, 91, 94, 95, 97, 98, 99, 101, 102, 104, 105, 108, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 124, 125, 126, 127, 128, 133, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 151, 152, 153, 154, 155, 156, 160, 161, 162, 163, 164, 165, 167, 168, 171, 172, 173, 174, 175, 176, 177, 178, 181, 182, 183, 184, 185, 186, 187, 188, 192, 193, 207, 213, 217, 219, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 239, 240, 241, 243, 244, 245, 247, 248, 249, 250, 251, 252, 253, 255, 257, 263, 264, 265, 266], "possibl": [5, 26, 60, 102, 103, 135, 139, 157, 175, 176, 205, 208, 209, 210, 211, 213, 214, 215, 217, 219, 259, 263, 264, 265, 266], "multipl": [5, 7, 13, 14, 16, 17, 40, 42, 44, 133, 135, 137, 139, 142, 143, 152, 171, 173, 187, 193, 205, 208, 210, 213, 214, 218, 219, 240, 241, 259, 260, 263, 265], "In": [5, 12, 19, 26, 59, 88, 91, 94, 102, 117, 119, 120, 142, 146, 152, 155, 162, 173, 192, 193, 195, 202, 209, 210, 213, 215, 230, 231, 249, 250, 252, 255, 259, 260, 264, 265, 266], "clearli": [5, 59, 117, 200, 210, 259, 260], "warn": [5, 156, 215], "about": [5, 7, 26, 99, 109, 211, 259, 263, 265, 266], "": [5, 26, 29, 32, 49, 58, 59, 60, 80, 102, 103, 138, 155, 171, 178, 179, 180, 187, 193, 200, 205, 207, 208, 209, 210, 211, 213, 214, 217, 219, 223, 227, 231, 234, 248, 252, 253, 259, 260, 263, 265], "organ": [5, 207, 259, 264, 265], "within": [5, 15, 27, 193, 202, 205, 207, 210, 214, 221, 223, 226, 227, 230, 231, 232, 234, 263], "numer": [5, 9, 12, 20, 21, 40, 42, 44, 46, 47, 50, 51, 88, 90, 91, 102, 116, 117, 118, 119, 120, 133, 138, 142, 143, 150, 151, 152, 160, 162, 168, 172, 173, 177, 202, 209, 221, 223, 226, 227, 230, 231, 232, 234, 236, 247, 248, 250, 255, 259, 263, 265], "accord": [5, 12, 60, 71, 75, 88, 91, 99, 102, 104, 123, 142, 151, 161, 162, 171, 187, 188, 193, 209, 210], "These": [5, 211, 239, 264], "intend": [5, 88, 152, 173, 205, 255], "posit": [7, 9, 10, 11, 13, 14, 20, 46, 62, 65, 66, 81, 91, 96, 98, 99, 102, 119, 124, 126, 141, 142, 145, 155, 159, 163, 165, 167, 176, 192, 193, 205, 207, 209, 219, 233, 235, 249, 264], "paramet": [7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 114, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 205, 207, 219, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 243, 244, 245, 247, 248, 249, 250, 251, 252, 253, 255, 257, 259], "extern": [7, 265], "usabl": 7, "accept": [7, 26, 129, 130, 131, 132, 137, 155, 171, 187, 205, 260], "call": [7, 34, 90, 213, 214, 217, 250, 263, 264, 265], "argument": [7, 10, 11, 26, 40, 61, 62, 63, 64, 65, 66, 86, 88, 108, 115, 124, 126, 133, 152, 158, 161, 164, 167, 173, 175, 176, 177, 192, 202, 207, 209, 211, 213, 214, 221, 223, 226, 227, 230, 231, 232, 234, 255, 259, 263, 264, 265], "map": [7, 210, 211], "base": [7, 47, 57, 58, 95, 96, 124, 125, 126, 127, 151, 182, 183, 184, 185, 193, 207, 211, 217, 219, 259, 260, 263, 264, 265], "sole": [7, 193, 200, 259], "incompat": [7, 26, 74, 103, 205, 260, 263], "us": [7, 19, 26, 27, 59, 60, 83, 99, 103, 108, 123, 125, 127, 159, 182, 184, 192, 193, 202, 207, 209, 210, 211, 212, 214, 215, 218, 219, 220, 221, 223, 225, 226, 227, 229, 230, 231, 232, 234, 258, 259, 260, 261, 262, 263, 266], "normal": [7, 78, 170, 221, 223, 225, 226, 227, 229, 230, 231, 232, 234], "practic": [7, 19, 193, 259, 264], "avail": [7, 103, 115, 205, 213, 258, 260, 264], "still": [7, 26, 219, 259, 264, 265, 266], "consid": [7, 26, 63, 103, 129, 130, 131, 132, 182, 183, 184, 185, 210, 214, 233, 248, 259, 263, 265, 266], "compliant": [7, 26, 51, 91, 97, 103, 123, 126, 129, 130, 131, 132, 135, 136, 137, 139, 140, 171, 187, 209, 212, 214, 260, 263], "altern": [7, 211, 213, 266], "thei": [7, 26, 202, 208, 213, 214, 218, 219, 258, 259, 260, 263, 265, 266], "were": [7, 102, 156, 161, 207, 263], "option": [7, 13, 14, 15, 16, 17, 23, 26, 57, 58, 59, 60, 63, 77, 78, 88, 90, 92, 93, 98, 100, 103, 104, 105, 114, 116, 123, 135, 137, 139, 147, 148, 152, 156, 157, 159, 161, 171, 173, 174, 187, 190, 191, 192, 207, 218, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 243, 245, 248, 255, 257, 259, 264, 265], "lead": [7, 102, 210, 249, 252, 263], "readabl": [7, 202, 259, 264], "code": [7, 59, 202, 211, 212, 214, 217, 219, 259, 263, 264, 265], "easier": [7, 205, 211, 259], "evolv": [7, 205, 259], "over": [7, 13, 14, 26, 123, 135, 137, 139, 152, 171, 173, 174, 177, 187, 188, 209, 210, 211, 213, 214, 218, 221, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 234, 236, 255, 257, 259, 263], "ad": [7, 9, 10, 11, 12, 13, 14, 20, 21, 24, 26, 29, 35, 40, 42, 43, 44, 46, 47, 50, 51, 60, 61, 62, 63, 64, 66, 86, 87, 91, 94, 95, 97, 98, 99, 103, 104, 105, 118, 119, 120, 123, 124, 125, 126, 127, 133, 138, 142, 143, 145, 146, 147, 148, 150, 151, 152, 160, 162, 164, 165, 167, 168, 172, 173, 175, 176, 177, 182, 183, 184, 185, 188, 193, 206, 207, 208, 214, 235, 236, 237, 239, 240, 241, 243, 244, 245, 247, 248, 249, 250, 251, 252, 253, 255, 257, 260], "worri": 7, "xi": [7, 138], "annot": [7, 207, 219, 263], "individu": [7, 161, 214, 217, 218, 219, 222, 233, 263, 264], "aim": [7, 208, 219, 258, 259, 260, 263, 264, 265, 266], "strongli": [7, 211, 265], "look": [7, 265], "like": [7, 205, 208, 210, 211, 217, 219, 260, 263, 264, 265], "funcnam": 7, "key1": 7, "key2": 7, "none": [7, 13, 14, 15, 16, 17, 23, 26, 32, 49, 57, 58, 59, 60, 63, 77, 78, 83, 88, 90, 92, 93, 98, 100, 103, 104, 105, 112, 114, 116, 123, 135, 137, 139, 147, 148, 152, 156, 157, 159, 161, 171, 173, 174, 187, 190, 191, 193, 207, 214, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 243, 245, 248, 255, 256, 257, 263, 264, 266], "out": [7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 193, 207, 208, 211, 213, 217, 218, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 243, 244, 245, 247, 248, 249, 250, 251, 252, 253, 255, 257, 262, 265], "int": [7, 13, 14, 15, 16, 17, 18, 21, 22, 26, 27, 28, 30, 31, 32, 33, 34, 35, 37, 38, 39, 41, 42, 43, 45, 47, 48, 49, 50, 51, 52, 56, 57, 58, 59, 60, 74, 77, 78, 88, 90, 92, 96, 98, 99, 100, 102, 104, 105, 109, 123, 135, 137, 139, 141, 147, 149, 152, 156, 157, 159, 166, 169, 170, 171, 173, 174, 177, 178, 179, 180, 186, 187, 188, 190, 193, 202, 217, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 236, 238, 243, 244, 254, 255, 256, 257, 264], "str": [7, 8, 23, 116, 117, 138, 264], "modulo": 7, "self": [7, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 59, 89, 207, 265], "few": [7, 209, 217, 263, 265], "enhanc": 7, "default": [7, 13, 14, 15, 16, 17, 18, 23, 26, 59, 60, 63, 77, 78, 88, 90, 92, 93, 98, 100, 103, 104, 105, 113, 114, 116, 123, 135, 137, 138, 139, 145, 147, 148, 152, 156, 157, 159, 161, 166, 170, 171, 173, 177, 179, 180, 182, 183, 184, 186, 187, 188, 190, 191, 192, 193, 207, 209, 214, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 238, 243, 245, 248, 249, 252, 255, 257], "form": [7, 23, 26, 40, 79, 133, 134, 179, 180, 211, 235, 237, 238, 239, 240, 241, 243, 244, 245, 248, 249, 250, 251, 252, 253, 255, 260, 264], "question": [7, 208, 263], "commonli": [7, 171, 187, 208, 210, 212, 258, 259, 263, 264], "written": [7, 205, 263, 265], "yyyi": [8, 23, 260], "mm": [8, 23, 260], "string": [8, 23, 116, 117, 207, 260, 263], "version": [8, 9, 10, 11, 12, 13, 14, 20, 21, 23, 24, 25, 26, 29, 34, 35, 40, 42, 43, 44, 46, 47, 50, 51, 59, 60, 61, 62, 63, 64, 66, 77, 79, 85, 86, 87, 88, 91, 94, 95, 97, 98, 99, 103, 104, 105, 108, 109, 110, 117, 118, 119, 120, 123, 124, 125, 126, 127, 133, 135, 136, 138, 139, 140, 141, 142, 143, 145, 146, 147, 148, 150, 151, 152, 153, 156, 160, 161, 162, 163, 164, 165, 167, 168, 172, 173, 174, 175, 176, 177, 178, 182, 183, 184, 185, 186, 188, 192, 205, 208, 214, 218, 219, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 239, 240, 241, 243, 244, 245, 247, 248, 249, 250, 251, 252, 253, 255, 257, 261, 263, 265], "absolut": [9, 20, 85, 162, 209, 211, 243, 244, 250, 259], "x_i": [9, 10, 11, 61, 62, 64, 66, 68, 76, 77, 79, 86, 87, 95, 97, 101, 110, 118, 119, 120, 124, 125, 126, 127, 130, 135, 137, 139, 143, 150, 153, 154, 160, 162, 163, 164, 165, 167, 168, 171, 175, 176, 181, 187], "input": [9, 10, 11, 12, 13, 14, 16, 17, 18, 20, 26, 30, 41, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 75, 76, 77, 78, 79, 85, 86, 87, 88, 90, 91, 93, 94, 95, 96, 97, 100, 101, 102, 103, 105, 106, 107, 108, 110, 117, 118, 119, 120, 121, 122, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 191, 192, 200, 205, 207, 210, 212, 214, 215, 219, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 243, 244, 245, 247, 248, 249, 250, 252, 253, 255, 257, 259, 263, 265], "magnitud": [9, 12, 20, 85, 91, 102, 108, 142, 207, 252, 253], "represent": [9, 12, 20, 29, 44, 67, 70, 72, 80, 81, 82, 84, 91, 99, 102, 109, 142, 143, 144, 175, 176, 209, 213, 264], "known": [9, 162, 209, 212, 213], "norm": [9, 221, 223, 225, 226, 227, 229, 230, 231, 232, 234, 243, 257, 259], "modulu": [9, 155], "z": [9, 10, 11, 61, 62, 64, 66, 124, 210], "bj": [9, 12, 79, 91, 142], "comput": [9, 12, 28, 31, 33, 37, 39, 40, 43, 57, 58, 67, 70, 72, 79, 88, 89, 90, 91, 94, 96, 102, 106, 107, 108, 121, 122, 129, 130, 131, 132, 133, 135, 136, 137, 139, 140, 142, 143, 145, 146, 150, 152, 156, 171, 173, 177, 182, 183, 184, 185, 187, 188, 193, 207, 209, 212, 217, 221, 222, 223, 225, 226, 227, 229, 230, 231, 232, 233, 234, 235, 236, 239, 240, 241, 243, 245, 248, 249, 250, 251, 252, 253, 255, 257, 259, 263], "operatornam": [9, 10, 11, 61, 62, 64, 66, 86, 87, 162, 164, 165, 175, 176, 210, 239, 240, 250, 252], "sqrt": [9, 10, 11, 61, 62, 192, 207, 210, 221, 223, 225, 226, 227, 229, 230, 231, 232, 234, 257], "take": [9, 124, 126, 151, 167, 192, 207, 214, 219, 263], "care": [9, 211, 259], "undu": [9, 212], "overflow": [9, 12, 88, 91, 102, 108, 123, 152, 173, 202, 250, 255, 259], "dure": [9, 40, 59, 108, 133, 171, 187, 202, 205, 248, 263, 264], "stage": [9, 108, 260], "contain": [9, 10, 11, 12, 13, 14, 15, 16, 17, 20, 21, 22, 23, 26, 28, 30, 31, 32, 33, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 76, 77, 78, 79, 85, 86, 87, 88, 90, 91, 92, 93, 94, 95, 97, 101, 102, 103, 106, 107, 108, 110, 111, 112, 114, 116, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 160, 161, 162, 163, 164, 165, 167, 168, 171, 172, 173, 175, 176, 177, 179, 180, 181, 182, 183, 184, 185, 187, 188, 190, 193, 207, 209, 210, 211, 213, 217, 218, 222, 223, 224, 227, 228, 231, 233, 234, 235, 236, 237, 238, 239, 240, 241, 243, 244, 245, 247, 248, 249, 250, 251, 252, 253, 255, 257, 263, 265], "nan": [9, 10, 11, 12, 13, 14, 24, 25, 35, 61, 62, 63, 64, 65, 66, 76, 85, 86, 87, 91, 94, 95, 97, 101, 102, 108, 118, 119, 120, 124, 125, 126, 127, 128, 135, 136, 137, 139, 140, 142, 144, 146, 151, 155, 160, 161, 162, 163, 164, 165, 167, 171, 175, 176, 181, 182, 183, 184, 185, 187, 192, 200, 210, 263], "infin": [9, 10, 11, 12, 13, 14, 24, 25, 35, 62, 63, 64, 65, 66, 76, 81, 86, 87, 91, 94, 95, 97, 101, 102, 108, 118, 119, 124, 125, 126, 127, 128, 135, 139, 142, 146, 151, 155, 160, 163, 164, 165, 167, 175, 176, 181, 210, 250, 257], "imag": [9, 10, 11, 12, 24, 62, 63, 66, 87, 94, 95, 97, 118, 119, 120, 123, 124, 126, 146, 160, 162, 165, 167, 176, 192, 207, 208, 263, 264, 265], "finit": [9, 10, 11, 12, 25, 35, 42, 62, 65, 66, 87, 91, 94, 95, 97, 102, 108, 112, 118, 119, 124, 126, 142, 146, 151, 155, 163, 165, 167, 176, 209], "2022": [9, 10, 11, 12, 13, 14, 20, 21, 24, 25, 26, 29, 35, 40, 42, 43, 44, 46, 47, 50, 51, 60, 61, 62, 63, 64, 66, 79, 86, 87, 91, 94, 95, 97, 98, 99, 104, 105, 109, 110, 117, 118, 119, 120, 123, 124, 125, 126, 127, 133, 138, 142, 143, 145, 146, 147, 148, 150, 151, 152, 153, 160, 162, 164, 165, 167, 168, 172, 173, 174, 175, 176, 177, 182, 183, 184, 185, 188, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 239, 240, 241, 243, 244, 245, 247, 248, 249, 250, 251, 252, 253, 255, 257], "12": [9, 10, 11, 12, 13, 14, 20, 21, 24, 25, 26, 29, 34, 35, 40, 42, 43, 44, 46, 47, 50, 51, 59, 60, 61, 62, 63, 64, 66, 77, 79, 85, 86, 87, 88, 91, 94, 95, 97, 98, 99, 103, 104, 105, 108, 109, 110, 117, 118, 119, 120, 123, 124, 125, 126, 127, 133, 135, 136, 138, 139, 140, 141, 142, 143, 145, 146, 147, 148, 150, 151, 152, 153, 156, 160, 161, 162, 163, 164, 165, 167, 168, 172, 173, 174, 175, 176, 177, 178, 182, 183, 184, 185, 186, 188, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 239, 240, 241, 243, 244, 245, 247, 248, 249, 250, 251, 252, 253, 255, 257, 260], "approxim": [10, 11, 47, 61, 62, 64, 65, 66, 86, 87, 95, 97, 102, 124, 125, 126, 127, 151, 164, 165, 175, 176, 209, 245, 248], "princip": [10, 11, 61, 62, 64, 66, 124, 167, 210, 259], "invers": [10, 11, 61, 62, 64, 65, 66, 210, 221, 223, 226, 227, 228, 229, 230, 231, 232, 234, 241, 244, 248, 259], "cosin": [10, 11, 86, 87, 176], "express": [10, 61, 63, 64, 65, 86, 164, 175, 193, 202, 211, 259, 262], "radian": [10, 61, 64, 65, 86, 164, 175], "arc": [10, 61, 64], "frac": [10, 11, 61, 62, 64, 66, 86, 87, 91, 123, 125, 127, 162, 164, 165, 175, 176, 210, 250], "pi": [10, 11, 61, 62, 64, 66, 87, 124, 126, 165, 175, 176, 192], "j": [10, 11, 12, 25, 61, 62, 64, 66, 87, 91, 95, 97, 123, 124, 126, 142, 161, 162, 164, 165, 167, 175, 176, 193, 210, 239, 252, 255], "ln": [10, 11, 61, 62, 64, 66, 124], "zj": [10, 61, 62, 64, 66], "conj": [10, 11, 61, 62, 64, 66, 87, 95, 97, 124, 125, 126, 127, 165, 167, 176, 192, 207], "multi": [10, 11, 61, 62, 64, 66, 192, 210, 213, 214, 236, 265], "branch": [10, 11, 61, 62, 64, 65, 66, 86, 87, 91, 95, 97, 124, 126, 142, 151, 164, 165, 167, 175, 176, 263], "cut": [10, 11, 61, 62, 64, 66, 86, 87, 95, 97, 124, 126, 151, 164, 165, 167, 175, 176, 263], "plane": [10, 11, 61, 62, 64, 66, 86, 87, 91, 95, 97, 142, 164, 165, 167, 175, 176, 263], "By": [10, 11, 13, 14, 61, 62, 64, 65, 66, 88, 124, 126, 135, 137, 139, 151, 152, 167, 171, 173, 187, 188, 209, 210, 236, 259, 264], "place": [10, 11, 15, 60, 61, 62, 63, 64, 66, 92, 93, 98, 103, 104, 105, 123, 147, 148, 159, 190, 191, 192, 200, 202, 207, 211, 214, 222, 233, 248], "line": [10, 11, 61, 62, 64, 66, 175, 176, 202, 210, 263, 264, 265, 266], "segment": [10, 11, 61, 62, 64, 66, 210], "infti": [10, 11, 61, 62, 64, 66, 86, 124, 126, 151, 167, 210], "axi": [10, 11, 13, 14, 16, 17, 18, 61, 62, 64, 66, 78, 88, 90, 96, 100, 124, 126, 135, 137, 139, 141, 151, 152, 156, 159, 166, 167, 169, 170, 171, 173, 174, 177, 178, 186, 187, 188, 192, 207, 221, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 234, 236, 243, 256, 257, 263], "rang": [10, 61, 62, 64, 66, 77, 88, 124, 126, 152, 167, 173, 193, 207, 213, 255, 263], "strip": [10, 61, 62, 64, 66, 124, 126], "unbound": [10, 61, 62, 64, 66, 124, 126], "along": [10, 11, 13, 14, 16, 17, 18, 61, 62, 64, 66, 78, 88, 90, 98, 100, 124, 126, 135, 137, 139, 152, 156, 159, 166, 167, 170, 171, 173, 174, 175, 176, 178, 186, 187, 188, 193, 207, 221, 223, 225, 226, 227, 229, 230, 231, 232, 234, 236, 255, 257, 259], "c99": [10, 11, 61, 62, 64, 66, 91, 124, 126, 142, 151, 167, 210, 260], "provision": [10, 11, 61, 62, 64, 66, 124, 126, 151, 167, 210], "statu": [10, 11, 61, 62, 64, 66, 124, 126, 151, 167, 210], "greater": [10, 11, 33, 38, 48, 61, 62, 65, 66, 69, 71, 77, 85, 91, 101, 102, 124, 126, 151, 155, 162, 163, 165, 167, 169, 176, 192, 193, 221, 223, 225, 226, 227, 229, 230, 231, 232, 234, 236, 244], "than": [10, 11, 19, 26, 38, 40, 47, 48, 49, 55, 61, 62, 63, 65, 66, 69, 71, 76, 77, 85, 88, 91, 99, 100, 101, 102, 103, 124, 125, 126, 127, 133, 142, 151, 152, 155, 162, 163, 165, 167, 169, 171, 173, 174, 176, 181, 182, 183, 184, 185, 187, 193, 202, 205, 208, 211, 214, 215, 218, 221, 223, 225, 226, 227, 229, 230, 231, 232, 234, 236, 243, 244, 245, 248, 255, 257, 259, 260, 263, 265], "less": [10, 11, 39, 47, 61, 65, 66, 76, 85, 91, 102, 124, 125, 126, 127, 151, 155, 162, 163, 167, 171, 187, 192, 193, 211, 221, 223, 225, 226, 227, 229, 230, 231, 232, 234, 243, 244, 245, 248, 257, 263], "\u03c0": [10, 64, 65, 84], "0j": [10, 11, 12, 25, 62, 63, 66, 87, 95, 97, 98, 124, 126, 147, 148, 162, 165, 167, 176, 210, 250], "nonzero": [10, 11, 12, 62, 66, 87, 91, 95, 97, 102, 142, 165, 176, 192, 193, 207, 248], "3\u03c0": [10, 65], "hyperbol": [11, 62, 66, 86, 87, 164, 165, 175, 176, 210], "aco": [11, 61, 192, 207, 209], "simpli": [11, 97, 126, 208, 219, 263, 265], "upper": [11, 77, 98, 180, 207, 235, 249], "half": [11, 15, 66, 123, 141, 167, 177, 193, 224], "area": [11, 62, 66], "sector": [11, 62, 66], "\u03c0j": [11, 62, 66, 124, 126], "3\u03c0j": [11, 124, 126], "sum": [12, 21, 88, 108, 128, 152, 192, 207, 243, 255, 257, 259], "x1_i": [12, 65, 67, 69, 70, 71, 72, 85, 91, 94, 102, 106, 107, 108, 121, 122, 128, 129, 131, 132, 136, 140, 142, 144, 146, 151, 155, 172, 189, 207], "x2_i": [12, 65, 67, 69, 70, 71, 72, 85, 91, 94, 102, 106, 107, 108, 121, 122, 128, 129, 131, 132, 136, 140, 142, 144, 146, 151, 155, 172, 189, 207], "first": [12, 16, 17, 19, 65, 67, 69, 70, 71, 72, 88, 90, 94, 106, 107, 108, 121, 122, 128, 129, 131, 132, 133, 136, 140, 142, 144, 146, 151, 159, 170, 172, 175, 176, 177, 182, 183, 184, 188, 189, 193, 210, 236, 239, 247, 249, 250, 252, 253, 259, 263, 264, 265, 266], "remain": [12, 91, 94, 102, 117, 119, 120, 142, 146, 155, 157, 162, 193, 211, 234], "neither": [12, 40, 91, 102, 133, 142, 177, 252, 264], "nor": [12, 91, 102, 142, 252, 264], "mathemat": [12, 19, 65, 84, 86, 87, 91, 97, 102, 124, 126, 142, 164, 165, 175, 176, 192, 210, 243, 257], "round": [12, 15, 76, 91, 101, 102, 142, 167, 181, 192, 207, 209], "nearest": [12, 91, 142, 160, 181, 209], "mode": [12, 91, 142, 209, 221, 223, 225, 226, 227, 229, 230, 231, 232, 234, 249], "too": [12, 26, 91, 102, 142, 259, 263], "larg": [12, 91, 102, 142, 213, 219, 250, 263], "appropri": [12, 26, 91, 102, 142, 210, 215], "commut": 12, "associ": [12, 42, 142, 195, 202, 245, 248, 251, 259, 262, 264], "tabl": [12, 91, 142, 192], "c": [12, 91, 94, 123, 142, 145, 146, 156, 170, 171, 176, 187, 193, 207, 210, 213, 216, 235, 239, 240, 241, 249, 251, 252, 260, 262, 263, 265], "d": [12, 91, 94, 123, 142, 146, 202, 222, 233], "dj": [12, 91, 142], "independ": [12, 91, 142, 160, 193, 205, 213, 236, 249, 251, 259, 260, 263], "abov": [12, 88, 91, 94, 124, 126, 142, 146, 151, 152, 167, 173, 179, 180, 193, 202, 210, 211, 213, 214, 217, 238, 239, 255, 259, 262, 265], "similarli": [12, 57, 117, 138, 202, 235, 252], "henc": [12, 79, 96, 145, 156, 182, 183, 184, 185, 193, 208, 210, 211, 212, 213, 217, 218, 219, 263, 265], "z1": 12, "z2": 12, "keepdim": [13, 14, 16, 17, 135, 137, 139, 152, 171, 173, 187, 243, 257], "test": [13, 14, 89, 118, 119, 120, 207, 209, 261, 263, 264, 265], "evalu": [13, 14, 22, 30, 36, 38, 41, 44, 45, 46, 48, 51, 52, 95, 97, 124, 125, 126, 127, 143, 150, 162, 163, 168, 205, 263], "union": [13, 14, 15, 21, 22, 26, 28, 30, 31, 32, 33, 37, 38, 39, 41, 42, 43, 45, 47, 48, 49, 50, 51, 52, 59, 60, 75, 77, 78, 92, 99, 100, 104, 105, 109, 116, 117, 123, 135, 137, 139, 141, 147, 152, 156, 158, 159, 169, 170, 171, 173, 177, 187, 190, 224, 228, 243, 245, 248, 257, 264], "ax": [13, 14, 16, 17, 19, 55, 56, 100, 135, 137, 139, 141, 149, 152, 159, 169, 171, 173, 177, 178, 187, 188, 193, 207, 223, 224, 227, 228, 231, 234, 236, 243, 248, 251, 254, 257], "logic": [13, 14, 24, 26, 91, 94, 129, 130, 131, 132, 142, 146, 214, 217, 223, 227, 231, 234], "AND": [13, 67, 94, 129, 262], "entir": [13, 14, 86, 87, 95, 97, 135, 137, 139, 152, 164, 165, 171, 173, 187], "valid": [13, 14, 26, 27, 90, 96, 115, 141, 170, 177, 186, 193, 209, 217, 221, 223, 225, 226, 227, 229, 230, 231, 232, 234, 239, 249, 252, 264], "count": [13, 14, 78, 88, 90, 100, 174, 182, 183, 188, 193, 207, 221, 223, 225, 226, 227, 229, 230, 231, 232, 234, 236, 240], "last": [13, 14, 18, 19, 55, 78, 88, 90, 100, 159, 166, 170, 174, 177, 188, 193, 221, 223, 225, 226, 227, 229, 230, 231, 232, 234, 236, 238, 243, 249, 252, 255], "invalid": [13, 14, 23, 90, 96, 215, 263], "rais": [13, 14, 19, 23, 24, 25, 26, 29, 34, 35, 40, 47, 51, 55, 60, 74, 90, 91, 95, 96, 103, 123, 133, 135, 139, 145, 151, 157, 169, 170, 186, 188, 193, 202, 205, 207, 213, 214, 215, 217, 236, 244, 263], "wa": [13, 14, 19, 26, 102, 135, 137, 139, 152, 171, 173, 187, 202, 214, 219, 263, 265], "OR": [14, 24, 70, 131, 146, 262], "start": [15, 123, 193, 207, 219, 263, 265], "stop": [15, 123, 193, 207, 264], "step": [15, 123, 193, 264], "evenli": [15, 123], "space": [15, 123, 222, 224, 233], "open": [15, 123, 141, 177, 193], "inclus": [15, 193, 263], "end": [15, 65, 86, 123, 162, 164, 175, 176, 200, 211, 250, 263, 264, 265], "exclus": [15, 193], "distanc": [15, 108], "between": [15, 26, 47, 51, 65, 78, 91, 94, 99, 123, 135, 136, 139, 140, 146, 151, 170, 182, 183, 184, 185, 202, 210, 211, 214, 222, 233, 259, 263, 265], "adjac": 15, "output": [15, 60, 63, 78, 88, 92, 93, 96, 98, 100, 103, 104, 105, 112, 123, 138, 147, 148, 157, 159, 161, 169, 170, 174, 178, 190, 191, 205, 207, 210, 211, 214, 216, 217, 219, 221, 222, 223, 225, 226, 227, 230, 231, 232, 233, 234, 255, 263], "infer": [15, 60, 63, 93, 104, 105, 148, 157, 191, 212, 259, 264], "cannot": [15, 26, 57, 103, 175, 176, 207, 210, 212, 263], "guarante": [15, 59, 182, 184, 205, 210, 214, 263, 265], "error": [15, 19, 23, 24, 25, 26, 29, 34, 35, 51, 55, 91, 103, 135, 139, 175, 176, 202, 209, 250, 263], "ceil": [15, 192], "indic": [16, 17, 18, 26, 60, 88, 89, 103, 112, 117, 123, 141, 145, 159, 161, 162, 174, 177, 179, 180, 182, 184, 193, 202, 207, 257, 263], "occur": [16, 17, 75, 108, 175, 176, 182, 183, 184, 185, 210, 264], "occurr": [16, 17, 182], "comparison": [16, 17, 18, 31, 33, 37, 39, 94, 106, 107, 121, 122, 135, 136, 139, 140, 146, 166, 192, 210, 260, 264], "search": [16, 17, 161, 192], "flatten": [16, 17, 78, 156, 159, 182, 183, 184, 185, 257, 259], "descend": [18, 166, 252, 253], "stabl": [18, 166, 213], "sort": [18, 161, 192, 207, 239, 240, 252, 253], "ascend": [18, 161, 166, 207], "stabil": [18, 166], "maintain": [18, 166, 208, 263, 265], "rel": [18, 19, 55, 100, 136, 140, 159, 166, 207, 238, 245, 248, 255], "compar": [18, 166, 182, 183, 184, 185, 209, 214, 264, 266], "properti": [19, 53, 54, 55, 56, 57, 58, 116, 207, 210, 214, 219, 263], "transpos": [19, 40, 55, 133, 134, 177, 235, 239, 248, 252, 259], "instanc": [19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 55, 59, 89, 202, 205, 207, 214], "permut": [19, 55, 149], "revers": [19, 55, 65, 100], "origin": [19, 55, 65, 108, 141, 157, 159, 207, 211, 221, 223, 226, 227, 230, 231, 232, 234, 263, 264], "limit": [19, 99, 109, 117, 209, 259, 262], "matric": [19, 40, 55, 133, 134, 138, 179, 180, 235, 237, 238, 239, 240, 241, 243, 244, 245, 248, 249, 250, 251, 252, 253, 255, 259], "deviat": [19, 171, 209, 215, 263, 265], "et": [19, 252, 253], "al": 19, "intent": [19, 65], "found": [19, 210, 213, 265, 266], "problemat": [19, 63, 208, 211], "conflict": 19, "definit": [19, 86, 87, 164, 165, 175, 176, 207, 235, 264], "batch": [19, 257, 259], "cetera": [19, 252, 253], "permute_dim": [19, 192], "interfac": [19, 213, 259, 263, 265], "ab": [20, 108, 151, 192, 207, 243, 257], "augend": 21, "addend": 21, "self_i": [22, 28, 30, 31, 33, 36, 37, 38, 39, 41, 43, 44, 45, 46, 48, 50, 51, 52], "other_i": [22, 28, 30, 31, 33, 37, 38, 39, 41, 43, 45, 47, 48, 50, 51, 52], "bitwise_and": [22, 192], "api_vers": [23, 263], "object": [23, 24, 25, 26, 29, 34, 35, 53, 57, 59, 60, 89, 99, 103, 109, 111, 113, 114, 115, 192, 193, 202, 205, 207, 211, 213, 214, 217, 219, 258, 260, 264, 265], "2020": [23, 219, 260, 262, 263], "10": [23, 27, 125, 193, 263], "latest": [23, 213], "modul": [23, 205, 260, 264, 265, 266], "everi": [23, 104, 105, 249, 263], "top": [23, 205, 263, 265], "level": [23, 202, 208, 213, 214, 258, 259, 263, 264], "public": [23, 258, 264, 265], "well": [23, 208, 210, 213, 214, 249, 265, 266], "part": [23, 35, 179, 180, 202, 207, 213, 218, 260, 263, 265], "convert": [24, 25, 29, 34, 35, 60, 103, 202, 207, 208, 210, 213, 263, 265], "handl": [24, 26, 61, 64, 86, 88, 103, 125, 127, 151, 152, 154, 162, 164, 168, 173, 175, 207, 208, 210, 211, 214, 215, 255, 263], "lazi": [24, 25, 29, 34, 35, 205, 207, 216, 265], "languag": [24, 25, 29, 34, 35, 211, 215, 217, 259, 263, 265], "therefor": [24, 25, 29, 34, 35, 205, 213, 214, 215, 217, 219, 260, 263, 265], "abl": [24, 25, 29, 34, 35, 103, 211, 213, 214, 263, 265], "kind": [24, 25, 26, 29, 34, 35, 47, 51, 77, 91, 99, 103, 105, 109, 114, 116, 117, 151, 202, 207, 217, 259, 262], "here": [24, 25, 26, 29, 34, 35, 193, 202, 211, 213, 218, 219, 265], "valueerror": [24, 25, 26, 29, 34, 35, 60, 103, 157, 169, 265], "instead": [24, 25, 29, 34, 35, 63, 210, 213, 217, 264, 265], "2023": [24, 25, 26, 29, 34, 35, 59, 63, 77, 85, 88, 103, 108, 135, 136, 139, 140, 141, 152, 156, 161, 163, 173, 174, 177, 178, 182, 183, 184, 185, 186, 188, 221, 222, 223, 225, 226, 227, 230, 231, 233, 236, 255], "new": [25, 26, 77, 79, 85, 88, 96, 99, 103, 104, 105, 108, 109, 110, 117, 136, 140, 141, 147, 148, 153, 156, 157, 161, 163, 170, 174, 178, 186, 190, 191, 205, 207, 208, 211, 213, 214, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 260, 263, 264, 265], "stream": [26, 59, 214], "max_vers": [26, 207], "dl_devic": [26, 207], "enum": [26, 27], "pycapsul": 26, "export": [26, 103, 207, 213, 264], "from_dlpack": [26, 27, 192, 207, 213], "dlpack": [26, 27, 103, 207], "capsul": 26, "cuda": [26, 27, 208, 213, 265], "rocm": [26, 27, 208], "pointer": 26, "produc": [26, 239, 249, 252, 265], "instruct": 26, "safe": [26, 123], "insert": [26, 96, 161, 207], "wait": 26, "event": [26, 262], "larger": [26, 99, 159, 171, 187, 248], "below": [26, 102, 103, 179, 180, 195, 213, 214, 238, 255], "signal": [26, 225, 229, 265], "ownership": 26, "stai": 26, "On": 26, "cpu": [26, 27, 205, 208, 213, 214, 259, 263, 265], "queue": [26, 59, 214], "similar": [26, 155, 193, 208, 210, 212, 263, 264, 265], "mechan": [26, 103, 205, 207, 208, 216, 258, 263], "most": [26, 205, 214, 239, 259, 263, 265], "yet": [26, 219, 263], "sycl": 26, "want": [26, 91, 142, 208, 212, 213, 263, 265, 266], "cl": 26, "agre": 26, "assum": [26, 86, 103, 164, 175, 205, 210, 214, 258, 263], "legaci": 26, "per": [26, 156, 208, 213, 261], "thread": [26, 263, 265], "disallow": 26, "due": [26, 42, 57, 58, 123, 142, 156, 174, 209, 210, 259, 263], "ambigu": [26, 63, 102, 211], "construct": [26, 178, 205, 207, 208, 217, 263], "particular": [26, 193, 208, 210, 213, 214, 219, 259, 262, 263, 265, 266], "kdlcpu": 26, "safeti": [26, 59], "prefer": [26, 102, 205, 259, 265], "develop": [26, 209, 263, 264, 265, 266], "who": [26, 209, 263, 264], "think": 26, "cost": 26, "caller": 26, "major": [26, 145, 156, 193, 260], "minor": [26, 260], "verifi": [26, 263], "even": [26, 91, 142, 151, 160, 209, 210, 211, 222, 224, 228, 233, 249, 259, 263, 265], "pass": [26, 65, 205, 209, 214], "format": [26, 27, 260], "__dlpack_device__": [26, 103, 192, 213], "buffererror": [26, 103, 207, 213], "v2023": [26, 103], "mandat": [26, 103, 263], "offer": [26, 103, 208, 213, 214, 218, 263, 265], "referenc": [26, 263], "underli": [26, 67, 70, 72, 103, 209, 250, 259], "interpret": [26, 103, 108, 210, 211, 266], "enumer": 26, "made": [26, 103, 205, 210, 258, 260, 263, 265], "never": [26, 60, 103, 157, 213, 263], "deem": [26, 103], "cross": [26, 103, 207, 214, 259, 263], "movement": [26, 103], "request": [26, 103, 263], "reus": [26, 60, 103, 211, 263], "buffer": [26, 60, 103, 211, 213], "happen": [26, 103, 211, 214, 217, 259], "dlpack_flag_bitmask_is_copi": 26, "flag": 26, "understood": [26, 202], "interchang": [26, 103, 205, 208, 216, 263], "detail": [26, 103, 145, 156, 182, 183, 184, 185, 192, 193, 204, 205, 212, 214, 218, 259, 263, 265], "stride": [26, 103, 211, 213], "fail": [26, 103, 263], "reason": [26, 103, 155, 176, 211, 213, 215, 259, 263, 264], "incorrect": 26, "scheme": [26, 260], "semver": 26, "abi": [26, 208, 213], "break": [26, 215], "introduc": [26, 63, 102, 159, 219, 264], "goe": 26, "togeth": [26, 202, 213], "dlmanagedtensorvers": 26, "struct": 26, "later": 26, "introduct": 26, "becaus": [26, 202, 208, 211, 214, 215, 217, 219, 239, 252, 263, 265, 266], "keep": [26, 202, 208, 263], "march": 26, "2025": 26, "onward": 26, "ideal": [26, 259], "late": 26, "okai": 26, "we": [26, 210, 252, 263], "get": [26, 99, 109, 208, 211, 213, 214], "now": [26, 103, 217, 263, 265], "our_own_dlpack_vers": 26, "fill": [26, 104, 105, 147, 148, 190, 191, 207], "field": [26, 182, 183, 184, 210, 239, 249, 250, 252, 263], "understand": [26, 248, 263, 264], "u": [26, 235, 248, 252], "just": [26, 263, 265], "our": 26, "elif": 26, "fine": [26, 219, 263], "own": [26, 205, 211, 263], "re": [26, 159, 208, 211, 219, 265], "intern": [26, 265], "did": 26, "older": [26, 176, 213, 260, 263], "around": [26, 264], "y": [26, 65, 103, 210, 211, 265], "dlmanagedtensor": 26, "so": [26, 99, 103, 111, 193, 200, 213, 259, 262, 263, 266], "tell": 26, "old": 26, "exchang": [26, 103, 213], "And": [26, 193, 214], "try": [26, 219, 263], "succe": 26, "info": [26, 111], "dltensor_vers": 26, "need": [26, 193, 208, 209, 211, 213, 215, 219, 259, 260, 263, 264, 265, 266], "used_dltensor_vers": 26, "done": [26, 205], "typeerror": [26, 29, 34, 35, 263, 265], "read": [26, 207, 211], "dlpack_flag_bitmask_read_onli": 26, "ignor": [26, 138, 259], "respons": 26, "isn": [26, 208], "t": [26, 192, 208, 211, 214, 218, 219, 263, 265], "id": 27, "meant": 27, "device_typ": 27, "device_id": 27, "member": 27, "cpu_pin": 27, "opencl": 27, "vulkan": 27, "metal": 27, "vpi": 27, "cuda_manag": 27, "13": 27, "one_api": 27, "14": [27, 260], "truth": [28, 31, 33, 37, 39, 43, 89, 94, 106, 107, 121, 122, 146, 266], "outsid": [29, 170, 186, 193, 202, 207, 213], "bound": [29, 77, 174, 193, 202, 207, 219], "divis": [30, 41, 71, 91, 102, 155, 162, 210], "floor_divid": [30, 192], "greater_equ": [31, 192], "kei": [32, 49, 112, 114, 116, 263], "slice": [32, 49, 186, 192, 211], "ellipsi": [32, 49, 193], "pep": [34, 40, 102, 133, 213, 260], "357": 34, "overflowerror": 35, "bitwise_invert": [36, 192], "less_equ": [37, 192], "bitwise_left_shift": [38, 192], "matrix": [40, 55, 133, 134, 138, 177, 179, 180, 235, 237, 238, 239, 240, 241, 243, 244, 245, 248, 249, 250, 251, 252, 253, 255, 259, 263], "product": [40, 42, 58, 133, 142, 152, 177, 188, 207, 236, 247, 259], "semant": [40, 102, 133, 155, 174, 192, 193, 205, 211, 213, 215, 217, 218, 259, 263, 264, 265], "built": [40, 133, 193, 202, 263], "465": [40, 133], "least": [40, 91, 116, 117, 133, 142, 145, 182, 183, 184, 185, 208, 209, 248], "m": [40, 55, 90, 133, 134, 138, 156, 161, 177, 178, 179, 180, 193, 221, 223, 225, 226, 227, 229, 230, 231, 232, 234, 235, 237, 238, 239, 240, 241, 243, 244, 245, 247, 248, 249, 250, 251, 252, 253, 255], "remov": [40, 133, 169, 193, 210, 238, 255], "innermost": [40, 133, 134, 179, 180, 235, 237, 238, 239, 240, 241, 243, 244, 245, 248, 249, 250, 251, 252, 253, 255], "conjug": [40, 79, 133, 177, 188, 207, 235, 239, 252, 259], "transposit": [40, 133, 177], "desir": [40, 63, 75, 133, 141, 177, 209, 210, 213, 219], "prior": [40, 90, 133, 177], "inner": [40, 133, 207, 239, 259], "stack": [40, 55, 133, 134, 179, 180, 192, 218, 235, 237, 238, 239, 240, 241, 243, 244, 245, 248, 249, 250, 251, 252, 253, 255, 259], "l": [40, 133, 235, 255], "remaind": [41, 192, 193], "multipli": [42, 152, 168, 192, 207, 209, 239, 252], "not_equ": [43, 192, 207], "negat": [44, 79, 143], "bitwise_or": [45, 192], "exponenti": [47, 95, 97, 128, 151, 210], "power": [47, 71, 95, 151, 210, 244, 265], "expon": [47, 151, 244], "versu": [47, 51, 63, 77, 91, 142, 151, 207], "bitwise_right_shift": [48, 192], "mix": [49, 123, 137, 158, 171, 187, 192, 207, 211, 214, 259, 263], "how": [49, 91, 142, 205, 209, 214, 218, 264, 265, 266], "minuend": 50, "subtrahend": 50, "subtract": [50, 192, 207, 209], "choos": [51, 57, 59, 91, 102, 123, 129, 130, 131, 132, 135, 136, 137, 139, 140, 142, 145, 156, 171, 182, 183, 184, 185, 187, 192, 193, 200, 210, 211, 212, 214, 217, 263, 265], "divid": [51, 102, 154, 162, 192, 193, 207, 209], "bitwise_xor": [52, 192], "resid": [53, 59, 96, 141, 177, 193, 207, 213, 263], "fewer": 55, "unknown": [57, 58, 156], "graph": [57, 58, 145, 156, 182, 183, 184, 185, 193, 212, 217, 263], "static": [57, 212, 216], "resolv": [57, 60, 88, 96, 102, 104, 105, 152, 173, 223, 224, 227, 228, 231, 234, 255, 263], "know": [57, 145, 156, 182, 183, 184, 185, 205, 208, 209, 212, 263, 265], "content": [57, 212, 262], "warrant": 57, "custom": [57, 208, 215], "immut": 57, "retriev": [57, 193, 205, 220, 259, 265], "behav": [57, 210], "current": [59, 114, 116, 174, 200, 211, 214, 219, 263, 264, 265], "__dlpack__": [59, 103, 192, 207, 213], "caveat": 59, "would": [59, 60, 157, 161, 193, 207, 211, 217, 259, 263, 265], "locat": [59, 211], "explicit": [59, 60, 103, 174, 177, 214, 265], "enqueu": 59, "asynchron": 59, "explain": [59, 208], "clarifi": [59, 135, 139, 182, 183, 184, 207], "obj": 60, "nestedsequ": 60, "supportsbufferprotocol": 60, "possibli": [60, 218, 263], "nest": [60, 218], "sequenc": [60, 78, 123, 170, 177, 186, 193, 207, 223, 224, 227, 228, 231, 234, 254], "protocol": [60, 205, 213, 219, 263, 265], "turn": [60, 205, 258], "memoryview": 60, "preced": [60, 210, 213, 214], "mixtur": 60, "convers": [60, 123, 207, 208, 263], "obei": [60, 123], "permit": [60, 63, 123, 212, 262], "To": [60, 102, 193, 207, 209, 210, 219, 263, 264, 266], "array_api": [60, 263], "astyp": [60, 192, 207], "exce": [60, 104, 105, 123], "sine": [61, 62, 164, 165, 176], "1j": [61, 64, 86, 87, 95, 97, 108, 164, 165, 175], "asinh": [61, 192, 207, 209], "asin": [62, 192, 207, 209], "irrespect": [63, 210], "histor": [63, 176, 259], "discard": 63, "choic": [63, 171, 187, 205, 209, 210, 214, 215, 217, 218, 259, 260, 263, 265], "arbitrari": [63, 73, 112, 138, 158, 209], "achiev": [63, 193, 209], "outcom": 63, "clariti": 63, "newli": [63, 214], "alloc": [63, 179, 180, 212, 214], "tangent": [64, 65, 66, 175, 176], "atanh": [64, 192, 207, 209], "quotient": [65, 91, 102, 193], "domain": [65, 207, 209, 210, 263, 265], "notat": 65, "denot": [65, 188, 248], "pair": [65, 102, 236, 252], "codomain": 65, "quadrant": 65, "chosen": [65, 189, 213], "angl": [65, 87, 108, 165, 176], "rai": 65, "role": 65, "coordin": [65, 124, 138, 175, 176, 218, 263], "tradit": 65, "atan": [66, 192, 207, 209], "bitwis": [67, 70, 72, 192], "flip": [68, 192], "shift": [69, 71, 159, 224, 228], "arithmet": [71, 91, 137, 142, 192, 202, 210, 263], "propag": [71, 103, 135, 137, 139, 171, 187, 209], "floor": [71, 102, 192], "anoth": [73, 75, 103, 193, 205, 207, 208, 210, 211, 213, 214, 217, 239, 252, 263, 265], "from_": 75, "smallest": [76, 99, 109, 243], "closest": [76, 101, 102, 160], "alreadi": [76, 101, 142, 160, 181, 213, 215, 260, 265], "min": [77, 99, 109, 179, 180, 188, 192, 207, 236, 243, 249, 252, 253, 257], "clamp": [77, 207], "join": [78, 170, 202], "befor": [78, 88, 152, 161, 173, 182, 183, 184, 185, 188, 207, 210, 236, 255, 263], "concaten": 78, "leav": [78, 141, 170, 193, 200, 207, 209, 211, 248], "famili": [78, 170], "intxx": [78, 170, 202], "floatxx": [78, 170, 202], "718281828459045": 80, "euler": 80, "constant": [80, 84, 192, 193, 207], "71828182845904523536028747135266249775724709369995": 80, "Not": 82, "alia": [83, 116, 193, 207, 242, 246, 254, 256], "141592653589793": 84, "1415926535897932384626433": 84, "compos": [85, 202, 207], "begin": [86, 162, 164, 175, 176, 193, 200, 250, 265], "align": [86, 164, 175, 176, 207, 209, 264], "sum_": [86, 188], "2n": [86, 124], "jx": [86, 164, 175], "cosh": [86, 176, 192, 207, 209], "period": [87, 165, 175, 176], "ci": [87, 95, 97, 165, 265], "v": [87, 95, 97, 161, 165, 216, 248, 252, 263], "co": [87, 95, 97, 165, 192, 207, 209], "sin": [87, 95, 97, 165, 192, 207, 209, 211, 219], "include_initi": 88, "cumul": [88, 207], "unless": [88, 142, 152, 173, 192, 255], "smaller": [88, 152, 159, 173, 255, 265], "latter": [88, 102, 152, 173, 193, 205, 210, 213, 255, 264], "help": [88, 152, 173, 208, 209, 218, 255], "prevent": [88, 152, 173, 255], "initi": [88, 211, 263], "ident": [88, 188, 210, 228, 240, 241, 244, 263], "success": [88, 152, 173, 255], "discret": [90, 221, 222, 223, 225, 226, 227, 229, 230, 231, 232, 233, 234], "forward": [90, 221, 223, 225, 226, 227, 229, 230, 231, 232, 234, 263], "recurs": 90, "final": [90, 260], "dividend": [91, 102, 155], "divisor": [91, 102, 155, 171, 187], "small": [91, 102, 142, 209, 245, 248, 250, 263, 265], "gener": [91, 123, 142, 155, 177, 205, 208, 210, 215, 259, 263, 264], "textbook": [91, 142], "formula": [91, 125, 127, 142], "ac": [91, 142, 210], "bd": [91, 142], "bc": [91, 142, 210], "riemann": [91, 142, 210], "sphere": [91, 142, 210], "infinit": [91, 112, 142, 167, 209, 210], "usual": [91, 142, 263], "interest": [91, 142, 209], "unlik": [91, 142, 260, 263], "consist": [91, 102, 116, 117, 123, 142, 161, 177, 193, 200, 210, 214, 219, 230, 231, 232, 234, 239, 248, 259, 263], "uniniti": [92, 93], "deriv": [93, 105, 148, 191, 193, 215, 264], "natur": [95, 124, 125, 126, 127, 151, 250, 259], "logarithm": [95, 124, 125, 126, 127, 128, 151, 250, 259], "expand": [96, 193, 265], "close": [96, 97, 123, 126, 160, 193, 263, 265], "indexerror": [96, 193], "exp": [97, 128, 151, 192, 207, 209, 250], "accur": [97, 126, 209, 250], "fdlibm": [97, 126, 209], "n_row": 98, "n_col": 98, "ones": [98, 148, 178, 192, 207, 211, 215, 263], "diagon": [98, 179, 180, 239, 248, 249, 255, 259], "elsewher": [98, 189, 210], "row": [98, 145, 156, 193, 243, 249, 251, 252], "column": [98, 239, 243, 249, 251, 252, 263], "finfo_object": [99, 207], "machin": [99, 109, 245, 248, 263], "inform": [99, 109, 263, 264, 265, 266], "occupi": [99, 109], "ep": [99, 245, 248, 263], "next": [99, 144, 263], "largest": [99, 109, 243, 252, 253], "smallest_norm": 99, "full": [99, 192, 207, 211, 249, 251, 252, 265], "preserv": [100, 161, 193, 207, 210, 214], "reorder": [100, 141], "greatest": [101, 102], "238": 102, "goal": [102, 208, 211, 259, 265], "disambigu": 102, "toward": [102, 159, 209, 259, 264], "former": [102, 193, 210, 264], "overload": [102, 259], "led": 102, "subtl": 102, "bug": [102, 265, 266], "expect": [102, 116, 176, 202, 207, 209, 210, 212, 213, 214, 215, 219, 263], "design": [102, 207, 209, 261, 263, 265, 266], "ill": [102, 259], "diverg": [102, 266], "strictli": 102, "relat": [102, 193, 210, 214, 218, 259, 263, 265], "surpris": [102, 210], "unexpect": [102, 210, 215, 263], "enough": [103, 205, 208, 219, 258, 260, 263], "materi": [103, 213], "attributeerror": [103, 213], "present": [103, 116, 211, 212, 214, 258, 259, 260, 263], "suggest": [103, 265], "correctli": [103, 209], "move": [103, 141, 207, 214, 265], "agnost": 103, "fashion": 103, "illustr": [103, 211, 219], "def": [103, 219, 263, 264, 265], "func": 103, "xp_x": 103, "__array_namespace__": [103, 192, 220, 259, 263], "xp_y": 103, "work": [103, 208, 211, 213, 219, 263, 265, 266], "xxxxx": 103, "address": [103, 207, 259, 263, 264, 265], "unsupport": [103, 207], "fill_valu": [104, 105], "squar": [108, 167, 192, 207, 210, 235, 237, 239, 240, 241, 244, 248, 250, 251, 259], "root": [108, 167, 207, 210, 240], "hypotenus": 108, "triangl": 108, "side": [108, 161, 193, 213], "naiv": 108, "correct": [108, 171, 187, 211], "iinfo_object": [109, 207], "inspect": [111, 192], "util": [111, 192, 195, 207, 260, 263, 264], "class": [111, 195, 219, 263, 264], "xp": [111, 220, 258, 259, 263], "capabl": [111, 192, 195, 207], "default_dtyp": [111, 192, 207], "dictionari": [112, 114, 116, 207], "fulli": [112, 214], "complianc": 112, "exclud": [112, 123, 193, 202], "demarc": [112, 212], "throughout": 112, "defaultdatatyp": 114, "concept": [114, 116, 193, 211, 263], "context": [114, 116, 210, 214, 264], "manag": [114, 116, 208, 214], "runtim": [115, 218, 219, 260, 263, 265], "creation": [115, 192, 205, 214, 263], "datatyp": 116, "decid": [116, 263], "belong": [116, 117, 211], "shorthand": [116, 117, 193], "canon": 116, "float16": 117, "bfloat16": [117, 263], "int128": 117, "short": [117, 210, 263, 264], "extend": [117, 193, 210, 263], "extens": [117, 261, 265], "num": 123, "endpoint": 123, "delta_": 123, "textrm": [123, 162, 250], "sampl": [123, 171, 187, 222, 228, 233, 264], "nonneg": [123, 177, 193], "concern": [123, 156, 174, 207, 214, 218, 263], "polar": 124, "r": [124, 178, 193, 235, 239, 240, 241, 249, 251, 252, 263, 265], "theta": 124, "continu": [124, 126, 151, 167, 210, 239, 252, 263], "account": [124, 126, 151, 167, 263], "log_": [125, 127], "log": [125, 126, 127, 128, 151, 192, 207, 209], "mxn": [134, 179, 180, 238, 243, 245, 248, 249, 255], "sentinel": [135, 139], "xy": 138, "grid": 138, "cartesian": 138, "ij": 138, "effect": [138, 171, 187, 214, 266], "ni": 138, "n3": 138, "nn": 138, "three": [138, 214], "p": [138, 240, 243, 257], "sourc": [141, 264, 266], "destin": 141, "uniqu": [141, 177, 182, 183, 184, 185, 207, 210, 223, 224, 227, 228, 231, 234, 239, 241, 249, 251, 252, 259], "state": [142, 192, 193, 263], "cdot": [142, 164, 168, 175, 188], "y_i": [143, 150], "direct": [144, 208, 263, 264], "build": [145, 156, 182, 183, 184, 185, 193, 205, 212, 218, 263], "jax": [145, 156, 182, 183, 184, 185, 193, 211, 212, 263, 264, 265], "dask": [145, 156, 182, 183, 184, 185, 193, 211, 212, 218, 263, 264, 265], "etc": [145, 156, 182, 183, 184, 185, 193, 212, 260], "find": [145, 156, 161, 182, 183, 184, 185, 193, 207, 212, 263, 264], "difficult": [145, 156, 182, 183, 184, 185, 193, 209, 212, 263], "omit": [145, 156, 182, 183, 184, 185, 193, 212, 213, 217], "section": [145, 156, 182, 183, 184, 185, 193, 207, 208, 212, 213, 214, 215, 219, 263, 265], "typl": 145, "total": [145, 171, 187, 210], "style": [145, 156, 193], "odd": [151, 222, 228, 230, 231, 233], "treat": [151, 178], "carefulli": 151, "That": [155, 193, 205, 215, 219, 263], "primarili": 155, "basi": 156, "liter": [156, 161, 221, 223, 225, 226, 227, 229, 230, 231, 232, 234, 243, 249, 257], "repetit": [156, 178], "prod": [156, 192, 207, 223, 227, 231, 234], "caus": 156, "advis": [156, 176, 211, 259], "regard": [156, 174, 207, 215, 259, 265], "degrad": 156, "One": [157, 217, 263, 266], "arrays_and_dtyp": 158, "restor": 159, "counterpart": 160, "sorter": 161, "control": [161, 214, 217, 218], "land": 161, "exactli": [161, 175, 176], "edg": 161, "satisfi": [161, 178, 192, 193, 209, 210, 264], "condit": [161, 189, 217, 262], "what": [161, 205, 213, 215, 219, 259, 263, 264, 265, 266], "constitut": [161, 171, 187], "among": [161, 209, 210, 259], "argsort": [161, 192], "invok": [161, 264], "signum": 162, "whenev": [163, 265], "2j": 164, "sinh": [164, 176, 192, 207, 209], "indistinguish": [167, 193, 209], "degre": [171, 187, 240, 259], "freedom": [171, 187], "adjust": [171, 187, 263], "popul": [171, 187], "bessel": [171, 187, 208], "conceptu": 174, "mutat": 174, "check": [174, 193, 209, 235, 239, 240, 249, 251, 258, 265, 266], "select": [174, 193, 263], "analyt": [175, 176, 210], "pole": [175, 176], "tanh": [175, 192, 207, 209], "stem": [176, 239, 252], "patch": 176, "tensor": [177, 259, 263, 265], "contract": [177, 188, 259, 262], "outer": [177, 207], "dot": [177, 188, 259], "x1_ax": 177, "x2_ax": 177, "triangular": [179, 180, 235, 249], "closer": 181, "reconstruct": [182, 184], "distinct": [182, 183, 184, 185, 210, 259], "inverse_indic": [182, 184], "exact": [182, 184, 219], "aggreg": [182, 183], "namedtupl": [182, 183, 184, 239, 249, 250, 252, 259], "third": [182, 252], "fourth": 182, "split": [186, 207], "varianc": 187, "unbias": 187, "mathbf": 188, "overlin": [188, 248], "a_i": 188, "b_i": 188, "restrict": [188, 236, 259, 262], "yield": [189, 210], "signatur": [192, 205, 219, 263, 264], "subset": [192, 209, 264, 265], "categori": 192, "accuraci": [192, 216, 221, 223, 226, 227, 230, 231, 232, 234], "reflect": 192, "mt": 192, "__abs__": [192, 207], "__bool__": [192, 207, 217], "__complex__": [192, 207, 217], "__float__": [192, 207, 217], "__getitem__": [192, 193, 207], "__index__": [192, 207, 217], "__int__": [192, 207, 217], "to_devic": [192, 207, 214], "overview": 192, "algorithm": [192, 209, 250, 265], "inf": [192, 243, 257, 263], "newaxi": [192, 193, 207], "arang": [192, 264], "asarrai": [192, 207, 213, 265], "empty_lik": 192, "ey": [192, 207], "full_lik": [192, 207], "linspac": [192, 207], "meshgrid": [192, 207], "ones_lik": [192, 207], "tril": 192, "triu": 192, "zeros_lik": 192, "can_cast": 192, "finfo": [192, 207], "iinfo": [192, 207], "result_typ": 192, "acosh": [192, 207, 209], "atan2": [192, 209], "clip": [192, 193, 207], "copysign": [192, 207], "expm1": [192, 207, 209], "hypot": [192, 207], "isfinit": [192, 207], "isinf": [192, 207], "isnan": [192, 207], "log1p": [192, 207, 209], "log2": [192, 207, 209], "log10": [192, 207, 209], "logaddexp": 192, "logical_and": 192, "logical_not": 192, "logical_or": 192, "logical_xor": 192, "nextaft": 192, "reciproc": [192, 248], "signbit": [192, 207], "tan": [192, 207, 209], "trunc": [192, 207], "syntax": [192, 211, 213, 215, 263], "__array_namespace_info__": [192, 195, 207], "default_devic": [192, 207], "linear": [192, 210, 251, 258], "algebra": [192, 210, 248, 258], "matrix_transpos": [192, 259], "tensordot": [192, 207, 259], "vecdot": [192, 207, 259], "manipul": 192, "broadcast_arrai": 192, "broadcast_to": 192, "concat": 192, "expand_dim": [192, 193], "moveaxi": [192, 207], "reshap": [192, 193], "roll": 192, "squeez": 192, "tile": [192, 207], "unstack": [192, 207], "argmax": 192, "argmin": 192, "searchsort": [192, 207], "unique_al": [192, 207], "unique_count": [192, 207], "unique_invers": [192, 207], "unique_valu": [192, 207], "statist": 192, "cumulative_sum": [192, 207], "diff": 192, "__array_api_version__": [192, 204, 207, 260], "syntact": 193, "sugar": 193, "term": [193, 214, 259, 264], "colon": 193, "contrast": [193, 210, 217, 259], "combin": [193, 211, 218, 259], "basic": 193, "noth": 193, "perspect": 193, "item": [193, 211, 263], "2k": 193, "3k": 193, "q": [193, 239, 249], "obtain": [193, 262], "qk": 193, "being": [193, 213, 214, 259, 263, 266], "100": [193, 217, 260], "junk": 193, "consider": [193, 211, 259], "comma": 193, "separ": [193, 207, 213, 258], "exp1": 193, "exp2": 193, "expn": 193, "forth": 193, "decreas": [193, 259], "entri": [193, 223, 224, 227, 228, 231, 234, 263], "retain": 193, "invoc": 193, "manner": [193, 213, 215], "sympi": 193, "flat": 193, "attempt": [193, 209, 210, 211, 214, 215, 263, 265], "dynam": 193, "mask": [193, 263], "filter": 193, "s1": 193, "sm": 193, "s2": 193, "sn": 193, "prohibit": [193, 211], "replac": [193, 217, 248, 266], "iter": 193, "programmat": 195, "queri": 195, "reli": [200, 208, 210, 212, 219, 265], "them": [200, 208, 211, 215, 263, 265], "reproduc": [200, 209], "high": [202, 213, 214, 259, 263], "diagram": [202, 263], "lattic": 202, "particip": [202, 210], "matter": [202, 208, 210], "dash": 202, "undefin": [202, 259], "connect": [202, 262], "rather": [202, 205, 208, 214, 215, 218, 259, 263], "i2": 202, "i1": 202, "i4": 202, "i8": 202, "u1": 202, "u2": 202, "u4": 202, "u8": 202, "f8": 202, "c8": 202, "c16": 202, "regardless": 202, "subject": [202, 250, 262], "met": 202, "give": [202, 210, 213, 214], "No": [205, 260], "run": [205, 264, 265], "varieti": 205, "architectur": 205, "gpu": [205, 213, 214, 265], "distribut": [205, 209, 213, 214, 218, 262], "system": [205, 251, 263], "tpu": [205, 213], "emerg": [205, 213, 263], "instal": [205, 263, 266], "emploi": [205, 212, 214], "parallel": [205, 216, 263, 265], "jit": [205, 208, 263], "put": [205, 263, 265], "constraint": [205, 210, 261], "predict": 205, "itself": [205, 213, 217, 265], "motiv": 205, "importantli": 205, "awar": [205, 219, 265], "layer": [205, 218, 263, 265], "coupl": 205, "downstream": [205, 258, 263, 264], "import": [205, 208, 214, 217, 258, 259, 263, 265, 266], "structur": [205, 219, 263, 264], "interoper": [205, 213], "share": [205, 263], "though": [205, 219, 263, 265], "soft": 205, "arraylib_nam": 205, "constrain": [205, 209], "unwil": 205, "signific": [205, 209, 211, 263], "adopt": [205, 210, 213, 265], "primari": [205, 213], "write": [205, 211, 263, 265], "consequ": [205, 219, 263], "easi": [205, 258], "unambigu": [205, 211, 213, 264], "clear": [205, 211, 213, 263, 265], "significantli": 205, "detract": 205, "experi": [205, 260], "strict": [205, 211], "typic": [205, 211, 213, 215, 260, 263, 265, 266], "good": [205, 208, 211, 214, 219, 263], "anyth": [205, 263], "thin": 205, "conveni": 205, "plan": [206, 263], "previou": [207, 265], "gh": [207, 265], "613": 207, "687": 207, "eager": [207, 216, 263], "708": 207, "revis": [207, 210, 214], "702": 207, "relax": 207, "730": 207, "749": 207, "intrins": 207, "652": 207, "602": 207, "741": 207, "665": 207, "751": 207, "701": 207, "625": 207, "742": 207, "752": 207, "fft": [207, 220, 223, 225, 226, 227, 229, 230, 231, 232, 234], "720": 207, "746": 207, "backport": 207, "689": 207, "715": 207, "693": 207, "653": 207, "703": 207, "713": 207, "656": 207, "690": 207, "699": 207, "705": 207, "692": 207, "604": 207, "740": 207, "fftn": [207, 227], "hfft": 207, "ifft": [207, 221], "ifftn": [207, 223], "irfft": [207, 232, 233], "irfftn": [207, 234], "fftfreq": 207, "rfftfreq": 207, "linalg": [207, 258, 259], "trace": [207, 211, 259, 264], "fix": [207, 214, 263, 265], "clarif": 207, "674": 207, "736": 207, "typo": 207, "633": 207, "681": 207, "706": 207, "miss": [207, 263], "639": 207, "issu": [207, 208, 210, 211, 213, 214, 218, 263, 265], "qr": 207, "661": 207, "choleski": [207, 259], "677": 207, "svd": [207, 248], "619": 207, "666": [207, 264], "644": 207, "622": 207, "723": 207, "497": 207, "498": 207, "546": 207, "525": 207, "528": 207, "557": 207, "529": 207, "448": 207, "447": 207, "537": 207, "526": 207, "554": 207, "517": 207, "520": 207, "521": 207, "522": 207, "523": 207, "524": 207, "442": 207, "434": 207, "445": 207, "454": 207, "453": 207, "436": 207, "451": 207, "452": 207, "484": 207, "435": 207, "531": 207, "530": 207, "532": 207, "568": 207, "514": 207, "534": 207, "536": 207, "437": 207, "441": 207, "438": 207, "553": 207, "440": [207, 260], "556": 207, "457": 207, "456": 207, "552": 207, "461": 207, "538": 207, "459": 207, "458": 207, "558": 207, "540": 207, "512": 207, "470": 207, "417": 207, "502": 207, "443": 207, "559": 207, "det": [207, 240, 250], "542": 207, "eigh": [207, 259], "543": 207, "eigvalsh": [207, 259], "547": 207, "matrix_norm": 207, "565": 207, "matrix_pow": 207, "549": 207, "matrix_rank": 207, "563": 207, "560": 207, "pinv": 207, "564": 207, "548": 207, "slogdet": [207, 259], "567": 207, "solv": [207, 219, 248], "566": 207, "561": 207, "svdval": 207, "562": 207, "541": 207, "vector_norm": 207, "550": [207, 265], "418": 207, "491": 207, "513": 207, "variabl": [207, 218, 251, 266], "515": 207, "527": 207, "573": 207, "480": 207, "485": 207, "496": 207, "503": 207, "427": 207, "416": 207, "fast": 207, "fourier": [207, 221, 222, 223, 225, 226, 227, 229, 230, 231, 232, 233, 234, 258], "transform": [207, 221, 222, 223, 225, 226, 227, 229, 230, 231, 232, 233, 234, 258, 264], "189": 207, "rfft": [207, 230, 233], "rfftn": [207, 231], "irfttn": 207, "fftshift": [207, 228], "ifftshift": 207, "464": 207, "429": 207, "439": 207, "572": 207, "510": 207, "511": 207, "473": 207, "scope": [208, 217, 218, 261, 264], "mention": [208, 215, 265], "There": [208, 211, 213, 214, 219, 263, 265, 266], "deal": [208, 218, 219, 260, 262], "assumpt": [208, 213, 260, 261, 263], "rest": [208, 263, 265], "ndarrai": [208, 213, 263, 265], "visual": 208, "often": [208, 210, 215, 259, 263, 264, 265], "difficulti": [208, 212], "relev": [208, 214, 219, 263], "certainti": 208, "inde": 208, "project": [208, 210, 213, 265], "statsmodel": 208, "scikit": [208, 218, 263, 264, 265], "bio": [208, 265], "qutip": 208, "strategi": [208, 214], "learn": [208, 218, 263, 264, 265], "submodul": [208, 258], "doesn": [208, 214, 263], "cupi": [208, 211, 263, 264, 265], "elementwisekernel": 208, "scipi": [208, 218, 263, 264], "astropi": [208, 265], "seem": [208, 213, 265], "almost": [208, 265], "inevit": 208, "someth": [208, 211, 263], "numba": [208, 213, 263, 265], "sens": [208, 217, 263, 265], "tend": [208, 211, 265], "reimplement": 208, "gamma": 208, "drop": [208, 219, 249, 252], "arraylib": 208, "cpython": 208, "backend": [208, 218, 263], "target": [208, 214], "better": [208, 265], "pypi": [208, 264, 265], "quit": [208, 263, 265], "readi": 208, "mainstream": 208, "todai": [208, 211, 259], "onc": [208, 260], "feasibl": [208, 263], "roundtiestoeven": 209, "ti": [209, 259, 263], "certain": [209, 210, 259], "boundari": 209, "reader": 209, "identifi": [209, 214, 264], "lack": 209, "phrase": [209, 215], "recogn": [209, 214], "seek": [209, 259, 264], "optim": [209, 211, 259, 265], "latitud": 209, "although": [209, 228, 250], "freeli": 209, "sun": 209, "microsystem": 209, "With": [209, 264, 265], "imposs": [209, 211, 212, 266], "suit": [209, 261, 263, 264], "span": 209, "report": 209, "averag": 209, "aid": [209, 266], "best": [209, 213, 259, 263], "effort": [209, 264], "theoret": 209, "sound": 209, "robust": 209, "bare": 209, "summat": [209, 259], "unfortun": 209, "impos": [209, 212], "rigor": 209, "sever": [209, 211, 260, 263], "curtail": 209, "unduli": 209, "topologi": 210, "continuum": 210, "onto": [210, 211], "surfac": [210, 263], "stereograph": 210, "coalesc": 210, "3j": 210, "4j": 210, "convei": 210, "niceti": 210, "translat": [210, 265], "neq": 210, "arriv": [210, 263], "opposit": 210, "subtleti": 210, "craft": 210, "intuit": 210, "julia": [210, 265], "minim": [210, 214], "imperfect": 210, "balanc": 210, "appear": [210, 260, 263, 266], "embrac": 210, "transcendent": 210, "wholli": 210, "analysi": [210, 211, 212, 263, 264, 265], "curv": [210, 263], "discontinu": [210, 265], "taken": [210, 263], "pm": 210, "whole": 210, "simpl": [210, 211, 260], "aris": [210, 259, 262, 263], "trigonometr": 210, "domin": 210, "a_1": 210, "ldot": 210, "a_n": 210, "reflex": 210, "leq": 210, "transit": 210, "antisymmetr": 210, "partial": 210, "establish": [210, 264], "six": 210, "lexicograph": 210, "principl": [210, 264], "situat": [210, 211, 213, 214, 215, 263, 265], "unit": [210, 222, 233], "despit": [210, 213], "admonit": [211, 212], "becom": [211, 213, 263, 265], "trigger": [211, 217], "confid": 211, "pytorch": [211, 214, 263, 264, 265], "mxnet": [211, 263, 264, 265], "save": 211, "faster": 211, "tensorflow": [211, 263, 264, 265], "fundament": [211, 263], "inplac": 211, "update_index": 211, "idx": 211, "solut": [211, 248, 251, 265], "hard": [211, 213, 214, 217, 263], "go": [211, 260], "down": 211, "rout": 211, "val": [211, 217], "veri": [211, 250, 265], "wide": [211, 213, 249, 252, 263], "slightli": 211, "heavili": [211, 265], "you": [211, 266], "_must_": 211, "abstract": [211, 259, 264], "donat": 211, "lapack": [211, 259], "_may_": 211, "overwrit": 211, "whatev": 211, "fastest": 211, "aren": [211, 263], "longer": [211, 259], "problem": [211, 219, 248, 264, 265], "upon": [212, 263], "ahead": 212, "burden": [212, 263], "omiss": 212, "nativ": 213, "layout": 213, "packag": [213, 219, 260, 263, 264, 265], "live": [213, 263], "figur": 213, "contigu": 213, "promin": [213, 263], "releas": [213, 260, 264], "candid": [213, 263], "__cuda_array_interface__": 213, "moment": 213, "tri": [213, 265], "growth": 213, "amd": 213, "undesir": 213, "pattern": [213, 214, 218, 264, 265], "widest": 213, "lot": 213, "3118": 213, "hardli": 213, "mostli": [213, 217, 218, 263], "dealt": [213, 219], "__array__": [213, 265], "attach": 213, "hold": [213, 259], "rfc": [213, 263], "http": [213, 260, 266], "dmlc": 213, "github": [213, 260, 262, 266], "io": 213, "page": [213, 265], "standalon": [213, 266], "outlin": [213, 263], "cover": [213, 263, 266], "usag": [213, 258, 263], "node": 213, "spars": [213, 263], "why": [213, 263], "complet": [213, 218, 249, 260, 263, 265], "scale": 214, "exert": 214, "placement": 214, "global": 214, "switchabl": 214, "transfer": 214, "granular": 214, "downsid": 214, "verbos": 214, "much": [214, 263, 266], "kept": 214, "instanti": 214, "physic": 214, "revisit": 214, "themselv": 214, "expos": [214, 259], "bewar": 214, "framework": [214, 263], "elabor": 214, "polici": 214, "highest": 214, "prioriti": 214, "topic": [214, 218, 261, 263, 265], "pin": 214, "tricki": 214, "sinc": 214, "emit": 215, "misbehav": 215, "forese": 215, "extent": 215, "builtin": 215, "author": [215, 262, 263, 264, 265], "worth": 215, "compli": 215, "aspect": [217, 266], "impact": [217, 263], "prescrib": 217, "show": 217, "up": [217, 249, 258, 265], "five": 217, "dunder": [217, 260], "serial": 217, "compute_someth": 217, "statement": 217, "do_something_els": 217, "flow": 217, "cond": 217, "won": 218, "further": 218, "exercis": 218, "environ": [218, 259, 263, 266], "bla": [218, 259], "openmp": 218, "n_job": [218, 265], "worker": [218, 265], "chunk": 218, "approach": [218, 263, 264], "auto": [218, 265], "thing": 218, "improv": [218, 263, 265], "fit": [218, 262, 263, 265], "becam": [219, 263], "progress": [219, 266], "superclass": 219, "_basearrai": 219, "subclass": [219, 263], "insid": [219, 258], "typevar": 219, "variat": [219, 264], "don": [219, 265], "said": 219, "subtyp": 219, "hasattr": [220, 258, 259, 263], "ortho": [221, 223, 225, 226, 227, 229, 230, 231, 232, 234], "pad": [221, 223, 225, 226, 227, 229, 230, 231, 232, 234], "trim": [221, 223, 225, 226, 227, 229, 230, 231, 232, 234], "orthonorm": [221, 223, 225, 226, 227, 229, 230, 231, 232, 234, 249, 252], "frequenc": [222, 224, 233, 260, 264], "f": [222, 233], "window": [222, 233], "center": 224, "spectrum": 224, "swap": 224, "nyquist": [224, 233], "hermitian": [225, 229, 235, 239, 240], "symmetri": [225, 229], "decomposit": [235, 239, 248, 249, 252, 253, 259], "symmetr": [235, 239, 240], "mathbb": [235, 239, 240, 241, 249, 251, 252], "ll": 235, "h": [235, 239, 248, 252], "qquad": 235, "text": 235, "factor": [235, 252], "offset": [238, 255], "off": [238, 255], "eigenvalu": [239, 240, 259], "lambda": [239, 240], "orthogon": [239, 248, 249, 252, 259], "unitari": [239, 249, 252], "eigenvector": [239, 259], "softwar": [239, 252, 262, 263, 265], "fact": [239, 252], "phi": [239, 252], "eig": 239, "diag": [239, 252], "polynomi": [240, 263], "i_n": [240, 241], "eigval": 240, "xx": 241, "ord": [243, 257], "fro": 243, "nuc": 243, "frobeniu": 243, "nuclear": 243, "singular": [243, 245, 248, 252, 253], "induc": 243, "rtol": [245, 248], "toler": [245, 248], "largest_singular_valu": [245, 248], "epsilon": [245, 248], "moor": 248, "penros": 248, "pseudo": 248, "sigma": [248, 252], "tall": [249, 252], "geq": 249, "necessarili": [249, 266], "linearli": [249, 251, 263], "logabsdet": 250, "again": 250, "equat": 251, "coeffici": 251, "ordin": 251, "full_matric": 252, "u_k": 252, "v_k": 252, "vh": 252, "adjoint": 252, "l1": 257, "manhattan": 257, "l2": 257, "euclidean": 257, "coher": 258, "extension_nam": 258, "regular": [258, 260, 263], "__getattr__": 258, "endeavor": 259, "strai": 259, "far": 259, "restraint": 259, "decis": [259, 263], "accid": 259, "especi": 259, "arisen": 259, "been": [259, 263], "process": [259, 260, 264], "afford": 259, "opportun": 259, "subsequ": [259, 264], "codifi": [259, 264], "theme": 259, "abil": 259, "decim": 259, "overli": 259, "compel": 259, "compris": 259, "prudent": 259, "lastli": 259, "polymorph": 259, "dedic": 259, "agnostic": 259, "eschew": 259, "parameter": 259, "bias": 259, "underpin": 259, "cater": 259, "low": 259, "verbatim": 259, "poor": 259, "uplo": 259, "dai": 259, "monopoli": 259, "prolifer": 259, "conserv": [259, 265], "conservat": 259, "delin": 259, "overlap": 259, "confus": [259, 263], "parsimoni": 259, "einsum": 259, "einstein": 259, "vdot": 259, "multi_dot": 259, "chain": 259, "exhibit": 259, "consolid": 259, "propos": [260, 264, 265], "com": [260, 266], "blob": 260, "master": 260, "process_docu": 260, "md": 260, "summari": [260, 264], "matur": 260, "reach": [260, 265], "world": 260, "highli": 260, "strong": 260, "updat": 260, "date": 260, "shall": [260, 262], "alpha": 260, "beta": 260, "rc": 260, "post": 260, "dev": 260, "bugfix": 260, "__version__": 260, "resembl": 260, "year": [260, 263], "evolut": [261, 263], "verif": [261, 263], "benchmark": 261, "changelog": 261, "licens": 261, "websit": 262, "repositori": [262, 264], "mit": 262, "copyright": 262, "2024": 262, "consortium": [262, 263], "contributor": 262, "permiss": 262, "herebi": 262, "grant": 262, "charg": 262, "person": 262, "file": [262, 264, 265, 266], "merg": [262, 263], "publish": [262, 264], "sublicens": 262, "sell": 262, "whom": 262, "furnish": 262, "notic": 262, "substanti": 262, "portion": 262, "THE": 262, "AS": 262, "warranti": 262, "OF": 262, "BUT": 262, "TO": 262, "merchant": 262, "FOR": 262, "noninfring": 262, "IN": 262, "NO": 262, "holder": 262, "BE": 262, "liabl": 262, "claim": 262, "damag": 262, "liabil": 262, "action": 262, "tort": 262, "WITH": 262, "wealth": 263, "scienc": 263, "deep": 263, "push": 263, "art": 263, "unintend": 263, "activ": 263, "creativ": 263, "fragment": 263, "multidimension": 263, "xarrai": [263, 264], "pick": 263, "bless": 263, "inconsist": 263, "obviou": 263, "mind": 263, "sure": 263, "rare": [263, 264], "unimport": 263, "scientif": 263, "mid": 263, "1990": 263, "earli": 263, "2000": 263, "numarrai": 263, "2005": 263, "superced": 263, "roughli": 263, "decad": 263, "past": 263, "mainli": 263, "rise": 263, "newer": 263, "inspir": [263, 265], "idea": 263, "seriou": 263, "grew": 263, "quickli": 263, "infeas": 263, "speed": 263, "innov": [263, 264], "group": 263, "assembl": 263, "draft": 263, "presenc": 263, "meta": 263, "concret": 263, "shown": 263, "core": [263, 265], "borrow": 263, "steep": 263, "switch": [263, 265], "accompani": 263, "actual": 263, "task": [263, 265], "schedul": 263, "characterist": 263, "grain": 263, "obstacl": 263, "cython": [263, 265], "datetim": 263, "void": 263, "uniformli": 263, "o": 263, "routin": 263, "bind": [263, 265], "cffi": 263, "ctype": 263, "ufunc": 263, "gufunc": 263, "extra": 263, "huge": 263, "amount": [263, 264, 265], "strength": 263, "advantag": 263, "foreign": 263, "indirect": 263, "program": 263, "pydata": 263, "weld": 263, "bohrium": 263, "arkouda": 263, "legat": 263, "grow": 263, "panda": [263, 264], "matplotlib": [263, 264], "networkx": 263, "xtensor": 263, "xnd": [263, 265], "stdlib": 263, "javascript": 263, "rust": 263, "rrai": 263, "nd4j": 263, "jvm": 263, "numsharp": 263, "dispatch": [263, 265], "pythran": 263, "transon": 263, "onnx": 263, "apach": 263, "tvm": 263, "mlir": 263, "taco": 263, "unumpi": [263, 265], "einop": 263, "arrow": 263, "consult": 263, "simplest": 263, "directli": [263, 265], "package_nam": 263, "uniform": 263, "hinder": 263, "inter": 263, "distinguish": 263, "is_array_api_obj": 263, "peopl": 263, "abc": 263, "inherit": 263, "isinst": 263, "prove": 263, "discov": 263, "assist": 263, "importlib": 263, "metadata": 263, "entry_point": 263, "dict": 263, "deprec": 263, "py3": 263, "supplant": 263, "load": 263, "path": 263, "haven": 263, "measur": 263, "isol": 263, "indispens": 263, "institut": 263, "electr": 263, "electron": 263, "engin": [263, 265], "york": 263, "scott": 263, "bradner": 263, "1997": 263, "word": 263, "2119": 263, "doi": 263, "17487": 263, "rfc2119": 263, "technic": 264, "vacuum": 264, "sometim": 264, "compet": 264, "friction": 264, "focu": 264, "accommod": [264, 265], "foo": 264, "bar": 264, "aspir": 264, "experiment": 264, "channel": 264, "resourc": [264, 265], "novel": 264, "thwart": 264, "reinvent": 264, "proverbi": 264, "wheel": 264, "foundat": 264, "articul": 264, "quantifi": 264, "analyz": 264, "ground": [264, 266], "empir": 264, "acquir": 264, "scrape": 264, "unifi": [264, 265], "extract": 264, "intersect": 264, "complement": 264, "suitabl": 264, "preval": 264, "eas": 264, "leverag": 264, "summar": 264, "tool": [264, 265], "explor": 264, "instrument": 264, "record": 264, "collect": 264, "json": 264, "human": 264, "docstr": 264, "_0": 264, "_arg": 264, "347": 264, "359": 264, "894": 264, "1173": 264, "skimag": 264, "174": 264, "sklearn": 264, "373": 264, "publicli": 264, "stori": 264, "broad": 264, "wider": 265, "wrap": 265, "familiar": 265, "survei": 265, "advanc": 265, "research": 265, "nsf": 265, "pain": 265, "brought": 265, "wish": 265, "multiprocess": 265, "shorten": 265, "fortran": 265, "easili": [265, 266], "pure": 265, "manual": 265, "Then": 265, "hoc": 265, "critic": 265, "corner": 265, "tractabl": 265, "spectral": 265, "periodogram": 265, "spectrogram": 265, "csd": 265, "welch": 265, "stft": 265, "istft": 265, "lombscargl": 265, "40": 265, "sai": [265, 266], "ineffici": 265, "x_np": 265, "asnumpi": 265, "freq": 265, "pxx": 265, "back": 265, "torch": 265, "littl": 265, "flexibl": 265, "py": [265, 266], "rearrang": 265, "_backend": 265, "glue": 265, "loc": 265, "some_func": 265, "get_backend": 265, "disappear": 265, "serv": 265, "50": 265, "tensorli": 265, "kera": 265, "eagerpi": 265, "notabl": 265, "suboptim": 265, "readili": 265, "cpyext": 265, "unsuccess": 265, "xla": 265, "vta": 265, "jump": 265, "hoop": 265, "attain": 265, "got": 265, "cfunc": 265, "np": 265, "assert_array_almost_equ": 265, "pyfunc": 265, "pyarray_cancastarrayto": 265, "assertequ": 265, "spec": 266, "clone": 266, "repo": 266, "pip": 266, "pytest": 266, "hypothesi": 266, "conda": 266, "array_api_tests_modul": 266, "edit": 266, "array_api_test": 266, "_array_modul": 266, "array_modul": 266, "command": 266, "asid": 266, "vendor": 266, "readm": 266}, "objects": {"array_api": [[8, 0, 1, "", "__array_api_version__"], [9, 1, 1, "", "abs"], [10, 1, 1, "", "acos"], [11, 1, 1, "", "acosh"], [12, 1, 1, "", "add"], [13, 1, 1, "", "all"], [14, 1, 1, "", "any"], [15, 1, 1, "", "arange"], [16, 1, 1, "", "argmax"], [17, 1, 1, "", "argmin"], [18, 1, 1, "", "argsort"], [60, 1, 1, "", "asarray"], [61, 1, 1, "", "asin"], [62, 1, 1, "", "asinh"], [63, 1, 1, "", "astype"], [64, 1, 1, "", "atan"], [65, 1, 1, "", "atan2"], [66, 1, 1, "", "atanh"], [67, 1, 1, "", "bitwise_and"], [68, 1, 1, "", "bitwise_invert"], [69, 1, 1, "", "bitwise_left_shift"], [70, 1, 1, "", "bitwise_or"], [71, 1, 1, "", "bitwise_right_shift"], [72, 1, 1, "", "bitwise_xor"], [73, 1, 1, "", "broadcast_arrays"], [74, 1, 1, "", "broadcast_to"], [75, 1, 1, "", "can_cast"], [76, 1, 1, "", "ceil"], [77, 1, 1, "", "clip"], [78, 1, 1, "", "concat"], [79, 1, 1, "", "conj"], [85, 1, 1, "", "copysign"], [86, 1, 1, "", "cos"], [87, 1, 1, "", "cosh"], [88, 1, 1, "", "cumulative_sum"], [90, 1, 1, "", "diff"], [91, 1, 1, "", "divide"], [92, 1, 1, "", "empty"], [93, 1, 1, "", "empty_like"], [94, 1, 1, "", "equal"], [95, 1, 1, "", "exp"], [96, 1, 1, "", "expand_dims"], [97, 1, 1, "", "expm1"], [98, 1, 1, "", "eye"], [99, 1, 1, "", "finfo"], [100, 1, 1, "", "flip"], [101, 1, 1, "", "floor"], [102, 1, 1, "", "floor_divide"], [103, 1, 1, "", "from_dlpack"], [104, 1, 1, "", "full"], [105, 1, 1, "", "full_like"], [106, 1, 1, "", "greater"], [107, 1, 1, "", "greater_equal"], [108, 1, 1, "", "hypot"], [109, 1, 1, "", "iinfo"], [110, 1, 1, "", "imag"], [117, 1, 1, "", "isdtype"], [118, 1, 1, "", "isfinite"], [119, 1, 1, "", "isinf"], [120, 1, 1, "", "isnan"], [121, 1, 1, "", "less"], [122, 1, 1, "", "less_equal"], [123, 1, 1, "", "linspace"], [124, 1, 1, "", "log"], [125, 1, 1, "", "log10"], [126, 1, 1, "", "log1p"], [127, 1, 1, "", "log2"], [128, 1, 1, "", "logaddexp"], [129, 1, 1, "", "logical_and"], [130, 1, 1, "", "logical_not"], [131, 1, 1, "", "logical_or"], [132, 1, 1, "", "logical_xor"], [133, 1, 1, "", "matmul"], [134, 1, 1, "", "matrix_transpose"], [135, 1, 1, "", "max"], [136, 1, 1, "", "maximum"], [137, 1, 1, "", "mean"], [138, 1, 1, "", "meshgrid"], [139, 1, 1, "", "min"], [140, 1, 1, "", "minimum"], [141, 1, 1, "", "moveaxis"], [142, 1, 1, "", "multiply"], [143, 1, 1, "", "negative"], [144, 1, 1, "", "nextafter"], [145, 1, 1, "", "nonzero"], [146, 1, 1, "", "not_equal"], [147, 1, 1, "", "ones"], [148, 1, 1, "", "ones_like"], [149, 1, 1, "", "permute_dims"], [150, 1, 1, "", "positive"], [151, 1, 1, "", "pow"], [152, 1, 1, "", "prod"], [153, 1, 1, "", "real"], [154, 1, 1, "", "reciprocal"], [155, 1, 1, "", "remainder"], [156, 1, 1, "", "repeat"], [157, 1, 1, "", "reshape"], [158, 1, 1, "", "result_type"], [159, 1, 1, "", "roll"], [160, 1, 1, "", "round"], [161, 1, 1, "", "searchsorted"], [162, 1, 1, "", "sign"], [163, 1, 1, "", "signbit"], [164, 1, 1, "", "sin"], [165, 1, 1, "", "sinh"], [166, 1, 1, "", "sort"], [167, 1, 1, "", "sqrt"], [168, 1, 1, "", "square"], [169, 1, 1, "", "squeeze"], [170, 1, 1, "", "stack"], [171, 1, 1, "", "std"], [172, 1, 1, "", "subtract"], [173, 1, 1, "", "sum"], [174, 1, 1, "", "take"], [175, 1, 1, "", "tan"], [176, 1, 1, "", "tanh"], [177, 1, 1, "", "tensordot"], [178, 1, 1, "", "tile"], [179, 1, 1, "", "tril"], [180, 1, 1, "", "triu"], [181, 1, 1, "", "trunc"], [182, 1, 1, "", "unique_all"], [183, 1, 1, "", "unique_counts"], [184, 1, 1, "", "unique_inverse"], [185, 1, 1, "", "unique_values"], [186, 1, 1, "", "unstack"], [187, 1, 1, "", "var"], [188, 1, 1, "", "vecdot"], [189, 1, 1, "", "where"], [190, 1, 1, "", "zeros"], [191, 1, 1, "", "zeros_like"]], "array_api.array": [[19, 2, 1, "", "T"], [20, 3, 1, "", "__abs__"], [21, 3, 1, "", "__add__"], [22, 3, 1, "", "__and__"], [23, 3, 1, "", "__array_namespace__"], [24, 3, 1, "", "__bool__"], [25, 3, 1, "", "__complex__"], [26, 3, 1, "", "__dlpack__"], [27, 3, 1, "", "__dlpack_device__"], [28, 3, 1, "", "__eq__"], [29, 3, 1, "", "__float__"], [30, 3, 1, "", "__floordiv__"], [31, 3, 1, "", "__ge__"], [32, 3, 1, "", "__getitem__"], [33, 3, 1, "", "__gt__"], [34, 3, 1, "", "__index__"], [35, 3, 1, "", "__int__"], [36, 3, 1, "", "__invert__"], [37, 3, 1, "", "__le__"], [38, 3, 1, "", "__lshift__"], [39, 3, 1, "", "__lt__"], [40, 3, 1, "", "__matmul__"], [41, 3, 1, "", "__mod__"], [42, 3, 1, "", "__mul__"], [43, 3, 1, "", "__ne__"], [44, 3, 1, "", "__neg__"], [45, 3, 1, "", "__or__"], [46, 3, 1, "", "__pos__"], [47, 3, 1, "", "__pow__"], [48, 3, 1, "", "__rshift__"], [49, 3, 1, "", "__setitem__"], [50, 3, 1, "", "__sub__"], [51, 3, 1, "", "__truediv__"], [52, 3, 1, "", "__xor__"], [53, 2, 1, "", "device"], [54, 2, 1, "", "dtype"], [55, 2, 1, "", "mT"], [56, 2, 1, "", "ndim"], [57, 2, 1, "", "shape"], [58, 2, 1, "", "size"], [59, 3, 1, "", "to_device"]], "array_api.constants": [[80, 0, 1, "", "e"], [81, 0, 1, "", "inf"], [82, 0, 1, "", "nan"], [83, 0, 1, "", "newaxis"], [84, 0, 1, "", "pi"]], "array_api.data_types": [[89, 1, 1, "", "__eq__"]], "array_api.fft": [[221, 1, 1, "", "fft"], [222, 1, 1, "", "fftfreq"], [223, 1, 1, "", "fftn"], [224, 1, 1, "", "fftshift"], [225, 1, 1, "", "hfft"], [226, 1, 1, "", "ifft"], [227, 1, 1, "", "ifftn"], [228, 1, 1, "", "ifftshift"], [229, 1, 1, "", "ihfft"], [230, 1, 1, "", "irfft"], [231, 1, 1, "", "irfftn"], [232, 1, 1, "", "rfft"], [233, 1, 1, "", "rfftfreq"], [234, 1, 1, "", "rfftn"]], "array_api.info": [[111, 1, 1, "", "__array_namespace_info__"], [112, 1, 1, "", "capabilities"], [113, 1, 1, "", "default_device"], [114, 1, 1, "", "default_dtypes"], [115, 1, 1, "", "devices"], [116, 1, 1, "", "dtypes"]], "array_api.linalg": [[235, 1, 1, "", "cholesky"], [236, 1, 1, "", "cross"], [237, 1, 1, "", "det"], [238, 1, 1, "", "diagonal"], [239, 1, 1, "", "eigh"], [240, 1, 1, "", "eigvalsh"], [241, 1, 1, "", "inv"], [242, 1, 1, "", "matmul"], [243, 1, 1, "", "matrix_norm"], [244, 1, 1, "", "matrix_power"], [245, 1, 1, "", "matrix_rank"], [246, 1, 1, "", "matrix_transpose"], [247, 1, 1, "", "outer"], [248, 1, 1, "", "pinv"], [249, 1, 1, "", "qr"], [250, 1, 1, "", "slogdet"], [251, 1, 1, "", "solve"], [252, 1, 1, "", "svd"], [253, 1, 1, "", "svdvals"], [254, 1, 1, "", "tensordot"], [255, 1, 1, "", "trace"], [256, 1, 1, "", "vecdot"], [257, 1, 1, "", "vector_norm"]]}, "objtypes": {"0": "py:data", "1": "py:function", "2": "py:property", "3": "py:method"}, "objnames": {"0": ["py", "data", "Python data"], "1": ["py", "function", "Python function"], "2": ["py", "property", "Python property"], "3": ["py", "method", "Python method"]}, "titleterms": {"arrai": [0, 193, 202, 261, 263, 265], "object": [0, 2, 3, 4, 5, 6, 194, 195, 196, 197, 198, 199, 200, 201, 203, 204, 220, 259, 263], "oper": [0, 209], "arithmet": [0, 209], "bitwis": 0, "comparison": 0, "In": [0, 1, 263], "place": [0, 1], "reflect": 0, "attribut": 0, "method": [0, 7], "broadcast": 1, "overview": 1, "algorithm": 1, "exampl": [1, 208], "semant": [1, 214], "constant": 2, "api": [2, 3, 4, 6, 192, 194, 195, 196, 197, 198, 199, 200, 201, 203, 204, 207, 208, 220, 259, 260, 261, 263, 265], "creation": 3, "function": [3, 4, 6, 7, 194, 196, 197, 198, 199, 200, 201, 203, 209, 220], "data": [4, 5, 145, 156, 182, 183, 184, 185, 193, 207, 212, 213, 264], "type": [4, 5, 202, 207, 219, 265], "us": [5, 205, 208, 213, 264, 265], "default": 5, "categori": 5, "element": 6, "wise": 6, "signatur": 7, "__array_api_version__": 8, "ab": 9, "aco": 10, "acosh": 11, "add": [12, 265], "all": 13, "ani": 14, "arang": 15, "argmax": 16, "argmin": 17, "argsort": 18, "t": 19, "__abs__": 20, "__add__": 21, "__and__": 22, "__array_namespace__": 23, "__bool__": 24, "__complex__": 25, "__dlpack__": 26, "tip": [26, 60], "__dlpack_device__": 27, "__eq__": [28, 89], "__float__": 29, "__floordiv__": 30, "__ge__": 31, "__getitem__": 32, "__gt__": 33, "__index__": 34, "__int__": 35, "__invert__": 36, "__le__": 37, "__lshift__": 38, "__lt__": 39, "__matmul__": 40, "__mod__": 41, "__mul__": 42, "__ne__": 43, "__neg__": 44, "__or__": 45, "__pos__": 46, "__pow__": 47, "__rshift__": 48, "__setitem__": 49, "__sub__": 50, "__truediv__": 51, "__xor__": 52, "devic": [53, 115, 208, 214], "dtype": [54, 116], "mt": 55, "ndim": 56, "shape": [57, 145, 156, 182, 183, 184, 185, 193, 212], "size": 58, "to_devic": 59, "asarrai": 60, "note": [60, 103, 123, 202], "asin": 61, "asinh": 62, "astyp": 63, "atan": 64, "atan2": 65, "atanh": 66, "bitwise_and": 67, "bitwise_invert": 68, "bitwise_left_shift": 69, "bitwise_or": 70, "bitwise_right_shift": 71, "bitwise_xor": 72, "broadcast_arrai": 73, "broadcast_to": 74, "can_cast": 75, "ceil": 76, "clip": 77, "concat": 78, "conj": 79, "e": 80, "inf": 81, "nan": 82, "newaxi": 83, "pi": 84, "copysign": 85, "co": 86, "cosh": 87, "cumulative_sum": 88, "diff": 90, "divid": 91, "empti": 92, "empty_lik": 93, "equal": 94, "exp": 95, "expand_dim": 96, "expm1": 97, "ey": 98, "finfo": 99, "flip": 100, "floor": 101, "floor_divid": 102, "from_dlpack": 103, "full": 104, "full_lik": 105, "greater": 106, "greater_equ": 107, "hypot": 108, "iinfo": 109, "imag": 110, "__array_namespace_info__": 111, "capabl": 112, "default_devic": 113, "default_dtyp": 114, "isdtyp": 117, "isfinit": 118, "isinf": 119, "isnan": 120, "less": 121, "less_equ": 122, "linspac": 123, "log": 124, "log10": 125, "log1p": 126, "log2": 127, "logaddexp": 128, "logical_and": 129, "logical_not": 130, "logical_or": 131, "logical_xor": 132, "matmul": [133, 242], "matrix_transpos": [134, 246], "max": 135, "maximum": 136, "mean": 137, "meshgrid": 138, "min": 139, "minimum": 140, "moveaxi": 141, "multipli": 142, "neg": 143, "nextaft": 144, "nonzero": 145, "depend": [145, 156, 182, 183, 184, 185, 193, 205, 212], "output": [145, 156, 182, 183, 184, 185, 193, 212], "not_equ": 146, "ones": 147, "ones_lik": 148, "permute_dim": 149, "posit": 150, "pow": 151, "prod": 152, "real": 153, "reciproc": 154, "remaind": 155, "repeat": 156, "reshap": 157, "result_typ": 158, "roll": 159, "round": 160, "searchsort": 161, "sign": [162, 202], "signbit": 163, "sin": 164, "sinh": 165, "sort": [166, 200], "sqrt": 167, "squar": 168, "squeez": 169, "stack": 170, "std": 171, "subtract": 172, "sum": 173, "take": 174, "tan": 175, "tanh": 176, "tensordot": [177, 254], "tile": 178, "tril": 179, "triu": 180, "trunc": 181, "unique_al": 182, "unique_count": 183, "unique_invers": 184, "unique_valu": 185, "unstack": 186, "var": 187, "vecdot": [188, 256], "where": 189, "zero": 190, "zeros_lik": 191, "specif": 192, "index": [193, 194], "singl": 193, "axi": 193, "slice": 193, "syntax": [193, 214], "multi": 193, "boolean": 193, "return": 193, "valu": [193, 210], "inspect": [195, 207], "linear": [196, 209, 259], "algebra": [196, 209, 259], "manipul": 197, "search": 198, "set": 199, "statist": [201, 209], "promot": [202, 210], "rule": 202, "integ": 202, "tabl": 202, "unsign": 202, "mix": 202, "float": 202, "point": 202, "python": [202, 208, 261, 265], "scalar": 202, "util": 203, "version": [204, 207, 260], "assumpt": 205, "hardwar": [205, 265], "softwar": 205, "environ": 205, "backward": [205, 260], "compat": [205, 260], "product": 205, "code": [205, 208], "interact": 205, "benchmark": 206, "suit": [206, 266], "changelog": 207, "per": 207, "standard": [207, 208, 260, 261, 263], "v2023": 207, "12": 207, "updat": 207, "norm": [207, 263], "extens": [207, 208, 220, 258, 259, 260], "addit": 207, "break": 207, "chang": 207, "errata": 207, "v2022": 207, "complex": [207, 210], "number": [207, 208, 210], "support": [207, 208, 213, 214, 265], "c": 208, "situat": 208, "cython": 208, "usag": [208, 214, 220, 259, 261, 264], "1": [208, 265], "packag": 208, "i": 208, "mostli": 208, "pure": 208, "limit": 208, "2": [208, 265], "contain": 208, "lot": 208, "3": [208, 265], "numpi": 208, "directli": 208, "other": [208, 261], "longer": 208, "term": [208, 263], "approach": 208, "further": 208, "hpy": 208, "accuraci": 209, "mathemat": 209, "The": 210, "plane": 210, "branch": 210, "cut": 210, "order": 210, "base": 210, "copi": 211, "view": 211, "behaviour": 211, "mutabl": 211, "mutat": 211, "interchang": 213, "mechan": 213, "dlpack": 213, "an": [213, 263], "memori": 213, "tensor": 213, "structur": 213, "non": [213, 263], "case": [213, 265], "intend": 214, "assign": 214, "out": [214, 263], "scope": [214, 260, 263], "except": 215, "design": [216, 259, 264], "topic": 216, "constraint": 216, "lazi": 217, "v": 217, "eager": 217, "execut": 217, "parallel": 218, "static": 219, "fourier": 220, "transform": 220, "name": [220, 259], "fft": 221, "fftfreq": 222, "fftn": 223, "fftshift": 224, "hfft": 225, "ifft": 226, "ifftn": 227, "ifftshift": 228, "ihfft": 229, "irfft": 230, "irfftn": 231, "rfft": 232, "rfftfreq": 233, "rfftn": 234, "choleski": 235, "cross": 236, "det": 237, "diagon": 238, "eigh": 239, "eigvalsh": 240, "inv": 241, "matrix_norm": 243, "matrix_pow": 244, "matrix_rank": 245, "outer": 247, "pinv": 248, "qr": 249, "slogdet": 250, "solv": 251, "svd": 252, "svdval": 253, "trace": 255, "vector_norm": 257, "modul": 258, "principl": 259, "futur": 260, "evolut": 260, "content": 261, "context": 261, "methodologi": 261, "licens": 262, "purpos": 263, "introduct": [263, 264], "thi": 263, "histori": 263, "includ": 263, "goal": 263, "implic": 263, "stakehold": 263, "how": 263, "read": 263, "document": 263, "adopt": 263, "check": 263, "complianc": 263, "discover": 263, "conform": [263, 266], "implement": 263, "option": 263, "featur": 263, "definit": 263, "refer": 263, "decis": 264, "make": [264, 265], "concret": 265, "acceler": 265, "distribut": 265, "scipi": 265, "simplifi": 265, "einop": 265, "remov": 265, "backend": 265, "system": 265, "ad": 265, "xtensor": 265, "4": 265, "jit": 265, "compil": 265, "comput": 265, "easier": 265, "more": 265, "robust": 265, "verif": 266, "test": 266, "measur": 266, "run": 266}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.todo": 2, "sphinx": 60}, "alltitles": {"Array object": [[0, "array-object"]], "Operators": [[0, "operators"]], "Arithmetic Operators": [[0, "arithmetic-operators"], [0, "id26"], [0, "id29"]], "Array Operators": [[0, "array-operators"], [0, "id27"], [0, "id30"]], "Bitwise Operators": [[0, "bitwise-operators"], [0, "id28"], [0, "id31"]], "Comparison Operators": [[0, "comparison-operators"]], "In-place Operators": [[0, "in-place-operators"]], "Reflected Operators": [[0, "reflected-operators"]], "Attributes": [[0, "attributes"]], "Methods": [[0, "methods"]], "Broadcasting": [[1, "broadcasting"]], "Overview": [[1, "overview"]], "Algorithm": [[1, "algorithm"]], "Examples": [[1, "examples"]], "In-place Semantics": [[1, "in-place-semantics"]], "Constants": [[2, "constants"]], "Objects in API": [[2, "objects-in-api"], [3, "objects-in-api"], [4, "objects-in-api"], [6, "objects-in-api"], [194, "objects-in-api"], [195, "objects-in-api"], [196, "objects-in-api"], [197, "objects-in-api"], [198, "objects-in-api"], [199, "objects-in-api"], [200, "objects-in-api"], [201, "objects-in-api"], [203, "objects-in-api"], [204, "objects-in-api"], [220, "objects-in-api"], [259, "objects-in-api"]], "Creation Functions": [[3, "creation-functions"]], "Data Type Functions": [[4, "data-type-functions"]], "Data Types": [[5, "data-types"], [207, "data-types"]], "Use of data type objects": [[5, "use-of-data-type-objects"]], "Default Data Types": [[5, "default-data-types"]], "Data Type Categories": [[5, "data-type-categories"]], "Element-wise Functions": [[6, "element-wise-functions"]], "Function and method signatures": [[7, "function-and-method-signatures"]], "__array_api_version__": [[8, "array-api-version"]], "abs": [[9, "abs"]], "acos": [[10, "acos"]], "acosh": [[11, "acosh"]], "add": [[12, "add"]], "all": [[13, "all"]], "any": [[14, "any"]], "arange": [[15, "arange"]], "argmax": [[16, "argmax"]], "argmin": [[17, "argmin"]], "argsort": [[18, "argsort"]], "T": [[19, "t"]], "__abs__": [[20, "abs"]], "__add__": [[21, "add"]], "__and__": [[22, "and"]], "__array_namespace__": [[23, "array-namespace"]], "__bool__": [[24, "bool"]], "__complex__": [[25, "complex"]], "__dlpack__": [[26, "dlpack"]], "Tip": [[26, null], [60, null]], "__dlpack_device__": [[27, "dlpack-device"]], "__eq__": [[28, "eq"], [89, "eq"]], "__float__": [[29, "float"]], "__floordiv__": [[30, "floordiv"]], "__ge__": [[31, "ge"]], "__getitem__": [[32, "getitem"]], "__gt__": [[33, "gt"]], "__index__": [[34, "index"]], "__int__": [[35, "int"]], "__invert__": [[36, "invert"]], "__le__": [[37, "le"]], "__lshift__": [[38, "lshift"]], "__lt__": [[39, "lt"]], "__matmul__": [[40, "matmul"]], "__mod__": [[41, "mod"]], "__mul__": [[42, "mul"]], "__ne__": [[43, "ne"]], "__neg__": [[44, "neg"]], "__or__": [[45, "or"]], "__pos__": [[46, "pos"]], "__pow__": [[47, "pow"]], "__rshift__": [[48, "rshift"]], "__setitem__": [[49, "setitem"]], "__sub__": [[50, "sub"]], "__truediv__": [[51, "truediv"]], "__xor__": [[52, "xor"]], "device": [[53, "device"]], "dtype": [[54, "dtype"]], "mT": [[55, "mt"]], "ndim": [[56, "ndim"]], "shape": [[57, "shape"]], "size": [[58, "size"]], "to_device": [[59, "to-device"]], "asarray": [[60, "asarray"]], "Note": [[60, null], [103, null], [123, null]], "asin": [[61, "asin"]], "asinh": [[62, "asinh"]], "astype": [[63, "astype"]], "atan": [[64, "atan"]], "atan2": [[65, "atan2"]], "atanh": [[66, "atanh"]], "bitwise_and": [[67, "bitwise-and"]], "bitwise_invert": [[68, "bitwise-invert"]], "bitwise_left_shift": [[69, "bitwise-left-shift"]], "bitwise_or": [[70, "bitwise-or"]], "bitwise_right_shift": [[71, "bitwise-right-shift"]], "bitwise_xor": [[72, "bitwise-xor"]], "broadcast_arrays": [[73, "broadcast-arrays"]], "broadcast_to": [[74, "broadcast-to"]], "can_cast": [[75, "can-cast"]], "ceil": [[76, "ceil"]], "clip": [[77, "clip"]], "concat": [[78, "concat"]], "conj": [[79, "conj"]], "e": [[80, "e"]], "inf": [[81, "inf"]], "nan": [[82, "nan"]], "newaxis": [[83, "newaxis"]], "pi": [[84, "pi"]], "copysign": [[85, "copysign"]], "cos": [[86, "cos"]], "cosh": [[87, "cosh"]], "cumulative_sum": [[88, "cumulative-sum"]], "diff": [[90, "diff"]], "divide": [[91, "divide"]], "empty": [[92, "empty"]], "empty_like": [[93, "empty-like"]], "equal": [[94, "equal"]], "exp": [[95, "exp"]], "expand_dims": [[96, "expand-dims"]], "expm1": [[97, "expm1"]], "eye": [[98, "eye"]], "finfo": [[99, "finfo"]], "flip": [[100, "flip"]], "floor": [[101, "floor"]], "floor_divide": [[102, "floor-divide"]], "from_dlpack": [[103, "from-dlpack"]], "full": [[104, "full"]], "full_like": [[105, "full-like"]], "greater": [[106, "greater"]], "greater_equal": [[107, "greater-equal"]], "hypot": [[108, "hypot"]], "iinfo": [[109, "iinfo"]], "imag": [[110, "imag"]], "__array_namespace_info__": [[111, "array-namespace-info"]], "capabilities": [[112, "capabilities"]], "default_device": [[113, "default-device"]], "default_dtypes": [[114, "default-dtypes"]], "devices": [[115, "devices"]], "dtypes": [[116, "dtypes"]], "isdtype": [[117, "isdtype"]], "isfinite": [[118, "isfinite"]], "isinf": [[119, "isinf"]], "isnan": [[120, "isnan"]], "less": [[121, "less"]], "less_equal": [[122, "less-equal"]], "linspace": [[123, "linspace"]], "log": [[124, "log"]], "log10": [[125, "log10"]], "log1p": [[126, "log1p"]], "log2": [[127, "log2"]], "logaddexp": [[128, "logaddexp"]], "logical_and": [[129, "logical-and"]], "logical_not": [[130, "logical-not"]], "logical_or": [[131, "logical-or"]], "logical_xor": [[132, "logical-xor"]], "matmul": [[133, "matmul"], [242, "matmul"]], "matrix_transpose": [[134, "matrix-transpose"], [246, "matrix-transpose"]], "max": [[135, "max"]], "maximum": [[136, "maximum"]], "mean": [[137, "mean"]], "meshgrid": [[138, "meshgrid"]], "min": [[139, "min"]], "minimum": [[140, "minimum"]], "moveaxis": [[141, "moveaxis"]], "multiply": [[142, "multiply"]], "negative": [[143, "negative"]], "nextafter": [[144, "nextafter"]], "nonzero": [[145, "nonzero"]], "Data-dependent output shape": [[145, null], [156, null], [182, null], [183, null], [184, null], [185, null], [193, null], [212, null]], "not_equal": [[146, "not-equal"]], "ones": [[147, "ones"]], "ones_like": [[148, "ones-like"]], "permute_dims": [[149, "permute-dims"]], "positive": [[150, "positive"]], "pow": [[151, "pow"]], "prod": [[152, "prod"]], "real": [[153, "real"]], "reciprocal": [[154, "reciprocal"]], "remainder": [[155, "remainder"]], "repeat": [[156, "repeat"]], "reshape": [[157, "reshape"]], "result_type": [[158, "result-type"]], "roll": [[159, "roll"]], "round": [[160, "round"]], "searchsorted": [[161, "searchsorted"]], "sign": [[162, "sign"]], "signbit": [[163, "signbit"]], "sin": [[164, "sin"]], "sinh": [[165, "sinh"]], "sort": [[166, "sort"]], "sqrt": [[167, "sqrt"]], "square": [[168, "square"]], "squeeze": [[169, "squeeze"]], "stack": [[170, "stack"]], "std": [[171, "std"]], "subtract": [[172, "subtract"]], "sum": [[173, "sum"]], "take": [[174, "take"]], "tan": [[175, "tan"]], "tanh": [[176, "tanh"]], "tensordot": [[177, "tensordot"], [254, "tensordot"]], "tile": [[178, "tile"]], "tril": [[179, "tril"]], "triu": [[180, "triu"]], "trunc": [[181, "trunc"]], "unique_all": [[182, "unique-all"]], "unique_counts": [[183, "unique-counts"]], "unique_inverse": [[184, "unique-inverse"]], "unique_values": [[185, "unique-values"]], "unstack": [[186, "unstack"]], "var": [[187, "var"]], "vecdot": [[188, "vecdot"], [256, "vecdot"]], "where": [[189, "where"]], "zeros": [[190, "zeros"]], "zeros_like": [[191, "zeros-like"]], "API specification": [[192, "api-specification"], [192, null]], "Indexing": [[193, "indexing"]], "Single-axis Indexing": [[193, "single-axis-indexing"]], "Slice Syntax": [[193, "slice-syntax"]], "Multi-axis Indexing": [[193, "multi-axis-indexing"]], "Boolean Array Indexing": [[193, "boolean-array-indexing"]], "Return Values": [[193, "return-values"]], "Indexing Functions": [[194, "indexing-functions"]], "Inspection": [[195, "inspection"]], "Inspection APIs": [[195, "inspection-apis"], [207, "inspection-apis"]], "Linear Algebra Functions": [[196, "linear-algebra-functions"]], "Manipulation Functions": [[197, "manipulation-functions"]], "Searching Functions": [[198, "searching-functions"]], "Set Functions": [[199, "set-functions"]], "Sorting Functions": [[200, "sorting-functions"]], "Statistical Functions": [[201, "statistical-functions"], [209, "statistical-functions"]], "Type Promotion Rules": [[202, "type-promotion-rules"]], "Rules": [[202, "rules"]], "Signed integer type promotion table": [[202, "signed-integer-type-promotion-table"]], "Unsigned integer type promotion table": [[202, "unsigned-integer-type-promotion-table"]], "Mixed unsigned and signed integer type promotion table": [[202, "mixed-unsigned-and-signed-integer-type-promotion-table"]], "Floating-point type promotion table": [[202, "floating-point-type-promotion-table"]], "Notes": [[202, "notes"]], "Mixing arrays with Python scalars": [[202, "mixing-arrays-with-python-scalars"]], "Utility Functions": [[203, "utility-functions"]], "Version": [[204, "version"]], "Assumptions": [[205, "assumptions"]], "Hardware and software environments": [[205, "hardware-and-software-environments"]], "Dependencies": [[205, "dependencies"]], "Backwards compatibility": [[205, "backwards-compatibility"], [260, "backwards-compatibility"]], "Production code & interactive use": [[205, "production-code-interactive-use"]], "Benchmark suite": [[206, "benchmark-suite"]], "Changelog per API standard version": [[207, "changelog-per-api-standard-version"]], "Changelog": [[207, "changelog"]], "v2023.12": [[207, "v2023-12"]], "Updates": [[207, "updates"], [207, "id3"]], "Normative": [[207, "normative"]], "APIs": [[207, "apis"], [207, "id1"], [207, "id4"], [207, "id8"]], "Extensions": [[207, "extensions"], [207, "id2"], [207, "id5"], [207, "id9"], [258, "extensions"]], "Additions": [[207, "additions"], [207, "id7"]], "Breaking Changes": [[207, "breaking-changes"]], "Errata": [[207, "errata"], [207, "id10"]], "v2022.12": [[207, "v2022-12"]], "Complex Number Support": [[207, "complex-number-support"], [207, "id6"]], "C API": [[208, "c-api"]], "Example situations for C/Cython usage": [[208, "example-situations-for-c-cython-usage"]], "Situation 1: a Python package that is mostly pure Python, with a limited number of Cython extensions": [[208, "situation-1-a-python-package-that-is-mostly-pure-python-with-a-limited-number-of-cython-extensions"]], "Situation 2: a Python package that contains a lot of Cython code": [[208, "situation-2-a-python-package-that-contains-a-lot-of-cython-code"]], "Situation 3: a Python package that uses the NumPy or Python C API directly": [[208, "situation-3-a-python-package-that-uses-the-numpy-or-python-c-api-directly"]], "Device support": [[208, "device-support"], [214, "device-support"]], "Other longer-term approaches": [[208, "other-longer-term-approaches"]], "Further Python API standardization": [[208, "further-python-api-standardization"]], "HPy": [[208, "hpy"]], "Accuracy": [[209, "accuracy"]], "Arithmetic Operations": [[209, "arithmetic-operations"]], "Mathematical Functions": [[209, "mathematical-functions"]], "Linear Algebra": [[209, "linear-algebra"]], "Complex Numbers": [[210, "complex-numbers"]], "The Complex Plane": [[210, "the-complex-plane"]], "Branch Cuts": [[210, "branch-cuts"]], "Complex Number Ordering": [[210, "complex-number-ordering"]], "Valued-based Promotion": [[210, "valued-based-promotion"]], "Copy-view behaviour and mutability": [[211, "copy-view-behaviour-and-mutability"]], "Mutating views": [[211, null]], "Data-dependent output shapes": [[212, "data-dependent-output-shapes"]], "Data interchange mechanisms": [[213, "data-interchange-mechanisms"]], "DLPack: An in-memory tensor structure": [[213, "dlpack-an-in-memory-tensor-structure"]], "Non-supported use cases": [[213, "non-supported-use-cases"]], "Intended usage": [[214, "intended-usage"]], "Syntax for device assignment": [[214, "syntax-for-device-assignment"]], "Semantics": [[214, "semantics"]], "Out of scope for device support": [[214, "out-of-scope-for-device-support"]], "Exceptions": [[215, "exceptions"]], "Design topics & constraints": [[216, "design-topics-constraints"], [216, null]], "Lazy vs. eager execution": [[217, "lazy-vs-eager-execution"]], "Parallelism": [[218, "parallelism"]], "Static typing": [[219, "static-typing"]], "Fourier transform Functions": [[220, "fourier-transform-functions"]], "Extension name and usage": [[220, "extension-name-and-usage"], [259, "extension-name-and-usage"]], "fft": [[221, "fft"]], "fftfreq": [[222, "fftfreq"]], "fftn": [[223, "fftn"]], "fftshift": [[224, "fftshift"]], "hfft": [[225, "hfft"]], "ifft": [[226, "ifft"]], "ifftn": [[227, "ifftn"]], "ifftshift": [[228, "ifftshift"]], "ihfft": [[229, "ihfft"]], "irfft": [[230, "irfft"]], "irfftn": [[231, "irfftn"]], "rfft": [[232, "rfft"]], "rfftfreq": [[233, "rfftfreq"]], "rfftn": [[234, "rfftn"]], "cholesky": [[235, "cholesky"]], "cross": [[236, "cross"]], "det": [[237, "det"]], "diagonal": [[238, "diagonal"]], "eigh": [[239, "eigh"]], "eigvalsh": [[240, "eigvalsh"]], "inv": [[241, "inv"]], "matrix_norm": [[243, "matrix-norm"]], "matrix_power": [[244, "matrix-power"]], "matrix_rank": [[245, "matrix-rank"]], "outer": [[247, "outer"]], "pinv": [[248, "pinv"]], "qr": [[249, "qr"]], "slogdet": [[250, "slogdet"]], "solve": [[251, "solve"]], "svd": [[252, "svd"]], "svdvals": [[253, "svdvals"]], "trace": [[255, "trace"]], "vector_norm": [[257, "vector-norm"]], "Extension modules:": [[258, null]], "Linear Algebra Extension": [[259, "linear-algebra-extension"]], "Design Principles": [[259, "design-principles"]], "Future API standard evolution": [[260, "future-api-standard-evolution"]], "Scope extensions": [[260, "scope-extensions"]], "Versioning": [[260, "versioning"]], "Python array API standard": [[261, "python-array-api-standard"]], "Contents": [[261, "contents"]], "Context": [[261, null]], "API": [[261, null]], "Methodology and Usage": [[261, null]], "Other": [[261, null]], "License": [[262, "license"]], "Purpose and scope": [[263, "purpose-and-scope"]], "Introduction": [[263, "introduction"], [264, "introduction"]], "This API standard": [[263, "this-api-standard"]], "History": [[263, "history"]], "Scope (includes out-of-scope / non-goals)": [[263, "scope-includes-out-of-scope-non-goals"]], "In scope": [[263, "in-scope"]], "Out of scope": [[263, "out-of-scope"]], "Implications of in/out of scope": [[263, "implications-of-in-out-of-scope"]], "Stakeholders": [[263, "stakeholders"]], "How to read this document": [[263, "how-to-read-this-document"]], "How to adopt this API": [[263, "how-to-adopt-this-api"]], "Checking an array object for Compliance": [[263, "checking-an-array-object-for-compliance"]], "Discoverability of conforming implementations": [[263, "discoverability-of-conforming-implementations"]], "Optional feature": [[263, null]], "Conformance": [[263, "conformance"]], "Terms and Definitions": [[263, "terms-and-definitions"]], "Normative References": [[263, "normative-references"]], "Usage Data": [[264, "usage-data"]], "Design": [[264, "design"]], "Usage": [[264, "usage"]], "Use in Decision-Making": [[264, "use-in-decision-making"]], "Use cases": [[265, "use-cases"]], "Types of use cases": [[265, "types-of-use-cases"]], "Concrete use cases": [[265, "concrete-use-cases"]], "Use case 1: add hardware accelerator and distributed support to SciPy": [[265, "use-case-1-add-hardware-accelerator-and-distributed-support-to-scipy"]], "Use case 2: simplify einops by removing the backend system": [[265, "use-case-2-simplify-einops-by-removing-the-backend-system"]], "Use case 3: adding a Python API to xtensor": [[265, "use-case-3-adding-a-python-api-to-xtensor"]], "Use case 4: make JIT compilation of array computations easier and more robust": [[265, "use-case-4-make-jit-compilation-of-array-computations-easier-and-more-robust"]], "Verification - test suite": [[266, "verification-test-suite"]], "Measuring conformance": [[266, "measuring-conformance"]], "Running the tests": [[266, "running-the-tests"]]}, "indexentries": {"__array_api_version__ (in module array_api)": [[8, "array_api.__array_api_version__"]], "abs() (in module array_api)": [[9, "array_api.abs"]], "acos() (in module array_api)": [[10, "array_api.acos"]], "acosh() (in module array_api)": [[11, "array_api.acosh"]], "add() (in module array_api)": [[12, "array_api.add"]], "all() (in module array_api)": [[13, "array_api.all"]], "any() (in module array_api)": [[14, "array_api.any"]], "arange() (in module array_api)": [[15, "array_api.arange"]], "argmax() (in module array_api)": [[16, "array_api.argmax"]], "argmin() (in module array_api)": [[17, "array_api.argmin"]], "argsort() (in module array_api)": [[18, "array_api.argsort"]], "t (array property)": [[19, "array_api.array.T"]], "__abs__() (array method)": [[20, "array_api.array.__abs__"]], "__add__() (array method)": [[21, "array_api.array.__add__"]], "__and__() (array method)": [[22, "array_api.array.__and__"]], "__array_namespace__() (array method)": [[23, "array_api.array.__array_namespace__"]], "__bool__() (array method)": [[24, "array_api.array.__bool__"]], "__complex__() (array method)": [[25, "array_api.array.__complex__"]], "__dlpack__() (array method)": [[26, "array_api.array.__dlpack__"]], "__dlpack_device__() (array method)": [[27, "array_api.array.__dlpack_device__"]], "__eq__() (array method)": [[28, "array_api.array.__eq__"]], "__float__() (array method)": [[29, "array_api.array.__float__"]], "__floordiv__() (array method)": [[30, "array_api.array.__floordiv__"]], "__ge__() (array method)": [[31, "array_api.array.__ge__"]], "__getitem__() (array method)": [[32, "array_api.array.__getitem__"]], "__gt__() (array method)": [[33, "array_api.array.__gt__"]], "__index__() (array method)": [[34, "array_api.array.__index__"]], "__int__() (array method)": [[35, "array_api.array.__int__"]], "__invert__() (array method)": [[36, "array_api.array.__invert__"]], "__le__() (array method)": [[37, "array_api.array.__le__"]], "__lshift__() (array method)": [[38, "array_api.array.__lshift__"]], "__lt__() (array method)": [[39, "array_api.array.__lt__"]], "__matmul__() (array method)": [[40, "array_api.array.__matmul__"]], "__mod__() (array method)": [[41, "array_api.array.__mod__"]], "__mul__() (array method)": [[42, "array_api.array.__mul__"]], "__ne__() (array method)": [[43, "array_api.array.__ne__"]], "__neg__() (array method)": [[44, "array_api.array.__neg__"]], "__or__() (array method)": [[45, "array_api.array.__or__"]], "__pos__() (array method)": [[46, "array_api.array.__pos__"]], "__pow__() (array method)": [[47, "array_api.array.__pow__"]], "__rshift__() (array method)": [[48, "array_api.array.__rshift__"]], "__setitem__() (array method)": [[49, "array_api.array.__setitem__"]], "__sub__() (array method)": [[50, "array_api.array.__sub__"]], "__truediv__() (array method)": [[51, "array_api.array.__truediv__"]], "__xor__() (array method)": [[52, "array_api.array.__xor__"]], "device (array property)": [[53, "array_api.array.device"]], "dtype (array property)": [[54, "array_api.array.dtype"]], "mt (array property)": [[55, "array_api.array.mT"]], "ndim (array property)": [[56, "array_api.array.ndim"]], "shape (array property)": [[57, "array_api.array.shape"]], "size (array property)": [[58, "array_api.array.size"]], "to_device() (array method)": [[59, "array_api.array.to_device"]], "asarray() (in module array_api)": [[60, "array_api.asarray"]], "asin() (in module array_api)": [[61, "array_api.asin"]], "asinh() (in module array_api)": [[62, "array_api.asinh"]], "astype() (in module array_api)": [[63, "array_api.astype"]], "atan() (in module array_api)": [[64, "array_api.atan"]], "atan2() (in module array_api)": [[65, "array_api.atan2"]], "atanh() (in module array_api)": [[66, "array_api.atanh"]], "bitwise_and() (in module array_api)": [[67, "array_api.bitwise_and"]], "bitwise_invert() (in module array_api)": [[68, "array_api.bitwise_invert"]], "bitwise_left_shift() (in module array_api)": [[69, "array_api.bitwise_left_shift"]], "bitwise_or() (in module array_api)": [[70, "array_api.bitwise_or"]], "bitwise_right_shift() (in module array_api)": [[71, "array_api.bitwise_right_shift"]], "bitwise_xor() (in module array_api)": [[72, "array_api.bitwise_xor"]], "broadcast_arrays() (in module array_api)": [[73, "array_api.broadcast_arrays"]], "broadcast_to() (in module array_api)": [[74, "array_api.broadcast_to"]], "can_cast() (in module array_api)": [[75, "array_api.can_cast"]], "ceil() (in module array_api)": [[76, "array_api.ceil"]], "clip() (in module array_api)": [[77, "array_api.clip"]], "concat() (in module array_api)": [[78, "array_api.concat"]], "conj() (in module array_api)": [[79, "array_api.conj"]], "e (in module array_api.constants)": [[80, "array_api.constants.e"]], "inf (in module array_api.constants)": [[81, "array_api.constants.inf"]], "nan (in module array_api.constants)": [[82, "array_api.constants.nan"]], "newaxis (in module array_api.constants)": [[83, "array_api.constants.newaxis"]], "pi (in module array_api.constants)": [[84, "array_api.constants.pi"]], "copysign() (in module array_api)": [[85, "array_api.copysign"]], "cos() (in module array_api)": [[86, "array_api.cos"]], "cosh() (in module array_api)": [[87, "array_api.cosh"]], "cumulative_sum() (in module array_api)": [[88, "array_api.cumulative_sum"]], "__eq__() (in module array_api.data_types)": [[89, "array_api.data_types.__eq__"]], "diff() (in module array_api)": [[90, "array_api.diff"]], "divide() (in module array_api)": [[91, "array_api.divide"]], "empty() (in module array_api)": [[92, "array_api.empty"]], "empty_like() (in module array_api)": [[93, "array_api.empty_like"]], "equal() (in module array_api)": [[94, "array_api.equal"]], "exp() (in module array_api)": [[95, "array_api.exp"]], "expand_dims() (in module array_api)": [[96, "array_api.expand_dims"]], "expm1() (in module array_api)": [[97, "array_api.expm1"]], "eye() (in module array_api)": [[98, "array_api.eye"]], "finfo() (in module array_api)": [[99, "array_api.finfo"]], "flip() (in module array_api)": [[100, "array_api.flip"]], "floor() (in module array_api)": [[101, "array_api.floor"]], "floor_divide() (in module array_api)": [[102, "array_api.floor_divide"]], "from_dlpack() (in module array_api)": [[103, "array_api.from_dlpack"]], "full() (in module array_api)": [[104, "array_api.full"]], "full_like() (in module array_api)": [[105, "array_api.full_like"]], "greater() (in module array_api)": [[106, "array_api.greater"]], "greater_equal() (in module array_api)": [[107, "array_api.greater_equal"]], "hypot() (in module array_api)": [[108, "array_api.hypot"]], "iinfo() (in module array_api)": [[109, "array_api.iinfo"]], "imag() (in module array_api)": [[110, "array_api.imag"]], "__array_namespace_info__() (in module array_api.info)": [[111, "array_api.info.__array_namespace_info__"]], "capabilities() (in module array_api.info)": [[112, "array_api.info.capabilities"]], "default_device() (in module array_api.info)": [[113, "array_api.info.default_device"]], "default_dtypes() (in module array_api.info)": [[114, "array_api.info.default_dtypes"]], "devices() (in module array_api.info)": [[115, "array_api.info.devices"]], "dtypes() (in module array_api.info)": [[116, "array_api.info.dtypes"]], "isdtype() (in module array_api)": [[117, "array_api.isdtype"]], "isfinite() (in module array_api)": [[118, "array_api.isfinite"]], "isinf() (in module array_api)": [[119, "array_api.isinf"]], "isnan() (in module array_api)": [[120, "array_api.isnan"]], "less() (in module array_api)": [[121, "array_api.less"]], "less_equal() (in module array_api)": [[122, "array_api.less_equal"]], "linspace() (in module array_api)": [[123, "array_api.linspace"]], "log() (in module array_api)": [[124, "array_api.log"]], "log10() (in module array_api)": [[125, "array_api.log10"]], "log1p() (in module array_api)": [[126, "array_api.log1p"]], "log2() (in module array_api)": [[127, "array_api.log2"]], "logaddexp() (in module array_api)": [[128, "array_api.logaddexp"]], "logical_and() (in module array_api)": [[129, "array_api.logical_and"]], "logical_not() (in module array_api)": [[130, "array_api.logical_not"]], "logical_or() (in module array_api)": [[131, "array_api.logical_or"]], "logical_xor() (in module array_api)": [[132, "array_api.logical_xor"]], "matmul() (in module array_api)": [[133, "array_api.matmul"]], "matrix_transpose() (in module array_api)": [[134, "array_api.matrix_transpose"]], "max() (in module array_api)": [[135, "array_api.max"]], "maximum() (in module array_api)": [[136, "array_api.maximum"]], "mean() (in module array_api)": [[137, "array_api.mean"]], "meshgrid() (in module array_api)": [[138, "array_api.meshgrid"]], "min() (in module array_api)": [[139, "array_api.min"]], "minimum() (in module array_api)": [[140, "array_api.minimum"]], "moveaxis() (in module array_api)": [[141, "array_api.moveaxis"]], "multiply() (in module array_api)": [[142, "array_api.multiply"]], "negative() (in module array_api)": [[143, "array_api.negative"]], "nextafter() (in module array_api)": [[144, "array_api.nextafter"]], "nonzero() (in module array_api)": [[145, "array_api.nonzero"]], "not_equal() (in module array_api)": [[146, "array_api.not_equal"]], "ones() (in module array_api)": [[147, "array_api.ones"]], "ones_like() (in module array_api)": [[148, "array_api.ones_like"]], "permute_dims() (in module array_api)": [[149, "array_api.permute_dims"]], "positive() (in module array_api)": [[150, "array_api.positive"]], "pow() (in module array_api)": [[151, "array_api.pow"]], "prod() (in module array_api)": [[152, "array_api.prod"]], "real() (in module array_api)": [[153, "array_api.real"]], "reciprocal() (in module array_api)": [[154, "array_api.reciprocal"]], "remainder() (in module array_api)": [[155, "array_api.remainder"]], "repeat() (in module array_api)": [[156, "array_api.repeat"]], "reshape() (in module array_api)": [[157, "array_api.reshape"]], "result_type() (in module array_api)": [[158, "array_api.result_type"]], "roll() (in module array_api)": [[159, "array_api.roll"]], "round() (in module array_api)": [[160, "array_api.round"]], "searchsorted() (in module array_api)": [[161, "array_api.searchsorted"]], "sign() (in module array_api)": [[162, "array_api.sign"]], "signbit() (in module array_api)": [[163, "array_api.signbit"]], "sin() (in module array_api)": [[164, "array_api.sin"]], "sinh() (in module array_api)": [[165, "array_api.sinh"]], "sort() (in module array_api)": [[166, "array_api.sort"]], "sqrt() (in module array_api)": [[167, "array_api.sqrt"]], "square() (in module array_api)": [[168, "array_api.square"]], "squeeze() (in module array_api)": [[169, "array_api.squeeze"]], "stack() (in module array_api)": [[170, "array_api.stack"]], "std() (in module array_api)": [[171, "array_api.std"]], "subtract() (in module array_api)": [[172, "array_api.subtract"]], "sum() (in module array_api)": [[173, "array_api.sum"]], "take() (in module array_api)": [[174, "array_api.take"]], "tan() (in module array_api)": [[175, "array_api.tan"]], "tanh() (in module array_api)": [[176, "array_api.tanh"]], "tensordot() (in module array_api)": [[177, "array_api.tensordot"]], "tile() (in module array_api)": [[178, "array_api.tile"]], "tril() (in module array_api)": [[179, "array_api.tril"]], "triu() (in module array_api)": [[180, "array_api.triu"]], "trunc() (in module array_api)": [[181, "array_api.trunc"]], "unique_all() (in module array_api)": [[182, "array_api.unique_all"]], "unique_counts() (in module array_api)": [[183, "array_api.unique_counts"]], "unique_inverse() (in module array_api)": [[184, "array_api.unique_inverse"]], "unique_values() (in module array_api)": [[185, "array_api.unique_values"]], "unstack() (in module array_api)": [[186, "array_api.unstack"]], "var() (in module array_api)": [[187, "array_api.var"]], "vecdot() (in module array_api)": [[188, "array_api.vecdot"]], "where() (in module array_api)": [[189, "array_api.where"]], "zeros() (in module array_api)": [[190, "array_api.zeros"]], "zeros_like() (in module array_api)": [[191, "array_api.zeros_like"]], "fft() (in module array_api.fft)": [[221, "array_api.fft.fft"]], "fftfreq() (in module array_api.fft)": [[222, "array_api.fft.fftfreq"]], "fftn() (in module array_api.fft)": [[223, "array_api.fft.fftn"]], "fftshift() (in module array_api.fft)": [[224, "array_api.fft.fftshift"]], "hfft() (in module array_api.fft)": [[225, "array_api.fft.hfft"]], "ifft() (in module array_api.fft)": [[226, "array_api.fft.ifft"]], "ifftn() (in module array_api.fft)": [[227, "array_api.fft.ifftn"]], "ifftshift() (in module array_api.fft)": [[228, "array_api.fft.ifftshift"]], "ihfft() (in module array_api.fft)": [[229, "array_api.fft.ihfft"]], "irfft() (in module array_api.fft)": [[230, "array_api.fft.irfft"]], "irfftn() (in module array_api.fft)": [[231, "array_api.fft.irfftn"]], "rfft() (in module array_api.fft)": [[232, "array_api.fft.rfft"]], "rfftfreq() (in module array_api.fft)": [[233, "array_api.fft.rfftfreq"]], "rfftn() (in module array_api.fft)": [[234, "array_api.fft.rfftn"]], "cholesky() (in module array_api.linalg)": [[235, "array_api.linalg.cholesky"]], "cross() (in module array_api.linalg)": [[236, "array_api.linalg.cross"]], "det() (in module array_api.linalg)": [[237, "array_api.linalg.det"]], "diagonal() (in module array_api.linalg)": [[238, "array_api.linalg.diagonal"]], "eigh() (in module array_api.linalg)": [[239, "array_api.linalg.eigh"]], "eigvalsh() (in module array_api.linalg)": [[240, "array_api.linalg.eigvalsh"]], "inv() (in module array_api.linalg)": [[241, "array_api.linalg.inv"]], "matmul() (in module array_api.linalg)": [[242, "array_api.linalg.matmul"]], "matrix_norm() (in module array_api.linalg)": [[243, "array_api.linalg.matrix_norm"]], "matrix_power() (in module array_api.linalg)": [[244, "array_api.linalg.matrix_power"]], "matrix_rank() (in module array_api.linalg)": [[245, "array_api.linalg.matrix_rank"]], "matrix_transpose() (in module array_api.linalg)": [[246, "array_api.linalg.matrix_transpose"]], "outer() (in module array_api.linalg)": [[247, "array_api.linalg.outer"]], "pinv() (in module array_api.linalg)": [[248, "array_api.linalg.pinv"]], "qr() (in module array_api.linalg)": [[249, "array_api.linalg.qr"]], "slogdet() (in module array_api.linalg)": [[250, "array_api.linalg.slogdet"]], "solve() (in module array_api.linalg)": [[251, "array_api.linalg.solve"]], "svd() (in module array_api.linalg)": [[252, "array_api.linalg.svd"]], "svdvals() (in module array_api.linalg)": [[253, "array_api.linalg.svdvals"]], "tensordot() (in module array_api.linalg)": [[254, "array_api.linalg.tensordot"]], "trace() (in module array_api.linalg)": [[255, "array_api.linalg.trace"]], "vecdot() (in module array_api.linalg)": [[256, "array_api.linalg.vecdot"]], "vector_norm() (in module array_api.linalg)": [[257, "array_api.linalg.vector_norm"]]}})