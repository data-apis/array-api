Search.setIndex({"docnames": ["API_specification/array_object", "API_specification/broadcasting", "API_specification/constants", "API_specification/creation_functions", "API_specification/data_type_functions", "API_specification/data_types", "API_specification/elementwise_functions", "API_specification/function_and_method_signatures", "API_specification/generated/array_api.__array_api_version__", "API_specification/generated/array_api.abs", "API_specification/generated/array_api.acos", "API_specification/generated/array_api.acosh", "API_specification/generated/array_api.add", "API_specification/generated/array_api.all", "API_specification/generated/array_api.any", "API_specification/generated/array_api.arange", "API_specification/generated/array_api.argmax", "API_specification/generated/array_api.argmin", "API_specification/generated/array_api.argsort", "API_specification/generated/array_api.array.T", "API_specification/generated/array_api.array.__abs__", "API_specification/generated/array_api.array.__add__", "API_specification/generated/array_api.array.__and__", "API_specification/generated/array_api.array.__array_namespace__", "API_specification/generated/array_api.array.__bool__", "API_specification/generated/array_api.array.__complex__", "API_specification/generated/array_api.array.__dlpack__", "API_specification/generated/array_api.array.__dlpack_device__", "API_specification/generated/array_api.array.__eq__", "API_specification/generated/array_api.array.__float__", "API_specification/generated/array_api.array.__floordiv__", "API_specification/generated/array_api.array.__ge__", "API_specification/generated/array_api.array.__getitem__", "API_specification/generated/array_api.array.__gt__", "API_specification/generated/array_api.array.__index__", "API_specification/generated/array_api.array.__int__", "API_specification/generated/array_api.array.__invert__", "API_specification/generated/array_api.array.__le__", "API_specification/generated/array_api.array.__lshift__", "API_specification/generated/array_api.array.__lt__", "API_specification/generated/array_api.array.__matmul__", "API_specification/generated/array_api.array.__mod__", "API_specification/generated/array_api.array.__mul__", "API_specification/generated/array_api.array.__ne__", "API_specification/generated/array_api.array.__neg__", "API_specification/generated/array_api.array.__or__", "API_specification/generated/array_api.array.__pos__", "API_specification/generated/array_api.array.__pow__", "API_specification/generated/array_api.array.__rshift__", "API_specification/generated/array_api.array.__setitem__", "API_specification/generated/array_api.array.__sub__", "API_specification/generated/array_api.array.__truediv__", "API_specification/generated/array_api.array.__xor__", "API_specification/generated/array_api.array.device", "API_specification/generated/array_api.array.dtype", "API_specification/generated/array_api.array.mT", "API_specification/generated/array_api.array.ndim", "API_specification/generated/array_api.array.shape", "API_specification/generated/array_api.array.size", "API_specification/generated/array_api.array.to_device", "API_specification/generated/array_api.asarray", "API_specification/generated/array_api.asin", "API_specification/generated/array_api.asinh", "API_specification/generated/array_api.astype", "API_specification/generated/array_api.atan", "API_specification/generated/array_api.atan2", "API_specification/generated/array_api.atanh", "API_specification/generated/array_api.bitwise_and", "API_specification/generated/array_api.bitwise_invert", "API_specification/generated/array_api.bitwise_left_shift", "API_specification/generated/array_api.bitwise_or", "API_specification/generated/array_api.bitwise_right_shift", "API_specification/generated/array_api.bitwise_xor", "API_specification/generated/array_api.broadcast_arrays", "API_specification/generated/array_api.broadcast_to", "API_specification/generated/array_api.can_cast", "API_specification/generated/array_api.ceil", "API_specification/generated/array_api.clip", "API_specification/generated/array_api.concat", "API_specification/generated/array_api.conj", "API_specification/generated/array_api.constants.e", "API_specification/generated/array_api.constants.inf", "API_specification/generated/array_api.constants.nan", "API_specification/generated/array_api.constants.newaxis", "API_specification/generated/array_api.constants.pi", "API_specification/generated/array_api.copysign", "API_specification/generated/array_api.cos", "API_specification/generated/array_api.cosh", "API_specification/generated/array_api.cumulative_sum", "API_specification/generated/array_api.data_types.__eq__", "API_specification/generated/array_api.divide", "API_specification/generated/array_api.empty", "API_specification/generated/array_api.empty_like", "API_specification/generated/array_api.equal", "API_specification/generated/array_api.exp", "API_specification/generated/array_api.expand_dims", "API_specification/generated/array_api.expm1", "API_specification/generated/array_api.eye", "API_specification/generated/array_api.finfo", "API_specification/generated/array_api.flip", "API_specification/generated/array_api.floor", "API_specification/generated/array_api.floor_divide", "API_specification/generated/array_api.from_dlpack", "API_specification/generated/array_api.full", "API_specification/generated/array_api.full_like", "API_specification/generated/array_api.greater", "API_specification/generated/array_api.greater_equal", "API_specification/generated/array_api.iinfo", "API_specification/generated/array_api.imag", "API_specification/generated/array_api.info.__array_namespace_info__", "API_specification/generated/array_api.info.capabilities", "API_specification/generated/array_api.info.default_device", "API_specification/generated/array_api.info.default_dtypes", "API_specification/generated/array_api.info.devices", "API_specification/generated/array_api.info.dtypes", "API_specification/generated/array_api.isdtype", "API_specification/generated/array_api.isfinite", "API_specification/generated/array_api.isinf", "API_specification/generated/array_api.isnan", "API_specification/generated/array_api.less", "API_specification/generated/array_api.less_equal", "API_specification/generated/array_api.linspace", "API_specification/generated/array_api.log", "API_specification/generated/array_api.log10", "API_specification/generated/array_api.log1p", "API_specification/generated/array_api.log2", "API_specification/generated/array_api.logaddexp", "API_specification/generated/array_api.logical_and", "API_specification/generated/array_api.logical_not", "API_specification/generated/array_api.logical_or", "API_specification/generated/array_api.logical_xor", "API_specification/generated/array_api.matmul", "API_specification/generated/array_api.matrix_transpose", "API_specification/generated/array_api.max", "API_specification/generated/array_api.maximum", "API_specification/generated/array_api.mean", "API_specification/generated/array_api.meshgrid", "API_specification/generated/array_api.min", "API_specification/generated/array_api.minimum", "API_specification/generated/array_api.moveaxis", "API_specification/generated/array_api.multiply", "API_specification/generated/array_api.negative", "API_specification/generated/array_api.nonzero", "API_specification/generated/array_api.not_equal", "API_specification/generated/array_api.ones", "API_specification/generated/array_api.ones_like", "API_specification/generated/array_api.permute_dims", "API_specification/generated/array_api.positive", "API_specification/generated/array_api.pow", "API_specification/generated/array_api.prod", "API_specification/generated/array_api.real", "API_specification/generated/array_api.remainder", "API_specification/generated/array_api.reshape", "API_specification/generated/array_api.result_type", "API_specification/generated/array_api.roll", "API_specification/generated/array_api.round", "API_specification/generated/array_api.searchsorted", "API_specification/generated/array_api.sign", "API_specification/generated/array_api.signbit", "API_specification/generated/array_api.sin", "API_specification/generated/array_api.sinh", "API_specification/generated/array_api.sort", "API_specification/generated/array_api.sqrt", "API_specification/generated/array_api.square", "API_specification/generated/array_api.squeeze", "API_specification/generated/array_api.stack", "API_specification/generated/array_api.std", "API_specification/generated/array_api.subtract", "API_specification/generated/array_api.sum", "API_specification/generated/array_api.take", "API_specification/generated/array_api.tan", "API_specification/generated/array_api.tanh", "API_specification/generated/array_api.tensordot", "API_specification/generated/array_api.tile", "API_specification/generated/array_api.tril", "API_specification/generated/array_api.triu", "API_specification/generated/array_api.trunc", "API_specification/generated/array_api.unique_all", "API_specification/generated/array_api.unique_counts", "API_specification/generated/array_api.unique_inverse", "API_specification/generated/array_api.unique_values", "API_specification/generated/array_api.unstack", "API_specification/generated/array_api.var", "API_specification/generated/array_api.vecdot", "API_specification/generated/array_api.where", "API_specification/generated/array_api.zeros", "API_specification/generated/array_api.zeros_like", "API_specification/index", "API_specification/indexing", "API_specification/indexing_functions", "API_specification/inspection", "API_specification/linear_algebra_functions", "API_specification/manipulation_functions", "API_specification/searching_functions", "API_specification/set_functions", "API_specification/sorting_functions", "API_specification/statistical_functions", "API_specification/type_promotion", "API_specification/utility_functions", "API_specification/version", "assumptions", "benchmark_suite", "changelog", "design_topics/C_API", "design_topics/accuracy", "design_topics/complex_numbers", "design_topics/copies_views_and_mutation", "design_topics/data_dependent_output_shapes", "design_topics/data_interchange", "design_topics/device_support", "design_topics/exceptions", "design_topics/index", "design_topics/lazy_eager", "design_topics/parallelism", "design_topics/static_typing", "extensions/fourier_transform_functions", "extensions/generated/array_api.fft.fft", "extensions/generated/array_api.fft.fftfreq", "extensions/generated/array_api.fft.fftn", "extensions/generated/array_api.fft.fftshift", "extensions/generated/array_api.fft.hfft", "extensions/generated/array_api.fft.ifft", "extensions/generated/array_api.fft.ifftn", "extensions/generated/array_api.fft.ifftshift", "extensions/generated/array_api.fft.ihfft", "extensions/generated/array_api.fft.irfft", "extensions/generated/array_api.fft.irfftn", "extensions/generated/array_api.fft.rfft", "extensions/generated/array_api.fft.rfftfreq", "extensions/generated/array_api.fft.rfftn", "extensions/generated/array_api.linalg.cholesky", "extensions/generated/array_api.linalg.cross", "extensions/generated/array_api.linalg.det", "extensions/generated/array_api.linalg.diagonal", "extensions/generated/array_api.linalg.eigh", "extensions/generated/array_api.linalg.eigvalsh", "extensions/generated/array_api.linalg.inv", "extensions/generated/array_api.linalg.matmul", "extensions/generated/array_api.linalg.matrix_norm", "extensions/generated/array_api.linalg.matrix_power", "extensions/generated/array_api.linalg.matrix_rank", "extensions/generated/array_api.linalg.matrix_transpose", "extensions/generated/array_api.linalg.outer", "extensions/generated/array_api.linalg.pinv", "extensions/generated/array_api.linalg.qr", "extensions/generated/array_api.linalg.slogdet", "extensions/generated/array_api.linalg.solve", "extensions/generated/array_api.linalg.svd", "extensions/generated/array_api.linalg.svdvals", "extensions/generated/array_api.linalg.tensordot", "extensions/generated/array_api.linalg.trace", "extensions/generated/array_api.linalg.vecdot", "extensions/generated/array_api.linalg.vector_norm", "extensions/index", "extensions/linear_algebra_functions", "future_API_evolution", "index", "license", "purpose_and_scope", "usage_data", "use_cases", "verification_test_suite"], "filenames": ["API_specification/array_object.rst", "API_specification/broadcasting.rst", "API_specification/constants.rst", "API_specification/creation_functions.rst", "API_specification/data_type_functions.rst", "API_specification/data_types.rst", "API_specification/elementwise_functions.rst", "API_specification/function_and_method_signatures.rst", "API_specification/generated/array_api.__array_api_version__.rst", "API_specification/generated/array_api.abs.rst", "API_specification/generated/array_api.acos.rst", "API_specification/generated/array_api.acosh.rst", "API_specification/generated/array_api.add.rst", "API_specification/generated/array_api.all.rst", "API_specification/generated/array_api.any.rst", "API_specification/generated/array_api.arange.rst", "API_specification/generated/array_api.argmax.rst", "API_specification/generated/array_api.argmin.rst", "API_specification/generated/array_api.argsort.rst", "API_specification/generated/array_api.array.T.rst", "API_specification/generated/array_api.array.__abs__.rst", "API_specification/generated/array_api.array.__add__.rst", "API_specification/generated/array_api.array.__and__.rst", "API_specification/generated/array_api.array.__array_namespace__.rst", "API_specification/generated/array_api.array.__bool__.rst", "API_specification/generated/array_api.array.__complex__.rst", "API_specification/generated/array_api.array.__dlpack__.rst", "API_specification/generated/array_api.array.__dlpack_device__.rst", "API_specification/generated/array_api.array.__eq__.rst", "API_specification/generated/array_api.array.__float__.rst", "API_specification/generated/array_api.array.__floordiv__.rst", "API_specification/generated/array_api.array.__ge__.rst", "API_specification/generated/array_api.array.__getitem__.rst", "API_specification/generated/array_api.array.__gt__.rst", "API_specification/generated/array_api.array.__index__.rst", "API_specification/generated/array_api.array.__int__.rst", "API_specification/generated/array_api.array.__invert__.rst", "API_specification/generated/array_api.array.__le__.rst", "API_specification/generated/array_api.array.__lshift__.rst", "API_specification/generated/array_api.array.__lt__.rst", "API_specification/generated/array_api.array.__matmul__.rst", "API_specification/generated/array_api.array.__mod__.rst", "API_specification/generated/array_api.array.__mul__.rst", "API_specification/generated/array_api.array.__ne__.rst", "API_specification/generated/array_api.array.__neg__.rst", "API_specification/generated/array_api.array.__or__.rst", "API_specification/generated/array_api.array.__pos__.rst", "API_specification/generated/array_api.array.__pow__.rst", "API_specification/generated/array_api.array.__rshift__.rst", "API_specification/generated/array_api.array.__setitem__.rst", "API_specification/generated/array_api.array.__sub__.rst", "API_specification/generated/array_api.array.__truediv__.rst", "API_specification/generated/array_api.array.__xor__.rst", "API_specification/generated/array_api.array.device.rst", "API_specification/generated/array_api.array.dtype.rst", "API_specification/generated/array_api.array.mT.rst", "API_specification/generated/array_api.array.ndim.rst", "API_specification/generated/array_api.array.shape.rst", "API_specification/generated/array_api.array.size.rst", "API_specification/generated/array_api.array.to_device.rst", "API_specification/generated/array_api.asarray.rst", "API_specification/generated/array_api.asin.rst", "API_specification/generated/array_api.asinh.rst", "API_specification/generated/array_api.astype.rst", "API_specification/generated/array_api.atan.rst", "API_specification/generated/array_api.atan2.rst", "API_specification/generated/array_api.atanh.rst", "API_specification/generated/array_api.bitwise_and.rst", "API_specification/generated/array_api.bitwise_invert.rst", "API_specification/generated/array_api.bitwise_left_shift.rst", "API_specification/generated/array_api.bitwise_or.rst", "API_specification/generated/array_api.bitwise_right_shift.rst", "API_specification/generated/array_api.bitwise_xor.rst", "API_specification/generated/array_api.broadcast_arrays.rst", "API_specification/generated/array_api.broadcast_to.rst", "API_specification/generated/array_api.can_cast.rst", "API_specification/generated/array_api.ceil.rst", "API_specification/generated/array_api.clip.rst", "API_specification/generated/array_api.concat.rst", "API_specification/generated/array_api.conj.rst", "API_specification/generated/array_api.constants.e.rst", "API_specification/generated/array_api.constants.inf.rst", "API_specification/generated/array_api.constants.nan.rst", "API_specification/generated/array_api.constants.newaxis.rst", "API_specification/generated/array_api.constants.pi.rst", "API_specification/generated/array_api.copysign.rst", "API_specification/generated/array_api.cos.rst", "API_specification/generated/array_api.cosh.rst", "API_specification/generated/array_api.cumulative_sum.rst", "API_specification/generated/array_api.data_types.__eq__.rst", "API_specification/generated/array_api.divide.rst", "API_specification/generated/array_api.empty.rst", "API_specification/generated/array_api.empty_like.rst", "API_specification/generated/array_api.equal.rst", "API_specification/generated/array_api.exp.rst", "API_specification/generated/array_api.expand_dims.rst", "API_specification/generated/array_api.expm1.rst", "API_specification/generated/array_api.eye.rst", "API_specification/generated/array_api.finfo.rst", "API_specification/generated/array_api.flip.rst", "API_specification/generated/array_api.floor.rst", "API_specification/generated/array_api.floor_divide.rst", "API_specification/generated/array_api.from_dlpack.rst", "API_specification/generated/array_api.full.rst", "API_specification/generated/array_api.full_like.rst", "API_specification/generated/array_api.greater.rst", "API_specification/generated/array_api.greater_equal.rst", "API_specification/generated/array_api.iinfo.rst", "API_specification/generated/array_api.imag.rst", "API_specification/generated/array_api.info.__array_namespace_info__.rst", "API_specification/generated/array_api.info.capabilities.rst", "API_specification/generated/array_api.info.default_device.rst", "API_specification/generated/array_api.info.default_dtypes.rst", "API_specification/generated/array_api.info.devices.rst", "API_specification/generated/array_api.info.dtypes.rst", "API_specification/generated/array_api.isdtype.rst", "API_specification/generated/array_api.isfinite.rst", "API_specification/generated/array_api.isinf.rst", "API_specification/generated/array_api.isnan.rst", "API_specification/generated/array_api.less.rst", "API_specification/generated/array_api.less_equal.rst", "API_specification/generated/array_api.linspace.rst", "API_specification/generated/array_api.log.rst", "API_specification/generated/array_api.log10.rst", "API_specification/generated/array_api.log1p.rst", "API_specification/generated/array_api.log2.rst", "API_specification/generated/array_api.logaddexp.rst", "API_specification/generated/array_api.logical_and.rst", "API_specification/generated/array_api.logical_not.rst", "API_specification/generated/array_api.logical_or.rst", "API_specification/generated/array_api.logical_xor.rst", "API_specification/generated/array_api.matmul.rst", "API_specification/generated/array_api.matrix_transpose.rst", "API_specification/generated/array_api.max.rst", "API_specification/generated/array_api.maximum.rst", "API_specification/generated/array_api.mean.rst", "API_specification/generated/array_api.meshgrid.rst", "API_specification/generated/array_api.min.rst", "API_specification/generated/array_api.minimum.rst", "API_specification/generated/array_api.moveaxis.rst", "API_specification/generated/array_api.multiply.rst", "API_specification/generated/array_api.negative.rst", "API_specification/generated/array_api.nonzero.rst", "API_specification/generated/array_api.not_equal.rst", "API_specification/generated/array_api.ones.rst", "API_specification/generated/array_api.ones_like.rst", "API_specification/generated/array_api.permute_dims.rst", "API_specification/generated/array_api.positive.rst", "API_specification/generated/array_api.pow.rst", "API_specification/generated/array_api.prod.rst", "API_specification/generated/array_api.real.rst", "API_specification/generated/array_api.remainder.rst", "API_specification/generated/array_api.reshape.rst", "API_specification/generated/array_api.result_type.rst", "API_specification/generated/array_api.roll.rst", "API_specification/generated/array_api.round.rst", "API_specification/generated/array_api.searchsorted.rst", "API_specification/generated/array_api.sign.rst", "API_specification/generated/array_api.signbit.rst", "API_specification/generated/array_api.sin.rst", "API_specification/generated/array_api.sinh.rst", "API_specification/generated/array_api.sort.rst", "API_specification/generated/array_api.sqrt.rst", "API_specification/generated/array_api.square.rst", "API_specification/generated/array_api.squeeze.rst", "API_specification/generated/array_api.stack.rst", "API_specification/generated/array_api.std.rst", "API_specification/generated/array_api.subtract.rst", "API_specification/generated/array_api.sum.rst", "API_specification/generated/array_api.take.rst", "API_specification/generated/array_api.tan.rst", "API_specification/generated/array_api.tanh.rst", "API_specification/generated/array_api.tensordot.rst", "API_specification/generated/array_api.tile.rst", "API_specification/generated/array_api.tril.rst", "API_specification/generated/array_api.triu.rst", "API_specification/generated/array_api.trunc.rst", "API_specification/generated/array_api.unique_all.rst", "API_specification/generated/array_api.unique_counts.rst", "API_specification/generated/array_api.unique_inverse.rst", "API_specification/generated/array_api.unique_values.rst", "API_specification/generated/array_api.unstack.rst", "API_specification/generated/array_api.var.rst", "API_specification/generated/array_api.vecdot.rst", "API_specification/generated/array_api.where.rst", "API_specification/generated/array_api.zeros.rst", "API_specification/generated/array_api.zeros_like.rst", "API_specification/index.rst", "API_specification/indexing.rst", "API_specification/indexing_functions.rst", "API_specification/inspection.rst", "API_specification/linear_algebra_functions.rst", "API_specification/manipulation_functions.rst", "API_specification/searching_functions.rst", "API_specification/set_functions.rst", "API_specification/sorting_functions.rst", "API_specification/statistical_functions.rst", "API_specification/type_promotion.rst", "API_specification/utility_functions.rst", "API_specification/version.rst", "assumptions.md", "benchmark_suite.md", "changelog.rst", "design_topics/C_API.rst", "design_topics/accuracy.rst", "design_topics/complex_numbers.rst", "design_topics/copies_views_and_mutation.rst", "design_topics/data_dependent_output_shapes.rst", "design_topics/data_interchange.rst", "design_topics/device_support.rst", "design_topics/exceptions.rst", "design_topics/index.rst", "design_topics/lazy_eager.rst", "design_topics/parallelism.rst", "design_topics/static_typing.rst", "extensions/fourier_transform_functions.rst", "extensions/generated/array_api.fft.fft.rst", "extensions/generated/array_api.fft.fftfreq.rst", "extensions/generated/array_api.fft.fftn.rst", "extensions/generated/array_api.fft.fftshift.rst", "extensions/generated/array_api.fft.hfft.rst", "extensions/generated/array_api.fft.ifft.rst", "extensions/generated/array_api.fft.ifftn.rst", "extensions/generated/array_api.fft.ifftshift.rst", "extensions/generated/array_api.fft.ihfft.rst", "extensions/generated/array_api.fft.irfft.rst", "extensions/generated/array_api.fft.irfftn.rst", "extensions/generated/array_api.fft.rfft.rst", "extensions/generated/array_api.fft.rfftfreq.rst", "extensions/generated/array_api.fft.rfftn.rst", "extensions/generated/array_api.linalg.cholesky.rst", "extensions/generated/array_api.linalg.cross.rst", "extensions/generated/array_api.linalg.det.rst", "extensions/generated/array_api.linalg.diagonal.rst", "extensions/generated/array_api.linalg.eigh.rst", "extensions/generated/array_api.linalg.eigvalsh.rst", "extensions/generated/array_api.linalg.inv.rst", "extensions/generated/array_api.linalg.matmul.rst", "extensions/generated/array_api.linalg.matrix_norm.rst", "extensions/generated/array_api.linalg.matrix_power.rst", "extensions/generated/array_api.linalg.matrix_rank.rst", "extensions/generated/array_api.linalg.matrix_transpose.rst", "extensions/generated/array_api.linalg.outer.rst", "extensions/generated/array_api.linalg.pinv.rst", "extensions/generated/array_api.linalg.qr.rst", "extensions/generated/array_api.linalg.slogdet.rst", "extensions/generated/array_api.linalg.solve.rst", "extensions/generated/array_api.linalg.svd.rst", "extensions/generated/array_api.linalg.svdvals.rst", "extensions/generated/array_api.linalg.tensordot.rst", "extensions/generated/array_api.linalg.trace.rst", "extensions/generated/array_api.linalg.vecdot.rst", "extensions/generated/array_api.linalg.vector_norm.rst", "extensions/index.rst", "extensions/linear_algebra_functions.rst", "future_API_evolution.md", "index.rst", "license.rst", "purpose_and_scope.md", "usage_data.md", "use_cases.md", "verification_test_suite.md"], "titles": ["Array object", "Broadcasting", "Constants", "Creation Functions", "Data Type Functions", "Data Types", "Element-wise Functions", "Function and method signatures", "__array_api_version__", "abs", "acos", "acosh", "add", "all", "any", "arange", "argmax", "argmin", "argsort", "T", "__abs__", "__add__", "__and__", "__array_namespace__", "__bool__", "__complex__", "__dlpack__", "__dlpack_device__", "__eq__", "__float__", "__floordiv__", "__ge__", "__getitem__", "__gt__", "__index__", "__int__", "__invert__", "__le__", "__lshift__", "__lt__", "__matmul__", "__mod__", "__mul__", "__ne__", "__neg__", "__or__", "__pos__", "__pow__", "__rshift__", "__setitem__", "__sub__", "__truediv__", "__xor__", "device", "dtype", "mT", "ndim", "shape", "size", "to_device", "asarray", "asin", "asinh", "astype", "atan", "atan2", "atanh", "bitwise_and", "bitwise_invert", "bitwise_left_shift", "bitwise_or", "bitwise_right_shift", "bitwise_xor", "broadcast_arrays", "broadcast_to", "can_cast", "ceil", "clip", "concat", "conj", "e", "inf", "nan", "newaxis", "pi", "copysign", "cos", "cosh", "cumulative_sum", "__eq__", "divide", "empty", "empty_like", "equal", "exp", "expand_dims", "expm1", "eye", "finfo", "flip", "floor", "floor_divide", "from_dlpack", "full", "full_like", "greater", "greater_equal", "iinfo", "imag", "__array_namespace_info__", "capabilities", "default_device", "default_dtypes", "devices", "dtypes", "isdtype", "isfinite", "isinf", "isnan", "less", "less_equal", "linspace", "log", "log10", "log1p", "log2", "logaddexp", "logical_and", "logical_not", "logical_or", "logical_xor", "matmul", "matrix_transpose", "max", "maximum", "mean", "meshgrid", "min", "minimum", "moveaxis", "multiply", "negative", "nonzero", "not_equal", "ones", "ones_like", "permute_dims", "positive", "pow", "prod", "real", "remainder", "reshape", "result_type", "roll", "round", "searchsorted", "sign", "signbit", "sin", "sinh", "sort", "sqrt", "square", "squeeze", "stack", "std", "subtract", "sum", "take", "tan", "tanh", "tensordot", "tile", "tril", "triu", "trunc", "unique_all", "unique_counts", "unique_inverse", "unique_values", "unstack", "var", "vecdot", "where", "zeros", "zeros_like", "API specification", "Indexing", "Indexing Functions", "Inspection", "Linear Algebra Functions", "Manipulation Functions", "Searching Functions", "Set Functions", "Sorting Functions", "Statistical Functions", "Type Promotion Rules", "Utility Functions", "Version", "Assumptions", "Benchmark suite", "Changelog per API standard version", "C API", "Accuracy", "Complex Numbers", "Copy-view behaviour and mutability", "Data-dependent output shapes", "Data interchange mechanisms", "Device support", "Exceptions", "Design topics &amp; constraints", "Lazy vs. eager execution", "Parallelism", "Static typing", "Fourier transform Functions", "fft", "fftfreq", "fftn", "fftshift", "hfft", "ifft", "ifftn", "ifftshift", "ihfft", "irfft", "irfftn", "rfft", "rfftfreq", "rfftn", "cholesky", "cross", "det", "diagonal", "eigh", "eigvalsh", "inv", "matmul", "matrix_norm", "matrix_power", "matrix_rank", "matrix_transpose", "outer", "pinv", "qr", "slogdet", "solve", "svd", "svdvals", "tensordot", "trace", "vecdot", "vector_norm", "Extensions", "Linear Algebra Extension", "Future API standard evolution", "Python array API standard", "License", "Purpose and scope", "Usage Data", "Use cases", "Verification - test suite"], "terms": {"api": [0, 1, 5, 7, 8, 23, 26, 63, 102, 109, 110, 114, 115, 188, 197, 200, 204, 205, 206, 208, 209, 210, 211, 212, 213, 214, 253, 257, 259, 261], "specif": [0, 1, 2, 3, 4, 5, 6, 8, 19, 23, 26, 49, 51, 59, 63, 78, 90, 101, 110, 112, 114, 115, 121, 127, 128, 129, 130, 133, 135, 137, 148, 153, 156, 165, 166, 169, 172, 182, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 202, 203, 204, 205, 206, 207, 208, 209, 210, 212, 214, 215, 234, 235, 253, 254, 255, 256, 258, 259, 260, 261], "A": [0, 1, 2, 3, 4, 5, 7, 13, 14, 26, 57, 97, 102, 115, 165, 181, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 203, 206, 208, 209, 212, 213, 214, 215, 216, 218, 220, 221, 222, 224, 225, 226, 227, 229, 243, 246, 254, 257, 258, 259, 260], "conform": [0, 2, 3, 4, 5, 8, 9, 16, 17, 18, 31, 33, 37, 39, 59, 60, 96, 105, 106, 110, 114, 115, 119, 120, 121, 124, 133, 134, 137, 138, 148, 156, 161, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 202, 204, 205, 208, 215, 254], "implement": [0, 2, 3, 4, 5, 8, 9, 10, 11, 16, 17, 18, 20, 23, 24, 25, 26, 29, 30, 31, 33, 34, 35, 37, 39, 40, 41, 44, 47, 49, 51, 59, 60, 61, 62, 63, 64, 65, 66, 77, 86, 87, 88, 90, 94, 96, 101, 102, 103, 104, 105, 106, 110, 115, 119, 120, 121, 122, 123, 124, 125, 131, 133, 134, 135, 137, 138, 140, 141, 142, 148, 149, 151, 153, 156, 159, 160, 161, 163, 166, 168, 170, 171, 177, 178, 179, 180, 182, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 202, 203, 204, 205, 206, 207, 208, 209, 210, 212, 214, 215, 218, 219, 222, 223, 226, 229, 230, 234, 235, 244, 246, 250, 253, 254, 255, 259, 260], "standard": [0, 2, 3, 4, 5, 7, 26, 98, 102, 115, 123, 125, 166, 171, 182, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 204, 205, 206, 208, 209, 210, 212, 213, 214, 253, 254, 257, 259, 260], "must": [0, 1, 2, 3, 4, 5, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 76, 77, 78, 79, 85, 86, 87, 88, 90, 91, 92, 93, 94, 95, 96, 97, 99, 100, 101, 102, 103, 104, 105, 106, 108, 110, 112, 113, 114, 115, 116, 117, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 202, 204, 205, 206, 208, 210, 212, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 238, 239, 240, 242, 243, 244, 245, 246, 247, 248, 250, 252, 253, 254, 255, 258, 259], "provid": [0, 2, 3, 4, 5, 13, 14, 26, 59, 88, 95, 99, 102, 113, 115, 136, 139, 153, 165, 166, 169, 181, 182, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 202, 203, 205, 206, 208, 209, 210, 213, 214, 215, 216, 218, 221, 222, 225, 226, 227, 229, 239, 253, 254, 255, 257, 258, 259, 260], "support": [0, 1, 2, 3, 4, 5, 7, 9, 10, 11, 12, 13, 14, 16, 17, 18, 20, 21, 24, 26, 29, 31, 33, 35, 37, 39, 40, 42, 43, 44, 46, 47, 50, 51, 53, 57, 59, 60, 61, 62, 63, 64, 66, 86, 87, 88, 89, 90, 93, 94, 96, 97, 98, 101, 102, 103, 104, 105, 106, 110, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 127, 128, 129, 130, 131, 133, 134, 136, 137, 138, 140, 141, 142, 143, 144, 145, 147, 148, 149, 155, 157, 159, 160, 161, 162, 163, 167, 168, 169, 170, 171, 172, 177, 178, 179, 180, 183, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 200, 204, 205, 206, 211, 214, 215, 230, 231, 232, 234, 235, 236, 238, 239, 240, 242, 243, 244, 245, 246, 247, 248, 250, 252, 253, 254, 258, 259], "an": [0, 1, 5, 7, 9, 10, 11, 12, 13, 14, 15, 18, 19, 20, 21, 22, 23, 26, 28, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 76, 77, 78, 79, 83, 85, 86, 87, 88, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 113, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 188, 195, 197, 200, 202, 203, 204, 205, 206, 207, 209, 210, 212, 213, 214, 216, 217, 218, 220, 221, 222, 224, 225, 226, 227, 228, 229, 230, 231, 233, 234, 235, 236, 238, 239, 240, 243, 244, 245, 246, 247, 248, 250, 252, 253, 254, 255, 257, 259, 260], "have": [0, 1, 2, 5, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 55, 57, 58, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 76, 77, 78, 79, 85, 86, 87, 88, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 103, 104, 105, 106, 107, 108, 110, 112, 114, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 188, 200, 202, 203, 205, 206, 209, 212, 214, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 238, 239, 240, 242, 243, 244, 245, 246, 247, 248, 250, 252, 254, 255, 258, 259, 260], "follow": [0, 1, 2, 3, 4, 5, 7, 10, 11, 12, 26, 44, 49, 61, 62, 64, 66, 88, 90, 98, 101, 103, 107, 109, 110, 112, 114, 115, 122, 124, 140, 141, 148, 151, 155, 162, 172, 177, 178, 179, 180, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 200, 202, 204, 205, 207, 208, 209, 210, 215, 216, 218, 220, 221, 222, 224, 225, 226, 227, 229, 238, 244, 252, 254, 255, 257, 258, 259, 260], "furthermor": [0, 258, 261], "minimum": [0, 9, 17, 20, 44, 133, 137, 141, 187, 204], "rank": [0, 1, 13, 14, 95, 136, 139, 142, 156, 165, 169, 172, 173, 181, 183, 188, 216, 218, 220, 221, 222, 224, 225, 226, 227, 229, 231, 238, 240, 244, 246, 250, 252, 258], "i": [0, 1, 2, 5, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 23, 24, 25, 26, 29, 30, 31, 33, 34, 35, 37, 39, 40, 41, 42, 43, 44, 47, 49, 51, 55, 57, 59, 60, 61, 62, 63, 64, 65, 66, 69, 71, 74, 76, 77, 78, 79, 83, 85, 86, 87, 88, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 108, 112, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 131, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 195, 197, 200, 201, 202, 204, 205, 206, 208, 209, 210, 212, 213, 214, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 238, 239, 240, 242, 243, 244, 245, 246, 247, 248, 250, 252, 253, 254, 255, 257, 258, 259, 260, 261], "e": [0, 1, 2, 5, 7, 9, 10, 11, 18, 19, 20, 26, 40, 43, 47, 49, 51, 55, 57, 62, 63, 65, 66, 69, 71, 76, 77, 78, 86, 87, 88, 90, 93, 94, 95, 100, 101, 102, 108, 114, 115, 121, 122, 123, 124, 125, 131, 133, 135, 136, 137, 139, 140, 141, 142, 143, 144, 145, 147, 148, 149, 150, 151, 153, 155, 156, 158, 159, 160, 161, 162, 164, 165, 166, 168, 169, 170, 171, 172, 173, 177, 178, 179, 180, 182, 187, 188, 195, 197, 202, 203, 204, 205, 206, 207, 208, 209, 212, 216, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 229, 231, 234, 235, 238, 240, 243, 245, 246, 247, 248, 250, 252, 253, 254, 255, 258, 259, 260], "number": [0, 1, 5, 9, 10, 11, 12, 13, 14, 16, 17, 18, 25, 26, 31, 33, 35, 37, 39, 44, 56, 58, 60, 61, 62, 63, 64, 65, 66, 73, 76, 79, 82, 87, 88, 90, 93, 94, 95, 96, 97, 98, 100, 101, 103, 105, 106, 107, 108, 116, 117, 119, 120, 121, 122, 124, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 149, 150, 151, 153, 154, 155, 156, 157, 158, 160, 161, 162, 163, 165, 166, 168, 169, 171, 172, 173, 176, 177, 178, 181, 182, 183, 188, 195, 197, 208, 211, 216, 218, 220, 221, 222, 224, 225, 226, 227, 229, 230, 234, 235, 236, 240, 244, 245, 246, 247, 250, 254, 258, 259], "dimens": [0, 1, 13, 14, 16, 17, 19, 40, 55, 56, 57, 58, 78, 88, 95, 99, 131, 132, 133, 135, 137, 139, 142, 146, 149, 152, 154, 164, 165, 166, 168, 169, 172, 173, 174, 175, 177, 178, 179, 180, 181, 182, 183, 188, 197, 216, 218, 219, 220, 221, 222, 224, 225, 226, 227, 229, 230, 231, 232, 233, 234, 235, 236, 238, 239, 240, 243, 244, 245, 246, 247, 248, 250, 252, 258], "0": [0, 1, 5, 9, 10, 11, 12, 15, 24, 25, 26, 29, 35, 38, 48, 57, 61, 62, 63, 64, 65, 66, 69, 71, 76, 78, 85, 86, 87, 90, 93, 94, 95, 96, 97, 98, 100, 101, 122, 123, 124, 125, 135, 140, 146, 148, 149, 151, 155, 156, 157, 158, 159, 160, 162, 165, 166, 168, 170, 171, 172, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 188, 195, 197, 205, 206, 217, 219, 228, 233, 238, 245, 247, 248, 250, 252, 258, 260], "1": [0, 1, 7, 10, 11, 13, 14, 15, 18, 25, 26, 27, 29, 35, 40, 61, 62, 63, 64, 65, 66, 85, 86, 87, 88, 94, 95, 96, 97, 98, 101, 121, 122, 123, 124, 125, 131, 144, 145, 146, 148, 149, 152, 156, 157, 158, 161, 165, 166, 170, 171, 172, 173, 174, 175, 182, 183, 188, 205, 206, 213, 216, 217, 218, 220, 221, 222, 224, 225, 226, 227, 228, 229, 231, 234, 236, 238, 246, 247, 248, 252], "2": [0, 1, 5, 7, 9, 10, 11, 26, 27, 40, 61, 62, 64, 65, 66, 80, 86, 87, 90, 122, 124, 125, 131, 160, 163, 170, 171, 172, 173, 188, 205, 206, 214, 217, 220, 224, 225, 226, 227, 228, 229, 238, 240, 243, 244, 245, 247, 248, 249, 250, 252], "3": [0, 1, 5, 7, 27, 84, 169, 173, 200, 205, 206, 209, 231], "4": [0, 1, 5, 10, 11, 27, 62, 65, 122, 124, 173, 188, 213, 259], "explicitli": [0, 26, 40, 63, 110, 131, 172, 188, 200, 230, 234, 235, 244, 246, 254, 258, 260], "document": [0, 5, 7, 59, 101, 115, 190, 195, 203, 205, 208, 210, 253, 255, 257, 259, 260, 261], "maximum": [0, 1, 16, 26, 121, 133, 137, 187, 204, 238], "n": [0, 1, 13, 14, 40, 55, 86, 88, 95, 121, 131, 132, 135, 136, 139, 142, 146, 149, 156, 165, 166, 168, 170, 171, 172, 173, 174, 175, 181, 182, 183, 188, 216, 217, 218, 220, 221, 222, 224, 225, 226, 227, 228, 229, 230, 231, 233, 234, 235, 236, 238, 239, 240, 242, 243, 244, 247, 248, 250, 252, 258], "zero": [0, 5, 13, 14, 16, 17, 24, 25, 29, 30, 34, 35, 40, 41, 47, 63, 65, 69, 88, 90, 95, 96, 97, 101, 124, 127, 128, 129, 130, 131, 133, 135, 136, 137, 140, 142, 144, 145, 148, 149, 151, 156, 158, 166, 168, 174, 175, 176, 177, 178, 179, 180, 182, 183, 186, 187, 188, 195, 197, 202, 203, 205, 208, 216, 218, 219, 220, 221, 222, 224, 225, 226, 227, 229, 232, 239, 240, 243, 244, 245, 252, 260], "dimension": [0, 13, 14, 15, 16, 17, 19, 24, 25, 29, 34, 35, 40, 88, 97, 121, 131, 133, 135, 136, 137, 142, 149, 156, 166, 168, 169, 182, 183, 188, 197, 202, 214, 216, 218, 220, 221, 222, 224, 225, 226, 227, 229, 231, 232, 235, 236, 240, 242, 243, 252, 254, 258], "apart": 0, "from": [0, 5, 13, 14, 15, 19, 26, 44, 59, 60, 63, 75, 78, 88, 92, 99, 101, 102, 103, 104, 121, 122, 124, 136, 141, 145, 148, 149, 152, 153, 162, 164, 166, 168, 169, 171, 177, 179, 182, 183, 184, 186, 188, 197, 200, 203, 204, 205, 208, 209, 210, 212, 216, 218, 220, 221, 222, 224, 225, 226, 227, 229, 231, 234, 245, 247, 250, 254, 255, 257, 258, 259, 260, 261], "ndim": [0, 183, 187, 231, 244, 247, 248], "devic": [0, 5, 15, 26, 27, 59, 60, 63, 91, 92, 97, 102, 103, 104, 109, 111, 112, 114, 121, 144, 145, 174, 175, 185, 186, 187, 188, 190, 202, 208, 211, 217, 228, 244, 254, 258, 260], "dtype": [0, 5, 15, 26, 60, 63, 73, 75, 88, 89, 91, 92, 97, 98, 102, 103, 104, 107, 109, 115, 121, 144, 145, 149, 153, 168, 185, 186, 187, 197, 200, 202, 208, 214, 250, 258, 259, 260], "all": [0, 5, 15, 19, 23, 26, 60, 63, 87, 90, 97, 99, 102, 110, 114, 140, 154, 160, 171, 173, 174, 175, 181, 183, 187, 188, 200, 202, 203, 205, 206, 207, 208, 209, 210, 212, 216, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 229, 231, 243, 245, 246, 252, 253, 254, 257, 258, 260, 261], "thi": [0, 1, 5, 7, 15, 19, 26, 34, 58, 59, 63, 71, 78, 96, 101, 102, 110, 114, 115, 121, 124, 127, 128, 129, 130, 135, 142, 148, 151, 165, 166, 169, 177, 178, 179, 180, 182, 187, 188, 195, 197, 200, 202, 203, 204, 205, 206, 207, 208, 209, 210, 212, 213, 214, 215, 216, 218, 219, 221, 222, 225, 226, 227, 229, 244, 245, 246, 247, 253, 254, 255, 257, 259, 260, 261], "return": [0, 5, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 190, 195, 202, 203, 204, 206, 208, 209, 212, 214, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 238, 239, 240, 242, 243, 244, 245, 246, 247, 248, 250, 252, 254, 258, 260], "tupl": [0, 1, 13, 14, 26, 27, 32, 49, 57, 74, 78, 91, 99, 103, 114, 115, 133, 135, 137, 139, 142, 144, 146, 149, 152, 154, 164, 165, 166, 168, 172, 173, 177, 178, 179, 181, 182, 185, 188, 200, 234, 244, 245, 247, 249, 252, 258], "includ": [0, 1, 7, 9, 13, 14, 15, 16, 17, 20, 21, 23, 28, 30, 40, 41, 42, 43, 47, 51, 88, 110, 114, 115, 117, 121, 131, 133, 135, 137, 149, 162, 166, 168, 182, 187, 188, 197, 202, 203, 204, 205, 206, 207, 208, 209, 213, 238, 252, 254, 255, 257, 259, 260], "those": [0, 5, 7, 15, 23, 88, 90, 112, 114, 140, 142, 149, 168, 197, 202, 205, 206, 209, 210, 212, 244, 247, 248, 250, 253, 254, 255, 258, 259, 260], "mean": [0, 26, 187, 200, 206, 208, 209, 214, 255, 258], "var": [0, 187], "std": [0, 187], "which": [0, 1, 5, 7, 8, 13, 14, 15, 16, 17, 18, 19, 26, 30, 40, 41, 44, 59, 60, 63, 75, 77, 78, 83, 88, 91, 92, 95, 97, 98, 99, 101, 102, 103, 104, 107, 110, 112, 113, 114, 121, 131, 133, 135, 137, 141, 142, 144, 145, 149, 151, 154, 156, 161, 165, 166, 168, 169, 170, 174, 175, 177, 178, 179, 180, 181, 182, 183, 185, 186, 188, 202, 203, 204, 205, 206, 207, 208, 209, 210, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231, 238, 246, 247, 248, 250, 252, 253, 254, 255, 258, 259, 260], "some": [0, 96, 101, 112, 114, 124, 188, 203, 204, 205, 206, 209, 214, 258, 260, 261], "common": [0, 188, 197, 200, 209, 212, 213, 254, 258, 259, 260], "librari": [0, 5, 7, 26, 51, 57, 58, 59, 60, 63, 90, 96, 101, 102, 110, 112, 114, 115, 121, 124, 127, 128, 129, 130, 133, 135, 137, 142, 156, 166, 171, 177, 178, 179, 180, 182, 187, 188, 200, 203, 204, 205, 206, 207, 208, 209, 210, 212, 213, 214, 230, 234, 235, 244, 246, 253, 254, 255, 258, 259, 260, 261], "g": [0, 5, 9, 19, 20, 26, 47, 51, 57, 77, 88, 90, 102, 108, 114, 115, 121, 133, 137, 140, 142, 149, 150, 153, 155, 168, 173, 177, 178, 179, 180, 188, 195, 197, 202, 203, 204, 205, 206, 207, 208, 209, 212, 220, 224, 225, 226, 227, 229, 234, 235, 238, 245, 247, 248, 250, 252, 253, 254, 255, 258, 259, 260], "numpi": [0, 19, 63, 188, 200, 205, 206, 208, 209, 254, 258, 259, 260, 261], "scalar": [0, 2, 49, 60, 187, 188, 202, 212, 252, 260], "valu": [0, 1, 2, 5, 7, 9, 10, 11, 12, 15, 16, 17, 18, 20, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 37, 39, 41, 43, 49, 51, 57, 58, 60, 61, 62, 63, 64, 65, 66, 76, 77, 78, 85, 86, 87, 88, 89, 90, 91, 93, 94, 96, 97, 98, 100, 101, 103, 104, 105, 106, 110, 112, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 133, 134, 135, 137, 138, 140, 142, 143, 144, 148, 149, 151, 155, 156, 157, 158, 159, 160, 161, 162, 166, 168, 169, 170, 171, 176, 177, 178, 179, 180, 182, 183, 185, 187, 195, 197, 200, 202, 204, 206, 207, 208, 212, 214, 216, 217, 218, 220, 221, 222, 224, 225, 226, 227, 228, 229, 230, 234, 235, 236, 238, 239, 240, 243, 244, 245, 246, 247, 248, 250, 252, 254, 258, 260], "rational": [0, 7, 88, 149, 168, 188, 208, 209, 250, 253, 255, 258], "alwai": [0, 12, 26, 42, 60, 63, 98, 102, 140, 152, 188, 200, 205, 206, 209, 234], "necessari": [0, 26, 60, 90, 102, 140, 152, 173, 188, 206, 258], "acceler": [0, 5, 200, 208], "where": [0, 1, 7, 13, 14, 15, 26, 47, 57, 65, 86, 87, 90, 94, 96, 97, 101, 103, 104, 123, 124, 125, 136, 140, 142, 146, 148, 156, 157, 159, 160, 165, 166, 170, 171, 173, 181, 182, 183, 187, 188, 197, 203, 205, 208, 209, 212, 216, 218, 220, 221, 222, 224, 225, 226, 227, 229, 230, 231, 234, 235, 236, 238, 240, 243, 244, 245, 247, 248, 250, 254, 258, 259, 260], "non": [0, 1, 7, 13, 14, 16, 17, 63, 127, 128, 129, 130, 133, 135, 137, 142, 149, 166, 172, 182, 183, 188, 197, 202, 203, 209, 216, 218, 221, 222, 225, 226, 227, 229, 232, 234, 238, 240, 247, 252, 260], "could": [0, 26, 177, 178, 179, 180, 200, 206, 213, 254, 258, 260], "forc": 0, "synchron": [0, 26, 59, 258], "delai": [0, 24, 25, 29, 34, 35, 200, 212, 258], "execut": [0, 197, 200, 209, 211, 213, 258, 260], "model": [0, 57, 58, 90, 140, 205, 212, 260], "repres": [0, 8, 11, 12, 23, 24, 25, 26, 29, 34, 35, 62, 66, 87, 90, 101, 136, 140, 160, 170, 171, 202, 204, 208, 209, 245, 259, 260], "futur": [0, 26, 102, 201, 205, 206, 209, 213, 214, 234, 235, 256, 258, 260], "python": [0, 2, 5, 7, 24, 25, 26, 29, 34, 35, 49, 60, 101, 102, 151, 187, 188, 200, 202, 205, 208, 210, 212, 213, 214, 255, 257, 258, 259], "x": [0, 1, 5, 7, 9, 10, 11, 13, 14, 16, 17, 18, 20, 26, 61, 62, 63, 64, 65, 66, 68, 74, 76, 77, 79, 85, 86, 87, 88, 92, 94, 95, 96, 99, 100, 102, 104, 108, 116, 117, 118, 122, 123, 124, 125, 128, 132, 133, 135, 137, 139, 141, 142, 145, 146, 147, 149, 150, 152, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 168, 169, 170, 171, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 186, 188, 205, 206, 214, 215, 216, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 229, 230, 232, 233, 234, 235, 236, 238, 239, 240, 241, 243, 244, 245, 246, 247, 248, 250, 252, 254, 258, 260], "__pos__": [0, 187, 202], "po": 0, "__neg__": [0, 187, 202], "neg": [0, 13, 14, 15, 44, 47, 65, 78, 88, 90, 95, 97, 99, 101, 117, 122, 124, 140, 148, 151, 154, 158, 162, 169, 187, 188, 202, 205, 216, 218, 220, 221, 222, 224, 225, 226, 227, 229, 252, 258], "x1": [0, 7, 12, 40, 65, 67, 69, 70, 71, 72, 77, 85, 90, 93, 101, 105, 106, 119, 120, 126, 127, 129, 130, 131, 134, 138, 140, 143, 148, 151, 156, 167, 172, 183, 184, 231, 237, 242, 246, 249, 251], "x2": [0, 7, 12, 40, 65, 67, 69, 70, 71, 72, 85, 90, 93, 101, 105, 106, 119, 120, 126, 127, 129, 130, 131, 134, 138, 140, 143, 148, 151, 156, 167, 172, 183, 184, 231, 237, 242, 246, 249, 251], "__add__": [0, 50, 187, 202], "add": [0, 7, 21, 88, 167, 168, 187, 188, 202, 203, 204, 209, 250], "__sub__": [0, 187, 202], "sub": [0, 188], "__mul__": [0, 187, 202], "mul": 0, "__truediv__": [0, 187, 202], "truediv": 0, "__floordiv__": [0, 187], "floordiv": 0, "__mod__": [0, 187], "mod": 0, "__pow__": [0, 187, 202], "pow": [0, 47, 187, 202, 204], "should": [0, 1, 5, 7, 9, 10, 11, 12, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 29, 30, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 50, 51, 52, 55, 57, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 76, 77, 79, 85, 86, 87, 88, 90, 94, 95, 96, 98, 100, 101, 102, 105, 106, 108, 112, 114, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 133, 134, 135, 136, 137, 138, 140, 141, 147, 148, 149, 150, 151, 152, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 166, 167, 168, 170, 171, 172, 174, 175, 176, 177, 178, 179, 180, 182, 183, 188, 195, 202, 203, 204, 205, 208, 209, 210, 214, 216, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 229, 230, 231, 232, 234, 235, 236, 238, 239, 240, 243, 244, 245, 246, 247, 248, 250, 252, 253, 254, 258, 260, 261], "defin": [0, 5, 12, 23, 30, 41, 49, 60, 65, 79, 90, 101, 103, 104, 114, 121, 133, 135, 137, 139, 140, 151, 157, 162, 163, 166, 174, 175, 182, 183, 187, 190, 195, 202, 204, 205, 214, 218, 219, 222, 223, 226, 229, 230, 234, 235, 236, 243, 244, 246, 254, 259, 260, 261], "real": [0, 5, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 24, 25, 29, 30, 31, 33, 35, 37, 39, 41, 44, 51, 60, 61, 62, 63, 64, 65, 66, 76, 77, 85, 86, 87, 88, 90, 91, 93, 94, 96, 97, 98, 100, 101, 103, 105, 106, 112, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 133, 134, 135, 137, 138, 140, 141, 142, 143, 144, 145, 148, 149, 151, 155, 156, 157, 158, 159, 160, 161, 162, 166, 168, 170, 171, 176, 182, 183, 185, 187, 197, 202, 205, 217, 220, 224, 225, 226, 227, 228, 229, 230, 234, 235, 236, 238, 240, 243, 244, 245, 246, 247, 248, 250, 252, 255], "data": [0, 1, 2, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76, 77, 78, 79, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 110, 112, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 182, 183, 184, 185, 186, 187, 190, 197, 200, 203, 205, 206, 209, 211, 212, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 238, 239, 240, 242, 243, 244, 245, 246, 247, 248, 250, 252, 254, 255, 256, 257, 258, 261], "type": [0, 2, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 55, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76, 77, 78, 79, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 112, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 182, 183, 184, 185, 186, 187, 188, 190, 200, 203, 205, 206, 208, 210, 211, 212, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 238, 239, 240, 242, 243, 244, 245, 246, 247, 248, 250, 252, 254, 255, 258, 259], "__matmul__": [0, 187, 202], "matmul": [0, 40, 187, 197, 202, 254], "The": [0, 1, 5, 7, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 22, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 55, 57, 58, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 76, 77, 78, 79, 85, 86, 87, 88, 90, 93, 94, 96, 99, 100, 101, 102, 105, 106, 108, 109, 110, 112, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 137, 138, 139, 140, 141, 142, 143, 146, 147, 148, 149, 150, 151, 155, 156, 157, 158, 159, 160, 161, 162, 163, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 182, 183, 184, 188, 197, 200, 202, 203, 204, 206, 207, 208, 209, 212, 213, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 238, 239, 240, 242, 243, 244, 245, 246, 247, 248, 250, 252, 253, 254, 255, 257, 258, 259, 260, 261], "__invert__": [0, 187], "inv": [0, 202, 254], "invert": [0, 68, 236, 239, 246], "__inv__": 0, "__and__": [0, 187], "__or__": [0, 187], "__xor__": [0, 187], "xor": [0, 72, 130], "__lshift__": [0, 187], "lshift": 0, "__rshift__": [0, 187], "rshift": 0, "integ": [0, 5, 9, 13, 14, 15, 20, 22, 26, 29, 30, 34, 35, 36, 38, 41, 44, 45, 47, 48, 51, 52, 60, 67, 68, 69, 70, 71, 72, 76, 77, 88, 90, 100, 101, 103, 104, 107, 114, 115, 121, 133, 135, 137, 141, 148, 149, 151, 153, 155, 156, 166, 168, 169, 176, 182, 183, 187, 188, 202, 204, 205, 216, 218, 220, 221, 222, 224, 225, 226, 227, 229, 231, 239, 240, 250, 252, 258], "boolean": [0, 5, 22, 24, 25, 26, 29, 35, 36, 43, 45, 52, 57, 60, 63, 67, 68, 70, 72, 88, 89, 102, 103, 104, 110, 114, 115, 121, 127, 128, 129, 130, 142, 187, 197, 202], "__lt__": [0, 187], "lt": 0, "__le__": [0, 187], "le": 0, "__gt__": [0, 187], "gt": [0, 244, 247], "__ge__": [0, 187], "ge": 0, "__eq__": [0, 187, 202, 209], "eq": 0, "__ne__": [0, 187, 202], "ne": 0, "ar": [0, 1, 5, 7, 15, 16, 17, 19, 23, 24, 25, 26, 27, 29, 34, 35, 40, 49, 55, 58, 60, 77, 85, 86, 89, 90, 94, 97, 98, 99, 101, 102, 113, 114, 121, 127, 128, 129, 130, 131, 140, 142, 148, 154, 155, 159, 170, 171, 173, 177, 179, 183, 188, 197, 200, 202, 203, 204, 205, 206, 207, 208, 209, 210, 212, 213, 214, 216, 217, 218, 219, 221, 222, 223, 225, 226, 227, 228, 229, 231, 234, 235, 240, 243, 244, 247, 253, 254, 255, 258, 259, 260, 261], "onli": [0, 1, 5, 7, 16, 17, 23, 26, 40, 57, 58, 63, 99, 102, 112, 114, 115, 121, 127, 128, 129, 130, 131, 135, 166, 182, 187, 188, 197, 200, 203, 205, 206, 208, 209, 210, 212, 214, 219, 236, 243, 244, 246, 254, 255, 258, 259, 260, 261], "other": [0, 5, 21, 22, 23, 26, 28, 30, 31, 33, 37, 38, 39, 40, 41, 42, 43, 45, 47, 48, 50, 51, 52, 63, 89, 90, 96, 101, 102, 124, 139, 140, 166, 182, 188, 190, 200, 202, 204, 205, 206, 207, 208, 209, 210, 214, 231, 243, 253, 254, 257, 258, 260], "ani": [0, 1, 9, 10, 11, 23, 24, 25, 26, 28, 29, 34, 35, 43, 59, 61, 62, 66, 89, 93, 116, 117, 143, 162, 187, 188, 197, 202, 205, 206, 208, 214, 247, 255, 257, 258, 261], "For": [0, 1, 5, 7, 9, 10, 11, 12, 16, 17, 18, 20, 24, 25, 26, 29, 30, 31, 33, 35, 37, 39, 41, 44, 57, 58, 61, 62, 64, 65, 66, 76, 79, 85, 86, 87, 88, 90, 93, 94, 96, 100, 101, 105, 106, 112, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 133, 134, 136, 137, 138, 140, 141, 143, 148, 149, 151, 155, 156, 157, 158, 159, 160, 161, 162, 163, 165, 168, 170, 171, 176, 177, 178, 179, 180, 188, 195, 200, 204, 205, 207, 209, 212, 217, 226, 228, 245, 247, 248, 250, 258, 260, 261], "backward": [0, 13, 14, 16, 17, 18, 31, 33, 37, 39, 105, 106, 119, 120, 121, 133, 134, 137, 138, 151, 161, 183, 188, 202, 205, 206, 210, 216, 218, 220, 221, 222, 224, 225, 226, 227, 229, 231, 258], "compat": [0, 1, 12, 13, 14, 16, 17, 18, 21, 22, 26, 28, 30, 31, 33, 37, 38, 39, 40, 41, 42, 43, 45, 47, 48, 49, 50, 51, 52, 65, 67, 69, 70, 71, 72, 74, 77, 85, 90, 93, 101, 105, 106, 119, 120, 121, 126, 127, 129, 130, 131, 133, 134, 135, 137, 138, 140, 143, 148, 149, 151, 152, 161, 166, 167, 168, 182, 183, 184, 197, 202, 205, 206, 210, 231, 238, 240, 243, 246, 252, 258, 260], "mai": [0, 5, 7, 15, 16, 17, 18, 23, 26, 28, 31, 33, 37, 39, 43, 51, 57, 58, 59, 60, 89, 90, 93, 101, 102, 105, 106, 109, 114, 115, 119, 120, 121, 127, 128, 129, 130, 133, 134, 135, 137, 138, 140, 142, 143, 152, 156, 161, 166, 171, 177, 178, 179, 180, 182, 187, 188, 195, 197, 200, 203, 204, 205, 206, 207, 208, 209, 210, 212, 213, 214, 234, 244, 245, 247, 253, 254, 258, 259, 260], "complex": [0, 5, 9, 10, 11, 12, 13, 14, 16, 17, 18, 20, 21, 24, 25, 29, 31, 33, 35, 37, 39, 40, 42, 43, 44, 46, 47, 50, 51, 60, 61, 62, 63, 64, 66, 79, 86, 87, 88, 90, 93, 94, 96, 97, 98, 103, 104, 105, 106, 108, 112, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 131, 133, 134, 136, 137, 138, 140, 141, 142, 143, 144, 145, 147, 148, 149, 150, 155, 157, 159, 160, 161, 162, 163, 167, 168, 170, 171, 172, 177, 178, 179, 180, 183, 197, 204, 208, 209, 211, 212, 216, 218, 220, 221, 222, 224, 225, 226, 227, 229, 230, 231, 232, 234, 235, 236, 238, 239, 240, 242, 243, 244, 245, 246, 247, 248, 250, 252, 254, 258, 259], "howev": [0, 5, 16, 17, 18, 31, 33, 37, 39, 57, 88, 101, 105, 106, 115, 119, 120, 121, 133, 134, 137, 138, 156, 161, 169, 170, 171, 200, 203, 204, 205, 206, 207, 209, 254, 255, 258, 260], "inequ": [0, 16, 17, 18, 31, 33, 37, 39, 105, 106, 119, 120, 133, 134, 137, 138, 161], "unspecifi": [0, 5, 10, 11, 16, 17, 18, 30, 31, 33, 37, 39, 41, 47, 51, 60, 62, 66, 77, 78, 87, 90, 94, 96, 101, 103, 104, 105, 106, 119, 120, 121, 133, 134, 137, 138, 148, 151, 156, 160, 161, 162, 165, 169, 171, 188, 195, 197, 218, 219, 222, 223, 226, 229, 234, 235, 258], "thu": [0, 5, 16, 17, 18, 30, 31, 33, 37, 39, 41, 47, 57, 60, 71, 77, 101, 103, 104, 105, 106, 119, 120, 121, 133, 134, 137, 138, 148, 151, 156, 161, 170, 171, 188, 195, 204, 205, 218, 219, 222, 223, 226, 229, 234, 235, 247, 254], "depend": [0, 5, 9, 10, 11, 16, 17, 18, 20, 26, 29, 31, 33, 37, 39, 44, 47, 51, 57, 58, 59, 61, 62, 63, 64, 65, 66, 77, 86, 87, 90, 94, 96, 105, 106, 110, 119, 120, 121, 122, 123, 124, 125, 133, 134, 137, 138, 140, 141, 148, 156, 159, 160, 161, 170, 171, 184, 195, 197, 204, 205, 208, 211, 212, 214, 234, 235, 244, 245, 246, 247, 254, 258, 260, 261], "see": [0, 5, 10, 11, 12, 13, 14, 16, 17, 18, 21, 22, 26, 28, 30, 31, 33, 34, 37, 38, 39, 40, 41, 42, 43, 45, 47, 48, 49, 50, 51, 52, 53, 59, 61, 62, 64, 65, 66, 67, 69, 70, 71, 72, 74, 77, 85, 90, 93, 96, 101, 102, 104, 105, 106, 110, 113, 119, 120, 122, 124, 126, 127, 129, 130, 131, 133, 134, 135, 137, 138, 140, 142, 143, 148, 149, 151, 153, 157, 161, 162, 163, 166, 167, 168, 177, 178, 179, 180, 182, 183, 184, 187, 188, 197, 199, 200, 203, 205, 207, 208, 209, 214, 231, 238, 240, 243, 246, 252, 253, 258, 259, 260, 261], "order": [0, 5, 7, 16, 17, 18, 19, 26, 31, 33, 37, 39, 55, 60, 63, 65, 89, 99, 101, 102, 105, 106, 119, 120, 133, 134, 137, 138, 142, 156, 161, 170, 171, 172, 177, 178, 179, 180, 188, 195, 197, 202, 204, 207, 208, 210, 225, 226, 234, 235, 238, 247, 248, 252, 254, 255, 258, 259], "chang": [0, 1, 9, 10, 11, 12, 13, 14, 20, 21, 24, 26, 29, 35, 40, 42, 43, 44, 46, 47, 50, 51, 60, 61, 62, 63, 64, 66, 86, 87, 90, 93, 94, 96, 97, 98, 102, 103, 104, 116, 117, 118, 121, 122, 123, 124, 125, 131, 136, 140, 141, 142, 143, 144, 145, 147, 148, 149, 152, 155, 157, 159, 160, 162, 163, 167, 168, 170, 171, 172, 177, 178, 179, 180, 183, 200, 202, 230, 231, 232, 234, 235, 236, 238, 239, 240, 242, 243, 244, 245, 246, 247, 248, 250, 252, 255, 258, 260, 261], "shape": [0, 1, 18, 40, 55, 63, 73, 74, 78, 88, 91, 92, 95, 99, 103, 104, 110, 131, 132, 136, 144, 145, 152, 154, 156, 161, 165, 169, 172, 173, 174, 175, 181, 183, 185, 186, 187, 202, 211, 212, 214, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 232, 233, 234, 235, 236, 238, 239, 240, 242, 243, 244, 245, 246, 247, 248, 250, 258, 260], "result": [0, 1, 5, 9, 10, 11, 12, 13, 14, 15, 16, 17, 20, 21, 22, 24, 25, 28, 29, 30, 31, 33, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 76, 77, 79, 85, 86, 87, 90, 93, 94, 96, 100, 101, 105, 106, 108, 116, 117, 118, 119, 120, 122, 123, 124, 125, 126, 127, 128, 129, 130, 133, 134, 135, 137, 138, 140, 141, 143, 147, 148, 149, 150, 151, 153, 155, 156, 157, 158, 159, 160, 162, 163, 165, 166, 167, 168, 170, 171, 172, 176, 177, 182, 188, 195, 197, 202, 204, 205, 206, 212, 230, 231, 233, 238, 239, 245, 252, 258, 259, 260, 261], "promot": [0, 1, 5, 10, 11, 12, 21, 22, 30, 40, 41, 42, 44, 45, 47, 49, 50, 51, 52, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 75, 78, 85, 86, 87, 90, 94, 96, 101, 104, 121, 122, 123, 124, 125, 126, 131, 134, 135, 138, 140, 141, 148, 151, 153, 159, 160, 162, 163, 165, 166, 167, 170, 171, 172, 182, 183, 184, 187, 202, 230, 231, 236, 238, 239, 240, 242, 243, 244, 245, 246, 252, 254], "rule": [0, 5, 7, 10, 11, 12, 21, 22, 30, 40, 41, 42, 44, 45, 47, 49, 50, 51, 52, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 75, 78, 85, 86, 87, 88, 90, 94, 96, 101, 103, 104, 121, 122, 123, 124, 125, 126, 131, 134, 138, 140, 141, 148, 151, 153, 157, 159, 160, 162, 163, 165, 167, 170, 171, 172, 183, 184, 187, 188, 202, 205, 208, 230, 231, 236, 238, 239, 240, 242, 243, 244, 245, 246, 252, 254, 258, 260], "broadcast": [0, 12, 13, 14, 16, 17, 21, 22, 28, 30, 31, 33, 37, 38, 39, 40, 41, 42, 43, 45, 47, 48, 49, 50, 51, 52, 65, 67, 69, 70, 71, 72, 73, 74, 77, 85, 90, 93, 101, 105, 106, 119, 120, 126, 127, 129, 130, 131, 133, 134, 135, 137, 138, 140, 143, 148, 149, 151, 166, 167, 168, 172, 182, 183, 184, 187, 202, 231, 238, 240, 243, 246, 252, 258], "same": [0, 5, 7, 9, 12, 15, 18, 19, 20, 26, 32, 36, 38, 40, 41, 46, 48, 50, 55, 59, 63, 68, 73, 74, 76, 77, 78, 79, 88, 90, 92, 95, 98, 99, 100, 101, 102, 104, 108, 131, 132, 133, 135, 136, 137, 139, 140, 145, 146, 147, 148, 149, 150, 151, 152, 154, 155, 156, 157, 161, 164, 165, 166, 167, 168, 169, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 186, 188, 197, 200, 205, 206, 208, 209, 214, 216, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 229, 230, 232, 233, 234, 236, 239, 243, 244, 245, 246, 247, 248, 250, 253, 254, 258, 260], "behavior": [0, 5, 47, 49, 60, 63, 77, 90, 101, 103, 104, 121, 140, 148, 151, 156, 169, 177, 178, 179, 180, 187, 188, 190, 197, 200, 202, 204, 205, 212, 213, 218, 219, 222, 223, 226, 229, 254, 255, 258, 259, 260, 261], "special": [0, 9, 10, 11, 12, 20, 21, 24, 25, 28, 29, 30, 35, 41, 42, 43, 47, 51, 61, 62, 64, 65, 66, 76, 85, 86, 87, 88, 90, 93, 94, 96, 100, 101, 116, 117, 118, 122, 123, 124, 125, 126, 133, 134, 135, 137, 138, 140, 143, 148, 149, 151, 155, 157, 158, 159, 160, 162, 163, 166, 168, 170, 171, 176, 182, 202, 203, 205, 245, 250], "case": [0, 1, 5, 7, 9, 10, 11, 12, 15, 20, 21, 24, 25, 26, 28, 29, 30, 35, 41, 42, 43, 47, 51, 60, 61, 62, 64, 65, 66, 76, 85, 86, 87, 88, 90, 93, 94, 96, 100, 101, 102, 116, 117, 118, 122, 123, 124, 125, 126, 133, 134, 135, 136, 137, 138, 140, 143, 148, 149, 151, 155, 157, 158, 159, 160, 162, 163, 166, 168, 170, 171, 176, 182, 188, 200, 202, 203, 204, 205, 206, 209, 210, 212, 244, 245, 247, 250, 254, 256, 258, 261], "its": [0, 5, 26, 40, 73, 90, 98, 131, 140, 152, 154, 204, 205, 208, 209, 253, 258, 259, 260], "respect": [0, 9, 12, 20, 21, 22, 28, 30, 31, 33, 37, 38, 39, 41, 42, 43, 45, 48, 50, 51, 52, 65, 67, 69, 70, 71, 72, 77, 87, 90, 93, 101, 105, 106, 112, 119, 120, 121, 126, 127, 129, 130, 134, 136, 138, 139, 140, 143, 151, 160, 167, 170, 171, 172, 183, 202, 204, 207, 209, 234, 244, 247], "binari": [0, 5, 67, 70, 72, 170, 171, 203], "two": [0, 1, 5, 15, 19, 40, 55, 65, 71, 97, 102, 131, 132, 136, 155, 172, 174, 175, 177, 178, 179, 180, 183, 188, 197, 208, 209, 212, 213, 218, 219, 222, 223, 226, 229, 230, 232, 233, 234, 235, 236, 238, 239, 240, 242, 243, 244, 245, 246, 247, 248, 250, 254, 258, 259, 260, 261], "operand": [0, 1, 9, 10, 11, 12, 24, 25, 29, 35, 61, 62, 64, 65, 66, 76, 85, 86, 87, 88, 90, 93, 94, 96, 100, 101, 116, 117, 118, 122, 123, 124, 125, 126, 133, 134, 137, 138, 140, 143, 148, 149, 151, 155, 157, 158, 159, 160, 162, 163, 168, 170, 171, 176, 197, 202, 204, 245, 250], "assign": [0, 206], "exampl": [0, 5, 12, 23, 26, 114, 115, 165, 187, 188, 200, 205, 206, 207, 209, 212, 213, 214, 250, 254, 258, 260, 261], "after": [0, 1, 26, 40, 131, 162, 173], "addit": [0, 5, 7, 12, 26, 50, 59, 88, 114, 167, 187, 188, 197, 203, 205, 208, 254, 258, 259, 261], "modifi": [0, 26, 206, 257], "equal": [0, 1, 9, 10, 11, 18, 20, 21, 22, 26, 28, 30, 31, 33, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 58, 61, 62, 63, 64, 65, 66, 69, 71, 77, 87, 89, 94, 96, 97, 103, 104, 115, 117, 122, 123, 124, 125, 135, 142, 143, 144, 145, 148, 149, 155, 160, 161, 162, 166, 168, 169, 171, 172, 173, 177, 178, 179, 180, 182, 187, 188, 195, 202, 205, 209, 216, 218, 220, 221, 222, 224, 225, 226, 227, 229, 231, 233, 239, 240, 243, 244, 245, 246, 250, 258], "equival": [0, 20, 21, 22, 28, 30, 31, 33, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 71, 101, 127, 128, 129, 130, 151, 155, 169, 188, 197, 205, 206, 240, 243, 246, 252, 258], "discuss": [0, 93, 143, 208, 209, 213, 258, 259, 260], "copi": [0, 1, 26, 59, 60, 63, 102, 152, 161, 203, 208, 209, 211, 257, 258], "view": [0, 102, 211], "behaviour": [0, 211, 258, 260], "mutabl": [0, 211], "via": [0, 26, 101, 102, 169, 188, 203, 208, 209, 213, 215, 243, 253, 254, 255, 258], "__iadd__": 0, "__isub__": 0, "__imul__": 0, "__itruediv__": 0, "__ifloordiv__": 0, "__ipow__": 0, "__imod__": 0, "__imatmul__": 0, "__iand__": 0, "__ior__": 0, "__ixor__": 0, "__ilshift__": 0, "__irshift__": 0, "appli": [0, 12, 77, 78, 85, 90, 140, 153, 155, 165, 172, 188, 197, 200, 205, 216, 218, 221, 222, 225, 226, 227, 229, 240, 243, 254, 258, 260], "match": [0, 1, 5, 9, 20, 26, 63, 101, 151, 172, 210, 220, 224, 225, 226, 227, 229, 234, 235, 238, 252, 260], "op": [0, 197], "__radd__": 0, "__rsub__": 0, "__rmul__": 0, "__rtruediv__": 0, "__rfloordiv__": 0, "__rpow__": 0, "__rmod__": 0, "__rmatmul__": 0, "__rand__": 0, "__ror__": 0, "__rxor__": 0, "__rlshift__": 0, "__rrshift__": 0, "arrai": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 83, 85, 86, 87, 88, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 189, 190, 191, 192, 193, 194, 195, 196, 198, 199, 200, 202, 203, 204, 205, 206, 207, 208, 209, 210, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 259, 261], "refer": [1, 13, 14, 96, 97, 124, 166, 172, 173, 182, 183, 188, 205, 206, 214, 216, 218, 220, 221, 222, 224, 225, 226, 227, 229, 231], "automat": [1, 258], "implicit": [1, 208, 209, 212, 258], "expans": [1, 258], "size": [1, 13, 14, 88, 95, 121, 142, 154, 164, 169, 172, 183, 187, 188, 207, 213, 216, 218, 220, 221, 222, 224, 225, 226, 227, 229, 231, 233, 242, 244, 247, 258], "without": [1, 7, 26, 57, 102, 112, 114, 142, 152, 177, 178, 179, 180, 200, 203, 204, 207, 257, 258, 260], "purpos": [1, 5, 96, 124, 200, 245, 254, 256, 257, 260], "make": [1, 7, 200, 203, 204, 206, 208, 212, 216, 218, 220, 221, 222, 224, 225, 226, 227, 229, 253, 255, 258], "differ": [1, 12, 26, 49, 50, 77, 78, 88, 90, 98, 101, 102, 140, 149, 165, 167, 168, 188, 200, 206, 209, 210, 212, 223, 234, 244, 245, 247, 250, 254, 258, 259, 260], "element": [1, 9, 10, 11, 12, 13, 14, 15, 20, 21, 22, 24, 25, 28, 29, 30, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 54, 58, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 76, 77, 79, 85, 86, 87, 88, 90, 93, 94, 96, 97, 99, 100, 101, 103, 104, 105, 106, 108, 116, 117, 118, 119, 120, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 133, 134, 135, 137, 138, 140, 141, 142, 143, 147, 148, 149, 150, 151, 152, 154, 155, 156, 157, 158, 159, 160, 162, 163, 164, 166, 167, 168, 169, 170, 171, 173, 174, 175, 176, 177, 178, 179, 180, 182, 184, 187, 188, 202, 204, 216, 218, 220, 221, 222, 224, 225, 226, 227, 229, 231, 234, 243, 244, 245, 247, 250, 258], "wise": [1, 9, 10, 12, 20, 21, 22, 28, 30, 31, 33, 36, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 61, 64, 65, 67, 68, 69, 70, 71, 72, 77, 79, 85, 90, 93, 101, 105, 106, 108, 119, 120, 126, 127, 128, 129, 130, 134, 138, 140, 143, 148, 150, 151, 167, 187, 202, 204, 258], "oper": [1, 12, 19, 24, 26, 34, 40, 57, 58, 59, 61, 64, 71, 86, 88, 90, 101, 123, 125, 131, 140, 148, 149, 151, 153, 159, 163, 168, 170, 172, 187, 188, 194, 197, 202, 205, 206, 207, 208, 209, 250, 254, 255, 258, 259, 260], "facilit": [1, 195, 200], "user": [1, 7, 26, 109, 171, 200, 203, 204, 206, 209, 213, 254, 258, 259, 260], "ergonom": 1, "encourag": [1, 258, 259], "avoid": [1, 9, 63, 90, 96, 101, 124, 140, 152, 203, 206, 209, 212, 254, 258, 260], "unnecessari": [1, 254], "can": [1, 7, 26, 60, 75, 109, 113, 115, 188, 197, 200, 203, 205, 206, 208, 209, 214, 243, 244, 247, 253, 254, 258, 259, 260, 261], "potenti": [1, 26, 96, 124, 206, 258], "enabl": [1, 26, 102, 209, 213, 214, 258], "more": [1, 5, 7, 15, 19, 26, 40, 58, 60, 63, 73, 88, 96, 99, 101, 124, 131, 142, 148, 169, 177, 178, 179, 180, 188, 197, 200, 203, 204, 205, 206, 207, 208, 209, 210, 213, 214, 218, 219, 222, 223, 226, 229, 245, 254, 255, 258, 259, 261], "memori": [1, 26, 60, 102, 200, 206, 207, 209, 258, 260], "effici": [1, 200, 206], "through": [1, 60, 65, 253, 255, 259, 260], "vector": [1, 40, 131, 136, 183, 231, 242, 247, 248, 252, 254, 258], "reduc": [1, 13, 14, 16, 17, 133, 135, 137, 149, 166, 168, 182, 188, 244, 247, 254, 259, 260], "consumpt": [1, 26, 259], "cach": 1, "local": [1, 209], "given": [1, 23, 99, 121, 154, 156, 181, 197, 205, 206, 209, 210, 214, 235, 245, 254, 255, 258, 260], "involv": [1, 12, 90, 101, 140, 148, 153, 197, 204, 205, 209, 213], "singleton": [1, 13, 14, 16, 17, 95, 133, 135, 137, 149, 164, 166, 168, 173, 182, 238, 252, 258], "whose": [1, 5, 9, 11, 19, 20, 26, 47, 55, 62, 66, 85, 86, 87, 97, 99, 102, 132, 148, 154, 158, 159, 160, 169, 170, 171, 172, 174, 175, 177, 178, 179, 188, 206, 220, 224, 225, 226, 227, 229, 230, 232, 233, 234, 235, 236, 238, 239, 240, 242, 243, 244, 245, 246, 247, 248, 250, 252, 258, 260], "one": [1, 15, 19, 26, 40, 51, 58, 60, 63, 73, 75, 88, 90, 95, 97, 99, 101, 102, 114, 115, 121, 131, 136, 140, 142, 144, 145, 156, 164, 169, 177, 178, 179, 180, 183, 188, 200, 203, 205, 206, 208, 209, 212, 213, 214, 216, 218, 220, 221, 222, 223, 224, 225, 226, 227, 229, 242, 243, 244, 252, 254, 255, 258, 260], "virtual": 1, "repeat": [1, 188, 260], "across": [1, 5, 90, 101, 140, 171, 202, 204, 205, 209, 253, 258], "correspond": [1, 16, 17, 23, 47, 59, 65, 73, 77, 102, 110, 111, 112, 148, 152, 154, 156, 166, 172, 177, 178, 179, 180, 182, 183, 188, 204, 218, 222, 226, 229, 231, 234, 238, 246, 257, 258], "If": [1, 5, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 23, 24, 25, 26, 29, 34, 35, 40, 44, 47, 51, 55, 57, 59, 60, 61, 62, 63, 64, 65, 66, 74, 76, 77, 78, 85, 86, 87, 88, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 110, 112, 114, 115, 116, 117, 118, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 148, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 164, 165, 166, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 185, 186, 188, 203, 205, 209, 215, 216, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 229, 230, 231, 234, 235, 236, 238, 239, 240, 243, 244, 245, 246, 247, 250, 252, 253, 254, 258, 260], "unequ": 1, "lower": [1, 77, 97, 174, 230], "higher": [1, 5, 26, 188, 203, 254, 259], "prepend": [1, 40, 95, 131, 173], "until": [1, 26, 173], "store": [1, 26, 209, 250], "determin": [1, 10, 11, 12, 13, 14, 21, 22, 26, 30, 40, 41, 42, 44, 45, 47, 50, 51, 52, 61, 62, 64, 65, 66, 67, 69, 70, 71, 72, 75, 78, 85, 86, 87, 88, 90, 94, 96, 101, 116, 117, 118, 122, 123, 124, 125, 126, 131, 134, 138, 140, 141, 148, 151, 158, 159, 160, 162, 163, 167, 169, 170, 171, 172, 177, 178, 179, 180, 183, 184, 197, 205, 208, 209, 216, 218, 220, 221, 222, 224, 225, 226, 227, 229, 230, 231, 232, 233, 236, 238, 239, 240, 242, 243, 244, 245, 246, 250, 252, 254, 258], "let": [1, 9, 10, 11, 12, 62, 66, 85, 87, 88, 93, 94, 96, 102, 116, 117, 118, 121, 122, 124, 135, 143, 149, 156, 157, 160, 162, 166, 168, 171, 173, 182, 183, 188, 213, 216, 218, 220, 221, 222, 224, 225, 226, 227, 229, 230, 234, 235, 236, 244, 246, 247, 250], "b": [1, 9, 10, 11, 12, 57, 62, 66, 87, 90, 93, 94, 96, 101, 116, 117, 118, 121, 122, 124, 140, 143, 157, 160, 162, 165, 171, 183, 188, 202, 205, 206, 210, 243, 246, 260], "both": [1, 40, 44, 47, 51, 65, 77, 88, 90, 98, 101, 102, 121, 131, 141, 148, 149, 168, 171, 172, 183, 188, 205, 206, 208, 212, 214, 231, 250, 254, 258, 259], "shape1": 1, "describ": [1, 5, 12, 88, 90, 93, 114, 115, 140, 143, 148, 149, 168, 190, 197, 205, 208, 212, 217, 228, 250, 258], "shape2": 1, "n1": [1, 136], "len": [1, 136, 173], "n2": [1, 136], "max": [1, 26, 77, 98, 107, 173, 187, 188, 238, 240, 243], "temporari": 1, "list": [1, 73, 78, 113, 136, 165, 188, 200, 202, 209, 258, 260], "length": [1, 15, 136, 152, 172, 188, 217, 219, 220, 223, 228, 247, 248], "while": [1, 101, 114, 121, 127, 128, 129, 130, 135, 139, 156, 166, 177, 178, 182, 187, 188, 195, 200, 205, 206, 207, 209, 212, 243, 254, 259, 260, 261], "d1": 1, "els": [1, 26, 200, 259], "d2": 1, "set": [1, 18, 26, 49, 65, 102, 158, 161, 166, 174, 175, 177, 179, 180, 182, 187, 188, 203, 204, 205, 206, 209, 210, 213, 214, 216, 218, 220, 221, 222, 224, 225, 226, 227, 229, 230, 234, 235, 236, 240, 243, 244, 246, 247, 253, 254, 258, 260, 261], "th": [1, 97, 173, 188, 218, 222, 226, 229], "throw": 1, "except": [1, 7, 13, 14, 26, 74, 78, 88, 97, 102, 121, 142, 165, 169, 181, 188, 197, 200, 204, 206, 209, 211, 212, 216, 218, 220, 221, 222, 224, 225, 226, 227, 229, 243, 255, 258, 259, 260], "demonstr": 1, "applic": [1, 26, 88, 149, 168, 197, 250, 254, 258, 259], "4d": 1, "8": [1, 5, 7, 27, 173, 197, 200], "6": [1, 7, 173], "3d": 1, "7": [1, 7, 27, 214], "5": [1, 188, 258], "2d": 1, "1d": 1, "15": 1, "do": [1, 26, 90, 140, 151, 195, 200, 203, 205, 206, 208, 209, 210, 254, 255, 257, 258, 260, 261], "doe": [1, 15, 26, 102, 143, 169, 188, 197, 200, 203, 204, 205, 206, 207, 209, 210, 212, 214, 254, 258, 260, 261], "second": [1, 12, 65, 67, 69, 70, 71, 72, 93, 105, 106, 119, 120, 126, 127, 129, 130, 131, 134, 138, 140, 143, 148, 165, 167, 172, 177, 178, 179, 183, 184, 231, 234, 242, 244, 245, 247, 248, 258], "append": [1, 40, 69, 95, 131, 233], "As": [1, 121, 148, 177, 178, 179, 180, 200, 208, 214, 260], "impli": [1, 177, 178, 179, 180, 257, 258], "__setitem__": [1, 169, 187, 202], "Such": [1, 204, 254], "right": [1, 69, 71, 156, 162, 203, 247, 257], "hand": [1, 197], "left": [1, 5, 60, 69, 101, 103, 156, 169, 188, 197, 234, 235, 247, 258], "index": [1, 5, 16, 17, 18, 32, 34, 49, 57, 83, 97, 110, 112, 136, 139, 142, 156, 165, 169, 172, 177, 178, 179, 187, 218, 222, 226, 229, 258, 260], "perform": [1, 5, 13, 14, 26, 40, 59, 60, 90, 131, 140, 172, 188, 203, 204, 205, 206, 207, 208, 216, 218, 221, 222, 223, 225, 226, 227, 229, 247, 248, 254, 258, 259, 260], "empti": [1, 13, 14, 15, 149, 168, 187, 188, 202, 250, 258], "ok": 1, "allow": [1, 26, 112, 114, 148, 152, 188, 202, 203, 204, 206, 209, 212, 213, 254, 260], "NOT": [1, 128, 257], "adher": [2, 7, 8, 187, 188, 200, 253, 258], "convent": [2, 7, 10, 11, 26, 40, 61, 62, 64, 65, 66, 88, 122, 124, 131, 148, 162, 187, 188, 195, 205, 209, 253, 254, 259], "each": [2, 9, 10, 11, 12, 20, 21, 22, 26, 28, 30, 31, 33, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 76, 77, 79, 85, 86, 87, 90, 93, 94, 96, 100, 101, 105, 106, 108, 113, 116, 117, 118, 119, 120, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 134, 136, 138, 139, 140, 141, 142, 143, 147, 148, 150, 151, 154, 155, 156, 157, 158, 159, 160, 162, 163, 165, 167, 170, 171, 172, 173, 176, 177, 178, 188, 200, 204, 208, 212, 214, 226, 230, 231, 232, 236, 238, 239, 240, 243, 244, 245, 246, 247, 248, 253, 254, 258, 259, 260], "float": [2, 5, 9, 10, 11, 12, 13, 14, 15, 20, 21, 24, 25, 28, 29, 30, 31, 33, 34, 35, 37, 39, 40, 41, 42, 43, 44, 47, 49, 50, 51, 60, 61, 62, 63, 64, 65, 66, 76, 77, 79, 80, 81, 82, 84, 85, 86, 87, 88, 90, 91, 93, 94, 96, 97, 98, 100, 101, 103, 104, 108, 112, 114, 115, 116, 117, 118, 121, 122, 123, 124, 125, 126, 131, 133, 134, 135, 137, 138, 140, 141, 142, 143, 144, 145, 148, 149, 150, 151, 153, 155, 156, 157, 158, 159, 160, 162, 163, 166, 167, 168, 170, 171, 172, 176, 177, 178, 179, 180, 182, 183, 185, 187, 195, 202, 204, 205, 212, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 232, 234, 235, 236, 238, 239, 240, 243, 244, 245, 246, 247, 248, 250, 252, 254, 258, 259], "point": [2, 5, 9, 10, 11, 12, 13, 14, 15, 20, 24, 25, 26, 29, 34, 35, 40, 41, 42, 44, 47, 50, 51, 60, 61, 62, 63, 64, 65, 66, 76, 77, 79, 80, 81, 82, 84, 85, 86, 87, 88, 90, 91, 93, 94, 96, 97, 98, 100, 101, 103, 104, 108, 112, 114, 115, 116, 117, 118, 121, 122, 123, 124, 125, 126, 131, 133, 134, 135, 137, 138, 140, 141, 142, 143, 144, 145, 148, 149, 150, 151, 153, 155, 156, 157, 158, 159, 160, 162, 163, 166, 167, 168, 170, 171, 172, 176, 177, 178, 179, 180, 182, 183, 185, 187, 195, 202, 204, 205, 209, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 232, 234, 235, 236, 238, 239, 240, 243, 244, 245, 246, 247, 248, 250, 252, 254, 258, 260], "creat": [3, 15, 60, 91, 92, 97, 102, 103, 104, 121, 144, 145, 185, 186, 194, 200, 209, 217, 228, 254, 258], "main": [5, 97, 174, 175, 203, 208, 233, 250, 253, 260], "namespac": [5, 7, 23, 109, 190, 200, 215, 253, 254, 255, 258, 261], "under": [5, 253, 257, 258], "specifi": [5, 13, 14, 15, 16, 17, 18, 26, 29, 59, 60, 63, 74, 78, 88, 91, 95, 98, 99, 103, 112, 114, 115, 121, 144, 149, 151, 154, 164, 165, 168, 169, 173, 174, 175, 177, 178, 179, 180, 183, 185, 188, 197, 202, 204, 205, 206, 208, 209, 210, 214, 216, 218, 219, 220, 221, 222, 224, 225, 226, 227, 229, 233, 250, 252, 254, 255, 258, 260, 261], "name": [5, 7, 23, 26, 101, 114, 177, 178, 179, 188, 205, 234, 243, 244, 245, 247, 253, 258, 259], "descript": [5, 7, 202, 204, 238, 252], "bool": [5, 13, 14, 16, 17, 18, 22, 24, 26, 28, 31, 33, 37, 39, 43, 45, 49, 52, 60, 63, 75, 88, 89, 93, 102, 103, 104, 105, 106, 114, 115, 116, 117, 118, 119, 120, 121, 127, 128, 129, 130, 133, 135, 137, 143, 149, 152, 158, 161, 166, 168, 182, 197, 202, 212, 230, 238, 247, 252], "true": [5, 13, 14, 16, 17, 18, 24, 25, 26, 29, 35, 60, 63, 75, 88, 93, 98, 101, 102, 110, 116, 117, 118, 121, 127, 128, 129, 130, 133, 135, 137, 142, 143, 149, 152, 158, 161, 166, 168, 177, 178, 179, 180, 182, 184, 188, 202, 230, 238, 247, 252, 254], "fals": [5, 13, 14, 16, 17, 18, 24, 25, 26, 29, 35, 60, 63, 75, 88, 93, 102, 110, 116, 117, 118, 121, 127, 128, 129, 130, 133, 135, 137, 143, 149, 152, 158, 161, 166, 168, 177, 178, 179, 180, 182, 188, 230, 238, 247, 252], "int8": [5, 114, 115, 197], "bit": [5, 68, 69, 71, 85, 88, 98, 107, 149, 158, 168, 197, 204, 250], "sign": [5, 9, 10, 11, 12, 15, 20, 41, 44, 62, 65, 66, 71, 85, 87, 88, 90, 94, 96, 101, 114, 115, 122, 124, 140, 141, 148, 149, 151, 156, 158, 160, 162, 168, 171, 177, 178, 179, 180, 187, 195, 202, 205, 244, 245, 250], "exist": [5, 7, 26, 60, 78, 102, 200, 202, 205, 208, 209, 210, 236, 255, 258, 259], "interv": [5, 10, 11, 13, 14, 15, 61, 62, 64, 66, 95, 121, 122, 124, 139, 165, 172, 174, 175, 181, 183, 188, 216, 218, 220, 221, 222, 224, 225, 226, 227, 229, 231, 255], "128": 5, "127": 5, "int16": [5, 88, 114, 115, 149, 168, 197, 250], "16": [5, 197], "32": [5, 197], "767": 5, "int32": [5, 88, 114, 115, 149, 168, 197, 250], "147": 5, "483": 5, "647": 5, "int64": [5, 88, 114, 115, 149, 168, 197, 250], "64": [5, 197], "9": [5, 27], "223": 5, "372": 5, "036": 5, "854": 5, "775": 5, "807": 5, "uint8": [5, 114, 115, 197], "unsign": [5, 88, 114, 115, 149, 168, 187, 250], "255": 5, "uint16": [5, 88, 114, 115, 149, 168, 197, 250], "65": 5, "535": [5, 202], "uint32": [5, 88, 114, 115, 149, 168, 197, 250], "294": 5, "967": 5, "295": 5, "uint64": [5, 114, 115, 197], "18": 5, "446": [5, 202], "744": 5, "073": 5, "709": 5, "551": [5, 202], "615": 5, "float32": [5, 108, 114, 115, 150, 197, 245, 247, 248], "ieee": [5, 12, 65, 80, 81, 82, 84, 90, 96, 98, 124, 140, 151, 162, 170, 171, 187, 195, 204, 205, 258], "754": [5, 12, 65, 80, 81, 82, 84, 90, 96, 98, 124, 140, 151, 162, 170, 171, 187, 195, 204, 205, 258], "singl": [5, 7, 24, 25, 29, 34, 35, 112, 114, 177, 178, 187, 197, 202, 203, 205, 208, 209, 214, 254, 258, 259, 260], "precis": [5, 9, 20, 42, 60, 98, 103, 104, 108, 140, 150, 162, 197, 202, 204, 220, 224, 225, 226, 227, 229, 234, 235, 238, 245, 247, 248, 252, 258], "2019": [5, 12, 90, 96, 124, 140, 187, 204, 258, 260], "float64": [5, 9, 20, 114, 115, 197, 220, 224, 225, 226, 227, 229, 234, 235, 238, 252], "doubl": [5, 172, 197, 202], "complex64": [5, 108, 114, 115, 150, 197, 202, 245, 247, 248], "imaginari": [5, 10, 11, 12, 13, 14, 44, 61, 62, 63, 64, 66, 79, 87, 90, 93, 94, 96, 98, 108, 122, 124, 140, 141, 142, 143, 144, 145, 148, 155, 160, 162, 171, 202, 205], "compon": [5, 10, 11, 12, 13, 14, 44, 62, 63, 66, 79, 87, 90, 93, 94, 96, 98, 108, 122, 124, 140, 141, 142, 143, 144, 145, 148, 150, 155, 160, 162, 170, 171, 177, 178, 179, 180, 202, 205, 219, 228], "complex128": [5, 9, 20, 114, 115, 197, 202, 220, 224, 225, 226, 227, 229, 234, 235, 238, 252], "method": [5, 26, 34, 102, 187, 190, 200, 206, 208, 209, 212, 213, 214, 258, 259, 260], "attribut": [5, 23, 98, 107, 187, 199, 255, 258, 259, 260], "requir": [5, 10, 11, 24, 25, 29, 34, 35, 59, 61, 62, 63, 64, 66, 88, 115, 162, 165, 169, 171, 181, 187, 188, 195, 197, 200, 202, 203, 204, 205, 206, 207, 208, 209, 212, 214, 253, 254, 258, 259, 260], "beyond": [5, 154, 197, 258], "It": [5, 23, 26, 102, 200, 206, 208, 258, 260, 261], "also": [5, 7, 26, 34, 102, 157, 197, 200, 205, 206, 207, 208, 214, 218, 222, 226, 229, 247, 253, 260], "subnorm": 5, "k": [5, 40, 97, 131, 142, 174, 175, 188, 230, 234, 235, 236, 244, 246, 247, 248, 250, 258], "denorm": 5, "gradual": [5, 258], "underflow": [5, 9, 90, 101, 245], "hardwar": [5, 53, 204, 208, 209, 234, 247, 254, 258], "univers": [5, 203, 209, 254, 258], "mani": [5, 173, 258, 260], "platform": [5, 26], "compil": [5, 171, 200, 203, 207, 258], "toggl": 5, "daz": 5, "flush": 5, "ftz": 5, "increas": [5, 204, 259], "guard": 5, "against": [5, 40, 73, 131, 171, 188, 240, 243, 261], "time": [5, 7, 16, 17, 26, 177, 178, 200, 207, 208, 213, 230, 234, 235, 236, 244, 246, 247, 254, 258, 260], "attack": 5, "accordingli": [5, 10, 11, 13, 14, 16, 17, 59, 61, 62, 64, 66, 90, 96, 101, 121, 122, 124, 133, 135, 136, 137, 140, 142, 149, 156, 162, 166, 168, 177, 178, 179, 180, 182, 188, 197, 204, 205, 206, 207, 209, 238, 244, 252, 254], "vari": [5, 156, 171, 177, 178, 179, 180, 197, 204], "function": [5, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 26, 28, 29, 30, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 60, 61, 62, 64, 65, 66, 74, 78, 86, 87, 88, 94, 96, 99, 102, 113, 114, 115, 121, 122, 124, 127, 128, 129, 130, 131, 135, 142, 148, 151, 152, 157, 159, 160, 161, 162, 165, 166, 169, 170, 171, 172, 173, 177, 178, 179, 180, 181, 182, 183, 187, 190, 200, 203, 205, 206, 207, 208, 209, 212, 213, 214, 216, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 229, 230, 231, 234, 235, 236, 240, 243, 244, 245, 246, 247, 248, 253, 254, 255, 258, 259, 260], "access": [5, 26, 32, 102, 109, 188, 202, 208, 253, 255, 258], "variou": 5, "cast": [5, 29, 49, 60, 63, 75, 88, 149, 168, 197, 205, 250, 258, 260], "introspect": 5, "isdtyp": [5, 187, 202], "integr": [5, 63, 112, 114, 115], "keyword": [5, 7, 26, 88, 113, 136, 149, 168, 187, 206, 209, 213, 214, 250, 254, 255, 258, 259, 260], "affect": [5, 15, 49, 206, 209], "intermedi": [5, 9], "calcul": [5, 9, 10, 11, 12, 20, 21, 42, 47, 50, 61, 62, 64, 65, 66, 86, 87, 88, 90, 94, 96, 122, 123, 124, 125, 126, 133, 135, 137, 140, 148, 149, 159, 160, 162, 166, 167, 168, 170, 171, 182, 245], "implementor": [5, 253], "free": [5, 209, 257], "when": [5, 7, 12, 16, 17, 26, 47, 49, 59, 63, 90, 96, 101, 102, 112, 114, 121, 124, 133, 137, 140, 148, 152, 156, 166, 171, 182, 184, 187, 188, 197, 202, 203, 205, 206, 207, 208, 210, 212, 213, 214, 216, 218, 220, 221, 222, 224, 225, 226, 227, 229, 230, 234, 236, 240, 243, 244, 245, 246, 247, 248, 254, 258, 259, 260], "accumul": 5, "reduct": [5, 13, 14], "long": [5, 109, 214], "ha": [5, 9, 13, 14, 20, 23, 29, 34, 35, 40, 44, 47, 55, 86, 87, 88, 90, 94, 95, 96, 101, 104, 131, 135, 136, 139, 140, 141, 142, 148, 149, 159, 160, 164, 166, 168, 169, 170, 171, 172, 173, 177, 178, 179, 180, 182, 188, 197, 200, 205, 208, 209, 212, 213, 231, 238, 246, 247, 250, 252, 254, 255, 258, 260, 261], "wai": [5, 26, 63, 102, 200, 203, 209, 210, 255, 258, 259, 260, 261], "f4": [5, 197], "ensur": [5, 26, 156, 200, 204, 254, 258, 259, 260], "portabl": [5, 59, 121, 204, 206, 209, 210, 258], "consum": [5, 26, 63, 112, 114, 200, 205, 206, 214, 253, 258, 259], "recommend": [5, 7, 19, 23, 26, 121, 127, 128, 129, 130, 135, 151, 166, 182, 195, 204, 208, 209, 258], "guidanc": [5, 7, 49, 202, 203, 210, 258], "govern": [5, 50, 167, 197, 254, 255], "interact": [5, 205], "either": [5, 9, 10, 11, 12, 24, 26, 35, 40, 65, 77, 87, 88, 90, 93, 94, 96, 98, 101, 102, 109, 115, 116, 117, 121, 122, 123, 124, 125, 126, 131, 134, 138, 140, 149, 151, 157, 158, 159, 162, 168, 170, 171, 172, 188, 204, 205, 206, 210, 214, 245, 250, 258, 259, 261], "whether": [5, 13, 14, 26, 59, 60, 63, 88, 89, 102, 110, 115, 118, 121, 152, 158, 202, 209, 230, 234, 235, 244, 246, 253, 257, 258, 260], "otherwis": [5, 13, 14, 15, 16, 17, 26, 59, 60, 63, 75, 102, 110, 112, 114, 133, 135, 137, 149, 152, 156, 157, 166, 168, 182, 183, 184, 187, 188, 200, 209, 230, 232, 238, 245, 252, 257], "note": [5, 7, 9, 10, 11, 12, 13, 14, 20, 21, 24, 25, 26, 29, 34, 35, 40, 42, 43, 44, 46, 47, 50, 51, 59, 61, 62, 63, 64, 65, 66, 76, 77, 79, 85, 86, 87, 88, 90, 93, 94, 96, 97, 98, 100, 101, 103, 104, 108, 109, 113, 115, 116, 117, 118, 122, 123, 124, 125, 126, 131, 133, 134, 135, 136, 137, 138, 140, 141, 142, 143, 144, 145, 147, 148, 149, 150, 151, 155, 156, 157, 158, 159, 160, 162, 163, 166, 167, 168, 169, 170, 171, 172, 176, 177, 178, 179, 180, 182, 183, 187, 188, 202, 208, 212, 214, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 234, 235, 236, 238, 239, 240, 242, 243, 244, 245, 246, 247, 248, 250, 252, 258, 259, 260, 261], "possibl": [5, 26, 60, 101, 102, 133, 137, 152, 170, 171, 200, 203, 204, 205, 206, 208, 209, 210, 212, 214, 254, 258, 259, 260, 261], "multipl": [5, 7, 13, 14, 16, 17, 40, 42, 44, 131, 133, 135, 137, 140, 141, 149, 166, 168, 182, 188, 200, 203, 205, 208, 209, 213, 214, 235, 236, 254, 255, 258, 260], "In": [5, 12, 19, 26, 59, 88, 90, 93, 101, 115, 117, 118, 140, 143, 149, 151, 157, 168, 187, 188, 190, 197, 204, 205, 208, 210, 225, 226, 244, 245, 247, 250, 254, 255, 259, 260, 261], "clearli": [5, 59, 115, 195, 205, 254, 255], "warn": [5, 210], "about": [5, 7, 26, 98, 107, 206, 254, 258, 260, 261], "": [5, 26, 29, 32, 49, 58, 59, 60, 80, 101, 102, 136, 151, 166, 173, 174, 175, 182, 188, 195, 200, 203, 204, 205, 206, 208, 209, 212, 214, 218, 222, 226, 229, 243, 247, 248, 254, 255, 258, 260], "organ": [5, 202, 254, 259, 260], "within": [5, 15, 27, 188, 197, 200, 202, 205, 209, 216, 218, 221, 222, 225, 226, 227, 229, 258], "numer": [5, 9, 12, 20, 21, 40, 42, 44, 46, 47, 50, 51, 88, 90, 101, 114, 115, 116, 117, 118, 131, 136, 140, 141, 147, 148, 149, 155, 157, 163, 167, 168, 172, 197, 204, 216, 218, 221, 222, 225, 226, 227, 229, 231, 242, 243, 245, 250, 254, 258, 260], "accord": [5, 12, 60, 71, 75, 88, 90, 98, 101, 103, 121, 140, 148, 156, 157, 166, 182, 183, 188, 204, 205], "These": [5, 206, 234, 259], "intend": [5, 88, 149, 168, 200, 250], "posit": [7, 9, 10, 11, 13, 14, 20, 46, 62, 65, 66, 81, 90, 95, 97, 98, 101, 117, 122, 124, 139, 140, 142, 151, 154, 158, 160, 162, 171, 187, 188, 200, 202, 204, 214, 228, 230, 244, 259], "paramet": [7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 112, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 200, 202, 214, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 238, 239, 240, 242, 243, 244, 245, 246, 247, 248, 250, 252, 254], "extern": [7, 260], "usabl": 7, "accept": [7, 26, 127, 128, 129, 130, 135, 151, 166, 182, 200, 255], "call": [7, 34, 208, 209, 212, 245, 258, 259, 260], "argument": [7, 10, 11, 26, 40, 61, 62, 64, 65, 66, 86, 88, 113, 122, 124, 131, 149, 153, 156, 159, 162, 168, 170, 171, 172, 187, 197, 204, 206, 208, 209, 216, 218, 221, 222, 225, 226, 227, 229, 250, 254, 258, 259, 260], "map": [7, 205, 206], "base": [7, 47, 57, 58, 94, 95, 122, 123, 124, 125, 148, 177, 178, 179, 180, 188, 202, 206, 212, 214, 254, 255, 258, 259, 260], "sole": [7, 188, 195, 254], "incompat": [7, 26, 74, 102, 200, 255, 258], "us": [7, 19, 26, 27, 59, 60, 83, 98, 102, 121, 123, 125, 154, 177, 179, 187, 188, 197, 202, 204, 205, 206, 207, 209, 210, 213, 214, 215, 216, 218, 220, 221, 222, 224, 225, 226, 227, 229, 253, 254, 255, 256, 257, 258, 261], "normal": [7, 78, 165, 216, 218, 220, 221, 222, 224, 225, 226, 227, 229], "practic": [7, 19, 188, 254, 259], "avail": [7, 102, 113, 200, 208, 253, 255, 259], "still": [7, 26, 214, 254, 259, 260, 261], "consid": [7, 26, 63, 102, 127, 128, 129, 130, 177, 178, 179, 180, 205, 209, 228, 243, 254, 258, 260, 261], "compliant": [7, 26, 51, 90, 96, 102, 121, 124, 127, 128, 129, 130, 133, 135, 137, 166, 182, 204, 207, 209, 255, 258], "altern": [7, 206, 208, 261], "thei": [7, 26, 197, 203, 208, 209, 213, 214, 253, 254, 255, 258, 260, 261], "were": [7, 101, 156, 202, 258], "option": [7, 13, 14, 15, 16, 17, 23, 26, 57, 58, 59, 60, 63, 77, 78, 88, 91, 92, 97, 99, 102, 103, 104, 112, 114, 121, 133, 135, 137, 144, 145, 149, 152, 154, 156, 166, 168, 169, 182, 185, 186, 187, 202, 213, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 238, 240, 243, 250, 252, 254, 259, 260], "lead": [7, 101, 205, 244, 247, 258], "readabl": [7, 197, 254, 259], "code": [7, 59, 197, 206, 207, 209, 212, 214, 254, 258, 259, 260], "easier": [7, 200, 206, 254], "evolv": [7, 200, 254], "over": [7, 13, 14, 26, 121, 133, 135, 137, 149, 166, 168, 169, 172, 182, 183, 204, 205, 206, 208, 209, 213, 216, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 229, 231, 250, 252, 254, 258], "ad": [7, 9, 10, 11, 12, 13, 14, 20, 21, 24, 26, 29, 35, 40, 42, 43, 44, 46, 47, 50, 51, 60, 61, 62, 63, 64, 66, 86, 87, 90, 93, 94, 96, 97, 98, 102, 103, 104, 116, 117, 118, 121, 122, 123, 124, 125, 131, 136, 140, 141, 142, 143, 144, 145, 147, 148, 149, 155, 157, 159, 160, 162, 163, 167, 168, 170, 171, 172, 177, 178, 179, 180, 183, 188, 201, 202, 203, 209, 230, 231, 232, 234, 235, 236, 238, 239, 240, 242, 243, 244, 245, 246, 247, 248, 250, 252, 255], "worri": 7, "xi": [7, 136], "annot": [7, 202, 214, 258], "individu": [7, 156, 209, 212, 213, 214, 217, 228, 258, 259], "aim": [7, 203, 214, 253, 254, 255, 258, 259, 260, 261], "strongli": [7, 206, 260], "look": [7, 260], "like": [7, 200, 203, 205, 206, 212, 214, 255, 258, 259, 260], "funcnam": 7, "key1": 7, "key2": 7, "none": [7, 13, 14, 15, 16, 17, 23, 26, 32, 49, 57, 58, 59, 60, 63, 77, 78, 83, 88, 91, 92, 97, 99, 102, 103, 104, 112, 114, 121, 133, 135, 137, 144, 145, 149, 152, 154, 156, 166, 168, 169, 182, 185, 186, 188, 209, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 238, 240, 243, 250, 251, 252, 258, 259, 261], "out": [7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 188, 203, 206, 208, 212, 213, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 238, 239, 240, 242, 243, 244, 245, 246, 247, 248, 250, 252, 257, 260], "int": [7, 13, 14, 15, 16, 17, 18, 21, 22, 26, 27, 28, 30, 31, 32, 33, 34, 35, 37, 38, 39, 41, 42, 43, 45, 47, 48, 49, 50, 51, 52, 56, 57, 58, 59, 60, 74, 77, 78, 88, 91, 95, 97, 98, 99, 101, 103, 104, 107, 121, 133, 135, 137, 139, 144, 146, 149, 152, 154, 161, 164, 165, 166, 168, 169, 172, 173, 174, 175, 181, 182, 183, 185, 188, 197, 212, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231, 233, 238, 239, 249, 250, 251, 252, 259], "str": [7, 8, 23, 114, 115, 136, 259], "modulo": 7, "self": [7, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 59, 89, 202, 260], "few": [7, 204, 212, 258, 260], "enhanc": 7, "default": [7, 13, 14, 15, 16, 17, 18, 23, 26, 59, 60, 63, 77, 78, 88, 91, 92, 97, 99, 102, 103, 104, 111, 112, 114, 121, 133, 135, 136, 137, 142, 144, 145, 149, 152, 154, 156, 161, 165, 166, 168, 172, 174, 175, 177, 178, 179, 181, 182, 183, 185, 186, 187, 188, 202, 204, 209, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 233, 238, 240, 243, 244, 247, 250, 252], "form": [7, 23, 26, 40, 79, 131, 132, 174, 175, 206, 230, 232, 233, 234, 235, 236, 238, 239, 240, 243, 244, 245, 246, 247, 248, 250, 255, 259], "question": [7, 203, 258], "commonli": [7, 166, 182, 203, 205, 207, 253, 254, 258, 259], "written": [7, 200, 258, 260], "yyyi": [8, 23, 255], "mm": [8, 23, 255], "string": [8, 23, 114, 115, 202, 255, 258], "version": [8, 9, 10, 11, 12, 13, 14, 20, 21, 23, 24, 25, 26, 29, 35, 40, 42, 43, 44, 46, 47, 50, 51, 60, 61, 62, 63, 64, 66, 79, 86, 87, 90, 93, 94, 96, 97, 98, 102, 103, 104, 107, 108, 115, 116, 117, 118, 121, 122, 123, 124, 125, 131, 136, 140, 141, 142, 143, 144, 145, 147, 148, 149, 150, 155, 157, 159, 160, 162, 163, 167, 168, 169, 170, 171, 172, 177, 178, 179, 180, 183, 187, 200, 203, 209, 213, 214, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 234, 235, 236, 238, 239, 240, 242, 243, 244, 245, 246, 247, 248, 250, 252, 256, 258, 260], "absolut": [9, 20, 85, 157, 204, 206, 238, 239, 245, 254], "x_i": [9, 10, 11, 61, 62, 64, 66, 68, 76, 77, 79, 86, 87, 94, 96, 100, 108, 116, 117, 118, 122, 123, 124, 125, 128, 133, 135, 137, 141, 147, 150, 155, 157, 158, 159, 160, 162, 163, 166, 170, 171, 176, 182], "input": [9, 10, 11, 12, 13, 14, 16, 17, 18, 20, 26, 30, 41, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 75, 76, 77, 78, 79, 85, 86, 87, 88, 90, 92, 93, 94, 95, 96, 99, 100, 101, 102, 104, 105, 106, 108, 115, 116, 117, 118, 119, 120, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 186, 187, 195, 200, 202, 205, 207, 209, 210, 214, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 238, 239, 240, 242, 243, 244, 245, 247, 248, 250, 252, 254, 258, 260], "magnitud": [9, 12, 20, 85, 90, 101, 140, 247, 248], "represent": [9, 12, 20, 29, 44, 67, 70, 72, 80, 81, 82, 84, 90, 98, 101, 107, 140, 141, 170, 171, 204, 208, 259], "known": [9, 157, 204, 207, 208], "norm": [9, 216, 218, 220, 221, 222, 224, 225, 226, 227, 229, 238, 252, 254], "modulu": [9, 151], "z": [9, 10, 11, 61, 62, 64, 66, 122, 205], "bj": [9, 12, 79, 90, 140], "comput": [9, 12, 28, 31, 33, 37, 39, 40, 43, 57, 58, 67, 70, 72, 79, 88, 89, 90, 93, 95, 101, 105, 106, 119, 120, 127, 128, 129, 130, 131, 133, 134, 135, 137, 138, 140, 141, 142, 143, 147, 149, 166, 168, 172, 177, 178, 179, 180, 182, 183, 188, 204, 207, 212, 216, 217, 218, 220, 221, 222, 224, 225, 226, 227, 228, 229, 230, 231, 234, 235, 236, 238, 240, 243, 244, 245, 246, 247, 248, 250, 252, 254, 258], "operatornam": [9, 10, 11, 61, 62, 64, 66, 86, 87, 157, 159, 160, 170, 171, 205, 234, 235, 245, 247], "sqrt": [9, 10, 11, 61, 62, 187, 202, 205, 216, 218, 220, 221, 222, 224, 225, 226, 227, 229, 252], "take": [9, 122, 124, 148, 162, 187, 202, 209, 214, 258], "care": [9, 206, 254], "undu": [9, 207], "overflow": [9, 12, 88, 90, 101, 121, 149, 168, 197, 245, 250, 254], "dure": [9, 40, 59, 131, 166, 182, 197, 200, 243, 258, 259], "stage": [9, 255], "contain": [9, 10, 11, 12, 13, 14, 15, 16, 17, 20, 21, 22, 23, 26, 28, 30, 31, 32, 33, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 76, 77, 78, 79, 85, 86, 87, 88, 90, 91, 92, 93, 94, 96, 100, 101, 102, 105, 106, 108, 109, 110, 112, 114, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 155, 156, 157, 158, 159, 160, 162, 163, 166, 167, 168, 170, 171, 172, 174, 175, 176, 177, 178, 179, 180, 182, 183, 185, 188, 204, 205, 206, 208, 212, 213, 217, 218, 219, 222, 223, 226, 228, 229, 230, 231, 232, 233, 234, 235, 236, 238, 239, 240, 242, 243, 244, 245, 246, 247, 248, 250, 252, 258, 260], "nan": [9, 10, 11, 12, 13, 14, 24, 25, 35, 61, 62, 63, 64, 65, 66, 76, 85, 86, 87, 90, 93, 94, 96, 100, 101, 116, 117, 118, 122, 123, 124, 125, 126, 133, 134, 135, 137, 138, 140, 143, 148, 151, 155, 156, 157, 158, 159, 160, 162, 166, 170, 171, 176, 177, 178, 179, 180, 182, 187, 195, 205, 258], "infin": [9, 10, 11, 12, 13, 14, 24, 25, 35, 62, 63, 64, 65, 66, 76, 81, 86, 87, 90, 93, 94, 96, 100, 101, 116, 117, 122, 123, 124, 125, 126, 133, 137, 140, 143, 148, 151, 155, 158, 159, 160, 162, 170, 171, 176, 205, 245, 252], "imag": [9, 10, 11, 12, 24, 62, 63, 66, 87, 93, 94, 96, 116, 117, 118, 121, 122, 124, 143, 155, 157, 160, 162, 171, 187, 202, 203, 258, 259, 260], "finit": [9, 10, 11, 12, 25, 35, 42, 62, 65, 66, 87, 90, 93, 94, 96, 101, 116, 117, 122, 124, 140, 143, 148, 151, 158, 160, 162, 171, 204], "2022": [9, 10, 11, 12, 13, 14, 20, 21, 24, 25, 26, 29, 35, 40, 42, 43, 44, 46, 47, 50, 51, 60, 61, 62, 63, 64, 66, 79, 86, 87, 90, 93, 94, 96, 97, 98, 103, 104, 107, 108, 115, 116, 117, 118, 121, 122, 123, 124, 125, 131, 136, 140, 141, 142, 143, 144, 145, 147, 148, 149, 150, 155, 157, 159, 160, 162, 163, 167, 168, 169, 170, 171, 172, 177, 178, 179, 180, 183, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 234, 235, 236, 238, 239, 240, 242, 243, 244, 245, 246, 247, 248, 250, 252, 257], "12": [9, 10, 11, 12, 13, 14, 20, 21, 24, 25, 26, 29, 35, 40, 42, 43, 44, 46, 47, 50, 51, 60, 61, 62, 63, 64, 66, 79, 86, 87, 90, 93, 94, 96, 97, 98, 102, 103, 104, 107, 108, 115, 116, 117, 118, 121, 122, 123, 124, 125, 131, 136, 140, 141, 142, 143, 144, 145, 147, 148, 149, 150, 155, 157, 159, 160, 162, 163, 167, 168, 169, 170, 171, 172, 177, 178, 179, 180, 183, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 234, 235, 236, 238, 239, 240, 242, 243, 244, 245, 246, 247, 248, 250, 252, 255], "approxim": [10, 11, 47, 61, 62, 64, 65, 66, 86, 87, 94, 96, 101, 122, 123, 124, 125, 148, 159, 160, 170, 171, 204, 240, 243], "princip": [10, 11, 61, 62, 64, 66, 122, 162, 205, 254], "invers": [10, 11, 61, 62, 64, 65, 66, 205, 216, 218, 221, 222, 223, 224, 225, 226, 227, 229, 236, 239, 243, 254], "cosin": [10, 11, 86, 87, 171], "express": [10, 61, 63, 64, 65, 86, 159, 170, 188, 197, 206, 254, 257], "radian": [10, 61, 64, 65, 86, 159, 170], "arc": [10, 61, 64], "frac": [10, 11, 61, 62, 64, 66, 86, 87, 90, 121, 123, 125, 157, 159, 160, 170, 171, 205, 245], "pi": [10, 11, 61, 62, 64, 66, 87, 122, 124, 160, 170, 171, 187], "j": [10, 11, 12, 25, 61, 62, 64, 66, 87, 90, 94, 96, 121, 122, 124, 140, 156, 157, 159, 160, 162, 170, 171, 188, 205, 234, 247, 250], "ln": [10, 11, 61, 62, 64, 66, 122], "zj": [10, 61, 62, 64, 66], "conj": [10, 11, 61, 62, 64, 66, 87, 94, 96, 122, 123, 124, 125, 160, 162, 171, 187, 202], "multi": [10, 11, 61, 62, 64, 66, 187, 205, 208, 209, 231, 260], "branch": [10, 11, 61, 62, 64, 65, 66, 86, 87, 90, 94, 96, 122, 124, 140, 148, 159, 160, 162, 170, 171, 258], "cut": [10, 11, 61, 62, 64, 66, 86, 87, 94, 96, 122, 124, 148, 159, 160, 162, 170, 171, 258], "plane": [10, 11, 61, 62, 64, 66, 86, 87, 90, 94, 96, 140, 159, 160, 162, 170, 171, 258], "By": [10, 11, 13, 14, 61, 62, 64, 65, 66, 88, 122, 124, 133, 135, 137, 148, 149, 162, 166, 168, 182, 183, 204, 205, 231, 254, 259], "place": [10, 11, 15, 60, 61, 62, 63, 64, 66, 91, 92, 97, 102, 103, 104, 121, 144, 145, 154, 185, 186, 187, 195, 197, 202, 206, 209, 217, 228, 243], "line": [10, 11, 61, 62, 64, 66, 170, 171, 197, 205, 258, 259, 260, 261], "segment": [10, 11, 61, 62, 64, 66, 205], "infti": [10, 11, 61, 62, 64, 66, 86, 122, 124, 148, 162, 205], "axi": [10, 11, 13, 14, 16, 17, 18, 61, 62, 64, 66, 78, 88, 95, 99, 122, 124, 133, 135, 137, 139, 148, 149, 154, 161, 162, 164, 165, 166, 168, 169, 172, 173, 181, 182, 183, 187, 202, 216, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 229, 231, 238, 251, 252, 258], "rang": [10, 61, 62, 64, 66, 77, 88, 122, 124, 149, 162, 168, 188, 208, 250, 258], "strip": [10, 61, 62, 64, 66, 122, 124], "unbound": [10, 61, 62, 64, 66, 122, 124], "along": [10, 11, 13, 14, 16, 17, 18, 61, 62, 64, 66, 78, 88, 97, 99, 122, 124, 133, 135, 137, 149, 154, 161, 162, 165, 166, 168, 169, 170, 171, 173, 181, 182, 183, 188, 202, 216, 218, 220, 221, 222, 224, 225, 226, 227, 229, 231, 250, 252, 254], "c99": [10, 11, 61, 62, 64, 66, 90, 122, 124, 140, 148, 162, 205, 255], "provision": [10, 11, 61, 62, 64, 66, 122, 124, 148, 162, 205], "statu": [10, 11, 61, 62, 64, 66, 122, 124, 148, 162, 205], "greater": [10, 11, 33, 38, 48, 61, 62, 65, 66, 69, 71, 77, 85, 90, 100, 101, 122, 124, 148, 151, 157, 158, 160, 162, 164, 171, 187, 188, 216, 218, 220, 221, 222, 224, 225, 226, 227, 229, 231, 239], "than": [10, 11, 19, 26, 38, 40, 47, 48, 49, 55, 61, 62, 63, 65, 66, 69, 71, 76, 77, 85, 88, 90, 98, 99, 100, 101, 102, 122, 123, 124, 125, 131, 140, 148, 149, 151, 157, 158, 160, 162, 164, 166, 168, 169, 171, 176, 177, 178, 179, 180, 182, 188, 197, 200, 203, 206, 209, 210, 213, 216, 218, 220, 221, 222, 224, 225, 226, 227, 229, 231, 238, 239, 240, 243, 250, 252, 254, 255, 258, 260], "less": [10, 11, 39, 47, 61, 65, 66, 76, 85, 90, 101, 122, 123, 124, 125, 148, 151, 157, 158, 162, 166, 182, 187, 188, 206, 216, 218, 220, 221, 222, 224, 225, 226, 227, 229, 238, 239, 240, 243, 252, 258], "\u03c0": [10, 64, 65, 84], "0j": [10, 11, 12, 25, 62, 63, 66, 87, 94, 96, 97, 122, 124, 144, 145, 157, 160, 162, 171, 205, 245], "nonzero": [10, 11, 12, 62, 66, 87, 90, 94, 96, 101, 140, 160, 171, 187, 188, 202, 243], "3\u03c0": [10, 65], "hyperbol": [11, 62, 66, 86, 87, 159, 160, 170, 171, 205], "aco": [11, 61, 187, 202, 204], "simpli": [11, 96, 124, 203, 214, 258, 260], "upper": [11, 77, 97, 175, 230, 244], "half": [11, 15, 66, 121, 139, 162, 172, 188, 219], "area": [11, 62, 66], "sector": [11, 62, 66], "\u03c0j": [11, 62, 66, 122, 124], "3\u03c0j": [11, 122, 124], "sum": [12, 21, 88, 126, 149, 187, 202, 238, 250, 252, 254], "x1_i": [12, 65, 67, 69, 70, 71, 72, 85, 90, 93, 101, 105, 106, 119, 120, 126, 127, 129, 130, 134, 138, 140, 143, 148, 151, 167, 184], "x2_i": [12, 65, 67, 69, 70, 71, 72, 85, 90, 93, 101, 105, 106, 119, 120, 126, 127, 129, 130, 134, 138, 140, 143, 148, 151, 167, 184], "first": [12, 16, 17, 19, 65, 67, 69, 70, 71, 72, 88, 93, 105, 106, 119, 120, 126, 127, 129, 130, 131, 134, 138, 140, 143, 148, 154, 165, 167, 170, 171, 172, 177, 178, 179, 183, 184, 188, 205, 231, 234, 242, 244, 245, 247, 248, 254, 258, 259, 260, 261], "remain": [12, 90, 93, 101, 115, 117, 118, 140, 143, 151, 152, 157, 188, 206, 229], "neither": [12, 40, 90, 101, 131, 140, 172, 247, 259], "nor": [12, 90, 101, 140, 247, 259], "mathemat": [12, 19, 65, 84, 86, 87, 90, 96, 101, 122, 124, 140, 159, 160, 170, 171, 187, 205, 238, 252], "round": [12, 15, 76, 90, 100, 101, 140, 162, 176, 187, 202, 204], "nearest": [12, 90, 140, 155, 176, 204], "mode": [12, 90, 140, 204, 216, 218, 220, 221, 222, 224, 225, 226, 227, 229, 244], "too": [12, 26, 90, 101, 140, 254, 258], "larg": [12, 90, 101, 140, 208, 214, 245, 258], "appropri": [12, 26, 90, 101, 140, 205, 210], "commut": 12, "associ": [12, 42, 140, 190, 197, 240, 243, 246, 254, 257, 259], "tabl": [12, 90, 140, 187], "c": [12, 90, 93, 121, 140, 142, 143, 165, 166, 171, 182, 188, 202, 205, 208, 211, 230, 234, 235, 236, 244, 246, 247, 255, 257, 258, 260], "d": [12, 90, 93, 121, 140, 143, 197, 217, 228], "dj": [12, 90, 140], "independ": [12, 90, 140, 155, 188, 200, 208, 231, 244, 246, 254, 255, 258], "abov": [12, 88, 90, 93, 122, 124, 140, 143, 148, 149, 162, 168, 174, 175, 188, 197, 205, 206, 208, 209, 212, 233, 234, 250, 254, 257, 260], "similarli": [12, 57, 115, 136, 197, 230, 247], "henc": [12, 79, 95, 142, 177, 178, 179, 180, 188, 203, 205, 206, 207, 208, 212, 213, 214, 258, 260], "z1": 12, "z2": 12, "keepdim": [13, 14, 16, 17, 133, 135, 137, 149, 166, 168, 182, 238, 252], "test": [13, 14, 89, 116, 117, 118, 202, 204, 256, 258, 259, 260], "evalu": [13, 14, 22, 30, 36, 38, 41, 44, 45, 46, 48, 51, 52, 94, 96, 122, 123, 124, 125, 141, 147, 157, 158, 163, 200, 258], "union": [13, 14, 15, 21, 22, 26, 28, 30, 31, 32, 33, 37, 38, 39, 41, 42, 43, 45, 47, 48, 49, 50, 51, 52, 59, 60, 75, 77, 78, 91, 98, 99, 103, 104, 107, 114, 115, 121, 133, 135, 137, 139, 144, 149, 153, 154, 164, 165, 166, 168, 172, 182, 185, 219, 223, 238, 240, 243, 252, 259], "ax": [13, 14, 16, 17, 19, 55, 56, 99, 133, 135, 137, 139, 146, 149, 154, 164, 166, 168, 172, 173, 182, 183, 188, 218, 219, 222, 223, 226, 229, 231, 238, 243, 246, 249, 252], "logic": [13, 14, 24, 26, 90, 93, 127, 128, 129, 130, 140, 143, 209, 212, 218, 222, 226, 229], "AND": [13, 24, 67, 93, 127, 257], "entir": [13, 14, 86, 87, 94, 96, 133, 135, 137, 149, 159, 160, 166, 168, 182], "valid": [13, 14, 26, 27, 95, 113, 139, 165, 172, 181, 188, 204, 212, 216, 218, 220, 221, 222, 224, 225, 226, 227, 229, 234, 244, 247, 259], "count": [13, 14, 78, 88, 99, 169, 177, 178, 183, 188, 216, 218, 220, 221, 222, 224, 225, 226, 227, 229, 231, 235], "last": [13, 14, 18, 19, 55, 78, 88, 99, 154, 161, 165, 169, 172, 183, 188, 216, 218, 220, 221, 222, 224, 225, 226, 227, 229, 231, 233, 238, 244, 247, 250], "invalid": [13, 14, 23, 95, 210, 258], "rais": [13, 14, 19, 23, 24, 25, 26, 29, 34, 35, 40, 47, 51, 55, 60, 74, 90, 94, 95, 102, 121, 131, 133, 137, 142, 148, 152, 164, 165, 181, 183, 188, 197, 200, 202, 208, 209, 210, 212, 231, 239, 258], "wa": [13, 14, 19, 26, 101, 133, 135, 137, 149, 166, 168, 182, 197, 209, 214, 258, 260], "OR": [14, 70, 129, 143, 257], "start": [15, 121, 188, 202, 214, 258, 260], "stop": [15, 121, 188, 202, 259], "step": [15, 121, 188, 259], "evenli": [15, 121], "space": [15, 121, 217, 219, 228], "open": [15, 121, 139, 172, 188], "inclus": [15, 188, 258], "end": [15, 65, 86, 121, 157, 159, 170, 171, 195, 206, 245, 258, 259, 260], "exclus": [15, 188], "distanc": 15, "between": [15, 26, 47, 51, 65, 78, 90, 93, 98, 121, 143, 148, 165, 177, 178, 179, 180, 197, 205, 206, 209, 217, 228, 254, 258, 260], "adjac": 15, "output": [15, 60, 63, 78, 88, 91, 92, 95, 97, 99, 102, 103, 104, 110, 121, 136, 144, 145, 152, 154, 156, 164, 165, 169, 173, 185, 186, 200, 202, 205, 206, 209, 211, 212, 214, 216, 218, 220, 221, 222, 225, 226, 227, 229, 250, 258], "infer": [15, 60, 63, 92, 103, 104, 145, 152, 186, 207, 254, 259], "cannot": [15, 26, 57, 102, 170, 171, 202, 205, 207, 258], "guarante": [15, 59, 177, 179, 200, 205, 209, 258, 260], "error": [15, 19, 23, 26, 51, 55, 90, 102, 133, 137, 170, 171, 197, 204, 245, 258], "ceil": [15, 187], "indic": [16, 17, 18, 26, 60, 88, 89, 102, 110, 115, 121, 139, 142, 154, 156, 157, 169, 172, 174, 175, 177, 179, 188, 197, 252, 258], "occur": [16, 17, 75, 170, 171, 177, 178, 179, 180, 205, 259], "occurr": [16, 17, 177], "comparison": [16, 17, 18, 31, 33, 37, 39, 93, 105, 106, 119, 120, 133, 134, 137, 138, 143, 161, 187, 205, 255, 259], "search": [16, 17, 156, 187], "flatten": [16, 17, 78, 154, 177, 178, 179, 180, 252, 254], "descend": [18, 161, 247, 248], "stabl": [18, 161, 208], "sort": [18, 156, 187, 234, 235, 247, 248], "ascend": [18, 156, 161], "stabil": [18, 161], "maintain": [18, 161, 203, 258, 260], "rel": [18, 19, 55, 99, 134, 138, 154, 161, 233, 240, 243, 250], "compar": [18, 161, 177, 178, 179, 180, 204, 209, 259, 261], "properti": [19, 53, 54, 55, 56, 57, 58, 114, 202, 205, 209, 214, 258], "transpos": [19, 40, 55, 131, 132, 172, 230, 234, 243, 247, 254], "instanc": [19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 55, 59, 89, 197, 200, 209], "permut": [19, 55, 146], "revers": [19, 55, 65, 99], "origin": [19, 55, 65, 139, 152, 154, 206, 216, 218, 221, 222, 225, 226, 227, 229, 258, 259], "limit": [19, 98, 107, 115, 204, 254, 257], "matric": [19, 40, 55, 131, 132, 136, 174, 175, 230, 232, 233, 234, 235, 236, 238, 239, 240, 243, 244, 245, 246, 247, 248, 250, 254], "deviat": [19, 166, 204, 210, 258, 260], "et": [19, 247, 248], "al": 19, "intent": [19, 65], "found": [19, 205, 208, 260, 261], "problemat": [19, 63, 203, 206], "conflict": 19, "definit": [19, 86, 87, 159, 160, 170, 171, 230, 259], "batch": [19, 252, 254], "cetera": [19, 247, 248], "permute_dim": [19, 187], "interfac": [19, 208, 254, 258, 260], "ab": [20, 148, 187, 202, 238, 252], "augend": 21, "addend": 21, "self_i": [22, 28, 30, 31, 33, 36, 37, 38, 39, 41, 43, 44, 45, 46, 48, 50, 51, 52], "other_i": [22, 28, 30, 31, 33, 37, 38, 39, 41, 43, 45, 47, 48, 50, 51, 52], "bitwise_and": [22, 187], "api_vers": [23, 258], "object": [23, 24, 25, 26, 29, 34, 35, 53, 57, 59, 60, 89, 98, 102, 107, 109, 111, 112, 113, 187, 188, 197, 200, 202, 206, 208, 209, 212, 214, 253, 255, 259, 260], "2020": [23, 214, 255, 257, 258], "10": [23, 27, 123, 188, 258], "latest": [23, 208], "modul": [23, 200, 255, 259, 260, 261], "everi": [23, 103, 104, 244, 258], "top": [23, 200, 258, 260], "level": [23, 197, 203, 208, 209, 253, 254, 258, 259], "public": [23, 253, 259, 260], "well": [23, 203, 205, 208, 209, 244, 260, 261], "part": [23, 35, 174, 175, 197, 202, 208, 213, 255, 258, 260], "convert": [24, 25, 29, 34, 35, 60, 102, 197, 202, 203, 205, 208, 258, 260], "handl": [24, 26, 61, 64, 86, 88, 102, 123, 125, 148, 149, 157, 159, 163, 168, 170, 203, 205, 206, 209, 210, 250, 258], "lazi": [24, 25, 29, 34, 35, 200, 211, 260], "languag": [24, 25, 29, 34, 35, 206, 210, 212, 254, 258, 260], "therefor": [24, 25, 29, 34, 35, 200, 208, 209, 210, 212, 214, 255, 258, 260], "abl": [24, 25, 29, 34, 35, 102, 206, 208, 209, 258, 260], "kind": [24, 25, 26, 29, 34, 35, 47, 51, 77, 90, 98, 102, 104, 107, 112, 114, 115, 148, 197, 202, 212, 254, 257], "here": [24, 25, 26, 29, 34, 35, 188, 197, 206, 208, 213, 214, 260], "valueerror": [24, 25, 26, 29, 34, 35, 60, 102, 152, 164, 260], "instead": [24, 25, 29, 34, 35, 63, 205, 208, 212, 259, 260], "new": [25, 26, 79, 95, 98, 102, 103, 104, 107, 108, 115, 139, 144, 145, 150, 152, 165, 169, 185, 186, 200, 202, 203, 206, 208, 209, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 255, 258, 259, 260], "stream": [26, 59, 209], "max_vers": 26, "dl_devic": 26, "enum": [26, 27], "pycapsul": 26, "export": [26, 102, 202, 208, 259], "from_dlpack": [26, 27, 187, 208], "dlpack": [26, 27, 102, 202], "capsul": 26, "cuda": [26, 27, 203, 208, 260], "rocm": [26, 27, 203], "pointer": 26, "produc": [26, 234, 244, 247, 260], "instruct": 26, "safe": [26, 121], "insert": [26, 95, 156], "wait": 26, "event": [26, 257], "larger": [26, 98, 154, 166, 182, 243], "below": [26, 101, 102, 174, 175, 190, 208, 209, 233, 250], "signal": [26, 220, 224, 260], "ownership": 26, "stai": 26, "On": 26, "cpu": [26, 27, 200, 203, 208, 209, 254, 258, 260], "queue": [26, 59, 209], "similar": [26, 151, 188, 203, 205, 207, 258, 259, 260], "mechan": [26, 102, 200, 202, 203, 211, 253, 258], "most": [26, 200, 209, 234, 254, 258, 260], "yet": [26, 214, 258], "sycl": 26, "want": [26, 90, 140, 203, 207, 208, 258, 260, 261], "cl": 26, "agre": 26, "assum": [26, 86, 102, 159, 170, 200, 205, 209, 253, 258], "legaci": 26, "per": [26, 203, 208, 256], "thread": [26, 258, 260], "disallow": 26, "due": [26, 42, 57, 58, 121, 140, 169, 204, 205, 254, 258], "ambigu": [26, 63, 101, 206], "construct": [26, 173, 200, 203, 212, 258], "particular": [26, 188, 203, 205, 208, 209, 214, 254, 257, 258, 260, 261], "kdlcpu": 26, "safeti": [26, 59], "prefer": [26, 101, 200, 254, 260], "develop": [26, 204, 258, 259, 260, 261], "who": [26, 204, 258, 259], "think": 26, "cost": 26, "caller": 26, "major": [26, 142, 188, 255], "minor": [26, 255], "verifi": [26, 258], "even": [26, 90, 140, 148, 155, 204, 205, 206, 217, 219, 223, 228, 244, 254, 258, 260], "pass": [26, 65, 200, 204, 209], "format": [26, 27, 255], "__dlpack_device__": [26, 102, 187, 208], "buffererror": [26, 102, 202, 208], "v2023": [26, 102], "mandat": [26, 102, 258], "offer": [26, 102, 203, 208, 209, 213, 258, 260], "referenc": [26, 258], "underli": [26, 67, 70, 72, 102, 204, 245, 254], "interpret": [26, 102, 205, 206, 261], "enumer": 26, "made": [26, 102, 200, 205, 253, 255, 258, 260], "never": [26, 60, 102, 152, 208, 258], "deem": [26, 102], "cross": [26, 102, 202, 209, 254, 258], "movement": [26, 102], "request": [26, 102, 258], "reus": [26, 60, 102, 206, 258], "buffer": [26, 60, 102, 206, 208], "happen": [26, 102, 206, 209, 212, 254], "dlpack_flag_bitmask_is_copi": 26, "flag": 26, "understood": [26, 197], "interchang": [26, 102, 200, 203, 211, 258], "detail": [26, 102, 142, 177, 178, 179, 180, 187, 188, 199, 200, 207, 209, 213, 254, 258, 260], "stride": [26, 102, 206, 208], "fail": [26, 102, 258], "reason": [26, 102, 151, 171, 206, 208, 210, 254, 258, 259], "incorrect": 26, "scheme": [26, 255], "semver": 26, "abi": [26, 203, 208], "break": [26, 210], "introduc": [26, 63, 101, 154, 214, 259], "goe": 26, "togeth": [26, 197, 208], "dlmanagedtensorvers": 26, "struct": 26, "later": 26, "introduct": 26, "becaus": [26, 197, 203, 206, 209, 210, 212, 214, 234, 247, 258, 260, 261], "keep": [26, 197, 203, 258], "march": 26, "2025": 26, "onward": 26, "ideal": [26, 254], "late": 26, "okai": 26, "we": [26, 205, 247, 258], "get": [26, 98, 107, 203, 206, 208, 209], "now": [26, 102, 212, 258, 260], "our_own_dlpack_vers": 26, "fill": [26, 103, 104, 144, 145, 185, 186, 202], "field": [26, 177, 178, 179, 205, 234, 244, 245, 247, 258], "understand": [26, 243, 258, 259], "u": [26, 230, 243, 247], "just": [26, 258, 260], "our": 26, "elif": 26, "fine": [26, 214, 258], "own": [26, 200, 206, 258], "re": [26, 154, 203, 206, 214, 260], "intern": [26, 260], "did": 26, "older": [26, 171, 208, 255, 258], "around": [26, 259], "y": [26, 65, 102, 205, 206, 260], "dlmanagedtensor": 26, "so": [26, 98, 102, 109, 188, 195, 208, 254, 257, 258, 261], "tell": 26, "old": 26, "exchang": [26, 102, 208], "And": [26, 188, 209], "try": [26, 214, 258], "succe": 26, "info": [26, 109], "dltensor_vers": 26, "need": [26, 188, 203, 204, 206, 208, 210, 214, 254, 255, 258, 259, 260, 261], "used_dltensor_vers": 26, "done": [26, 200], "typeerror": [26, 29, 34, 35, 258, 260], "read": [26, 206], "dlpack_flag_bitmask_read_onli": 26, "ignor": [26, 136, 254], "respons": 26, "isn": [26, 203], "t": [26, 187, 203, 206, 209, 213, 214, 258, 260], "2023": [26, 102], "id": 27, "meant": 27, "device_typ": 27, "device_id": 27, "member": 27, "cpu_pin": 27, "opencl": 27, "vulkan": 27, "metal": 27, "vpi": 27, "cuda_manag": 27, "13": 27, "one_api": 27, "14": [27, 255], "truth": [28, 31, 33, 37, 39, 43, 89, 93, 105, 106, 119, 120, 143, 261], "outsid": [29, 165, 181, 188, 197, 202, 208], "bound": [29, 77, 169, 188, 197, 214], "divis": [30, 41, 71, 90, 101, 151, 157, 205], "floor_divid": [30, 187], "greater_equ": [31, 187], "kei": [32, 49, 110, 112, 114, 258], "slice": [32, 49, 181, 187, 206], "ellipsi": [32, 49, 188], "pep": [34, 40, 101, 131, 208, 255], "357": 34, "overflowerror": 35, "bitwise_invert": [36, 187], "less_equ": [37, 187], "bitwise_left_shift": [38, 187], "matrix": [40, 55, 131, 132, 136, 172, 174, 175, 230, 232, 233, 234, 235, 236, 238, 239, 240, 243, 244, 245, 246, 247, 248, 250, 254, 258], "product": [40, 42, 58, 131, 140, 149, 172, 183, 231, 242, 254], "semant": [40, 101, 131, 151, 169, 187, 188, 200, 206, 208, 210, 212, 213, 254, 258, 259, 260], "built": [40, 131, 188, 197, 258], "465": [40, 131], "least": [40, 90, 114, 115, 131, 140, 142, 177, 178, 179, 180, 203, 204, 243], "m": [40, 55, 131, 132, 136, 156, 172, 173, 174, 175, 188, 216, 218, 220, 221, 222, 224, 225, 226, 227, 229, 230, 232, 233, 234, 235, 236, 238, 239, 240, 242, 243, 244, 245, 246, 247, 248, 250], "remov": [40, 131, 164, 188, 205, 233, 250], "innermost": [40, 131, 132, 174, 175, 230, 232, 233, 234, 235, 236, 238, 239, 240, 243, 244, 245, 246, 247, 248, 250], "conjug": [40, 79, 131, 172, 183, 202, 230, 234, 247, 254], "transposit": [40, 131, 172], "desir": [40, 63, 75, 131, 139, 172, 204, 205, 208, 214], "prior": [40, 131, 172], "inner": [40, 131, 234, 254], "stack": [40, 55, 131, 132, 174, 175, 187, 213, 230, 232, 233, 234, 235, 236, 238, 239, 240, 243, 244, 245, 246, 247, 248, 250, 254], "l": [40, 131, 230, 250], "remaind": [41, 187, 188], "multipli": [42, 149, 163, 187, 202, 204, 234, 247], "not_equ": [43, 187, 202], "negat": [44, 79, 141], "bitwise_or": [45, 187], "exponenti": [47, 94, 96, 126, 148, 205], "power": [47, 71, 94, 148, 205, 239, 260], "expon": [47, 148, 239], "versu": [47, 51, 63, 77, 90, 140, 148], "bitwise_right_shift": [48, 187], "mix": [49, 121, 135, 153, 166, 182, 187, 202, 206, 209, 254, 258], "how": [49, 90, 140, 200, 204, 209, 213, 259, 260, 261], "minuend": 50, "subtrahend": 50, "subtract": [50, 187, 202, 204], "choos": [51, 57, 59, 90, 101, 121, 127, 128, 129, 130, 133, 135, 137, 140, 142, 166, 177, 178, 179, 180, 182, 187, 188, 195, 205, 206, 207, 209, 212, 258, 260], "divid": [51, 101, 157, 187, 188, 202, 204], "bitwise_xor": [52, 187], "resid": [53, 59, 95, 139, 172, 188, 208, 258], "fewer": 55, "unknown": [57, 58], "graph": [57, 58, 142, 177, 178, 179, 180, 188, 207, 212, 258], "static": [57, 207, 211], "resolv": [57, 60, 88, 95, 101, 103, 104, 149, 168, 218, 219, 222, 223, 226, 229, 250, 258], "know": [57, 142, 177, 178, 179, 180, 200, 203, 204, 207, 258, 260], "content": [57, 207, 257], "warrant": 57, "custom": [57, 203, 210], "immut": 57, "retriev": [57, 188, 200, 215, 254, 260], "behav": [57, 205], "current": [59, 112, 114, 169, 195, 206, 209, 214, 258, 259, 260], "__dlpack__": [59, 102, 187, 202, 208], "caveat": 59, "would": [59, 60, 152, 156, 188, 206, 212, 254, 258, 260], "locat": [59, 206], "explicit": [59, 60, 102, 169, 172, 209, 260], "enqueu": 59, "asynchron": 59, "explain": [59, 203], "obj": 60, "nestedsequ": 60, "supportsbufferprotocol": 60, "possibli": [60, 213, 258], "nest": [60, 213], "sequenc": [60, 78, 121, 165, 172, 181, 188, 218, 219, 222, 223, 226, 229, 249], "protocol": [60, 200, 208, 214, 258, 260], "turn": [60, 200, 253], "memoryview": 60, "preced": [60, 205, 208, 209], "mixtur": 60, "convers": [60, 121, 202, 203, 258], "obei": [60, 121], "permit": [60, 63, 121, 207, 257], "To": [60, 101, 188, 202, 204, 205, 214, 258, 259, 261], "array_api": [60, 258], "astyp": [60, 187, 202], "exce": [60, 103, 104, 121], "sine": [61, 62, 159, 160, 171], "1j": [61, 64, 86, 87, 94, 96, 159, 160, 170], "asinh": [61, 187, 202, 204], "asin": [62, 187, 202, 204], "irrespect": [63, 205], "histor": [63, 171, 254], "discard": 63, "choic": [63, 166, 182, 200, 204, 205, 209, 210, 212, 213, 254, 255, 258, 260], "arbitrari": [63, 73, 136, 153, 204], "achiev": [63, 188, 204], "outcom": 63, "clariti": 63, "newli": [63, 209], "alloc": [63, 174, 175, 207, 209], "tangent": [64, 65, 66, 170, 171], "atanh": [64, 187, 202, 204], "quotient": [65, 90, 101, 188], "domain": [65, 202, 204, 205, 258, 260], "notat": 65, "denot": [65, 183, 243], "pair": [65, 101, 231, 247], "codomain": 65, "quadrant": 65, "chosen": [65, 184, 208], "angl": [65, 87, 160, 171], "rai": 65, "role": 65, "coordin": [65, 122, 136, 170, 171, 213, 258], "tradit": 65, "atan": [66, 187, 202, 204], "bitwis": [67, 70, 72, 187], "flip": [68, 187], "shift": [69, 71, 154, 219, 223], "arithmet": [71, 90, 135, 140, 187, 197, 205, 258], "propag": [71, 102, 133, 135, 137, 166, 182, 204], "floor": [71, 101, 187], "anoth": [73, 75, 102, 188, 200, 203, 205, 206, 208, 209, 212, 234, 247, 258, 260], "from_": 75, "smallest": [76, 98, 107, 238], "closest": [76, 100, 101, 155], "alreadi": [76, 100, 140, 155, 176, 208, 210, 255, 260], "min": [77, 98, 107, 174, 175, 183, 187, 231, 238, 244, 247, 248, 252], "clamp": 77, "join": [78, 165, 197], "befor": [78, 88, 149, 156, 168, 177, 178, 179, 180, 183, 205, 231, 250, 258], "concaten": 78, "leav": [78, 139, 165, 188, 195, 204, 206, 243], "famili": [78, 165], "intxx": [78, 165, 197], "floatxx": [78, 165, 197], "718281828459045": 80, "euler": 80, "constant": [80, 84, 187, 188], "71828182845904523536028747135266249775724709369995": 80, "Not": 82, "alia": [83, 114, 188, 237, 241, 249, 251], "141592653589793": 84, "1415926535897932384626433": 84, "compos": [85, 197], "begin": [86, 157, 159, 170, 171, 188, 195, 245, 260], "align": [86, 159, 170, 171, 202, 204, 259], "sum_": [86, 183], "2n": [86, 122], "jx": [86, 159, 170], "cosh": [86, 171, 187, 202, 204], "period": [87, 160, 170, 171], "ci": [87, 94, 96, 160, 260], "v": [87, 94, 96, 156, 160, 211, 243, 247, 258], "co": [87, 94, 96, 160, 187, 202, 204], "sin": [87, 94, 96, 160, 187, 202, 204, 206, 214], "include_initi": 88, "cumul": 88, "unless": [88, 140, 149, 168, 187, 250], "smaller": [88, 149, 154, 168, 250, 260], "latter": [88, 101, 149, 168, 188, 200, 205, 208, 250, 259], "help": [88, 149, 168, 203, 204, 213, 250], "prevent": [88, 149, 168, 250], "initi": [88, 206, 258], "ident": [88, 183, 205, 223, 235, 236, 239, 258], "success": [88, 149, 168, 250], "dividend": [90, 101, 151], "divisor": [90, 101, 151, 166, 182], "small": [90, 101, 140, 204, 240, 243, 245, 258, 260], "gener": [90, 121, 140, 151, 172, 200, 203, 205, 210, 254, 258, 259], "textbook": [90, 140], "formula": [90, 123, 125, 140], "ac": [90, 140, 205], "bd": [90, 140], "bc": [90, 140, 205], "riemann": [90, 140, 205], "sphere": [90, 140, 205], "infinit": [90, 140, 162, 204, 205], "usual": [90, 140, 258], "interest": [90, 140, 204], "unlik": [90, 140, 255, 258], "consist": [90, 101, 114, 115, 121, 140, 156, 172, 188, 195, 205, 209, 214, 225, 226, 227, 229, 234, 243, 254, 258], "uniniti": [91, 92], "deriv": [92, 104, 145, 186, 188, 210, 259], "natur": [94, 122, 123, 124, 125, 148, 245, 254], "logarithm": [94, 122, 123, 124, 125, 126, 148, 245, 254], "expand": [95, 188, 260], "close": [95, 96, 121, 124, 155, 188, 258, 260], "indexerror": [95, 188], "exp": [96, 126, 148, 187, 202, 204, 245], "accur": [96, 124, 204, 245], "fdlibm": [96, 124, 204], "n_row": 97, "n_col": 97, "ones": [97, 145, 173, 187, 202, 206, 210, 258], "diagon": [97, 174, 175, 234, 243, 244, 250, 254], "elsewher": [97, 184, 205], "row": [97, 142, 188, 238, 244, 246, 247], "column": [97, 234, 238, 244, 246, 247, 258], "finfo_object": 98, "machin": [98, 107, 240, 243, 258], "inform": [98, 107, 258, 259, 260, 261], "occupi": [98, 107], "ep": [98, 240, 243, 258], "next": [98, 258], "largest": [98, 107, 238, 247, 248], "smallest_norm": 98, "full": [98, 187, 202, 206, 244, 246, 247, 260], "preserv": [99, 156, 188, 205, 209], "reorder": [99, 139], "greatest": [100, 101], "238": 101, "goal": [101, 203, 206, 254, 260], "disambigu": 101, "toward": [101, 154, 204, 254, 259], "former": [101, 188, 205, 259], "overload": [101, 254], "led": 101, "subtl": 101, "bug": [101, 260, 261], "expect": [101, 114, 171, 197, 204, 205, 207, 208, 209, 210, 214, 258], "design": [101, 204, 256, 258, 260, 261], "ill": [101, 254], "diverg": [101, 261], "strictli": 101, "relat": [101, 188, 205, 209, 213, 254, 258, 260], "surpris": [101, 205], "unexpect": [101, 205, 210, 258], "enough": [102, 200, 203, 214, 253, 255, 258], "materi": [102, 208], "attributeerror": [102, 208], "present": [102, 114, 206, 207, 209, 253, 254, 255, 258], "suggest": [102, 260], "correctli": [102, 204], "move": [102, 139, 209, 260], "agnost": 102, "fashion": 102, "illustr": [102, 206, 214], "def": [102, 214, 258, 259, 260], "func": 102, "xp_x": 102, "__array_namespace__": [102, 187, 215, 254, 258], "xp_y": 102, "work": [102, 203, 206, 208, 214, 258, 260, 261], "xxxxx": 102, "fill_valu": [103, 104], "iinfo_object": 107, "inspect": [109, 187], "util": [109, 187, 190, 255, 258, 259], "class": [109, 190, 214, 258, 259], "xp": [109, 215, 253, 254, 258], "capabl": [109, 187, 190], "default_dtyp": [109, 187], "dictionari": [110, 112, 114], "fulli": [110, 209], "complianc": 110, "exclud": [110, 121, 188, 197], "demarc": [110, 207], "throughout": 110, "defaultdatatyp": 112, "concept": [112, 114, 188, 206, 258], "context": [112, 114, 205, 209, 259], "manag": [112, 114, 203, 209], "runtim": [113, 213, 214, 255, 258, 260], "creation": [113, 187, 200, 209, 258], "datatyp": 114, "decid": [114, 258], "belong": [114, 115, 206], "shorthand": [114, 115, 188], "canon": 114, "float16": 115, "bfloat16": [115, 258], "int128": 115, "short": [115, 205, 258, 259], "extend": [115, 188, 205, 258], "extens": [115, 256, 260], "num": 121, "endpoint": 121, "delta_": 121, "textrm": [121, 157, 245], "sampl": [121, 166, 182, 217, 223, 228, 259], "nonneg": [121, 172, 188], "concern": [121, 169, 209, 213, 258], "polar": 122, "r": [122, 173, 188, 230, 234, 235, 236, 244, 246, 247, 258, 260], "theta": 122, "continu": [122, 124, 148, 162, 205, 234, 247, 258], "account": [122, 124, 148, 162, 258], "log_": [123, 125], "log": [123, 124, 125, 126, 148, 187, 202, 204], "mxn": [132, 174, 175, 233, 238, 240, 243, 244, 250], "sentinel": [133, 137], "xy": 136, "grid": 136, "cartesian": 136, "ij": 136, "effect": [136, 166, 182, 209, 261], "ni": 136, "n3": 136, "nn": 136, "three": [136, 209], "p": [136, 235, 238, 252], "sourc": [139, 259, 261], "destin": 139, "uniqu": [139, 172, 177, 178, 179, 180, 205, 218, 219, 222, 223, 226, 229, 234, 236, 244, 246, 247, 254], "state": [140, 187, 188, 258], "cdot": [140, 159, 163, 170, 183], "y_i": [141, 147], "build": [142, 177, 178, 179, 180, 188, 200, 207, 213, 258], "jax": [142, 177, 178, 179, 180, 188, 206, 207, 258, 259, 260], "dask": [142, 177, 178, 179, 180, 188, 206, 207, 213, 258, 259, 260], "etc": [142, 177, 178, 179, 180, 188, 207, 255], "find": [142, 156, 177, 178, 179, 180, 188, 207, 258, 259], "difficult": [142, 177, 178, 179, 180, 188, 204, 207, 258], "omit": [142, 177, 178, 179, 180, 188, 207, 208, 212], "section": [142, 177, 178, 179, 180, 188, 202, 203, 207, 208, 209, 210, 214, 258, 260], "typl": 142, "total": [142, 166, 182, 205], "style": [142, 188], "odd": [148, 217, 223, 225, 226, 228], "treat": [148, 173], "carefulli": 148, "That": [151, 188, 200, 210, 214, 258], "primarili": 151, "One": [152, 212, 258, 261], "arrays_and_dtyp": 153, "restor": 154, "counterpart": 155, "side": [156, 188, 208], "liter": [156, 216, 218, 220, 221, 222, 224, 225, 226, 227, 229, 238, 244, 252], "sorter": 156, "control": [156, 209, 212, 213], "land": 156, "exactli": [156, 170, 171], "edg": 156, "satisfi": [156, 173, 187, 188, 204, 205, 259], "condit": [156, 184, 212, 257], "what": [156, 200, 208, 210, 214, 254, 258, 259, 260, 261], "constitut": [156, 166, 182], "among": [156, 204, 205, 254], "argsort": [156, 187], "invok": [156, 259], "signum": 157, "whenev": [158, 260], "2j": 159, "sinh": [159, 171, 187, 202, 204], "squar": [162, 187, 202, 205, 230, 232, 234, 235, 236, 239, 243, 245, 246, 254], "root": [162, 205, 235], "indistinguish": [162, 188, 204], "correct": [166, 182, 206], "degre": [166, 182, 235, 254], "freedom": [166, 182], "adjust": [166, 182, 258], "popul": [166, 182], "bessel": [166, 182, 203], "conceptu": 169, "regard": [169, 202, 210, 254, 260], "mutat": 169, "check": [169, 188, 204, 230, 234, 235, 244, 246, 253, 260, 261], "select": [169, 188, 258], "analyt": [170, 171, 205], "pole": [170, 171], "tanh": [170, 187, 202, 204], "stem": [171, 234, 247], "patch": 171, "advis": [171, 206, 254], "tensor": [172, 254, 258, 260], "contract": [172, 183, 254, 257], "outer": [172, 202], "dot": [172, 183, 254], "x1_ax": 172, "x2_ax": 172, "repetit": 173, "triangular": [174, 175, 230, 244], "closer": 176, "reconstruct": [177, 179], "distinct": [177, 178, 179, 180, 205, 254], "inverse_indic": [177, 179], "exact": [177, 179, 214], "aggreg": [177, 178], "namedtupl": [177, 178, 179, 234, 244, 245, 247, 254], "third": [177, 247], "fourth": 177, "split": 181, "varianc": 182, "unbias": 182, "mathbf": 183, "overlin": [183, 243], "a_i": 183, "b_i": 183, "yield": [184, 205], "signatur": [187, 200, 214, 258, 259], "subset": [187, 204, 259, 260], "categori": 187, "accuraci": [187, 211, 216, 218, 221, 222, 225, 226, 227, 229], "reflect": 187, "mt": 187, "__abs__": [187, 202], "__bool__": [187, 202, 212], "__complex__": [187, 202, 212], "__float__": [187, 202, 212], "__getitem__": [187, 188], "__index__": [187, 212], "__int__": [187, 202, 212], "to_devic": [187, 209], "overview": 187, "algorithm": [187, 204, 245, 260], "inf": [187, 238, 252, 258], "newaxi": [187, 188], "arang": [187, 259], "asarrai": [187, 202, 208, 260], "empty_lik": 187, "ey": [187, 202], "full_lik": [187, 202], "linspac": [187, 202], "meshgrid": [187, 202], "ones_lik": [187, 202], "tril": 187, "triu": 187, "zeros_lik": 187, "can_cast": 187, "finfo": [187, 202], "iinfo": [187, 202], "result_typ": 187, "acosh": [187, 202, 204], "atan2": [187, 204], "clip": [187, 188], "copysign": 187, "expm1": [187, 202, 204], "isfinit": [187, 202], "isinf": [187, 202], "isnan": [187, 202], "log1p": [187, 202, 204], "log2": [187, 202, 204], "log10": [187, 202, 204], "logaddexp": 187, "logical_and": 187, "logical_not": 187, "logical_or": 187, "logical_xor": 187, "signbit": 187, "tan": [187, 202, 204], "trunc": [187, 202], "syntax": [187, 206, 208, 210, 258], "__array_namespace_info__": [187, 190], "default_devic": 187, "linear": [187, 205, 246, 253], "algebra": [187, 205, 243, 253], "matrix_transpos": [187, 254], "tensordot": [187, 202, 254], "vecdot": [187, 202, 254], "manipul": 187, "broadcast_arrai": 187, "broadcast_to": 187, "concat": 187, "expand_dim": [187, 188], "moveaxi": 187, "reshap": [187, 188], "roll": 187, "squeez": 187, "tile": 187, "unstack": 187, "argmax": 187, "argmin": 187, "searchsort": 187, "unique_al": [187, 202], "unique_count": [187, 202], "unique_invers": [187, 202], "unique_valu": [187, 202], "statist": 187, "cumulative_sum": 187, "prod": [187, 202, 218, 222, 226, 229], "__array_api_version__": [187, 199, 202, 255], "syntact": 188, "sugar": 188, "term": [188, 209, 254, 259], "colon": 188, "contrast": [188, 205, 212, 254], "combin": [188, 206, 213, 254], "basic": 188, "noth": 188, "perspect": 188, "item": [188, 206, 258], "2k": 188, "3k": 188, "q": [188, 234, 244], "obtain": [188, 257], "qk": 188, "being": [188, 208, 209, 254, 258, 261], "100": [188, 212, 255], "junk": 188, "consider": [188, 206, 254], "comma": 188, "separ": [188, 202, 208, 253], "exp1": 188, "exp2": 188, "expn": 188, "forth": 188, "decreas": [188, 254], "entri": [188, 218, 219, 222, 223, 226, 229, 258], "retain": 188, "invoc": 188, "manner": [188, 208, 210], "sympi": 188, "flat": 188, "attempt": [188, 204, 205, 206, 209, 210, 258, 260], "dynam": 188, "mask": [188, 258], "filter": 188, "s1": 188, "sm": 188, "s2": 188, "sn": 188, "prohibit": [188, 206], "replac": [188, 212, 243, 261], "iter": 188, "programmat": 190, "queri": 190, "reli": [195, 203, 205, 207, 214, 260], "them": [195, 203, 206, 210, 258, 260], "reproduc": [195, 204], "high": [197, 208, 209, 254, 258], "diagram": [197, 258], "lattic": 197, "particip": [197, 205], "matter": [197, 203, 205], "dash": 197, "undefin": [197, 254], "connect": [197, 257], "rather": [197, 200, 203, 209, 210, 213, 254, 258], "i2": 197, "i1": 197, "i4": 197, "i8": 197, "u1": 197, "u2": 197, "u4": 197, "u8": 197, "f8": 197, "c8": 197, "c16": 197, "regardless": 197, "subject": [197, 245, 257], "met": 197, "give": [197, 205, 208, 209], "No": [200, 255], "run": [200, 259, 260], "varieti": 200, "architectur": 200, "gpu": [200, 208, 209, 260], "distribut": [200, 204, 208, 209, 213, 257], "system": [200, 246, 258], "tpu": [200, 208], "emerg": [200, 208, 258], "instal": [200, 258, 261], "emploi": [200, 207, 209], "parallel": [200, 211, 258, 260], "jit": [200, 203, 258], "put": [200, 258, 260], "constraint": [200, 205, 256], "predict": 200, "itself": [200, 208, 212, 260], "motiv": 200, "importantli": 200, "awar": [200, 214, 260], "layer": [200, 213, 258, 260], "coupl": 200, "downstream": [200, 253, 258, 259], "import": [200, 203, 209, 212, 253, 254, 258, 260, 261], "structur": [200, 214, 258, 259], "interoper": [200, 208], "share": [200, 258], "though": [200, 214, 258, 260], "soft": 200, "arraylib_nam": 200, "constrain": [200, 204], "unwil": 200, "signific": [200, 204, 206, 258], "adopt": [200, 205, 208, 260], "primari": [200, 208], "write": [200, 206, 258, 260], "consequ": [200, 214, 258], "easi": [200, 253], "unambigu": [200, 206, 208, 259], "clear": [200, 206, 208, 258, 260], "significantli": 200, "detract": 200, "experi": [200, 255], "strict": [200, 206], "typic": [200, 206, 208, 210, 255, 258, 260, 261], "good": [200, 203, 206, 209, 214, 258], "anyth": [200, 258], "thin": 200, "conveni": 200, "plan": [201, 258], "previou": [202, 260], "gh": [202, 260], "497": 202, "498": 202, "546": 202, "525": 202, "528": 202, "557": 202, "529": 202, "448": 202, "447": 202, "537": 202, "526": 202, "554": 202, "517": 202, "520": 202, "521": 202, "522": 202, "523": 202, "524": 202, "442": 202, "434": 202, "445": 202, "454": 202, "453": 202, "436": 202, "451": 202, "452": 202, "484": 202, "435": 202, "531": 202, "530": 202, "532": 202, "568": 202, "514": 202, "534": 202, "536": 202, "437": 202, "441": 202, "438": 202, "553": 202, "440": [202, 255], "556": 202, "457": 202, "456": 202, "552": 202, "461": 202, "538": 202, "459": 202, "458": 202, "558": 202, "540": 202, "512": 202, "470": 202, "linalg": [202, 253, 254], "417": 202, "trace": [202, 206, 254, 259], "502": 202, "choleski": [202, 254], "443": 202, "559": 202, "det": [202, 235, 245], "542": 202, "eigh": [202, 254], "543": 202, "eigvalsh": 202, "547": 202, "matrix_norm": 202, "565": 202, "matrix_pow": 202, "549": 202, "matrix_rank": 202, "563": 202, "560": 202, "pinv": 202, "564": 202, "qr": 202, "548": 202, "slogdet": [202, 254], "567": 202, "solv": [202, 214, 243], "566": 202, "svd": [202, 243], "561": 202, "svdval": 202, "562": 202, "541": 202, "vector_norm": 202, "550": [202, 260], "418": 202, "491": 202, "513": 202, "variabl": [202, 213, 246, 261], "515": 202, "527": 202, "573": 202, "480": 202, "485": 202, "496": 202, "503": 202, "427": 202, "416": 202, "fft": [202, 215, 218, 220, 221, 222, 224, 225, 226, 227, 229], "fast": 202, "fourier": [202, 216, 217, 218, 220, 221, 222, 224, 225, 226, 227, 228, 229, 253], "transform": [202, 216, 217, 218, 220, 221, 222, 224, 225, 226, 227, 228, 229, 253, 259], "189": 202, "ifft": [202, 216], "fftn": [202, 222], "ifftn": [202, 218], "rfft": [202, 225, 228], "rfftn": [202, 226], "irfft": [202, 227, 228], "irfttn": 202, "fftfreq": 202, "rfftfreq": 202, "fftshift": [202, 223], "ifftshift": 202, "fix": [202, 209, 258, 260], "clarif": 202, "miss": [202, 258], "464": 202, "clarifi": 202, "429": 202, "typo": 202, "439": 202, "572": 202, "510": 202, "511": 202, "473": 202, "scope": [203, 212, 213, 256, 259], "mention": [203, 210, 260], "There": [203, 206, 208, 209, 214, 258, 260, 261], "direct": [203, 258, 259], "deal": [203, 213, 214, 255, 257], "issu": [203, 205, 206, 208, 209, 213, 258, 260], "assumpt": [203, 208, 255, 256, 258], "rest": [203, 258, 260], "ndarrai": [203, 208, 258, 260], "visual": 203, "often": [203, 205, 210, 254, 258, 259, 260], "difficulti": [203, 207], "relev": [203, 209, 214, 258], "certainti": 203, "inde": 203, "project": [203, 205, 208, 260], "statsmodel": 203, "scikit": [203, 213, 258, 259, 260], "bio": [203, 260], "qutip": 203, "strategi": [203, 209], "learn": [203, 213, 258, 259, 260], "submodul": [203, 253], "doesn": [203, 209, 258], "cupi": [203, 206, 258, 259, 260], "elementwisekernel": 203, "scipi": [203, 213, 258, 259], "astropi": [203, 260], "seem": [203, 208, 260], "almost": [203, 260], "inevit": 203, "someth": [203, 206, 258], "numba": [203, 208, 258, 260], "sens": [203, 212, 258, 260], "tend": [203, 206, 260], "reimplement": 203, "gamma": 203, "drop": [203, 214, 244, 247], "arraylib": 203, "cpython": 203, "backend": [203, 213, 258], "target": [203, 209], "better": [203, 260], "pypi": [203, 259, 260], "quit": [203, 258, 260], "readi": 203, "mainstream": 203, "todai": [203, 206, 254], "onc": [203, 255], "feasibl": [203, 258], "roundtiestoeven": 204, "ti": [204, 254, 258], "certain": [204, 205, 254], "boundari": 204, "reader": 204, "identifi": [204, 209, 259], "lack": 204, "phrase": [204, 210], "recogn": [204, 209], "seek": [204, 254, 259], "optim": [204, 206, 254, 260], "latitud": 204, "although": [204, 223, 245], "freeli": 204, "sun": 204, "microsystem": 204, "With": [204, 259, 260], "imposs": [204, 206, 207, 261], "suit": [204, 256, 258, 259], "span": 204, "report": 204, "averag": 204, "aid": [204, 261], "best": [204, 208, 254, 258], "effort": [204, 259], "theoret": 204, "sound": 204, "robust": 204, "bare": 204, "summat": [204, 254], "unfortun": 204, "impos": [204, 207], "rigor": 204, "sever": [204, 206, 255, 258], "curtail": 204, "unduli": 204, "topologi": 205, "continuum": 205, "onto": [205, 206], "surfac": [205, 258], "stereograph": 205, "coalesc": 205, "3j": 205, "4j": 205, "convei": 205, "niceti": 205, "translat": [205, 260], "neq": 205, "arriv": [205, 258], "opposit": 205, "subtleti": 205, "craft": 205, "intuit": 205, "julia": [205, 260], "minim": [205, 209], "imperfect": 205, "balanc": 205, "appear": [205, 255, 258, 261], "embrac": 205, "transcendent": 205, "wholli": 205, "analysi": [205, 206, 207, 258, 259, 260], "curv": [205, 258], "discontinu": [205, 260], "taken": [205, 258], "pm": 205, "whole": 205, "simpl": [205, 206, 255], "aris": [205, 254, 257, 258], "trigonometr": 205, "domin": 205, "revis": [205, 209], "a_1": 205, "ldot": 205, "a_n": 205, "reflex": 205, "leq": 205, "transit": 205, "antisymmetr": 205, "partial": 205, "establish": [205, 259], "six": 205, "lexicograph": 205, "principl": [205, 259], "situat": [205, 206, 208, 209, 210, 258, 260], "unit": [205, 217, 228], "despit": [205, 208], "admonit": [206, 207], "becom": [206, 208, 258, 260], "trigger": [206, 212], "confid": 206, "pytorch": [206, 209, 258, 259, 260], "mxnet": [206, 258, 259, 260], "save": 206, "faster": 206, "tensorflow": [206, 258, 259, 260], "fundament": [206, 258], "inplac": 206, "update_index": 206, "idx": 206, "solut": [206, 243, 246, 260], "hard": [206, 208, 209, 212, 258], "go": [206, 255], "down": 206, "rout": 206, "val": [206, 212], "veri": [206, 245, 260], "wide": [206, 208, 244, 247, 258], "slightli": 206, "heavili": [206, 260], "you": [206, 261], "_must_": 206, "abstract": [206, 254, 259], "donat": 206, "lapack": [206, 254], "_may_": 206, "overwrit": 206, "whatev": 206, "fastest": 206, "aren": [206, 258], "longer": [206, 254], "problem": [206, 214, 243, 259, 260], "upon": [207, 258], "ahead": 207, "burden": [207, 258], "omiss": 207, "nativ": 208, "layout": 208, "packag": [208, 214, 255, 258, 259, 260], "live": [208, 258], "figur": 208, "contigu": 208, "promin": [208, 258], "releas": [208, 255, 259], "candid": [208, 258], "__cuda_array_interface__": 208, "moment": 208, "tri": [208, 260], "growth": 208, "amd": 208, "undesir": 208, "pattern": [208, 209, 213, 259, 260], "widest": 208, "lot": 208, "3118": 208, "hardli": 208, "mostli": [208, 212, 213, 258], "dealt": [208, 214], "__array__": [208, 260], "attach": 208, "hold": [208, 254], "rfc": [208, 258], "http": [208, 255, 261], "dmlc": 208, "github": [208, 255, 257, 261], "io": 208, "page": [208, 260], "standalon": [208, 261], "outlin": [208, 258], "cover": [208, 258, 261], "usag": [208, 253, 258], "node": 208, "spars": [208, 258], "why": [208, 258], "complet": [208, 213, 244, 255, 258, 260], "scale": 209, "exert": 209, "placement": 209, "global": 209, "switchabl": 209, "transfer": 209, "granular": 209, "downsid": 209, "verbos": 209, "much": [209, 258, 261], "kept": 209, "instanti": 209, "physic": 209, "revisit": 209, "themselv": 209, "expos": [209, 254], "bewar": 209, "framework": [209, 258], "elabor": 209, "polici": 209, "highest": 209, "prioriti": 209, "topic": [209, 213, 256, 258, 260], "pin": 209, "tricki": 209, "sinc": 209, "emit": 210, "misbehav": 210, "forese": 210, "extent": 210, "builtin": 210, "author": [210, 257, 258, 259, 260], "worth": 210, "compli": 210, "eager": [211, 258], "aspect": [212, 261], "impact": [212, 258], "prescrib": 212, "show": 212, "up": [212, 244, 253, 260], "five": 212, "dunder": [212, 255], "serial": 212, "compute_someth": 212, "statement": 212, "do_something_els": 212, "flow": 212, "cond": 212, "won": 213, "further": 213, "exercis": 213, "environ": [213, 254, 258, 261], "bla": [213, 254], "openmp": 213, "n_job": [213, 260], "worker": [213, 260], "chunk": 213, "approach": [213, 258, 259], "auto": [213, 260], "thing": 213, "improv": [213, 258, 260], "fit": [213, 257, 258, 260], "becam": [214, 258], "progress": [214, 261], "superclass": 214, "_basearrai": 214, "subclass": [214, 258], "insid": [214, 253], "typevar": 214, "variat": [214, 259], "don": [214, 260], "said": 214, "subtyp": 214, "hasattr": [215, 253, 254, 258], "ortho": [216, 218, 220, 221, 222, 224, 225, 226, 227, 229], "forward": [216, 218, 220, 221, 222, 224, 225, 226, 227, 229, 258], "discret": [216, 217, 218, 220, 221, 222, 224, 225, 226, 227, 228, 229], "pad": [216, 218, 220, 221, 222, 224, 225, 226, 227, 229], "trim": [216, 218, 220, 221, 222, 224, 225, 226, 227, 229], "orthonorm": [216, 218, 220, 221, 222, 224, 225, 226, 227, 229, 244, 247], "frequenc": [217, 219, 228, 255, 259], "f": [217, 228], "window": [217, 228], "center": 219, "spectrum": 219, "swap": 219, "nyquist": [219, 228], "hermitian": [220, 224, 230, 234, 235], "symmetri": [220, 224], "irfftn": 229, "decomposit": [230, 234, 243, 244, 247, 248, 254], "symmetr": [230, 234, 235], "mathbb": [230, 234, 235, 236, 244, 246, 247], "ll": 230, "h": [230, 234, 243, 247], "qquad": 230, "text": 230, "factor": [230, 247], "offset": [233, 250], "off": [233, 250], "eigenvalu": [234, 235, 254], "lambda": [234, 235], "orthogon": [234, 243, 244, 247, 254], "unitari": [234, 244, 247], "eigenvector": 234, "softwar": [234, 247, 257, 258, 260], "fact": [234, 247], "phi": [234, 247], "eig": [234, 254], "diag": [234, 247], "polynomi": [235, 258], "i_n": [235, 236], "eigval": [235, 254], "xx": 236, "ord": [238, 252], "fro": 238, "nuc": 238, "frobeniu": 238, "nuclear": 238, "singular": [238, 240, 243, 247, 248], "induc": 238, "rtol": [240, 243], "toler": [240, 243], "largest_singular_valu": [240, 243], "epsilon": [240, 243], "moor": 243, "penros": 243, "pseudo": 243, "sigma": [243, 247], "reciproc": 243, "tall": [244, 247], "geq": 244, "necessarili": [244, 261], "linearli": [244, 246, 258], "logabsdet": 245, "again": 245, "equat": 246, "coeffici": 246, "ordin": 246, "full_matric": 247, "u_k": 247, "v_k": 247, "vh": 247, "adjoint": 247, "l1": 252, "manhattan": 252, "l2": 252, "euclidean": 252, "coher": 253, "extension_nam": 253, "regular": [253, 255, 258], "__getattr__": 253, "endeavor": 254, "strai": 254, "far": 254, "restraint": 254, "address": [254, 258, 259, 260], "decis": [254, 258], "accid": 254, "especi": 254, "arisen": 254, "been": [254, 258], "process": [254, 255, 259], "afford": 254, "opportun": 254, "subsequ": [254, 259], "codifi": [254, 259], "theme": 254, "abil": 254, "decim": 254, "restrict": [254, 257], "overli": 254, "compel": 254, "compris": 254, "prudent": 254, "lastli": 254, "polymorph": 254, "dedic": 254, "eignvector": 254, "agnostic": 254, "eschew": 254, "parameter": 254, "bias": 254, "underpin": 254, "cater": 254, "low": 254, "verbatim": 254, "poor": 254, "uplo": 254, "dai": 254, "monopoli": 254, "prolifer": 254, "conserv": [254, 260], "conservat": 254, "delin": 254, "overlap": 254, "confus": [254, 258], "parsimoni": 254, "einsum": 254, "einstein": 254, "vdot": 254, "multi_dot": 254, "chain": 254, "exhibit": 254, "consolid": 254, "propos": [255, 259, 260], "com": [255, 261], "blob": 255, "master": 255, "process_docu": 255, "md": 255, "summari": [255, 259], "matur": 255, "reach": [255, 260], "final": 255, "world": 255, "highli": 255, "strong": 255, "updat": 255, "date": 255, "shall": [255, 257], "alpha": 255, "beta": 255, "rc": 255, "post": 255, "dev": 255, "bugfix": 255, "__version__": 255, "resembl": 255, "year": [255, 258], "evolut": [256, 258], "verif": [256, 258], "benchmark": 256, "changelog": 256, "licens": 256, "websit": 257, "repositori": [257, 259], "mit": 257, "copyright": 257, "consortium": [257, 258], "contributor": 257, "permiss": 257, "herebi": 257, "grant": 257, "charg": 257, "person": 257, "file": [257, 259, 260, 261], "merg": [257, 258], "publish": [257, 259], "sublicens": 257, "sell": 257, "whom": 257, "furnish": 257, "notic": 257, "substanti": 257, "portion": 257, "THE": 257, "AS": 257, "warranti": 257, "OF": 257, "BUT": 257, "TO": 257, "merchant": 257, "FOR": 257, "noninfring": 257, "IN": 257, "NO": 257, "holder": 257, "BE": 257, "liabl": 257, "claim": 257, "damag": 257, "liabil": 257, "action": 257, "tort": 257, "WITH": 257, "wealth": 258, "scienc": 258, "deep": 258, "push": 258, "art": 258, "unintend": 258, "activ": 258, "creativ": 258, "fragment": 258, "multidimension": 258, "xarrai": [258, 259], "pick": 258, "bless": 258, "inconsist": 258, "obviou": 258, "mind": 258, "sure": 258, "rare": [258, 259], "unimport": 258, "scientif": 258, "mid": 258, "1990": 258, "earli": 258, "2000": 258, "numarrai": 258, "2005": 258, "superced": 258, "roughli": 258, "decad": 258, "past": 258, "mainli": 258, "rise": 258, "newer": 258, "inspir": [258, 260], "idea": 258, "seriou": 258, "grew": 258, "quickli": 258, "infeas": 258, "speed": 258, "innov": [258, 259], "group": 258, "assembl": 258, "draft": 258, "presenc": 258, "meta": 258, "concret": 258, "shown": 258, "core": [258, 260], "borrow": 258, "steep": 258, "switch": [258, 260], "accompani": 258, "actual": 258, "task": [258, 260], "schedul": 258, "characterist": 258, "grain": 258, "obstacl": 258, "cython": [258, 260], "datetim": 258, "void": 258, "uniformli": 258, "o": 258, "routin": 258, "bind": [258, 260], "cffi": 258, "ctype": 258, "ufunc": 258, "gufunc": 258, "extra": 258, "huge": 258, "amount": [258, 259, 260], "strength": 258, "advantag": 258, "foreign": 258, "indirect": 258, "program": 258, "pydata": 258, "weld": 258, "bohrium": 258, "arkouda": 258, "legat": 258, "grow": 258, "panda": [258, 259], "matplotlib": [258, 259], "networkx": 258, "xtensor": 258, "xnd": [258, 260], "stdlib": 258, "javascript": 258, "rust": 258, "rrai": 258, "nd4j": 258, "jvm": 258, "numsharp": 258, "dispatch": [258, 260], "pythran": 258, "transon": 258, "onnx": 258, "apach": 258, "tvm": 258, "mlir": 258, "taco": 258, "unumpi": [258, 260], "einop": 258, "arrow": 258, "consult": 258, "simplest": 258, "directli": [258, 260], "package_nam": 258, "uniform": 258, "hinder": 258, "inter": 258, "distinguish": 258, "is_array_api_obj": 258, "peopl": 258, "abc": 258, "inherit": 258, "isinst": 258, "prove": 258, "discov": 258, "assist": 258, "importlib": 258, "metadata": 258, "entry_point": 258, "dict": 258, "deprec": 258, "py3": 258, "supplant": 258, "load": 258, "path": 258, "haven": 258, "measur": 258, "isol": 258, "indispens": 258, "institut": 258, "electr": 258, "electron": 258, "engin": [258, 260], "york": 258, "scott": 258, "bradner": 258, "1997": 258, "word": 258, "2119": 258, "doi": 258, "17487": 258, "rfc2119": 258, "technic": 259, "vacuum": 259, "sometim": 259, "compet": 259, "friction": 259, "focu": 259, "accommod": [259, 260], "foo": 259, "bar": 259, "aspir": 259, "experiment": 259, "channel": 259, "resourc": [259, 260], "novel": 259, "thwart": 259, "reinvent": 259, "proverbi": 259, "wheel": 259, "foundat": 259, "articul": 259, "quantifi": 259, "analyz": 259, "ground": [259, 261], "empir": 259, "acquir": 259, "scrape": 259, "unifi": [259, 260], "extract": 259, "intersect": 259, "complement": 259, "suitabl": 259, "preval": 259, "eas": 259, "leverag": 259, "summar": 259, "tool": [259, 260], "explor": 259, "instrument": 259, "record": 259, "collect": 259, "json": 259, "human": 259, "docstr": 259, "_0": 259, "_arg": 259, "347": 259, "359": 259, "894": 259, "1173": 259, "skimag": 259, "174": 259, "sklearn": 259, "373": 259, "666": 259, "publicli": 259, "stori": 259, "broad": 259, "wider": 260, "wrap": 260, "familiar": 260, "survei": 260, "advanc": 260, "research": 260, "nsf": 260, "pain": 260, "brought": 260, "wish": 260, "multiprocess": 260, "shorten": 260, "fortran": 260, "easili": [260, 261], "pure": 260, "manual": 260, "Then": 260, "hoc": 260, "critic": 260, "corner": 260, "tractabl": 260, "spectral": 260, "periodogram": 260, "spectrogram": 260, "csd": 260, "welch": 260, "stft": 260, "istft": 260, "lombscargl": 260, "40": 260, "sai": [260, 261], "ineffici": 260, "x_np": 260, "asnumpi": 260, "freq": 260, "pxx": 260, "back": 260, "torch": 260, "littl": 260, "flexibl": 260, "py": [260, 261], "rearrang": 260, "_backend": 260, "glue": 260, "loc": 260, "some_func": 260, "get_backend": 260, "disappear": 260, "serv": 260, "50": 260, "tensorli": 260, "kera": 260, "eagerpi": 260, "notabl": 260, "suboptim": 260, "readili": 260, "cpyext": 260, "unsuccess": 260, "xla": 260, "vta": 260, "jump": 260, "hoop": 260, "attain": 260, "got": 260, "cfunc": 260, "np": 260, "assert_array_almost_equ": 260, "pyfunc": 260, "pyarray_cancastarrayto": 260, "assertequ": 260, "spec": 261, "clone": 261, "repo": 261, "pip": 261, "pytest": 261, "hypothesi": 261, "conda": 261, "array_api_tests_modul": 261, "edit": 261, "array_api_test": 261, "_array_modul": 261, "array_modul": 261, "command": 261, "asid": 261, "vendor": 261, "readm": 261}, "objects": {"array_api": [[8, 0, 1, "", "__array_api_version__"], [9, 1, 1, "", "abs"], [10, 1, 1, "", "acos"], [11, 1, 1, "", "acosh"], [12, 1, 1, "", "add"], [13, 1, 1, "", "all"], [14, 1, 1, "", "any"], [15, 1, 1, "", "arange"], [16, 1, 1, "", "argmax"], [17, 1, 1, "", "argmin"], [18, 1, 1, "", "argsort"], [60, 1, 1, "", "asarray"], [61, 1, 1, "", "asin"], [62, 1, 1, "", "asinh"], [63, 1, 1, "", "astype"], [64, 1, 1, "", "atan"], [65, 1, 1, "", "atan2"], [66, 1, 1, "", "atanh"], [67, 1, 1, "", "bitwise_and"], [68, 1, 1, "", "bitwise_invert"], [69, 1, 1, "", "bitwise_left_shift"], [70, 1, 1, "", "bitwise_or"], [71, 1, 1, "", "bitwise_right_shift"], [72, 1, 1, "", "bitwise_xor"], [73, 1, 1, "", "broadcast_arrays"], [74, 1, 1, "", "broadcast_to"], [75, 1, 1, "", "can_cast"], [76, 1, 1, "", "ceil"], [77, 1, 1, "", "clip"], [78, 1, 1, "", "concat"], [79, 1, 1, "", "conj"], [85, 1, 1, "", "copysign"], [86, 1, 1, "", "cos"], [87, 1, 1, "", "cosh"], [88, 1, 1, "", "cumulative_sum"], [90, 1, 1, "", "divide"], [91, 1, 1, "", "empty"], [92, 1, 1, "", "empty_like"], [93, 1, 1, "", "equal"], [94, 1, 1, "", "exp"], [95, 1, 1, "", "expand_dims"], [96, 1, 1, "", "expm1"], [97, 1, 1, "", "eye"], [98, 1, 1, "", "finfo"], [99, 1, 1, "", "flip"], [100, 1, 1, "", "floor"], [101, 1, 1, "", "floor_divide"], [102, 1, 1, "", "from_dlpack"], [103, 1, 1, "", "full"], [104, 1, 1, "", "full_like"], [105, 1, 1, "", "greater"], [106, 1, 1, "", "greater_equal"], [107, 1, 1, "", "iinfo"], [108, 1, 1, "", "imag"], [115, 1, 1, "", "isdtype"], [116, 1, 1, "", "isfinite"], [117, 1, 1, "", "isinf"], [118, 1, 1, "", "isnan"], [119, 1, 1, "", "less"], [120, 1, 1, "", "less_equal"], [121, 1, 1, "", "linspace"], [122, 1, 1, "", "log"], [123, 1, 1, "", "log10"], [124, 1, 1, "", "log1p"], [125, 1, 1, "", "log2"], [126, 1, 1, "", "logaddexp"], [127, 1, 1, "", "logical_and"], [128, 1, 1, "", "logical_not"], [129, 1, 1, "", "logical_or"], [130, 1, 1, "", "logical_xor"], [131, 1, 1, "", "matmul"], [132, 1, 1, "", "matrix_transpose"], [133, 1, 1, "", "max"], [134, 1, 1, "", "maximum"], [135, 1, 1, "", "mean"], [136, 1, 1, "", "meshgrid"], [137, 1, 1, "", "min"], [138, 1, 1, "", "minimum"], [139, 1, 1, "", "moveaxis"], [140, 1, 1, "", "multiply"], [141, 1, 1, "", "negative"], [142, 1, 1, "", "nonzero"], [143, 1, 1, "", "not_equal"], [144, 1, 1, "", "ones"], [145, 1, 1, "", "ones_like"], [146, 1, 1, "", "permute_dims"], [147, 1, 1, "", "positive"], [148, 1, 1, "", "pow"], [149, 1, 1, "", "prod"], [150, 1, 1, "", "real"], [151, 1, 1, "", "remainder"], [152, 1, 1, "", "reshape"], [153, 1, 1, "", "result_type"], [154, 1, 1, "", "roll"], [155, 1, 1, "", "round"], [156, 1, 1, "", "searchsorted"], [157, 1, 1, "", "sign"], [158, 1, 1, "", "signbit"], [159, 1, 1, "", "sin"], [160, 1, 1, "", "sinh"], [161, 1, 1, "", "sort"], [162, 1, 1, "", "sqrt"], [163, 1, 1, "", "square"], [164, 1, 1, "", "squeeze"], [165, 1, 1, "", "stack"], [166, 1, 1, "", "std"], [167, 1, 1, "", "subtract"], [168, 1, 1, "", "sum"], [169, 1, 1, "", "take"], [170, 1, 1, "", "tan"], [171, 1, 1, "", "tanh"], [172, 1, 1, "", "tensordot"], [173, 1, 1, "", "tile"], [174, 1, 1, "", "tril"], [175, 1, 1, "", "triu"], [176, 1, 1, "", "trunc"], [177, 1, 1, "", "unique_all"], [178, 1, 1, "", "unique_counts"], [179, 1, 1, "", "unique_inverse"], [180, 1, 1, "", "unique_values"], [181, 1, 1, "", "unstack"], [182, 1, 1, "", "var"], [183, 1, 1, "", "vecdot"], [184, 1, 1, "", "where"], [185, 1, 1, "", "zeros"], [186, 1, 1, "", "zeros_like"]], "array_api.array": [[19, 2, 1, "", "T"], [20, 3, 1, "", "__abs__"], [21, 3, 1, "", "__add__"], [22, 3, 1, "", "__and__"], [23, 3, 1, "", "__array_namespace__"], [24, 3, 1, "", "__bool__"], [25, 3, 1, "", "__complex__"], [26, 3, 1, "", "__dlpack__"], [27, 3, 1, "", "__dlpack_device__"], [28, 3, 1, "", "__eq__"], [29, 3, 1, "", "__float__"], [30, 3, 1, "", "__floordiv__"], [31, 3, 1, "", "__ge__"], [32, 3, 1, "", "__getitem__"], [33, 3, 1, "", "__gt__"], [34, 3, 1, "", "__index__"], [35, 3, 1, "", "__int__"], [36, 3, 1, "", "__invert__"], [37, 3, 1, "", "__le__"], [38, 3, 1, "", "__lshift__"], [39, 3, 1, "", "__lt__"], [40, 3, 1, "", "__matmul__"], [41, 3, 1, "", "__mod__"], [42, 3, 1, "", "__mul__"], [43, 3, 1, "", "__ne__"], [44, 3, 1, "", "__neg__"], [45, 3, 1, "", "__or__"], [46, 3, 1, "", "__pos__"], [47, 3, 1, "", "__pow__"], [48, 3, 1, "", "__rshift__"], [49, 3, 1, "", "__setitem__"], [50, 3, 1, "", "__sub__"], [51, 3, 1, "", "__truediv__"], [52, 3, 1, "", "__xor__"], [53, 2, 1, "", "device"], [54, 2, 1, "", "dtype"], [55, 2, 1, "", "mT"], [56, 2, 1, "", "ndim"], [57, 2, 1, "", "shape"], [58, 2, 1, "", "size"], [59, 3, 1, "", "to_device"]], "array_api.constants": [[80, 0, 1, "", "e"], [81, 0, 1, "", "inf"], [82, 0, 1, "", "nan"], [83, 0, 1, "", "newaxis"], [84, 0, 1, "", "pi"]], "array_api.data_types": [[89, 1, 1, "", "__eq__"]], "array_api.fft": [[216, 1, 1, "", "fft"], [217, 1, 1, "", "fftfreq"], [218, 1, 1, "", "fftn"], [219, 1, 1, "", "fftshift"], [220, 1, 1, "", "hfft"], [221, 1, 1, "", "ifft"], [222, 1, 1, "", "ifftn"], [223, 1, 1, "", "ifftshift"], [224, 1, 1, "", "ihfft"], [225, 1, 1, "", "irfft"], [226, 1, 1, "", "irfftn"], [227, 1, 1, "", "rfft"], [228, 1, 1, "", "rfftfreq"], [229, 1, 1, "", "rfftn"]], "array_api.info": [[109, 1, 1, "", "__array_namespace_info__"], [110, 1, 1, "", "capabilities"], [111, 1, 1, "", "default_device"], [112, 1, 1, "", "default_dtypes"], [113, 1, 1, "", "devices"], [114, 1, 1, "", "dtypes"]], "array_api.linalg": [[230, 1, 1, "", "cholesky"], [231, 1, 1, "", "cross"], [232, 1, 1, "", "det"], [233, 1, 1, "", "diagonal"], [234, 1, 1, "", "eigh"], [235, 1, 1, "", "eigvalsh"], [236, 1, 1, "", "inv"], [237, 1, 1, "", "matmul"], [238, 1, 1, "", "matrix_norm"], [239, 1, 1, "", "matrix_power"], [240, 1, 1, "", "matrix_rank"], [241, 1, 1, "", "matrix_transpose"], [242, 1, 1, "", "outer"], [243, 1, 1, "", "pinv"], [244, 1, 1, "", "qr"], [245, 1, 1, "", "slogdet"], [246, 1, 1, "", "solve"], [247, 1, 1, "", "svd"], [248, 1, 1, "", "svdvals"], [249, 1, 1, "", "tensordot"], [250, 1, 1, "", "trace"], [251, 1, 1, "", "vecdot"], [252, 1, 1, "", "vector_norm"]]}, "objtypes": {"0": "py:data", "1": "py:function", "2": "py:property", "3": "py:method"}, "objnames": {"0": ["py", "data", "Python data"], "1": ["py", "function", "Python function"], "2": ["py", "property", "Python property"], "3": ["py", "method", "Python method"]}, "titleterms": {"arrai": [0, 188, 197, 256, 258, 260], "object": [0, 2, 3, 4, 5, 6, 189, 190, 191, 192, 193, 194, 195, 196, 198, 199, 215, 254, 258], "oper": [0, 204], "arithmet": [0, 204], "bitwis": 0, "comparison": 0, "In": [0, 1, 258], "place": [0, 1], "reflect": 0, "attribut": 0, "method": [0, 7], "broadcast": 1, "overview": 1, "algorithm": 1, "exampl": [1, 203], "semant": [1, 209], "constant": 2, "api": [2, 3, 4, 6, 187, 189, 190, 191, 192, 193, 194, 195, 196, 198, 199, 202, 203, 215, 254, 255, 256, 258, 260], "creation": 3, "function": [3, 4, 6, 7, 189, 191, 192, 193, 194, 195, 196, 198, 204, 215], "data": [4, 5, 142, 177, 178, 179, 180, 188, 202, 207, 208, 259], "type": [4, 5, 197, 202, 214, 260], "us": [5, 200, 203, 208, 259, 260], "default": 5, "categori": 5, "element": 6, "wise": 6, "signatur": 7, "__array_api_version__": 8, "ab": 9, "aco": 10, "acosh": 11, "add": [12, 260], "all": 13, "ani": 14, "arang": 15, "argmax": 16, "argmin": 17, "argsort": 18, "t": 19, "__abs__": 20, "__add__": 21, "__and__": 22, "__array_namespace__": 23, "__bool__": 24, "__complex__": 25, "__dlpack__": 26, "tip": [26, 60], "__dlpack_device__": 27, "__eq__": [28, 89], "__float__": 29, "__floordiv__": 30, "__ge__": 31, "__getitem__": 32, "__gt__": 33, "__index__": 34, "__int__": 35, "__invert__": 36, "__le__": 37, "__lshift__": 38, "__lt__": 39, "__matmul__": 40, "__mod__": 41, "__mul__": 42, "__ne__": 43, "__neg__": 44, "__or__": 45, "__pos__": 46, "__pow__": 47, "__rshift__": 48, "__setitem__": 49, "__sub__": 50, "__truediv__": 51, "__xor__": 52, "devic": [53, 113, 203, 209], "dtype": [54, 114], "mt": 55, "ndim": 56, "shape": [57, 142, 177, 178, 179, 180, 188, 207], "size": 58, "to_devic": 59, "asarrai": 60, "note": [60, 102, 121, 197], "asin": 61, "asinh": 62, "astyp": 63, "atan": 64, "atan2": 65, "atanh": 66, "bitwise_and": 67, "bitwise_invert": 68, "bitwise_left_shift": 69, "bitwise_or": 70, "bitwise_right_shift": 71, "bitwise_xor": 72, "broadcast_arrai": 73, "broadcast_to": 74, "can_cast": 75, "ceil": 76, "clip": 77, "concat": 78, "conj": 79, "e": 80, "inf": 81, "nan": 82, "newaxi": 83, "pi": 84, "copysign": 85, "co": 86, "cosh": 87, "cumulative_sum": 88, "divid": 90, "empti": 91, "empty_lik": 92, "equal": 93, "exp": 94, "expand_dim": 95, "expm1": 96, "ey": 97, "finfo": 98, "flip": 99, "floor": 100, "floor_divid": 101, "from_dlpack": 102, "full": 103, "full_lik": 104, "greater": 105, "greater_equ": 106, "iinfo": 107, "imag": 108, "__array_namespace_info__": 109, "capabl": 110, "default_devic": 111, "default_dtyp": 112, "isdtyp": 115, "isfinit": 116, "isinf": 117, "isnan": 118, "less": 119, "less_equ": 120, "linspac": 121, "log": 122, "log10": 123, "log1p": 124, "log2": 125, "logaddexp": 126, "logical_and": 127, "logical_not": 128, "logical_or": 129, "logical_xor": 130, "matmul": [131, 237], "matrix_transpos": [132, 241], "max": 133, "maximum": 134, "mean": 135, "meshgrid": 136, "min": 137, "minimum": 138, "moveaxi": 139, "multipli": 140, "neg": 141, "nonzero": 142, "depend": [142, 177, 178, 179, 180, 188, 200, 207], "output": [142, 177, 178, 179, 180, 188, 207], "not_equ": 143, "ones": 144, "ones_lik": 145, "permute_dim": 146, "posit": 147, "pow": 148, "prod": 149, "real": 150, "remaind": 151, "reshap": 152, "result_typ": 153, "roll": 154, "round": 155, "searchsort": 156, "sign": [157, 197], "signbit": 158, "sin": 159, "sinh": 160, "sort": [161, 195], "sqrt": 162, "squar": 163, "squeez": 164, "stack": 165, "std": 166, "subtract": 167, "sum": 168, "take": 169, "tan": 170, "tanh": 171, "tensordot": [172, 249], "tile": 173, "tril": 174, "triu": 175, "trunc": 176, "unique_al": 177, "unique_count": 178, "unique_invers": 179, "unique_valu": 180, "unstack": 181, "var": 182, "vecdot": [183, 251], "where": 184, "zero": 185, "zeros_lik": 186, "specif": 187, "index": [188, 189], "singl": 188, "axi": 188, "slice": 188, "syntax": [188, 209], "multi": 188, "boolean": 188, "return": 188, "valu": [188, 205], "inspect": 190, "linear": [191, 204, 254], "algebra": [191, 204, 254], "manipul": 192, "search": 193, "set": 194, "statist": [196, 204], "promot": [197, 205], "rule": 197, "integ": 197, "tabl": 197, "unsign": 197, "mix": 197, "float": 197, "point": 197, "python": [197, 203, 256, 260], "scalar": 197, "util": 198, "version": [199, 202, 255], "assumpt": 200, "hardwar": [200, 260], "softwar": 200, "environ": 200, "backward": [200, 255], "compat": [200, 255], "product": 200, "code": [200, 203], "interact": 200, "benchmark": 201, "suit": [201, 261], "changelog": 202, "per": 202, "standard": [202, 203, 255, 256, 258], "v2022": 202, "12": 202, "updat": 202, "complex": [202, 205], "number": [202, 203, 205], "support": [202, 203, 208, 209, 260], "extens": [202, 203, 215, 253, 254, 255], "addit": 202, "errata": 202, "c": 203, "situat": 203, "cython": 203, "usag": [203, 209, 215, 254, 256, 259], "1": [203, 260], "packag": 203, "i": 203, "mostli": 203, "pure": 203, "limit": 203, "2": [203, 260], "contain": 203, "lot": 203, "3": [203, 260], "numpi": 203, "directli": 203, "other": [203, 256], "longer": 203, "term": [203, 258], "approach": 203, "further": 203, "hpy": 203, "accuraci": 204, "mathemat": 204, "The": 205, "plane": 205, "branch": 205, "cut": 205, "order": 205, "base": 205, "copi": 206, "view": 206, "behaviour": 206, "mutabl": 206, "mutat": 206, "interchang": 208, "mechan": 208, "dlpack": 208, "an": [208, 258], "memori": 208, "tensor": 208, "structur": 208, "non": [208, 258], "case": [208, 260], "intend": 209, "assign": 209, "out": [209, 258], "scope": [209, 255, 258], "except": 210, "design": [211, 254, 259], "topic": 211, "constraint": 211, "lazi": 212, "v": 212, "eager": 212, "execut": 212, "parallel": 213, "static": 214, "fourier": 215, "transform": 215, "name": [215, 254], "fft": 216, "fftfreq": 217, "fftn": 218, "fftshift": 219, "hfft": 220, "ifft": 221, "ifftn": 222, "ifftshift": 223, "ihfft": 224, "irfft": 225, "irfftn": 226, "rfft": 227, "rfftfreq": 228, "rfftn": 229, "choleski": 230, "cross": 231, "det": 232, "diagon": 233, "eigh": 234, "eigvalsh": 235, "inv": 236, "matrix_norm": 238, "matrix_pow": 239, "matrix_rank": 240, "outer": 242, "pinv": 243, "qr": 244, "slogdet": 245, "solv": 246, "svd": 247, "svdval": 248, "trace": 250, "vector_norm": 252, "modul": 253, "principl": 254, "futur": 255, "evolut": 255, "content": 256, "context": 256, "methodologi": 256, "licens": 257, "purpos": 258, "introduct": [258, 259], "thi": 258, "histori": 258, "includ": 258, "goal": 258, "implic": 258, "stakehold": 258, "how": 258, "read": 258, "document": 258, "adopt": 258, "check": 258, "complianc": 258, "discover": 258, "conform": [258, 261], "implement": 258, "option": 258, "featur": 258, "definit": 258, "norm": 258, "refer": 258, "decis": 259, "make": [259, 260], "concret": 260, "acceler": 260, "distribut": 260, "scipi": 260, "simplifi": 260, "einop": 260, "remov": 260, "backend": 260, "system": 260, "ad": 260, "xtensor": 260, "4": 260, "jit": 260, "compil": 260, "comput": 260, "easier": 260, "more": 260, "robust": 260, "verif": 261, "test": 261, "measur": 261, "run": 261}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.todo": 2, "sphinx": 57}, "alltitles": {"Array object": [[0, "array-object"]], "Operators": [[0, "operators"]], "Arithmetic Operators": [[0, "arithmetic-operators"], [0, "id26"], [0, "id29"]], "Array Operators": [[0, "array-operators"], [0, "id27"], [0, "id30"]], "Bitwise Operators": [[0, "bitwise-operators"], [0, "id28"], [0, "id31"]], "Comparison Operators": [[0, "comparison-operators"]], "In-place Operators": [[0, "in-place-operators"]], "Reflected Operators": [[0, "reflected-operators"]], "Attributes": [[0, "attributes"]], "Methods": [[0, "methods"]], "Broadcasting": [[1, "broadcasting"]], "Overview": [[1, "overview"]], "Algorithm": [[1, "algorithm"]], "Examples": [[1, "examples"]], "In-place Semantics": [[1, "in-place-semantics"]], "Constants": [[2, "constants"]], "Objects in API": [[2, "objects-in-api"], [3, "objects-in-api"], [4, "objects-in-api"], [6, "objects-in-api"], [189, "objects-in-api"], [190, "objects-in-api"], [191, "objects-in-api"], [192, "objects-in-api"], [193, "objects-in-api"], [194, "objects-in-api"], [195, "objects-in-api"], [196, "objects-in-api"], [198, "objects-in-api"], [199, "objects-in-api"], [215, "objects-in-api"], [254, "objects-in-api"]], "Creation Functions": [[3, "creation-functions"]], "Data Type Functions": [[4, "data-type-functions"]], "Data Types": [[5, "data-types"], [202, "data-types"]], "Use of data type objects": [[5, "use-of-data-type-objects"]], "Default Data Types": [[5, "default-data-types"]], "Data Type Categories": [[5, "data-type-categories"]], "Element-wise Functions": [[6, "element-wise-functions"]], "Function and method signatures": [[7, "function-and-method-signatures"]], "__array_api_version__": [[8, "array-api-version"]], "abs": [[9, "abs"]], "acos": [[10, "acos"]], "acosh": [[11, "acosh"]], "add": [[12, "add"]], "all": [[13, "all"]], "any": [[14, "any"]], "arange": [[15, "arange"]], "argmax": [[16, "argmax"]], "argmin": [[17, "argmin"]], "argsort": [[18, "argsort"]], "T": [[19, "t"]], "__abs__": [[20, "abs"]], "__add__": [[21, "add"]], "__and__": [[22, "and"]], "__array_namespace__": [[23, "array-namespace"]], "__bool__": [[24, "bool"]], "__complex__": [[25, "complex"]], "__dlpack__": [[26, "dlpack"]], "Tip": [[26, null], [60, null]], "__dlpack_device__": [[27, "dlpack-device"]], "__eq__": [[28, "eq"], [89, "eq"]], "__float__": [[29, "float"]], "__floordiv__": [[30, "floordiv"]], "__ge__": [[31, "ge"]], "__getitem__": [[32, "getitem"]], "__gt__": [[33, "gt"]], "__index__": [[34, "index"]], "__int__": [[35, "int"]], "__invert__": [[36, "invert"]], "__le__": [[37, "le"]], "__lshift__": [[38, "lshift"]], "__lt__": [[39, "lt"]], "__matmul__": [[40, "matmul"]], "__mod__": [[41, "mod"]], "__mul__": [[42, "mul"]], "__ne__": [[43, "ne"]], "__neg__": [[44, "neg"]], "__or__": [[45, "or"]], "__pos__": [[46, "pos"]], "__pow__": [[47, "pow"]], "__rshift__": [[48, "rshift"]], "__setitem__": [[49, "setitem"]], "__sub__": [[50, "sub"]], "__truediv__": [[51, "truediv"]], "__xor__": [[52, "xor"]], "device": [[53, "device"]], "dtype": [[54, "dtype"]], "mT": [[55, "mt"]], "ndim": [[56, "ndim"]], "shape": [[57, "shape"]], "size": [[58, "size"]], "to_device": [[59, "to-device"]], "asarray": [[60, "asarray"]], "Note": [[60, null], [102, null], [121, null]], "asin": [[61, "asin"]], "asinh": [[62, "asinh"]], "astype": [[63, "astype"]], "atan": [[64, "atan"]], "atan2": [[65, "atan2"]], "atanh": [[66, "atanh"]], "bitwise_and": [[67, "bitwise-and"]], "bitwise_invert": [[68, "bitwise-invert"]], "bitwise_left_shift": [[69, "bitwise-left-shift"]], "bitwise_or": [[70, "bitwise-or"]], "bitwise_right_shift": [[71, "bitwise-right-shift"]], "bitwise_xor": [[72, "bitwise-xor"]], "broadcast_arrays": [[73, "broadcast-arrays"]], "broadcast_to": [[74, "broadcast-to"]], "can_cast": [[75, "can-cast"]], "ceil": [[76, "ceil"]], "clip": [[77, "clip"]], "concat": [[78, "concat"]], "conj": [[79, "conj"]], "e": [[80, "e"]], "inf": [[81, "inf"]], "nan": [[82, "nan"]], "newaxis": [[83, "newaxis"]], "pi": [[84, "pi"]], "copysign": [[85, "copysign"]], "cos": [[86, "cos"]], "cosh": [[87, "cosh"]], "cumulative_sum": [[88, "cumulative-sum"]], "divide": [[90, "divide"]], "empty": [[91, "empty"]], "empty_like": [[92, "empty-like"]], "equal": [[93, "equal"]], "exp": [[94, "exp"]], "expand_dims": [[95, "expand-dims"]], "expm1": [[96, "expm1"]], "eye": [[97, "eye"]], "finfo": [[98, "finfo"]], "flip": [[99, "flip"]], "floor": [[100, "floor"]], "floor_divide": [[101, "floor-divide"]], "from_dlpack": [[102, "from-dlpack"]], "full": [[103, "full"]], "full_like": [[104, "full-like"]], "greater": [[105, "greater"]], "greater_equal": [[106, "greater-equal"]], "iinfo": [[107, "iinfo"]], "imag": [[108, "imag"]], "__array_namespace_info__": [[109, "array-namespace-info"]], "capabilities": [[110, "capabilities"]], "default_device": [[111, "default-device"]], "default_dtypes": [[112, "default-dtypes"]], "devices": [[113, "devices"]], "dtypes": [[114, "dtypes"]], "isdtype": [[115, "isdtype"]], "isfinite": [[116, "isfinite"]], "isinf": [[117, "isinf"]], "isnan": [[118, "isnan"]], "less": [[119, "less"]], "less_equal": [[120, "less-equal"]], "linspace": [[121, "linspace"]], "log": [[122, "log"]], "log10": [[123, "log10"]], "log1p": [[124, "log1p"]], "log2": [[125, "log2"]], "logaddexp": [[126, "logaddexp"]], "logical_and": [[127, "logical-and"]], "logical_not": [[128, "logical-not"]], "logical_or": [[129, "logical-or"]], "logical_xor": [[130, "logical-xor"]], "matmul": [[131, "matmul"], [237, "matmul"]], "matrix_transpose": [[132, "matrix-transpose"], [241, "matrix-transpose"]], "max": [[133, "max"]], "maximum": [[134, "maximum"]], "mean": [[135, "mean"]], "meshgrid": [[136, "meshgrid"]], "min": [[137, "min"]], "minimum": [[138, "minimum"]], "moveaxis": [[139, "moveaxis"]], "multiply": [[140, "multiply"]], "negative": [[141, "negative"]], "nonzero": [[142, "nonzero"]], "Data-dependent output shape": [[142, null], [177, null], [178, null], [179, null], [180, null], [188, null], [207, null]], "not_equal": [[143, "not-equal"]], "ones": [[144, "ones"]], "ones_like": [[145, "ones-like"]], "permute_dims": [[146, "permute-dims"]], "positive": [[147, "positive"]], "pow": [[148, "pow"]], "prod": [[149, "prod"]], "real": [[150, "real"]], "remainder": [[151, "remainder"]], "reshape": [[152, "reshape"]], "result_type": [[153, "result-type"]], "roll": [[154, "roll"]], "round": [[155, "round"]], "searchsorted": [[156, "searchsorted"]], "sign": [[157, "sign"]], "signbit": [[158, "signbit"]], "sin": [[159, "sin"]], "sinh": [[160, "sinh"]], "sort": [[161, "sort"]], "sqrt": [[162, "sqrt"]], "square": [[163, "square"]], "squeeze": [[164, "squeeze"]], "stack": [[165, "stack"]], "std": [[166, "std"]], "subtract": [[167, "subtract"]], "sum": [[168, "sum"]], "take": [[169, "take"]], "tan": [[170, "tan"]], "tanh": [[171, "tanh"]], "tensordot": [[172, "tensordot"], [249, "tensordot"]], "tile": [[173, "tile"]], "tril": [[174, "tril"]], "triu": [[175, "triu"]], "trunc": [[176, "trunc"]], "unique_all": [[177, "unique-all"]], "unique_counts": [[178, "unique-counts"]], "unique_inverse": [[179, "unique-inverse"]], "unique_values": [[180, "unique-values"]], "unstack": [[181, "unstack"]], "var": [[182, "var"]], "vecdot": [[183, "vecdot"], [251, "vecdot"]], "where": [[184, "where"]], "zeros": [[185, "zeros"]], "zeros_like": [[186, "zeros-like"]], "API specification": [[187, "api-specification"], [187, null]], "Indexing": [[188, "indexing"]], "Single-axis Indexing": [[188, "single-axis-indexing"]], "Slice Syntax": [[188, "slice-syntax"]], "Multi-axis Indexing": [[188, "multi-axis-indexing"]], "Boolean Array Indexing": [[188, "boolean-array-indexing"]], "Return Values": [[188, "return-values"]], "Indexing Functions": [[189, "indexing-functions"]], "Inspection": [[190, "inspection"]], "Inspection APIs": [[190, "inspection-apis"]], "Linear Algebra Functions": [[191, "linear-algebra-functions"]], "Manipulation Functions": [[192, "manipulation-functions"]], "Searching Functions": [[193, "searching-functions"]], "Set Functions": [[194, "set-functions"]], "Sorting Functions": [[195, "sorting-functions"]], "Statistical Functions": [[196, "statistical-functions"], [204, "statistical-functions"]], "Type Promotion Rules": [[197, "type-promotion-rules"]], "Rules": [[197, "rules"]], "Signed integer type promotion table": [[197, "signed-integer-type-promotion-table"]], "Unsigned integer type promotion table": [[197, "unsigned-integer-type-promotion-table"]], "Mixed unsigned and signed integer type promotion table": [[197, "mixed-unsigned-and-signed-integer-type-promotion-table"]], "Floating-point type promotion table": [[197, "floating-point-type-promotion-table"]], "Notes": [[197, "notes"]], "Mixing arrays with Python scalars": [[197, "mixing-arrays-with-python-scalars"]], "Utility Functions": [[198, "utility-functions"]], "Version": [[199, "version"]], "Assumptions": [[200, "assumptions"]], "Hardware and software environments": [[200, "hardware-and-software-environments"]], "Dependencies": [[200, "dependencies"]], "Backwards compatibility": [[200, "backwards-compatibility"], [255, "backwards-compatibility"]], "Production code & interactive use": [[200, "production-code-interactive-use"]], "Benchmark suite": [[201, "benchmark-suite"]], "Changelog per API standard version": [[202, "changelog-per-api-standard-version"]], "Changelog": [[202, "changelog"]], "v2022.12": [[202, "v2022-12"]], "Updates": [[202, "updates"]], "APIs": [[202, "apis"], [202, "id2"]], "Complex Number Support": [[202, "complex-number-support"], [202, "id1"]], "Extensions": [[202, "extensions"], [202, "id3"], [253, "extensions"]], "Additions": [[202, "additions"]], "Errata": [[202, "errata"]], "C API": [[203, "c-api"]], "Example situations for C/Cython usage": [[203, "example-situations-for-c-cython-usage"]], "Situation 1: a Python package that is mostly pure Python, with a limited number of Cython extensions": [[203, "situation-1-a-python-package-that-is-mostly-pure-python-with-a-limited-number-of-cython-extensions"]], "Situation 2: a Python package that contains a lot of Cython code": [[203, "situation-2-a-python-package-that-contains-a-lot-of-cython-code"]], "Situation 3: a Python package that uses the NumPy or Python C API directly": [[203, "situation-3-a-python-package-that-uses-the-numpy-or-python-c-api-directly"]], "Device support": [[203, "device-support"], [209, "device-support"]], "Other longer-term approaches": [[203, "other-longer-term-approaches"]], "Further Python API standardization": [[203, "further-python-api-standardization"]], "HPy": [[203, "hpy"]], "Accuracy": [[204, "accuracy"]], "Arithmetic Operations": [[204, "arithmetic-operations"]], "Mathematical Functions": [[204, "mathematical-functions"]], "Linear Algebra": [[204, "linear-algebra"]], "Complex Numbers": [[205, "complex-numbers"]], "The Complex Plane": [[205, "the-complex-plane"]], "Branch Cuts": [[205, "branch-cuts"]], "Complex Number Ordering": [[205, "complex-number-ordering"]], "Valued-based Promotion": [[205, "valued-based-promotion"]], "Copy-view behaviour and mutability": [[206, "copy-view-behaviour-and-mutability"]], "Mutating views": [[206, null]], "Data-dependent output shapes": [[207, "data-dependent-output-shapes"]], "Data interchange mechanisms": [[208, "data-interchange-mechanisms"]], "DLPack: An in-memory tensor structure": [[208, "dlpack-an-in-memory-tensor-structure"]], "Non-supported use cases": [[208, "non-supported-use-cases"]], "Intended usage": [[209, "intended-usage"]], "Syntax for device assignment": [[209, "syntax-for-device-assignment"]], "Semantics": [[209, "semantics"]], "Out of scope for device support": [[209, "out-of-scope-for-device-support"]], "Exceptions": [[210, "exceptions"]], "Design topics & constraints": [[211, "design-topics-constraints"], [211, null]], "Lazy vs. eager execution": [[212, "lazy-vs-eager-execution"]], "Parallelism": [[213, "parallelism"]], "Static typing": [[214, "static-typing"]], "Fourier transform Functions": [[215, "fourier-transform-functions"]], "Extension name and usage": [[215, "extension-name-and-usage"], [254, "extension-name-and-usage"]], "fft": [[216, "fft"]], "fftfreq": [[217, "fftfreq"]], "fftn": [[218, "fftn"]], "fftshift": [[219, "fftshift"]], "hfft": [[220, "hfft"]], "ifft": [[221, "ifft"]], "ifftn": [[222, "ifftn"]], "ifftshift": [[223, "ifftshift"]], "ihfft": [[224, "ihfft"]], "irfft": [[225, "irfft"]], "irfftn": [[226, "irfftn"]], "rfft": [[227, "rfft"]], "rfftfreq": [[228, "rfftfreq"]], "rfftn": [[229, "rfftn"]], "cholesky": [[230, "cholesky"]], "cross": [[231, "cross"]], "det": [[232, "det"]], "diagonal": [[233, "diagonal"]], "eigh": [[234, "eigh"]], "eigvalsh": [[235, "eigvalsh"]], "inv": [[236, "inv"]], "matrix_norm": [[238, "matrix-norm"]], "matrix_power": [[239, "matrix-power"]], "matrix_rank": [[240, "matrix-rank"]], "outer": [[242, "outer"]], "pinv": [[243, "pinv"]], "qr": [[244, "qr"]], "slogdet": [[245, "slogdet"]], "solve": [[246, "solve"]], "svd": [[247, "svd"]], "svdvals": [[248, "svdvals"]], "trace": [[250, "trace"]], "vector_norm": [[252, "vector-norm"]], "Extension modules:": [[253, null]], "Linear Algebra Extension": [[254, "linear-algebra-extension"]], "Design Principles": [[254, "design-principles"]], "Future API standard evolution": [[255, "future-api-standard-evolution"]], "Scope extensions": [[255, "scope-extensions"]], "Versioning": [[255, "versioning"]], "Python array API standard": [[256, "python-array-api-standard"]], "Contents": [[256, "contents"]], "Context": [[256, null]], "API": [[256, null]], "Methodology and Usage": [[256, null]], "Other": [[256, null]], "License": [[257, "license"]], "Purpose and scope": [[258, "purpose-and-scope"]], "Introduction": [[258, "introduction"], [259, "introduction"]], "This API standard": [[258, "this-api-standard"]], "History": [[258, "history"]], "Scope (includes out-of-scope / non-goals)": [[258, "scope-includes-out-of-scope-non-goals"]], "In scope": [[258, "in-scope"]], "Out of scope": [[258, "out-of-scope"]], "Implications of in/out of scope": [[258, "implications-of-in-out-of-scope"]], "Stakeholders": [[258, "stakeholders"]], "How to read this document": [[258, "how-to-read-this-document"]], "How to adopt this API": [[258, "how-to-adopt-this-api"]], "Checking an array object for Compliance": [[258, "checking-an-array-object-for-compliance"]], "Discoverability of conforming implementations": [[258, "discoverability-of-conforming-implementations"]], "Optional feature": [[258, null]], "Conformance": [[258, "conformance"]], "Terms and Definitions": [[258, "terms-and-definitions"]], "Normative References": [[258, "normative-references"]], "Usage Data": [[259, "usage-data"]], "Design": [[259, "design"]], "Usage": [[259, "usage"]], "Use in Decision-Making": [[259, "use-in-decision-making"]], "Use cases": [[260, "use-cases"]], "Types of use cases": [[260, "types-of-use-cases"]], "Concrete use cases": [[260, "concrete-use-cases"]], "Use case 1: add hardware accelerator and distributed support to SciPy": [[260, "use-case-1-add-hardware-accelerator-and-distributed-support-to-scipy"]], "Use case 2: simplify einops by removing the backend system": [[260, "use-case-2-simplify-einops-by-removing-the-backend-system"]], "Use case 3: adding a Python API to xtensor": [[260, "use-case-3-adding-a-python-api-to-xtensor"]], "Use case 4: make JIT compilation of array computations easier and more robust": [[260, "use-case-4-make-jit-compilation-of-array-computations-easier-and-more-robust"]], "Verification - test suite": [[261, "verification-test-suite"]], "Measuring conformance": [[261, "measuring-conformance"]], "Running the tests": [[261, "running-the-tests"]]}, "indexentries": {"__array_api_version__ (in module array_api)": [[8, "array_api.__array_api_version__"]], "abs() (in module array_api)": [[9, "array_api.abs"]], "acos() (in module array_api)": [[10, "array_api.acos"]], "acosh() (in module array_api)": [[11, "array_api.acosh"]], "add() (in module array_api)": [[12, "array_api.add"]], "all() (in module array_api)": [[13, "array_api.all"]], "any() (in module array_api)": [[14, "array_api.any"]], "arange() (in module array_api)": [[15, "array_api.arange"]], "argmax() (in module array_api)": [[16, "array_api.argmax"]], "argmin() (in module array_api)": [[17, "array_api.argmin"]], "argsort() (in module array_api)": [[18, "array_api.argsort"]], "t (array property)": [[19, "array_api.array.T"]], "__abs__() (array method)": [[20, "array_api.array.__abs__"]], "__add__() (array method)": [[21, "array_api.array.__add__"]], "__and__() (array method)": [[22, "array_api.array.__and__"]], "__array_namespace__() (array method)": [[23, "array_api.array.__array_namespace__"]], "__bool__() (array method)": [[24, "array_api.array.__bool__"]], "__complex__() (array method)": [[25, "array_api.array.__complex__"]], "__dlpack__() (array method)": [[26, "array_api.array.__dlpack__"]], "__dlpack_device__() (array method)": [[27, "array_api.array.__dlpack_device__"]], "__eq__() (array method)": [[28, "array_api.array.__eq__"]], "__float__() (array method)": [[29, "array_api.array.__float__"]], "__floordiv__() (array method)": [[30, "array_api.array.__floordiv__"]], "__ge__() (array method)": [[31, "array_api.array.__ge__"]], "__getitem__() (array method)": [[32, "array_api.array.__getitem__"]], "__gt__() (array method)": [[33, "array_api.array.__gt__"]], "__index__() (array method)": [[34, "array_api.array.__index__"]], "__int__() (array method)": [[35, "array_api.array.__int__"]], "__invert__() (array method)": [[36, "array_api.array.__invert__"]], "__le__() (array method)": [[37, "array_api.array.__le__"]], "__lshift__() (array method)": [[38, "array_api.array.__lshift__"]], "__lt__() (array method)": [[39, "array_api.array.__lt__"]], "__matmul__() (array method)": [[40, "array_api.array.__matmul__"]], "__mod__() (array method)": [[41, "array_api.array.__mod__"]], "__mul__() (array method)": [[42, "array_api.array.__mul__"]], "__ne__() (array method)": [[43, "array_api.array.__ne__"]], "__neg__() (array method)": [[44, "array_api.array.__neg__"]], "__or__() (array method)": [[45, "array_api.array.__or__"]], "__pos__() (array method)": [[46, "array_api.array.__pos__"]], "__pow__() (array method)": [[47, "array_api.array.__pow__"]], "__rshift__() (array method)": [[48, "array_api.array.__rshift__"]], "__setitem__() (array method)": [[49, "array_api.array.__setitem__"]], "__sub__() (array method)": [[50, "array_api.array.__sub__"]], "__truediv__() (array method)": [[51, "array_api.array.__truediv__"]], "__xor__() (array method)": [[52, "array_api.array.__xor__"]], "device (array property)": [[53, "array_api.array.device"]], "dtype (array property)": [[54, "array_api.array.dtype"]], "mt (array property)": [[55, "array_api.array.mT"]], "ndim (array property)": [[56, "array_api.array.ndim"]], "shape (array property)": [[57, "array_api.array.shape"]], "size (array property)": [[58, "array_api.array.size"]], "to_device() (array method)": [[59, "array_api.array.to_device"]], "asarray() (in module array_api)": [[60, "array_api.asarray"]], "asin() (in module array_api)": [[61, "array_api.asin"]], "asinh() (in module array_api)": [[62, "array_api.asinh"]], "astype() (in module array_api)": [[63, "array_api.astype"]], "atan() (in module array_api)": [[64, "array_api.atan"]], "atan2() (in module array_api)": [[65, "array_api.atan2"]], "atanh() (in module array_api)": [[66, "array_api.atanh"]], "bitwise_and() (in module array_api)": [[67, "array_api.bitwise_and"]], "bitwise_invert() (in module array_api)": [[68, "array_api.bitwise_invert"]], "bitwise_left_shift() (in module array_api)": [[69, "array_api.bitwise_left_shift"]], "bitwise_or() (in module array_api)": [[70, "array_api.bitwise_or"]], "bitwise_right_shift() (in module array_api)": [[71, "array_api.bitwise_right_shift"]], "bitwise_xor() (in module array_api)": [[72, "array_api.bitwise_xor"]], "broadcast_arrays() (in module array_api)": [[73, "array_api.broadcast_arrays"]], "broadcast_to() (in module array_api)": [[74, "array_api.broadcast_to"]], "can_cast() (in module array_api)": [[75, "array_api.can_cast"]], "ceil() (in module array_api)": [[76, "array_api.ceil"]], "clip() (in module array_api)": [[77, "array_api.clip"]], "concat() (in module array_api)": [[78, "array_api.concat"]], "conj() (in module array_api)": [[79, "array_api.conj"]], "e (in module array_api.constants)": [[80, "array_api.constants.e"]], "inf (in module array_api.constants)": [[81, "array_api.constants.inf"]], "nan (in module array_api.constants)": [[82, "array_api.constants.nan"]], "newaxis (in module array_api.constants)": [[83, "array_api.constants.newaxis"]], "pi (in module array_api.constants)": [[84, "array_api.constants.pi"]], "copysign() (in module array_api)": [[85, "array_api.copysign"]], "cos() (in module array_api)": [[86, "array_api.cos"]], "cosh() (in module array_api)": [[87, "array_api.cosh"]], "cumulative_sum() (in module array_api)": [[88, "array_api.cumulative_sum"]], "__eq__() (in module array_api.data_types)": [[89, "array_api.data_types.__eq__"]], "divide() (in module array_api)": [[90, "array_api.divide"]], "empty() (in module array_api)": [[91, "array_api.empty"]], "empty_like() (in module array_api)": [[92, "array_api.empty_like"]], "equal() (in module array_api)": [[93, "array_api.equal"]], "exp() (in module array_api)": [[94, "array_api.exp"]], "expand_dims() (in module array_api)": [[95, "array_api.expand_dims"]], "expm1() (in module array_api)": [[96, "array_api.expm1"]], "eye() (in module array_api)": [[97, "array_api.eye"]], "finfo() (in module array_api)": [[98, "array_api.finfo"]], "flip() (in module array_api)": [[99, "array_api.flip"]], "floor() (in module array_api)": [[100, "array_api.floor"]], "floor_divide() (in module array_api)": [[101, "array_api.floor_divide"]], "from_dlpack() (in module array_api)": [[102, "array_api.from_dlpack"]], "full() (in module array_api)": [[103, "array_api.full"]], "full_like() (in module array_api)": [[104, "array_api.full_like"]], "greater() (in module array_api)": [[105, "array_api.greater"]], "greater_equal() (in module array_api)": [[106, "array_api.greater_equal"]], "iinfo() (in module array_api)": [[107, "array_api.iinfo"]], "imag() (in module array_api)": [[108, "array_api.imag"]], "__array_namespace_info__() (in module array_api.info)": [[109, "array_api.info.__array_namespace_info__"]], "capabilities() (in module array_api.info)": [[110, "array_api.info.capabilities"]], "default_device() (in module array_api.info)": [[111, "array_api.info.default_device"]], "default_dtypes() (in module array_api.info)": [[112, "array_api.info.default_dtypes"]], "devices() (in module array_api.info)": [[113, "array_api.info.devices"]], "dtypes() (in module array_api.info)": [[114, "array_api.info.dtypes"]], "isdtype() (in module array_api)": [[115, "array_api.isdtype"]], "isfinite() (in module array_api)": [[116, "array_api.isfinite"]], "isinf() (in module array_api)": [[117, "array_api.isinf"]], "isnan() (in module array_api)": [[118, "array_api.isnan"]], "less() (in module array_api)": [[119, "array_api.less"]], "less_equal() (in module array_api)": [[120, "array_api.less_equal"]], "linspace() (in module array_api)": [[121, "array_api.linspace"]], "log() (in module array_api)": [[122, "array_api.log"]], "log10() (in module array_api)": [[123, "array_api.log10"]], "log1p() (in module array_api)": [[124, "array_api.log1p"]], "log2() (in module array_api)": [[125, "array_api.log2"]], "logaddexp() (in module array_api)": [[126, "array_api.logaddexp"]], "logical_and() (in module array_api)": [[127, "array_api.logical_and"]], "logical_not() (in module array_api)": [[128, "array_api.logical_not"]], "logical_or() (in module array_api)": [[129, "array_api.logical_or"]], "logical_xor() (in module array_api)": [[130, "array_api.logical_xor"]], "matmul() (in module array_api)": [[131, "array_api.matmul"]], "matrix_transpose() (in module array_api)": [[132, "array_api.matrix_transpose"]], "max() (in module array_api)": [[133, "array_api.max"]], "maximum() (in module array_api)": [[134, "array_api.maximum"]], "mean() (in module array_api)": [[135, "array_api.mean"]], "meshgrid() (in module array_api)": [[136, "array_api.meshgrid"]], "min() (in module array_api)": [[137, "array_api.min"]], "minimum() (in module array_api)": [[138, "array_api.minimum"]], "moveaxis() (in module array_api)": [[139, "array_api.moveaxis"]], "multiply() (in module array_api)": [[140, "array_api.multiply"]], "negative() (in module array_api)": [[141, "array_api.negative"]], "nonzero() (in module array_api)": [[142, "array_api.nonzero"]], "not_equal() (in module array_api)": [[143, "array_api.not_equal"]], "ones() (in module array_api)": [[144, "array_api.ones"]], "ones_like() (in module array_api)": [[145, "array_api.ones_like"]], "permute_dims() (in module array_api)": [[146, "array_api.permute_dims"]], "positive() (in module array_api)": [[147, "array_api.positive"]], "pow() (in module array_api)": [[148, "array_api.pow"]], "prod() (in module array_api)": [[149, "array_api.prod"]], "real() (in module array_api)": [[150, "array_api.real"]], "remainder() (in module array_api)": [[151, "array_api.remainder"]], "reshape() (in module array_api)": [[152, "array_api.reshape"]], "result_type() (in module array_api)": [[153, "array_api.result_type"]], "roll() (in module array_api)": [[154, "array_api.roll"]], "round() (in module array_api)": [[155, "array_api.round"]], "searchsorted() (in module array_api)": [[156, "array_api.searchsorted"]], "sign() (in module array_api)": [[157, "array_api.sign"]], "signbit() (in module array_api)": [[158, "array_api.signbit"]], "sin() (in module array_api)": [[159, "array_api.sin"]], "sinh() (in module array_api)": [[160, "array_api.sinh"]], "sort() (in module array_api)": [[161, "array_api.sort"]], "sqrt() (in module array_api)": [[162, "array_api.sqrt"]], "square() (in module array_api)": [[163, "array_api.square"]], "squeeze() (in module array_api)": [[164, "array_api.squeeze"]], "stack() (in module array_api)": [[165, "array_api.stack"]], "std() (in module array_api)": [[166, "array_api.std"]], "subtract() (in module array_api)": [[167, "array_api.subtract"]], "sum() (in module array_api)": [[168, "array_api.sum"]], "take() (in module array_api)": [[169, "array_api.take"]], "tan() (in module array_api)": [[170, "array_api.tan"]], "tanh() (in module array_api)": [[171, "array_api.tanh"]], "tensordot() (in module array_api)": [[172, "array_api.tensordot"]], "tile() (in module array_api)": [[173, "array_api.tile"]], "tril() (in module array_api)": [[174, "array_api.tril"]], "triu() (in module array_api)": [[175, "array_api.triu"]], "trunc() (in module array_api)": [[176, "array_api.trunc"]], "unique_all() (in module array_api)": [[177, "array_api.unique_all"]], "unique_counts() (in module array_api)": [[178, "array_api.unique_counts"]], "unique_inverse() (in module array_api)": [[179, "array_api.unique_inverse"]], "unique_values() (in module array_api)": [[180, "array_api.unique_values"]], "unstack() (in module array_api)": [[181, "array_api.unstack"]], "var() (in module array_api)": [[182, "array_api.var"]], "vecdot() (in module array_api)": [[183, "array_api.vecdot"]], "where() (in module array_api)": [[184, "array_api.where"]], "zeros() (in module array_api)": [[185, "array_api.zeros"]], "zeros_like() (in module array_api)": [[186, "array_api.zeros_like"]], "fft() (in module array_api.fft)": [[216, "array_api.fft.fft"]], "fftfreq() (in module array_api.fft)": [[217, "array_api.fft.fftfreq"]], "fftn() (in module array_api.fft)": [[218, "array_api.fft.fftn"]], "fftshift() (in module array_api.fft)": [[219, "array_api.fft.fftshift"]], "hfft() (in module array_api.fft)": [[220, "array_api.fft.hfft"]], "ifft() (in module array_api.fft)": [[221, "array_api.fft.ifft"]], "ifftn() (in module array_api.fft)": [[222, "array_api.fft.ifftn"]], "ifftshift() (in module array_api.fft)": [[223, "array_api.fft.ifftshift"]], "ihfft() (in module array_api.fft)": [[224, "array_api.fft.ihfft"]], "irfft() (in module array_api.fft)": [[225, "array_api.fft.irfft"]], "irfftn() (in module array_api.fft)": [[226, "array_api.fft.irfftn"]], "rfft() (in module array_api.fft)": [[227, "array_api.fft.rfft"]], "rfftfreq() (in module array_api.fft)": [[228, "array_api.fft.rfftfreq"]], "rfftn() (in module array_api.fft)": [[229, "array_api.fft.rfftn"]], "cholesky() (in module array_api.linalg)": [[230, "array_api.linalg.cholesky"]], "cross() (in module array_api.linalg)": [[231, "array_api.linalg.cross"]], "det() (in module array_api.linalg)": [[232, "array_api.linalg.det"]], "diagonal() (in module array_api.linalg)": [[233, "array_api.linalg.diagonal"]], "eigh() (in module array_api.linalg)": [[234, "array_api.linalg.eigh"]], "eigvalsh() (in module array_api.linalg)": [[235, "array_api.linalg.eigvalsh"]], "inv() (in module array_api.linalg)": [[236, "array_api.linalg.inv"]], "matmul() (in module array_api.linalg)": [[237, "array_api.linalg.matmul"]], "matrix_norm() (in module array_api.linalg)": [[238, "array_api.linalg.matrix_norm"]], "matrix_power() (in module array_api.linalg)": [[239, "array_api.linalg.matrix_power"]], "matrix_rank() (in module array_api.linalg)": [[240, "array_api.linalg.matrix_rank"]], "matrix_transpose() (in module array_api.linalg)": [[241, "array_api.linalg.matrix_transpose"]], "outer() (in module array_api.linalg)": [[242, "array_api.linalg.outer"]], "pinv() (in module array_api.linalg)": [[243, "array_api.linalg.pinv"]], "qr() (in module array_api.linalg)": [[244, "array_api.linalg.qr"]], "slogdet() (in module array_api.linalg)": [[245, "array_api.linalg.slogdet"]], "solve() (in module array_api.linalg)": [[246, "array_api.linalg.solve"]], "svd() (in module array_api.linalg)": [[247, "array_api.linalg.svd"]], "svdvals() (in module array_api.linalg)": [[248, "array_api.linalg.svdvals"]], "tensordot() (in module array_api.linalg)": [[249, "array_api.linalg.tensordot"]], "trace() (in module array_api.linalg)": [[250, "array_api.linalg.trace"]], "vecdot() (in module array_api.linalg)": [[251, "array_api.linalg.vecdot"]], "vector_norm() (in module array_api.linalg)": [[252, "array_api.linalg.vector_norm"]]}})