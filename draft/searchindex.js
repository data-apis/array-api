Search.setIndex({"docnames": ["API_specification/array_object", "API_specification/broadcasting", "API_specification/constants", "API_specification/creation_functions", "API_specification/data_type_functions", "API_specification/data_types", "API_specification/elementwise_functions", "API_specification/function_and_method_signatures", "API_specification/generated/array_api.__array_api_version__", "API_specification/generated/array_api.abs", "API_specification/generated/array_api.acos", "API_specification/generated/array_api.acosh", "API_specification/generated/array_api.add", "API_specification/generated/array_api.all", "API_specification/generated/array_api.any", "API_specification/generated/array_api.arange", "API_specification/generated/array_api.argmax", "API_specification/generated/array_api.argmin", "API_specification/generated/array_api.argsort", "API_specification/generated/array_api.array.T", "API_specification/generated/array_api.array.__abs__", "API_specification/generated/array_api.array.__add__", "API_specification/generated/array_api.array.__and__", "API_specification/generated/array_api.array.__array_namespace__", "API_specification/generated/array_api.array.__bool__", "API_specification/generated/array_api.array.__complex__", "API_specification/generated/array_api.array.__dlpack__", "API_specification/generated/array_api.array.__dlpack_device__", "API_specification/generated/array_api.array.__eq__", "API_specification/generated/array_api.array.__float__", "API_specification/generated/array_api.array.__floordiv__", "API_specification/generated/array_api.array.__ge__", "API_specification/generated/array_api.array.__getitem__", "API_specification/generated/array_api.array.__gt__", "API_specification/generated/array_api.array.__index__", "API_specification/generated/array_api.array.__int__", "API_specification/generated/array_api.array.__invert__", "API_specification/generated/array_api.array.__le__", "API_specification/generated/array_api.array.__lshift__", "API_specification/generated/array_api.array.__lt__", "API_specification/generated/array_api.array.__matmul__", "API_specification/generated/array_api.array.__mod__", "API_specification/generated/array_api.array.__mul__", "API_specification/generated/array_api.array.__ne__", "API_specification/generated/array_api.array.__neg__", "API_specification/generated/array_api.array.__or__", "API_specification/generated/array_api.array.__pos__", "API_specification/generated/array_api.array.__pow__", "API_specification/generated/array_api.array.__rshift__", "API_specification/generated/array_api.array.__setitem__", "API_specification/generated/array_api.array.__sub__", "API_specification/generated/array_api.array.__truediv__", "API_specification/generated/array_api.array.__xor__", "API_specification/generated/array_api.array.device", "API_specification/generated/array_api.array.dtype", "API_specification/generated/array_api.array.mT", "API_specification/generated/array_api.array.ndim", "API_specification/generated/array_api.array.shape", "API_specification/generated/array_api.array.size", "API_specification/generated/array_api.array.to_device", "API_specification/generated/array_api.asarray", "API_specification/generated/array_api.asin", "API_specification/generated/array_api.asinh", "API_specification/generated/array_api.astype", "API_specification/generated/array_api.atan", "API_specification/generated/array_api.atan2", "API_specification/generated/array_api.atanh", "API_specification/generated/array_api.bitwise_and", "API_specification/generated/array_api.bitwise_invert", "API_specification/generated/array_api.bitwise_left_shift", "API_specification/generated/array_api.bitwise_or", "API_specification/generated/array_api.bitwise_right_shift", "API_specification/generated/array_api.bitwise_xor", "API_specification/generated/array_api.broadcast_arrays", "API_specification/generated/array_api.broadcast_to", "API_specification/generated/array_api.can_cast", "API_specification/generated/array_api.ceil", "API_specification/generated/array_api.clip", "API_specification/generated/array_api.concat", "API_specification/generated/array_api.conj", "API_specification/generated/array_api.constants.e", "API_specification/generated/array_api.constants.inf", "API_specification/generated/array_api.constants.nan", "API_specification/generated/array_api.constants.newaxis", "API_specification/generated/array_api.constants.pi", "API_specification/generated/array_api.copysign", "API_specification/generated/array_api.cos", "API_specification/generated/array_api.cosh", "API_specification/generated/array_api.count_nonzero", "API_specification/generated/array_api.cumulative_prod", "API_specification/generated/array_api.cumulative_sum", "API_specification/generated/array_api.data_types.__eq__", "API_specification/generated/array_api.diff", "API_specification/generated/array_api.divide", "API_specification/generated/array_api.empty", "API_specification/generated/array_api.empty_like", "API_specification/generated/array_api.equal", "API_specification/generated/array_api.exp", "API_specification/generated/array_api.expand_dims", "API_specification/generated/array_api.expm1", "API_specification/generated/array_api.eye", "API_specification/generated/array_api.finfo", "API_specification/generated/array_api.flip", "API_specification/generated/array_api.floor", "API_specification/generated/array_api.floor_divide", "API_specification/generated/array_api.from_dlpack", "API_specification/generated/array_api.full", "API_specification/generated/array_api.full_like", "API_specification/generated/array_api.greater", "API_specification/generated/array_api.greater_equal", "API_specification/generated/array_api.hypot", "API_specification/generated/array_api.iinfo", "API_specification/generated/array_api.imag", "API_specification/generated/array_api.info.__array_namespace_info__", "API_specification/generated/array_api.info.capabilities", "API_specification/generated/array_api.info.default_device", "API_specification/generated/array_api.info.default_dtypes", "API_specification/generated/array_api.info.devices", "API_specification/generated/array_api.info.dtypes", "API_specification/generated/array_api.isdtype", "API_specification/generated/array_api.isfinite", "API_specification/generated/array_api.isinf", "API_specification/generated/array_api.isnan", "API_specification/generated/array_api.less", "API_specification/generated/array_api.less_equal", "API_specification/generated/array_api.linspace", "API_specification/generated/array_api.log", "API_specification/generated/array_api.log10", "API_specification/generated/array_api.log1p", "API_specification/generated/array_api.log2", "API_specification/generated/array_api.logaddexp", "API_specification/generated/array_api.logical_and", "API_specification/generated/array_api.logical_not", "API_specification/generated/array_api.logical_or", "API_specification/generated/array_api.logical_xor", "API_specification/generated/array_api.matmul", "API_specification/generated/array_api.matrix_transpose", "API_specification/generated/array_api.max", "API_specification/generated/array_api.maximum", "API_specification/generated/array_api.mean", "API_specification/generated/array_api.meshgrid", "API_specification/generated/array_api.min", "API_specification/generated/array_api.minimum", "API_specification/generated/array_api.moveaxis", "API_specification/generated/array_api.multiply", "API_specification/generated/array_api.negative", "API_specification/generated/array_api.nextafter", "API_specification/generated/array_api.nonzero", "API_specification/generated/array_api.not_equal", "API_specification/generated/array_api.ones", "API_specification/generated/array_api.ones_like", "API_specification/generated/array_api.permute_dims", "API_specification/generated/array_api.positive", "API_specification/generated/array_api.pow", "API_specification/generated/array_api.prod", "API_specification/generated/array_api.real", "API_specification/generated/array_api.reciprocal", "API_specification/generated/array_api.remainder", "API_specification/generated/array_api.repeat", "API_specification/generated/array_api.reshape", "API_specification/generated/array_api.result_type", "API_specification/generated/array_api.roll", "API_specification/generated/array_api.round", "API_specification/generated/array_api.searchsorted", "API_specification/generated/array_api.sign", "API_specification/generated/array_api.signbit", "API_specification/generated/array_api.sin", "API_specification/generated/array_api.sinh", "API_specification/generated/array_api.sort", "API_specification/generated/array_api.sqrt", "API_specification/generated/array_api.square", "API_specification/generated/array_api.squeeze", "API_specification/generated/array_api.stack", "API_specification/generated/array_api.std", "API_specification/generated/array_api.subtract", "API_specification/generated/array_api.sum", "API_specification/generated/array_api.take", "API_specification/generated/array_api.take_along_axis", "API_specification/generated/array_api.tan", "API_specification/generated/array_api.tanh", "API_specification/generated/array_api.tensordot", "API_specification/generated/array_api.tile", "API_specification/generated/array_api.tril", "API_specification/generated/array_api.triu", "API_specification/generated/array_api.trunc", "API_specification/generated/array_api.unique_all", "API_specification/generated/array_api.unique_counts", "API_specification/generated/array_api.unique_inverse", "API_specification/generated/array_api.unique_values", "API_specification/generated/array_api.unstack", "API_specification/generated/array_api.var", "API_specification/generated/array_api.vecdot", "API_specification/generated/array_api.where", "API_specification/generated/array_api.zeros", "API_specification/generated/array_api.zeros_like", "API_specification/index", "API_specification/indexing", "API_specification/indexing_functions", "API_specification/inspection", "API_specification/linear_algebra_functions", "API_specification/manipulation_functions", "API_specification/searching_functions", "API_specification/set_functions", "API_specification/sorting_functions", "API_specification/statistical_functions", "API_specification/type_promotion", "API_specification/utility_functions", "API_specification/version", "assumptions", "benchmark_suite", "changelog", "design_topics/C_API", "design_topics/accuracy", "design_topics/complex_numbers", "design_topics/copies_views_and_mutation", "design_topics/data_dependent_output_shapes", "design_topics/data_interchange", "design_topics/device_support", "design_topics/exceptions", "design_topics/index", "design_topics/lazy_eager", "design_topics/parallelism", "design_topics/static_typing", "extensions/fourier_transform_functions", "extensions/generated/array_api.fft.fft", "extensions/generated/array_api.fft.fftfreq", "extensions/generated/array_api.fft.fftn", "extensions/generated/array_api.fft.fftshift", "extensions/generated/array_api.fft.hfft", "extensions/generated/array_api.fft.ifft", "extensions/generated/array_api.fft.ifftn", "extensions/generated/array_api.fft.ifftshift", "extensions/generated/array_api.fft.ihfft", "extensions/generated/array_api.fft.irfft", "extensions/generated/array_api.fft.irfftn", "extensions/generated/array_api.fft.rfft", "extensions/generated/array_api.fft.rfftfreq", "extensions/generated/array_api.fft.rfftn", "extensions/generated/array_api.linalg.cholesky", "extensions/generated/array_api.linalg.cross", "extensions/generated/array_api.linalg.det", "extensions/generated/array_api.linalg.diagonal", "extensions/generated/array_api.linalg.eigh", "extensions/generated/array_api.linalg.eigvalsh", "extensions/generated/array_api.linalg.inv", "extensions/generated/array_api.linalg.matmul", "extensions/generated/array_api.linalg.matrix_norm", "extensions/generated/array_api.linalg.matrix_power", "extensions/generated/array_api.linalg.matrix_rank", "extensions/generated/array_api.linalg.matrix_transpose", "extensions/generated/array_api.linalg.outer", "extensions/generated/array_api.linalg.pinv", "extensions/generated/array_api.linalg.qr", "extensions/generated/array_api.linalg.slogdet", "extensions/generated/array_api.linalg.solve", "extensions/generated/array_api.linalg.svd", "extensions/generated/array_api.linalg.svdvals", "extensions/generated/array_api.linalg.tensordot", "extensions/generated/array_api.linalg.trace", "extensions/generated/array_api.linalg.vecdot", "extensions/generated/array_api.linalg.vector_norm", "extensions/index", "extensions/linear_algebra_functions", "future_API_evolution", "index", "license", "purpose_and_scope", "usage_data", "use_cases", "verification_test_suite"], "filenames": ["API_specification/array_object.rst", "API_specification/broadcasting.rst", "API_specification/constants.rst", "API_specification/creation_functions.rst", "API_specification/data_type_functions.rst", "API_specification/data_types.rst", "API_specification/elementwise_functions.rst", "API_specification/function_and_method_signatures.rst", "API_specification/generated/array_api.__array_api_version__.rst", "API_specification/generated/array_api.abs.rst", "API_specification/generated/array_api.acos.rst", "API_specification/generated/array_api.acosh.rst", "API_specification/generated/array_api.add.rst", "API_specification/generated/array_api.all.rst", "API_specification/generated/array_api.any.rst", "API_specification/generated/array_api.arange.rst", "API_specification/generated/array_api.argmax.rst", "API_specification/generated/array_api.argmin.rst", "API_specification/generated/array_api.argsort.rst", "API_specification/generated/array_api.array.T.rst", "API_specification/generated/array_api.array.__abs__.rst", "API_specification/generated/array_api.array.__add__.rst", "API_specification/generated/array_api.array.__and__.rst", "API_specification/generated/array_api.array.__array_namespace__.rst", "API_specification/generated/array_api.array.__bool__.rst", "API_specification/generated/array_api.array.__complex__.rst", "API_specification/generated/array_api.array.__dlpack__.rst", "API_specification/generated/array_api.array.__dlpack_device__.rst", "API_specification/generated/array_api.array.__eq__.rst", "API_specification/generated/array_api.array.__float__.rst", "API_specification/generated/array_api.array.__floordiv__.rst", "API_specification/generated/array_api.array.__ge__.rst", "API_specification/generated/array_api.array.__getitem__.rst", "API_specification/generated/array_api.array.__gt__.rst", "API_specification/generated/array_api.array.__index__.rst", "API_specification/generated/array_api.array.__int__.rst", "API_specification/generated/array_api.array.__invert__.rst", "API_specification/generated/array_api.array.__le__.rst", "API_specification/generated/array_api.array.__lshift__.rst", "API_specification/generated/array_api.array.__lt__.rst", "API_specification/generated/array_api.array.__matmul__.rst", "API_specification/generated/array_api.array.__mod__.rst", "API_specification/generated/array_api.array.__mul__.rst", "API_specification/generated/array_api.array.__ne__.rst", "API_specification/generated/array_api.array.__neg__.rst", "API_specification/generated/array_api.array.__or__.rst", "API_specification/generated/array_api.array.__pos__.rst", "API_specification/generated/array_api.array.__pow__.rst", "API_specification/generated/array_api.array.__rshift__.rst", "API_specification/generated/array_api.array.__setitem__.rst", "API_specification/generated/array_api.array.__sub__.rst", "API_specification/generated/array_api.array.__truediv__.rst", "API_specification/generated/array_api.array.__xor__.rst", "API_specification/generated/array_api.array.device.rst", "API_specification/generated/array_api.array.dtype.rst", "API_specification/generated/array_api.array.mT.rst", "API_specification/generated/array_api.array.ndim.rst", "API_specification/generated/array_api.array.shape.rst", "API_specification/generated/array_api.array.size.rst", "API_specification/generated/array_api.array.to_device.rst", "API_specification/generated/array_api.asarray.rst", "API_specification/generated/array_api.asin.rst", "API_specification/generated/array_api.asinh.rst", "API_specification/generated/array_api.astype.rst", "API_specification/generated/array_api.atan.rst", "API_specification/generated/array_api.atan2.rst", "API_specification/generated/array_api.atanh.rst", "API_specification/generated/array_api.bitwise_and.rst", "API_specification/generated/array_api.bitwise_invert.rst", "API_specification/generated/array_api.bitwise_left_shift.rst", "API_specification/generated/array_api.bitwise_or.rst", "API_specification/generated/array_api.bitwise_right_shift.rst", "API_specification/generated/array_api.bitwise_xor.rst", "API_specification/generated/array_api.broadcast_arrays.rst", "API_specification/generated/array_api.broadcast_to.rst", "API_specification/generated/array_api.can_cast.rst", "API_specification/generated/array_api.ceil.rst", "API_specification/generated/array_api.clip.rst", "API_specification/generated/array_api.concat.rst", "API_specification/generated/array_api.conj.rst", "API_specification/generated/array_api.constants.e.rst", "API_specification/generated/array_api.constants.inf.rst", "API_specification/generated/array_api.constants.nan.rst", "API_specification/generated/array_api.constants.newaxis.rst", "API_specification/generated/array_api.constants.pi.rst", "API_specification/generated/array_api.copysign.rst", "API_specification/generated/array_api.cos.rst", "API_specification/generated/array_api.cosh.rst", "API_specification/generated/array_api.count_nonzero.rst", "API_specification/generated/array_api.cumulative_prod.rst", "API_specification/generated/array_api.cumulative_sum.rst", "API_specification/generated/array_api.data_types.__eq__.rst", "API_specification/generated/array_api.diff.rst", "API_specification/generated/array_api.divide.rst", "API_specification/generated/array_api.empty.rst", "API_specification/generated/array_api.empty_like.rst", "API_specification/generated/array_api.equal.rst", "API_specification/generated/array_api.exp.rst", "API_specification/generated/array_api.expand_dims.rst", "API_specification/generated/array_api.expm1.rst", "API_specification/generated/array_api.eye.rst", "API_specification/generated/array_api.finfo.rst", "API_specification/generated/array_api.flip.rst", "API_specification/generated/array_api.floor.rst", "API_specification/generated/array_api.floor_divide.rst", "API_specification/generated/array_api.from_dlpack.rst", "API_specification/generated/array_api.full.rst", "API_specification/generated/array_api.full_like.rst", "API_specification/generated/array_api.greater.rst", "API_specification/generated/array_api.greater_equal.rst", "API_specification/generated/array_api.hypot.rst", "API_specification/generated/array_api.iinfo.rst", "API_specification/generated/array_api.imag.rst", "API_specification/generated/array_api.info.__array_namespace_info__.rst", "API_specification/generated/array_api.info.capabilities.rst", "API_specification/generated/array_api.info.default_device.rst", "API_specification/generated/array_api.info.default_dtypes.rst", "API_specification/generated/array_api.info.devices.rst", "API_specification/generated/array_api.info.dtypes.rst", "API_specification/generated/array_api.isdtype.rst", "API_specification/generated/array_api.isfinite.rst", "API_specification/generated/array_api.isinf.rst", "API_specification/generated/array_api.isnan.rst", "API_specification/generated/array_api.less.rst", "API_specification/generated/array_api.less_equal.rst", "API_specification/generated/array_api.linspace.rst", "API_specification/generated/array_api.log.rst", "API_specification/generated/array_api.log10.rst", "API_specification/generated/array_api.log1p.rst", "API_specification/generated/array_api.log2.rst", "API_specification/generated/array_api.logaddexp.rst", "API_specification/generated/array_api.logical_and.rst", "API_specification/generated/array_api.logical_not.rst", "API_specification/generated/array_api.logical_or.rst", "API_specification/generated/array_api.logical_xor.rst", "API_specification/generated/array_api.matmul.rst", "API_specification/generated/array_api.matrix_transpose.rst", "API_specification/generated/array_api.max.rst", "API_specification/generated/array_api.maximum.rst", "API_specification/generated/array_api.mean.rst", "API_specification/generated/array_api.meshgrid.rst", "API_specification/generated/array_api.min.rst", "API_specification/generated/array_api.minimum.rst", "API_specification/generated/array_api.moveaxis.rst", "API_specification/generated/array_api.multiply.rst", "API_specification/generated/array_api.negative.rst", "API_specification/generated/array_api.nextafter.rst", "API_specification/generated/array_api.nonzero.rst", "API_specification/generated/array_api.not_equal.rst", "API_specification/generated/array_api.ones.rst", "API_specification/generated/array_api.ones_like.rst", "API_specification/generated/array_api.permute_dims.rst", "API_specification/generated/array_api.positive.rst", "API_specification/generated/array_api.pow.rst", "API_specification/generated/array_api.prod.rst", "API_specification/generated/array_api.real.rst", "API_specification/generated/array_api.reciprocal.rst", "API_specification/generated/array_api.remainder.rst", "API_specification/generated/array_api.repeat.rst", "API_specification/generated/array_api.reshape.rst", "API_specification/generated/array_api.result_type.rst", "API_specification/generated/array_api.roll.rst", "API_specification/generated/array_api.round.rst", "API_specification/generated/array_api.searchsorted.rst", "API_specification/generated/array_api.sign.rst", "API_specification/generated/array_api.signbit.rst", "API_specification/generated/array_api.sin.rst", "API_specification/generated/array_api.sinh.rst", "API_specification/generated/array_api.sort.rst", "API_specification/generated/array_api.sqrt.rst", "API_specification/generated/array_api.square.rst", "API_specification/generated/array_api.squeeze.rst", "API_specification/generated/array_api.stack.rst", "API_specification/generated/array_api.std.rst", "API_specification/generated/array_api.subtract.rst", "API_specification/generated/array_api.sum.rst", "API_specification/generated/array_api.take.rst", "API_specification/generated/array_api.take_along_axis.rst", "API_specification/generated/array_api.tan.rst", "API_specification/generated/array_api.tanh.rst", "API_specification/generated/array_api.tensordot.rst", "API_specification/generated/array_api.tile.rst", "API_specification/generated/array_api.tril.rst", "API_specification/generated/array_api.triu.rst", "API_specification/generated/array_api.trunc.rst", "API_specification/generated/array_api.unique_all.rst", "API_specification/generated/array_api.unique_counts.rst", "API_specification/generated/array_api.unique_inverse.rst", "API_specification/generated/array_api.unique_values.rst", "API_specification/generated/array_api.unstack.rst", "API_specification/generated/array_api.var.rst", "API_specification/generated/array_api.vecdot.rst", "API_specification/generated/array_api.where.rst", "API_specification/generated/array_api.zeros.rst", "API_specification/generated/array_api.zeros_like.rst", "API_specification/index.rst", "API_specification/indexing.rst", "API_specification/indexing_functions.rst", "API_specification/inspection.rst", "API_specification/linear_algebra_functions.rst", "API_specification/manipulation_functions.rst", "API_specification/searching_functions.rst", "API_specification/set_functions.rst", "API_specification/sorting_functions.rst", "API_specification/statistical_functions.rst", "API_specification/type_promotion.rst", "API_specification/utility_functions.rst", "API_specification/version.rst", "assumptions.md", "benchmark_suite.md", "changelog.rst", "design_topics/C_API.rst", "design_topics/accuracy.rst", "design_topics/complex_numbers.rst", "design_topics/copies_views_and_mutation.rst", "design_topics/data_dependent_output_shapes.rst", "design_topics/data_interchange.rst", "design_topics/device_support.rst", "design_topics/exceptions.rst", "design_topics/index.rst", "design_topics/lazy_eager.rst", "design_topics/parallelism.rst", "design_topics/static_typing.rst", "extensions/fourier_transform_functions.rst", "extensions/generated/array_api.fft.fft.rst", "extensions/generated/array_api.fft.fftfreq.rst", "extensions/generated/array_api.fft.fftn.rst", "extensions/generated/array_api.fft.fftshift.rst", "extensions/generated/array_api.fft.hfft.rst", "extensions/generated/array_api.fft.ifft.rst", "extensions/generated/array_api.fft.ifftn.rst", "extensions/generated/array_api.fft.ifftshift.rst", "extensions/generated/array_api.fft.ihfft.rst", "extensions/generated/array_api.fft.irfft.rst", "extensions/generated/array_api.fft.irfftn.rst", "extensions/generated/array_api.fft.rfft.rst", "extensions/generated/array_api.fft.rfftfreq.rst", "extensions/generated/array_api.fft.rfftn.rst", "extensions/generated/array_api.linalg.cholesky.rst", "extensions/generated/array_api.linalg.cross.rst", "extensions/generated/array_api.linalg.det.rst", "extensions/generated/array_api.linalg.diagonal.rst", "extensions/generated/array_api.linalg.eigh.rst", "extensions/generated/array_api.linalg.eigvalsh.rst", "extensions/generated/array_api.linalg.inv.rst", "extensions/generated/array_api.linalg.matmul.rst", "extensions/generated/array_api.linalg.matrix_norm.rst", "extensions/generated/array_api.linalg.matrix_power.rst", "extensions/generated/array_api.linalg.matrix_rank.rst", "extensions/generated/array_api.linalg.matrix_transpose.rst", "extensions/generated/array_api.linalg.outer.rst", "extensions/generated/array_api.linalg.pinv.rst", "extensions/generated/array_api.linalg.qr.rst", "extensions/generated/array_api.linalg.slogdet.rst", "extensions/generated/array_api.linalg.solve.rst", "extensions/generated/array_api.linalg.svd.rst", "extensions/generated/array_api.linalg.svdvals.rst", "extensions/generated/array_api.linalg.tensordot.rst", "extensions/generated/array_api.linalg.trace.rst", "extensions/generated/array_api.linalg.vecdot.rst", "extensions/generated/array_api.linalg.vector_norm.rst", "extensions/index.rst", "extensions/linear_algebra_functions.rst", "future_API_evolution.md", "index.rst", "license.rst", "purpose_and_scope.md", "usage_data.md", "use_cases.md", "verification_test_suite.md"], "titles": ["Array object", "Broadcasting", "Constants", "Creation Functions", "Data Type Functions", "Data Types", "Element-wise Functions", "Function and method signatures", "__array_api_version__", "abs", "acos", "acosh", "add", "all", "any", "arange", "argmax", "argmin", "argsort", "T", "__abs__", "__add__", "__and__", "__array_namespace__", "__bool__", "__complex__", "__dlpack__", "__dlpack_device__", "__eq__", "__float__", "__floordiv__", "__ge__", "__getitem__", "__gt__", "__index__", "__int__", "__invert__", "__le__", "__lshift__", "__lt__", "__matmul__", "__mod__", "__mul__", "__ne__", "__neg__", "__or__", "__pos__", "__pow__", "__rshift__", "__setitem__", "__sub__", "__truediv__", "__xor__", "device", "dtype", "mT", "ndim", "shape", "size", "to_device", "asarray", "asin", "asinh", "astype", "atan", "atan2", "atanh", "bitwise_and", "bitwise_invert", "bitwise_left_shift", "bitwise_or", "bitwise_right_shift", "bitwise_xor", "broadcast_arrays", "broadcast_to", "can_cast", "ceil", "clip", "concat", "conj", "e", "inf", "nan", "newaxis", "pi", "copysign", "cos", "cosh", "count_nonzero", "cumulative_prod", "cumulative_sum", "__eq__", "diff", "divide", "empty", "empty_like", "equal", "exp", "expand_dims", "expm1", "eye", "finfo", "flip", "floor", "floor_divide", "from_dlpack", "full", "full_like", "greater", "greater_equal", "hypot", "iinfo", "imag", "__array_namespace_info__", "capabilities", "default_device", "default_dtypes", "devices", "dtypes", "isdtype", "isfinite", "isinf", "isnan", "less", "less_equal", "linspace", "log", "log10", "log1p", "log2", "logaddexp", "logical_and", "logical_not", "logical_or", "logical_xor", "matmul", "matrix_transpose", "max", "maximum", "mean", "meshgrid", "min", "minimum", "moveaxis", "multiply", "negative", "nextafter", "nonzero", "not_equal", "ones", "ones_like", "permute_dims", "positive", "pow", "prod", "real", "reciprocal", "remainder", "repeat", "reshape", "result_type", "roll", "round", "searchsorted", "sign", "signbit", "sin", "sinh", "sort", "sqrt", "square", "squeeze", "stack", "std", "subtract", "sum", "take", "take_along_axis", "tan", "tanh", "tensordot", "tile", "tril", "triu", "trunc", "unique_all", "unique_counts", "unique_inverse", "unique_values", "unstack", "var", "vecdot", "where", "zeros", "zeros_like", "API specification", "Indexing", "Indexing Functions", "Inspection", "Linear Algebra Functions", "Manipulation Functions", "Searching Functions", "Set Functions", "Sorting Functions", "Statistical Functions", "Type Promotion Rules", "Utility Functions", "Version", "Assumptions", "Benchmark suite", "Changelog per API standard version", "C API", "Accuracy", "Complex Numbers", "Copy-view behaviour and mutability", "Data-dependent output shapes", "Data interchange mechanisms", "Device support", "Exceptions", "Design topics &amp; constraints", "Lazy vs. eager execution", "Parallelism", "Static typing", "Fourier transform Functions", "fft", "fftfreq", "fftn", "fftshift", "hfft", "ifft", "ifftn", "ifftshift", "ihfft", "irfft", "irfftn", "rfft", "rfftfreq", "rfftn", "cholesky", "cross", "det", "diagonal", "eigh", "eigvalsh", "inv", "matmul", "matrix_norm", "matrix_power", "matrix_rank", "matrix_transpose", "outer", "pinv", "qr", "slogdet", "solve", "svd", "svdvals", "tensordot", "trace", "vecdot", "vector_norm", "Extensions", "Linear Algebra Extension", "Future API standard evolution", "Python array API standard", "License", "Purpose and scope", "Usage Data", "Use cases", "Verification - test suite"], "terms": {"api": [0, 1, 5, 7, 8, 23, 26, 63, 105, 113, 114, 118, 119, 196, 205, 208, 212, 213, 214, 216, 217, 218, 219, 220, 221, 222, 261, 265, 267, 269], "specif": [0, 1, 2, 3, 4, 5, 6, 8, 19, 23, 26, 49, 51, 59, 63, 75, 78, 93, 104, 114, 116, 118, 119, 125, 131, 132, 133, 134, 137, 138, 139, 141, 142, 153, 158, 160, 163, 172, 173, 176, 177, 180, 185, 186, 190, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 210, 211, 212, 213, 214, 215, 216, 217, 218, 220, 222, 223, 242, 243, 261, 262, 263, 264, 266, 267, 268, 269], "A": [0, 1, 2, 3, 4, 5, 7, 13, 14, 26, 57, 92, 100, 105, 119, 158, 172, 189, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 211, 214, 216, 217, 220, 221, 222, 223, 224, 226, 228, 229, 230, 232, 233, 234, 235, 237, 251, 254, 262, 265, 266, 267, 268], "conform": [0, 2, 3, 4, 5, 8, 9, 16, 17, 18, 31, 33, 37, 39, 59, 60, 75, 92, 99, 108, 109, 110, 114, 118, 119, 123, 124, 125, 128, 137, 138, 141, 142, 153, 158, 160, 163, 168, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 210, 212, 213, 216, 223, 262], "implement": [0, 2, 3, 4, 5, 8, 9, 10, 11, 16, 17, 18, 20, 23, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 37, 39, 40, 41, 43, 44, 47, 49, 51, 59, 60, 61, 62, 63, 64, 65, 66, 77, 79, 86, 87, 89, 90, 92, 93, 96, 97, 99, 104, 105, 106, 107, 108, 109, 110, 114, 119, 123, 124, 125, 126, 127, 128, 129, 135, 137, 138, 139, 141, 142, 144, 145, 147, 148, 153, 154, 155, 156, 157, 158, 160, 163, 166, 167, 168, 170, 173, 175, 176, 178, 179, 185, 186, 187, 188, 190, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 210, 211, 212, 213, 214, 215, 216, 217, 218, 220, 222, 223, 226, 227, 230, 231, 234, 237, 238, 242, 243, 252, 254, 258, 261, 262, 263, 267, 268], "standard": [0, 2, 3, 4, 5, 7, 26, 101, 105, 119, 127, 129, 173, 179, 190, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 212, 213, 214, 216, 217, 218, 220, 221, 222, 261, 262, 265, 267, 268], "must": [0, 1, 2, 3, 4, 5, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 85, 86, 87, 88, 89, 90, 92, 93, 94, 95, 96, 97, 98, 99, 100, 102, 103, 104, 105, 106, 107, 108, 109, 110, 112, 114, 116, 117, 118, 119, 120, 121, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 210, 212, 213, 214, 216, 218, 220, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 246, 247, 248, 250, 251, 252, 253, 254, 255, 256, 258, 260, 261, 262, 263, 266, 267], "provid": [0, 2, 3, 4, 5, 13, 14, 26, 59, 89, 90, 92, 98, 102, 105, 117, 119, 140, 143, 154, 158, 160, 172, 173, 175, 176, 177, 189, 190, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 210, 211, 213, 214, 216, 217, 218, 221, 222, 223, 224, 226, 229, 230, 233, 234, 235, 237, 247, 258, 261, 262, 263, 265, 266, 267, 268], "support": [0, 1, 2, 3, 4, 5, 7, 9, 10, 11, 12, 13, 14, 16, 17, 18, 20, 21, 24, 26, 29, 31, 32, 33, 35, 37, 39, 40, 42, 43, 44, 46, 47, 49, 50, 51, 53, 57, 59, 60, 61, 62, 63, 64, 66, 75, 86, 87, 89, 90, 91, 92, 93, 96, 97, 99, 100, 101, 104, 105, 106, 107, 108, 109, 110, 114, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 131, 132, 133, 134, 135, 137, 138, 140, 141, 142, 144, 145, 147, 148, 149, 150, 152, 153, 154, 158, 160, 162, 164, 166, 167, 168, 169, 170, 174, 175, 176, 178, 179, 180, 185, 186, 187, 188, 191, 192, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 208, 212, 213, 214, 219, 222, 223, 238, 239, 240, 242, 243, 244, 246, 247, 248, 250, 251, 252, 253, 254, 255, 256, 258, 260, 261, 262, 266, 267], "an": [0, 1, 5, 7, 9, 10, 11, 12, 13, 14, 15, 18, 19, 20, 21, 22, 23, 26, 28, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 83, 85, 86, 87, 89, 90, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 117, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 196, 203, 205, 208, 210, 211, 212, 213, 214, 215, 217, 218, 220, 221, 222, 224, 225, 226, 228, 229, 230, 232, 233, 234, 235, 236, 237, 238, 239, 241, 242, 243, 244, 246, 247, 248, 251, 252, 253, 254, 255, 256, 258, 260, 261, 262, 263, 265, 267, 268], "have": [0, 1, 2, 5, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 55, 57, 58, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 85, 86, 87, 88, 89, 90, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 106, 107, 108, 109, 110, 111, 112, 114, 116, 118, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 196, 205, 208, 210, 211, 213, 214, 217, 220, 222, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 246, 247, 248, 250, 251, 252, 253, 254, 255, 256, 258, 260, 262, 263, 266, 267, 268], "follow": [0, 1, 2, 3, 4, 5, 7, 10, 11, 12, 26, 44, 49, 61, 62, 64, 66, 89, 90, 92, 93, 101, 104, 106, 111, 113, 114, 116, 118, 119, 126, 128, 144, 145, 153, 157, 162, 169, 180, 185, 186, 187, 188, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 208, 210, 212, 213, 215, 216, 217, 218, 223, 224, 226, 228, 229, 230, 232, 233, 234, 235, 237, 246, 252, 260, 262, 263, 265, 266, 267, 268], "furthermor": [0, 266, 269], "minimum": [0, 9, 17, 20, 44, 137, 141, 145, 195, 210, 212], "rank": [0, 1, 13, 14, 92, 98, 140, 143, 147, 163, 172, 176, 177, 180, 181, 189, 191, 196, 210, 224, 226, 228, 229, 230, 232, 233, 234, 235, 237, 239, 246, 248, 252, 254, 258, 260, 266], "i": [0, 1, 2, 5, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 23, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 37, 39, 40, 41, 42, 43, 44, 47, 49, 51, 55, 57, 59, 60, 61, 62, 63, 64, 65, 66, 69, 71, 74, 75, 76, 77, 78, 79, 83, 85, 86, 87, 88, 89, 90, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 112, 116, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 135, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 203, 205, 208, 209, 210, 212, 213, 214, 216, 217, 218, 220, 221, 222, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 246, 247, 248, 250, 251, 252, 253, 254, 255, 256, 258, 260, 261, 262, 263, 265, 266, 267, 268, 269], "e": [0, 1, 2, 5, 7, 9, 10, 11, 18, 19, 20, 26, 32, 40, 43, 47, 49, 51, 55, 57, 62, 63, 65, 66, 69, 71, 76, 77, 78, 86, 87, 89, 90, 92, 93, 96, 97, 98, 103, 104, 105, 110, 112, 118, 119, 125, 126, 127, 128, 129, 135, 137, 139, 140, 141, 143, 144, 145, 147, 148, 149, 150, 152, 153, 154, 155, 157, 158, 160, 162, 163, 165, 166, 167, 168, 169, 171, 172, 173, 175, 176, 177, 178, 179, 180, 181, 185, 186, 187, 188, 190, 195, 196, 203, 205, 210, 211, 212, 213, 214, 215, 216, 217, 220, 224, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 239, 242, 243, 246, 248, 251, 253, 254, 255, 256, 258, 260, 261, 262, 263, 266, 267, 268], "number": [0, 1, 5, 9, 10, 11, 12, 13, 14, 16, 17, 18, 25, 26, 31, 32, 33, 35, 37, 39, 44, 56, 58, 60, 61, 62, 63, 64, 65, 66, 73, 76, 79, 82, 87, 88, 89, 90, 92, 93, 96, 97, 98, 99, 100, 101, 103, 104, 106, 108, 109, 110, 111, 112, 114, 120, 121, 123, 124, 125, 126, 128, 137, 138, 139, 140, 141, 142, 143, 144, 145, 147, 148, 149, 150, 151, 153, 154, 155, 157, 158, 160, 161, 162, 163, 164, 165, 167, 168, 169, 170, 172, 173, 175, 176, 177, 179, 180, 181, 184, 185, 186, 189, 190, 191, 196, 203, 205, 216, 219, 224, 226, 228, 229, 230, 232, 233, 234, 235, 237, 238, 242, 243, 244, 248, 252, 253, 254, 255, 258, 262, 266, 267], "dimens": [0, 1, 13, 14, 16, 17, 19, 32, 40, 55, 56, 57, 58, 78, 88, 89, 90, 92, 98, 102, 114, 135, 136, 137, 139, 141, 143, 147, 151, 154, 158, 159, 161, 171, 172, 173, 175, 176, 177, 180, 181, 182, 183, 185, 186, 187, 188, 189, 190, 191, 196, 205, 224, 226, 227, 228, 229, 230, 232, 233, 234, 235, 237, 238, 239, 240, 241, 242, 243, 244, 246, 247, 248, 251, 252, 253, 254, 255, 256, 258, 260, 266], "0": [0, 1, 5, 9, 10, 11, 12, 15, 24, 25, 26, 29, 32, 35, 38, 48, 57, 61, 62, 63, 64, 65, 66, 69, 71, 76, 78, 85, 86, 87, 93, 96, 97, 98, 99, 100, 101, 103, 104, 110, 126, 127, 128, 129, 137, 138, 139, 141, 142, 144, 146, 151, 153, 154, 156, 157, 162, 163, 164, 165, 166, 167, 169, 172, 173, 175, 178, 179, 180, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 196, 203, 205, 213, 214, 225, 227, 236, 241, 246, 253, 255, 256, 258, 260, 266, 268], "1": [0, 1, 7, 10, 11, 13, 14, 15, 18, 25, 26, 27, 29, 32, 35, 40, 61, 62, 63, 64, 65, 66, 85, 86, 87, 89, 90, 92, 97, 98, 99, 100, 101, 104, 125, 126, 127, 128, 129, 135, 149, 150, 151, 153, 154, 156, 158, 159, 163, 164, 165, 168, 172, 173, 176, 177, 178, 179, 180, 181, 182, 183, 190, 191, 196, 213, 214, 221, 224, 225, 226, 228, 229, 230, 232, 233, 234, 235, 236, 237, 239, 242, 244, 246, 254, 255, 256, 259, 260], "2": [0, 1, 5, 7, 9, 10, 11, 26, 27, 40, 61, 62, 64, 65, 66, 80, 86, 87, 93, 126, 128, 129, 135, 167, 170, 178, 179, 180, 181, 196, 213, 214, 222, 225, 228, 232, 233, 234, 235, 236, 237, 246, 248, 251, 252, 253, 254, 255, 256, 257, 258, 260], "3": [0, 1, 5, 7, 27, 84, 176, 181, 208, 213, 214, 217, 239], "4": [0, 1, 5, 10, 11, 27, 62, 65, 126, 128, 181, 196, 221, 267], "explicitli": [0, 26, 40, 63, 114, 135, 176, 180, 196, 208, 210, 238, 242, 243, 252, 254, 262, 266, 268], "document": [0, 5, 7, 59, 104, 119, 158, 198, 203, 211, 213, 216, 218, 261, 263, 265, 267, 268, 269], "maximum": [0, 1, 16, 26, 114, 125, 137, 141, 195, 210, 212, 246], "n": [0, 1, 13, 14, 32, 40, 55, 86, 89, 90, 92, 98, 125, 135, 136, 139, 140, 143, 147, 151, 154, 158, 163, 172, 173, 175, 178, 179, 180, 181, 182, 183, 189, 190, 191, 196, 210, 224, 225, 226, 228, 229, 230, 232, 233, 234, 235, 236, 237, 238, 239, 241, 242, 243, 244, 246, 247, 248, 250, 251, 252, 255, 256, 258, 260, 266], "zero": [0, 5, 13, 14, 16, 17, 24, 25, 29, 30, 32, 34, 35, 40, 41, 47, 63, 65, 69, 88, 89, 90, 93, 98, 99, 100, 104, 110, 128, 131, 132, 133, 134, 135, 137, 138, 139, 140, 141, 142, 144, 147, 149, 150, 153, 154, 157, 163, 165, 173, 175, 176, 182, 183, 184, 185, 186, 187, 188, 190, 191, 194, 195, 196, 203, 205, 210, 211, 212, 213, 216, 224, 226, 227, 228, 229, 230, 232, 233, 234, 235, 237, 240, 247, 248, 251, 252, 253, 260, 268], "dimension": [0, 13, 14, 15, 16, 17, 19, 24, 25, 29, 32, 34, 35, 40, 88, 89, 90, 100, 125, 135, 137, 139, 140, 141, 147, 154, 158, 163, 173, 175, 176, 177, 185, 186, 187, 188, 190, 191, 196, 205, 210, 222, 224, 226, 228, 229, 230, 232, 233, 234, 235, 237, 239, 240, 243, 244, 248, 250, 251, 260, 262, 266], "apart": 0, "from": [0, 5, 13, 14, 15, 19, 26, 32, 44, 59, 60, 63, 75, 78, 89, 90, 92, 95, 102, 104, 105, 106, 107, 110, 125, 126, 128, 139, 140, 145, 150, 153, 154, 159, 160, 169, 171, 173, 175, 176, 177, 179, 185, 187, 190, 191, 192, 194, 196, 205, 208, 210, 211, 212, 213, 216, 217, 218, 220, 224, 226, 228, 229, 230, 232, 233, 234, 235, 237, 239, 242, 253, 255, 258, 262, 263, 265, 266, 267, 268, 269], "ndim": [0, 191, 195, 239, 252, 255, 256], "devic": [0, 5, 15, 26, 27, 59, 60, 63, 75, 94, 95, 100, 105, 106, 107, 113, 115, 116, 118, 125, 149, 150, 158, 160, 182, 183, 193, 194, 195, 196, 198, 210, 216, 219, 225, 236, 252, 262, 266, 268], "dtype": [0, 5, 15, 26, 60, 63, 73, 75, 89, 90, 91, 94, 95, 100, 101, 105, 106, 107, 111, 113, 119, 125, 149, 150, 154, 160, 175, 193, 194, 195, 205, 208, 210, 216, 222, 225, 236, 258, 266, 267, 268], "all": [0, 5, 15, 19, 23, 26, 60, 63, 75, 87, 93, 100, 102, 105, 114, 118, 144, 160, 161, 167, 179, 181, 182, 183, 189, 191, 195, 196, 208, 210, 211, 213, 214, 215, 216, 217, 218, 220, 224, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 239, 251, 253, 254, 260, 261, 262, 265, 266, 268, 269], "thi": [0, 1, 5, 7, 15, 19, 26, 32, 34, 58, 59, 63, 71, 75, 78, 99, 104, 105, 110, 114, 118, 119, 125, 128, 131, 132, 133, 134, 139, 147, 153, 157, 158, 160, 172, 173, 176, 177, 185, 186, 187, 188, 190, 195, 196, 203, 205, 208, 210, 211, 212, 213, 214, 215, 216, 217, 218, 220, 221, 222, 223, 224, 226, 227, 229, 230, 233, 234, 235, 237, 252, 253, 254, 255, 261, 262, 263, 265, 267, 268, 269], "return": [0, 5, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 198, 203, 210, 211, 212, 214, 216, 217, 220, 222, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 246, 247, 248, 250, 251, 252, 253, 254, 255, 256, 258, 260, 262, 266, 268], "tupl": [0, 1, 13, 14, 26, 27, 32, 49, 57, 74, 78, 88, 94, 102, 106, 118, 119, 137, 139, 141, 143, 147, 149, 151, 154, 159, 161, 171, 172, 173, 175, 180, 181, 185, 186, 187, 189, 190, 193, 196, 208, 242, 252, 253, 255, 257, 260, 266], "includ": [0, 1, 7, 9, 13, 14, 15, 16, 17, 20, 21, 23, 28, 30, 40, 41, 42, 43, 47, 51, 88, 89, 90, 110, 114, 118, 119, 121, 125, 135, 137, 139, 141, 154, 158, 169, 173, 175, 190, 195, 196, 205, 210, 211, 212, 213, 214, 215, 216, 217, 221, 246, 260, 262, 263, 265, 267, 268], "those": [0, 5, 7, 15, 23, 88, 89, 90, 93, 116, 118, 144, 147, 154, 158, 175, 205, 210, 213, 214, 217, 218, 220, 252, 255, 256, 258, 261, 262, 263, 266, 267, 268], "mean": [0, 26, 195, 208, 214, 216, 217, 222, 263, 266], "var": [0, 195], "std": [0, 195], "which": [0, 1, 5, 7, 8, 13, 14, 15, 16, 17, 18, 19, 26, 30, 40, 41, 44, 59, 60, 63, 75, 77, 78, 83, 88, 89, 90, 92, 94, 95, 98, 100, 101, 102, 104, 105, 106, 107, 110, 111, 114, 116, 117, 118, 125, 135, 137, 139, 141, 145, 147, 149, 150, 154, 157, 158, 160, 161, 163, 168, 172, 173, 175, 176, 177, 178, 182, 183, 185, 186, 187, 188, 189, 190, 191, 193, 194, 196, 210, 211, 212, 213, 214, 215, 216, 217, 218, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 239, 246, 254, 255, 256, 258, 260, 261, 262, 263, 266, 267, 268], "some": [0, 99, 104, 116, 118, 128, 160, 196, 211, 212, 213, 214, 217, 222, 266, 268, 269], "common": [0, 196, 205, 208, 217, 220, 221, 262, 266, 267, 268], "librari": [0, 5, 7, 26, 51, 57, 58, 59, 60, 63, 75, 93, 99, 104, 105, 114, 116, 118, 119, 125, 128, 131, 132, 133, 134, 137, 138, 139, 141, 142, 147, 158, 163, 173, 179, 185, 186, 187, 188, 190, 195, 196, 208, 210, 211, 212, 213, 214, 215, 216, 217, 218, 220, 221, 222, 238, 242, 243, 252, 254, 261, 262, 263, 266, 267, 268, 269], "g": [0, 5, 9, 19, 20, 26, 47, 51, 57, 77, 89, 90, 92, 93, 105, 110, 112, 118, 119, 125, 137, 141, 144, 147, 154, 155, 158, 160, 162, 175, 181, 185, 186, 187, 188, 196, 203, 205, 210, 211, 212, 213, 214, 215, 216, 217, 220, 228, 232, 233, 234, 235, 237, 242, 243, 246, 253, 255, 256, 258, 260, 261, 262, 263, 266, 267, 268], "numpi": [0, 19, 63, 139, 196, 208, 213, 214, 216, 217, 262, 266, 267, 268, 269], "scalar": [0, 2, 49, 60, 160, 192, 195, 196, 210, 220, 260, 268], "valu": [0, 1, 2, 5, 7, 9, 10, 11, 12, 15, 16, 17, 18, 20, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 37, 39, 41, 43, 49, 51, 57, 58, 60, 61, 62, 63, 64, 65, 66, 76, 77, 78, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 96, 97, 99, 100, 101, 103, 104, 106, 107, 108, 109, 110, 114, 116, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 137, 138, 139, 141, 142, 144, 146, 147, 148, 149, 153, 154, 157, 158, 162, 163, 164, 165, 166, 167, 168, 169, 173, 175, 176, 177, 178, 179, 184, 185, 186, 187, 188, 190, 191, 192, 193, 195, 203, 205, 208, 210, 212, 214, 215, 216, 220, 222, 225, 228, 232, 233, 234, 235, 236, 237, 238, 242, 243, 244, 246, 247, 248, 251, 252, 253, 254, 255, 256, 258, 260, 262, 266, 268], "rational": [0, 7, 89, 90, 154, 175, 196, 216, 217, 258, 261, 263, 266], "alwai": [0, 12, 26, 42, 60, 63, 101, 105, 144, 159, 196, 208, 213, 214, 217, 242], "necessari": [0, 26, 60, 93, 105, 144, 159, 181, 196, 214, 266], "acceler": [0, 5, 110, 158, 208, 212, 216], "where": [0, 1, 7, 13, 14, 15, 26, 32, 47, 57, 65, 86, 87, 92, 93, 97, 99, 100, 104, 106, 107, 127, 128, 129, 140, 144, 147, 151, 153, 158, 163, 164, 166, 167, 172, 173, 176, 177, 178, 179, 181, 189, 190, 191, 195, 196, 205, 211, 213, 216, 217, 220, 224, 226, 228, 229, 230, 232, 233, 234, 235, 237, 238, 239, 242, 243, 244, 246, 248, 251, 252, 253, 254, 255, 256, 258, 262, 266, 267, 268], "non": [0, 1, 7, 13, 14, 16, 17, 63, 88, 131, 132, 133, 134, 137, 139, 141, 147, 154, 173, 180, 190, 191, 196, 205, 210, 211, 217, 224, 226, 229, 230, 233, 234, 235, 237, 239, 240, 242, 246, 248, 255, 260, 268], "could": [0, 26, 185, 186, 187, 188, 208, 214, 221, 262, 266, 268], "forc": 0, "synchron": [0, 26, 59, 158, 266], "delai": [0, 24, 25, 29, 34, 35, 208, 220, 266], "execut": [0, 205, 208, 217, 219, 221, 266, 268], "model": [0, 57, 58, 93, 144, 213, 220, 268], "repres": [0, 8, 11, 12, 23, 24, 25, 26, 29, 34, 35, 62, 66, 87, 93, 104, 140, 144, 167, 178, 179, 210, 212, 216, 217, 253, 267, 268], "futur": [0, 26, 105, 209, 213, 214, 217, 221, 222, 242, 243, 264, 266, 268], "python": [0, 2, 5, 7, 24, 25, 26, 29, 32, 34, 35, 49, 60, 104, 105, 157, 192, 195, 196, 208, 210, 213, 216, 218, 220, 221, 222, 263, 265, 266, 267], "x": [0, 1, 5, 7, 9, 10, 11, 13, 14, 16, 17, 18, 20, 26, 32, 61, 62, 63, 64, 65, 66, 68, 74, 76, 77, 79, 85, 86, 87, 88, 89, 90, 92, 95, 97, 98, 99, 102, 103, 105, 107, 112, 120, 121, 122, 126, 127, 128, 129, 132, 136, 137, 139, 141, 143, 145, 147, 150, 151, 152, 154, 155, 156, 158, 159, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 175, 176, 177, 178, 179, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 194, 196, 213, 214, 222, 223, 224, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 238, 240, 241, 242, 243, 244, 246, 247, 248, 249, 251, 252, 253, 254, 255, 256, 258, 260, 262, 266, 268], "__pos__": [0, 195, 210], "po": 0, "__neg__": [0, 195, 210], "neg": [0, 13, 14, 15, 44, 47, 65, 78, 89, 90, 92, 93, 98, 100, 102, 104, 121, 126, 128, 144, 153, 157, 161, 165, 169, 176, 177, 180, 191, 195, 196, 210, 213, 224, 226, 228, 229, 230, 232, 233, 234, 235, 237, 239, 260, 266], "x1": [0, 7, 12, 40, 65, 67, 69, 70, 71, 72, 85, 93, 96, 104, 108, 109, 110, 123, 124, 130, 131, 133, 134, 135, 138, 142, 144, 146, 148, 153, 157, 163, 174, 180, 191, 192, 210, 239, 245, 250, 254, 257, 259], "x2": [0, 7, 12, 40, 65, 67, 69, 70, 71, 72, 85, 93, 96, 104, 108, 109, 110, 123, 124, 130, 131, 133, 134, 135, 138, 142, 144, 146, 148, 153, 157, 163, 174, 180, 191, 192, 210, 239, 245, 250, 254, 257, 259], "__add__": [0, 50, 195, 210], "add": [0, 7, 21, 90, 174, 175, 195, 196, 210, 211, 212, 217, 258], "__sub__": [0, 195, 210], "sub": [0, 196], "__mul__": [0, 195, 210], "mul": 0, "__truediv__": [0, 195, 210], "truediv": 0, "__floordiv__": [0, 195], "floordiv": 0, "__mod__": [0, 195], "mod": 0, "__pow__": [0, 195, 210], "pow": [0, 47, 195, 210, 212], "should": [0, 1, 5, 7, 9, 10, 11, 12, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 50, 51, 52, 55, 57, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 76, 77, 85, 86, 87, 89, 90, 92, 93, 97, 98, 99, 101, 103, 104, 105, 108, 109, 110, 112, 116, 118, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 137, 138, 139, 140, 141, 142, 144, 145, 146, 152, 153, 154, 156, 157, 159, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 173, 174, 175, 176, 178, 179, 180, 182, 183, 184, 185, 186, 187, 188, 190, 191, 192, 196, 203, 210, 211, 212, 213, 216, 217, 218, 222, 224, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 238, 239, 240, 242, 243, 244, 246, 247, 248, 251, 252, 253, 254, 255, 256, 258, 260, 261, 262, 266, 268, 269], "defin": [0, 5, 12, 23, 30, 32, 41, 49, 60, 65, 79, 89, 90, 92, 93, 104, 106, 107, 118, 125, 137, 138, 139, 141, 142, 143, 144, 155, 157, 160, 164, 169, 170, 173, 176, 182, 183, 190, 191, 195, 198, 203, 210, 212, 213, 222, 226, 227, 230, 231, 234, 237, 238, 242, 243, 244, 251, 252, 254, 262, 267, 268, 269], "real": [0, 5, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 24, 25, 29, 30, 31, 33, 35, 37, 39, 41, 44, 51, 60, 61, 62, 63, 64, 65, 66, 76, 77, 85, 86, 87, 88, 89, 90, 93, 94, 96, 97, 99, 100, 101, 103, 104, 106, 108, 109, 110, 116, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 137, 138, 139, 141, 142, 144, 145, 146, 147, 148, 149, 150, 153, 154, 157, 162, 163, 164, 165, 166, 167, 168, 169, 173, 175, 178, 179, 184, 190, 191, 193, 195, 205, 210, 212, 213, 225, 228, 232, 233, 234, 235, 236, 237, 238, 242, 243, 244, 246, 248, 251, 252, 253, 254, 255, 256, 258, 260, 263], "data": [0, 1, 2, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76, 77, 78, 79, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 114, 116, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 190, 191, 192, 193, 194, 195, 198, 205, 208, 211, 213, 214, 217, 219, 220, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 246, 247, 248, 250, 251, 252, 253, 254, 255, 256, 258, 260, 262, 263, 264, 265, 266, 269], "type": [0, 2, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 55, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76, 77, 78, 79, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 116, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 194, 195, 196, 198, 208, 211, 213, 214, 216, 218, 219, 220, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 246, 247, 248, 250, 251, 252, 253, 254, 255, 256, 258, 260, 262, 263, 266, 267], "__matmul__": [0, 195, 210], "matmul": [0, 40, 195, 205, 210, 262], "The": [0, 1, 5, 7, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 22, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 55, 57, 58, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 76, 77, 78, 79, 85, 86, 87, 88, 89, 90, 92, 93, 96, 97, 99, 102, 103, 104, 105, 108, 109, 110, 112, 113, 114, 116, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 141, 142, 143, 144, 145, 146, 147, 148, 151, 152, 153, 154, 155, 156, 157, 158, 162, 163, 164, 165, 166, 167, 168, 169, 170, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 190, 191, 192, 196, 205, 208, 210, 211, 212, 214, 215, 216, 217, 220, 221, 223, 224, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 246, 247, 248, 250, 251, 252, 253, 254, 255, 256, 258, 260, 261, 262, 263, 265, 266, 267, 268, 269], "__invert__": [0, 195], "inv": [0, 210, 262], "invert": [0, 68, 244, 247, 254], "__inv__": 0, "__and__": [0, 195], "__or__": [0, 195], "__xor__": [0, 195], "xor": [0, 72, 134], "__lshift__": [0, 195], "lshift": 0, "__rshift__": [0, 195], "rshift": 0, "integ": [0, 5, 9, 13, 14, 15, 20, 22, 26, 29, 30, 34, 35, 36, 38, 41, 44, 45, 47, 48, 51, 52, 60, 67, 68, 69, 70, 71, 72, 76, 77, 88, 89, 90, 92, 93, 103, 104, 106, 107, 111, 114, 118, 119, 125, 137, 139, 141, 145, 153, 154, 157, 158, 160, 162, 163, 173, 175, 176, 184, 190, 191, 195, 196, 210, 212, 213, 224, 226, 228, 229, 230, 232, 233, 234, 235, 237, 239, 247, 248, 258, 260, 266], "boolean": [0, 5, 22, 24, 25, 26, 29, 35, 36, 43, 45, 52, 57, 60, 63, 67, 68, 70, 72, 88, 89, 90, 91, 105, 106, 107, 114, 118, 119, 125, 131, 132, 133, 134, 147, 192, 195, 205, 210], "__lt__": [0, 195, 210], "lt": 0, "__le__": [0, 195, 210], "le": 0, "__gt__": [0, 195, 210], "gt": [0, 252, 255], "__ge__": [0, 195, 210], "ge": 0, "__eq__": [0, 195, 210, 217], "eq": 0, "__ne__": [0, 195, 210], "ne": 0, "ar": [0, 1, 5, 7, 15, 16, 17, 19, 23, 24, 25, 26, 27, 29, 34, 35, 40, 49, 55, 58, 60, 77, 85, 86, 88, 91, 92, 93, 97, 100, 101, 102, 104, 105, 110, 117, 118, 125, 131, 132, 133, 134, 135, 139, 144, 147, 153, 158, 160, 161, 162, 166, 178, 179, 181, 185, 187, 191, 196, 205, 208, 210, 211, 212, 213, 214, 215, 216, 217, 218, 220, 221, 222, 224, 225, 226, 227, 229, 230, 231, 233, 234, 235, 236, 237, 239, 242, 243, 248, 251, 252, 255, 261, 262, 263, 266, 267, 268, 269], "onli": [0, 1, 5, 7, 16, 17, 23, 26, 40, 57, 58, 63, 102, 105, 110, 116, 118, 119, 125, 131, 132, 133, 134, 135, 139, 173, 190, 191, 195, 196, 205, 208, 210, 211, 213, 214, 216, 217, 218, 220, 222, 227, 239, 244, 251, 252, 254, 262, 263, 266, 267, 268, 269], "other": [0, 5, 21, 22, 23, 26, 28, 30, 31, 33, 37, 38, 39, 40, 41, 42, 43, 45, 47, 48, 50, 51, 52, 63, 91, 93, 99, 104, 105, 128, 143, 144, 160, 173, 190, 196, 198, 208, 210, 212, 213, 214, 215, 216, 217, 218, 222, 239, 251, 261, 262, 265, 266, 268], "ani": [0, 1, 9, 10, 11, 23, 24, 25, 26, 28, 29, 34, 35, 43, 59, 61, 62, 66, 91, 92, 96, 110, 120, 121, 148, 169, 195, 196, 205, 210, 213, 214, 216, 222, 255, 263, 265, 266, 269], "For": [0, 1, 5, 7, 9, 10, 11, 12, 16, 17, 18, 20, 24, 25, 26, 29, 30, 31, 33, 35, 37, 39, 41, 44, 57, 58, 61, 62, 64, 65, 66, 76, 79, 85, 86, 87, 89, 90, 93, 96, 97, 99, 103, 104, 108, 109, 110, 116, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 137, 138, 139, 140, 141, 142, 144, 145, 146, 148, 153, 154, 156, 157, 158, 162, 163, 164, 165, 166, 167, 168, 169, 170, 172, 175, 178, 179, 184, 185, 186, 187, 188, 196, 203, 208, 212, 213, 215, 217, 220, 225, 234, 236, 253, 255, 256, 258, 266, 268, 269], "backward": [0, 13, 14, 16, 17, 18, 31, 33, 37, 39, 92, 108, 109, 123, 124, 125, 137, 138, 141, 142, 157, 168, 191, 196, 210, 213, 214, 218, 224, 226, 228, 229, 230, 232, 233, 234, 235, 237, 239, 266], "compat": [0, 1, 12, 13, 14, 16, 17, 18, 21, 22, 26, 28, 30, 31, 33, 37, 38, 39, 40, 41, 42, 43, 45, 47, 48, 49, 50, 51, 52, 65, 67, 69, 70, 71, 72, 77, 85, 88, 93, 96, 104, 108, 109, 110, 123, 124, 125, 130, 131, 133, 134, 135, 137, 138, 139, 141, 142, 144, 146, 148, 153, 154, 157, 158, 159, 168, 173, 174, 175, 177, 190, 191, 192, 205, 210, 213, 214, 218, 239, 246, 248, 251, 254, 260, 266, 268], "mai": [0, 5, 7, 15, 16, 17, 18, 23, 26, 28, 31, 33, 37, 39, 43, 51, 57, 58, 59, 60, 75, 91, 92, 93, 96, 104, 105, 108, 109, 110, 113, 118, 119, 123, 124, 125, 131, 132, 133, 134, 137, 138, 139, 141, 142, 144, 147, 148, 158, 159, 160, 163, 168, 173, 179, 185, 186, 187, 188, 190, 195, 196, 203, 205, 208, 211, 212, 213, 214, 215, 216, 217, 218, 220, 221, 222, 242, 252, 253, 255, 261, 262, 266, 267, 268], "complex": [0, 5, 9, 10, 11, 12, 13, 14, 16, 17, 18, 20, 21, 24, 25, 28, 29, 31, 33, 35, 37, 39, 40, 42, 43, 44, 46, 47, 49, 50, 51, 60, 61, 62, 63, 64, 66, 79, 86, 87, 88, 89, 90, 93, 96, 97, 99, 100, 101, 106, 107, 108, 109, 110, 112, 116, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 135, 137, 138, 139, 140, 141, 142, 144, 145, 147, 148, 149, 150, 152, 153, 154, 155, 160, 162, 164, 166, 167, 168, 169, 170, 174, 175, 178, 179, 180, 185, 186, 187, 188, 191, 192, 205, 216, 217, 219, 220, 224, 226, 228, 229, 230, 232, 233, 234, 235, 237, 238, 239, 240, 242, 243, 244, 246, 247, 248, 250, 251, 252, 253, 254, 255, 256, 258, 260, 262, 266, 267], "howev": [0, 5, 16, 17, 18, 31, 33, 37, 39, 57, 89, 90, 104, 108, 109, 110, 119, 123, 124, 125, 137, 138, 141, 142, 158, 163, 168, 176, 178, 179, 208, 211, 212, 213, 214, 215, 217, 262, 263, 266, 268], "inequ": [0, 16, 17, 18, 31, 33, 37, 39, 108, 109, 123, 124, 137, 138, 141, 142, 168], "unspecifi": [0, 5, 10, 11, 16, 17, 18, 30, 31, 32, 33, 37, 39, 41, 47, 51, 60, 62, 66, 77, 78, 79, 87, 89, 90, 92, 93, 97, 99, 104, 106, 107, 108, 109, 123, 124, 125, 137, 138, 141, 142, 153, 155, 157, 160, 163, 167, 168, 169, 172, 176, 177, 179, 196, 203, 205, 210, 226, 227, 230, 231, 234, 237, 242, 243, 266], "thu": [0, 5, 16, 17, 18, 28, 30, 31, 32, 33, 37, 39, 41, 43, 47, 57, 60, 71, 77, 79, 89, 90, 92, 96, 104, 106, 107, 108, 109, 123, 124, 125, 137, 138, 141, 142, 148, 153, 155, 157, 160, 163, 168, 176, 178, 179, 196, 203, 212, 213, 226, 227, 230, 231, 234, 237, 242, 243, 255, 262], "depend": [0, 5, 9, 10, 11, 16, 17, 18, 20, 26, 28, 29, 31, 33, 37, 39, 43, 44, 47, 51, 57, 58, 59, 61, 62, 63, 64, 65, 66, 77, 86, 87, 93, 96, 97, 99, 108, 109, 114, 123, 124, 125, 126, 127, 128, 129, 144, 145, 148, 153, 160, 163, 166, 167, 168, 178, 179, 192, 203, 205, 212, 213, 216, 219, 220, 222, 242, 243, 252, 253, 254, 255, 262, 266, 268, 269], "see": [0, 5, 10, 11, 12, 13, 14, 16, 17, 18, 21, 22, 26, 28, 30, 31, 32, 33, 34, 37, 38, 39, 40, 41, 42, 43, 45, 47, 48, 49, 50, 51, 52, 53, 59, 61, 62, 64, 65, 66, 67, 69, 70, 71, 72, 74, 75, 77, 85, 88, 93, 96, 99, 104, 105, 107, 108, 109, 110, 113, 114, 117, 123, 124, 126, 128, 130, 131, 133, 134, 135, 137, 138, 139, 141, 142, 144, 146, 147, 148, 153, 154, 156, 157, 158, 160, 164, 168, 169, 170, 173, 174, 175, 177, 185, 186, 187, 188, 190, 191, 192, 195, 196, 205, 207, 208, 211, 213, 215, 216, 217, 222, 239, 246, 248, 251, 254, 260, 261, 266, 267, 268, 269], "order": [0, 5, 7, 16, 17, 18, 19, 26, 31, 33, 37, 39, 55, 60, 63, 65, 91, 92, 102, 104, 105, 108, 109, 123, 124, 137, 138, 141, 142, 147, 158, 163, 168, 178, 179, 180, 185, 186, 187, 188, 196, 203, 205, 210, 212, 215, 216, 218, 233, 234, 242, 243, 246, 255, 256, 260, 262, 263, 266, 267], "chang": [0, 1, 9, 10, 11, 12, 13, 14, 20, 21, 24, 25, 26, 29, 34, 35, 40, 42, 43, 44, 46, 47, 50, 51, 59, 60, 61, 62, 63, 64, 66, 86, 87, 93, 96, 97, 99, 100, 101, 105, 106, 107, 120, 121, 122, 125, 126, 127, 128, 129, 135, 137, 140, 141, 144, 145, 147, 148, 149, 150, 152, 153, 154, 159, 162, 164, 166, 167, 169, 170, 174, 175, 176, 178, 179, 180, 185, 186, 187, 188, 191, 192, 208, 224, 225, 226, 228, 229, 230, 233, 234, 236, 238, 239, 240, 242, 243, 244, 246, 247, 248, 250, 251, 252, 253, 254, 255, 256, 258, 260, 263, 266, 268, 269], "shape": [0, 1, 18, 40, 55, 63, 73, 74, 78, 89, 90, 92, 94, 95, 98, 102, 106, 107, 114, 135, 136, 140, 149, 150, 159, 161, 163, 168, 172, 176, 177, 180, 181, 182, 183, 189, 191, 193, 194, 195, 210, 219, 220, 222, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 240, 241, 242, 243, 244, 246, 247, 248, 250, 251, 252, 253, 254, 255, 256, 258, 266, 268], "result": [0, 1, 5, 9, 10, 11, 12, 13, 14, 15, 16, 17, 20, 21, 22, 24, 25, 28, 29, 30, 31, 33, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 76, 77, 79, 85, 86, 87, 88, 93, 96, 97, 99, 103, 104, 108, 109, 110, 112, 120, 121, 122, 123, 124, 126, 127, 128, 129, 130, 131, 132, 133, 134, 137, 138, 139, 141, 142, 144, 145, 146, 148, 152, 153, 154, 155, 156, 157, 158, 160, 162, 163, 164, 165, 166, 167, 169, 170, 172, 173, 174, 175, 178, 179, 180, 184, 185, 190, 196, 203, 205, 210, 212, 213, 214, 220, 238, 239, 241, 246, 247, 253, 254, 260, 266, 267, 268, 269], "promot": [0, 1, 5, 10, 11, 12, 21, 22, 28, 30, 31, 33, 37, 39, 40, 41, 42, 43, 44, 45, 47, 49, 50, 51, 52, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 75, 78, 85, 86, 87, 92, 93, 96, 97, 99, 104, 107, 108, 109, 110, 123, 124, 125, 126, 127, 128, 129, 130, 135, 138, 139, 142, 144, 145, 148, 153, 156, 157, 160, 166, 167, 169, 170, 172, 173, 174, 178, 179, 180, 190, 191, 192, 195, 210, 238, 239, 244, 246, 247, 248, 250, 251, 252, 253, 254, 260, 262], "rule": [0, 5, 7, 10, 11, 12, 21, 22, 28, 30, 31, 33, 37, 39, 40, 41, 42, 43, 44, 45, 47, 49, 50, 51, 52, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 75, 78, 85, 86, 87, 89, 90, 92, 93, 96, 97, 99, 104, 106, 107, 108, 109, 110, 123, 124, 125, 126, 127, 128, 129, 130, 135, 138, 142, 144, 145, 148, 153, 156, 157, 160, 164, 166, 167, 169, 170, 172, 174, 178, 179, 180, 191, 192, 195, 196, 210, 213, 216, 238, 239, 244, 246, 247, 248, 250, 251, 252, 253, 254, 260, 262, 266, 268], "broadcast": [0, 12, 13, 14, 16, 17, 21, 22, 28, 30, 31, 33, 37, 38, 39, 40, 41, 42, 43, 45, 47, 48, 49, 50, 51, 52, 65, 67, 69, 70, 71, 72, 73, 74, 77, 85, 88, 93, 96, 104, 108, 109, 110, 123, 124, 130, 131, 133, 134, 135, 137, 138, 139, 141, 142, 144, 146, 148, 153, 154, 157, 158, 173, 174, 175, 177, 180, 190, 191, 192, 195, 210, 239, 246, 248, 251, 254, 260, 266], "same": [0, 5, 7, 9, 12, 15, 18, 19, 20, 26, 32, 36, 38, 40, 41, 46, 48, 50, 55, 59, 63, 68, 73, 74, 76, 77, 78, 79, 89, 90, 92, 93, 95, 98, 101, 102, 103, 104, 105, 107, 112, 135, 136, 137, 139, 140, 141, 143, 144, 146, 150, 151, 152, 153, 154, 155, 157, 158, 159, 161, 162, 163, 164, 168, 171, 172, 173, 174, 175, 176, 177, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 194, 196, 205, 208, 210, 213, 214, 216, 217, 222, 224, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 238, 240, 241, 242, 244, 247, 251, 252, 253, 255, 256, 258, 261, 262, 266, 268], "behavior": [0, 5, 32, 47, 49, 59, 60, 63, 77, 89, 90, 92, 93, 104, 106, 107, 110, 125, 144, 153, 157, 160, 163, 176, 177, 185, 186, 187, 188, 195, 196, 198, 205, 208, 210, 212, 213, 220, 221, 226, 227, 230, 231, 234, 237, 262, 263, 266, 267, 268, 269], "special": [0, 9, 10, 11, 12, 20, 21, 24, 25, 28, 29, 30, 35, 41, 42, 43, 47, 51, 61, 62, 64, 65, 66, 76, 77, 85, 86, 87, 89, 90, 93, 96, 97, 99, 103, 104, 110, 120, 121, 122, 126, 127, 128, 129, 130, 137, 138, 139, 141, 142, 144, 146, 148, 153, 154, 156, 157, 162, 164, 165, 166, 167, 169, 170, 173, 175, 178, 179, 184, 190, 210, 211, 213, 253, 258], "case": [0, 1, 5, 7, 9, 10, 11, 12, 15, 20, 21, 24, 25, 26, 28, 29, 30, 35, 41, 42, 43, 47, 51, 60, 61, 62, 64, 65, 66, 76, 77, 85, 86, 87, 89, 90, 93, 96, 97, 99, 103, 104, 105, 110, 120, 121, 122, 126, 127, 128, 129, 130, 137, 138, 139, 140, 141, 142, 144, 146, 148, 153, 154, 156, 157, 162, 164, 165, 166, 167, 169, 170, 173, 175, 178, 179, 184, 190, 196, 208, 210, 211, 212, 213, 214, 217, 218, 220, 252, 253, 255, 258, 262, 264, 266, 269], "its": [0, 5, 26, 40, 73, 93, 101, 135, 144, 159, 161, 212, 213, 216, 217, 261, 266, 267, 268], "respect": [0, 9, 12, 20, 21, 22, 28, 30, 31, 33, 37, 38, 39, 41, 42, 43, 45, 48, 50, 51, 52, 65, 67, 69, 70, 71, 72, 77, 87, 93, 96, 104, 108, 109, 110, 116, 123, 124, 125, 130, 131, 133, 134, 138, 140, 142, 143, 144, 146, 148, 157, 167, 174, 178, 179, 180, 185, 186, 191, 210, 212, 215, 217, 242, 252, 255], "binari": [0, 5, 67, 70, 72, 178, 179, 211], "two": [0, 1, 5, 15, 19, 40, 55, 65, 71, 100, 105, 135, 136, 140, 160, 162, 180, 182, 183, 185, 186, 187, 188, 191, 196, 205, 216, 217, 220, 221, 226, 227, 230, 231, 234, 237, 238, 240, 241, 242, 243, 244, 246, 247, 248, 250, 251, 252, 253, 254, 255, 256, 258, 262, 266, 267, 268, 269], "operand": [0, 1, 9, 10, 11, 12, 24, 25, 29, 35, 61, 62, 64, 65, 66, 76, 85, 86, 87, 89, 90, 93, 96, 97, 99, 103, 104, 110, 120, 121, 122, 126, 127, 128, 129, 130, 137, 138, 139, 141, 142, 144, 146, 148, 153, 154, 156, 157, 162, 164, 165, 166, 167, 169, 170, 175, 178, 179, 184, 205, 210, 212, 253, 258], "assign": [0, 214], "exampl": [0, 5, 12, 23, 26, 118, 119, 139, 172, 195, 196, 208, 213, 214, 215, 217, 220, 221, 222, 258, 262, 266, 268, 269], "after": [0, 1, 26, 40, 135, 169, 181], "addit": [0, 5, 7, 12, 26, 50, 59, 90, 118, 174, 195, 196, 205, 211, 213, 216, 262, 266, 267, 269], "modifi": [0, 26, 214, 265], "equal": [0, 1, 9, 10, 11, 18, 20, 21, 22, 26, 28, 30, 31, 33, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 58, 61, 62, 63, 64, 65, 66, 69, 71, 77, 87, 88, 91, 97, 99, 100, 106, 107, 110, 119, 121, 126, 127, 128, 129, 139, 147, 148, 149, 150, 153, 154, 162, 167, 168, 169, 173, 175, 176, 177, 179, 180, 181, 185, 186, 187, 188, 190, 195, 196, 203, 210, 213, 217, 224, 226, 228, 229, 230, 232, 233, 234, 235, 237, 239, 241, 247, 248, 251, 252, 253, 254, 258, 266], "equival": [0, 20, 21, 22, 28, 30, 31, 33, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 71, 104, 110, 131, 132, 133, 134, 157, 162, 176, 196, 205, 213, 214, 248, 251, 254, 260, 266], "discuss": [0, 96, 148, 210, 216, 217, 221, 266, 267, 268], "copi": [0, 1, 26, 59, 60, 63, 105, 159, 168, 210, 211, 216, 217, 219, 265, 266], "view": [0, 105, 219], "behaviour": [0, 219, 266, 268], "mutabl": [0, 219], "via": [0, 26, 104, 105, 176, 196, 211, 216, 217, 221, 223, 251, 261, 262, 263, 266], "__iadd__": 0, "__isub__": 0, "__imul__": 0, "__itruediv__": 0, "__ifloordiv__": 0, "__ipow__": 0, "__imod__": 0, "__imatmul__": 0, "__iand__": 0, "__ior__": 0, "__ixor__": 0, "__ilshift__": 0, "__irshift__": 0, "appli": [0, 12, 77, 78, 85, 93, 139, 144, 160, 162, 172, 180, 196, 205, 208, 213, 224, 226, 229, 230, 233, 234, 235, 237, 248, 251, 262, 266, 268], "match": [0, 1, 5, 9, 20, 26, 63, 104, 157, 180, 185, 186, 218, 228, 232, 233, 234, 235, 237, 242, 243, 246, 260, 268], "op": [0, 205], "__radd__": 0, "__rsub__": 0, "__rmul__": 0, "__rtruediv__": 0, "__rfloordiv__": 0, "__rpow__": 0, "__rmod__": 0, "__rmatmul__": 0, "__rand__": 0, "__ror__": 0, "__rxor__": 0, "__rlshift__": 0, "__rrshift__": 0, "arrai": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 83, 85, 86, 87, 88, 89, 90, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 197, 198, 199, 200, 201, 202, 203, 204, 206, 207, 208, 210, 211, 212, 213, 214, 215, 216, 217, 218, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 267, 269], "refer": [1, 13, 14, 92, 99, 100, 128, 173, 176, 177, 180, 181, 190, 191, 196, 213, 214, 222, 224, 226, 228, 229, 230, 232, 233, 234, 235, 237, 239, 254], "automat": [1, 32, 266], "implicit": [1, 216, 217, 220, 266], "expans": [1, 266], "size": [1, 13, 14, 89, 90, 92, 98, 125, 147, 161, 171, 176, 177, 180, 191, 195, 196, 215, 221, 224, 226, 228, 229, 230, 232, 233, 234, 235, 237, 239, 241, 250, 252, 255, 266], "without": [1, 7, 26, 28, 31, 33, 37, 39, 43, 57, 96, 105, 108, 109, 116, 118, 123, 124, 147, 148, 158, 159, 185, 186, 187, 188, 208, 211, 212, 215, 265, 266, 268], "purpos": [1, 5, 99, 110, 128, 208, 253, 262, 264, 265, 268], "make": [1, 7, 208, 211, 212, 214, 216, 220, 224, 226, 228, 229, 230, 232, 233, 234, 235, 237, 261, 263, 266], "differ": [1, 12, 26, 49, 50, 75, 77, 78, 89, 90, 92, 93, 101, 104, 105, 144, 154, 160, 172, 174, 175, 196, 208, 214, 217, 218, 220, 231, 242, 252, 253, 255, 258, 262, 266, 267, 268], "element": [1, 9, 10, 11, 12, 13, 14, 15, 20, 21, 22, 24, 25, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 54, 58, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 76, 77, 79, 85, 86, 87, 88, 89, 90, 92, 93, 96, 97, 99, 100, 102, 103, 104, 106, 107, 108, 109, 110, 112, 120, 121, 122, 123, 124, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 137, 138, 139, 141, 142, 144, 145, 146, 147, 148, 152, 153, 154, 155, 156, 157, 158, 159, 161, 162, 163, 164, 165, 166, 167, 169, 170, 171, 173, 174, 175, 176, 177, 178, 179, 181, 182, 183, 184, 185, 186, 187, 188, 190, 192, 195, 196, 210, 212, 224, 226, 228, 229, 230, 232, 233, 234, 235, 237, 239, 242, 251, 252, 253, 255, 258, 266], "wise": [1, 9, 10, 12, 20, 21, 22, 28, 30, 31, 33, 36, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 61, 64, 65, 67, 68, 69, 70, 71, 72, 77, 79, 85, 93, 96, 104, 108, 109, 110, 112, 123, 124, 130, 131, 132, 133, 134, 138, 142, 144, 146, 148, 153, 155, 156, 157, 174, 195, 210, 212, 266], "oper": [1, 12, 19, 24, 26, 34, 40, 57, 58, 59, 61, 64, 71, 86, 89, 90, 93, 104, 127, 129, 135, 139, 144, 153, 154, 156, 157, 160, 166, 170, 175, 178, 180, 195, 196, 202, 205, 210, 213, 214, 215, 216, 217, 258, 262, 263, 266, 267, 268], "facilit": [1, 203, 208], "user": [1, 7, 26, 113, 179, 208, 211, 212, 214, 217, 221, 262, 266, 267, 268], "ergonom": 1, "encourag": [1, 266, 267], "avoid": [1, 9, 63, 93, 99, 104, 110, 128, 144, 159, 211, 214, 217, 220, 262, 266, 268], "unnecessari": [1, 262], "can": [1, 7, 26, 32, 60, 75, 113, 117, 119, 160, 196, 205, 208, 211, 213, 214, 216, 217, 222, 251, 252, 255, 261, 262, 266, 267, 268, 269], "potenti": [1, 26, 99, 114, 128, 158, 214, 266], "enabl": [1, 26, 105, 217, 221, 222, 266], "more": [1, 5, 7, 15, 19, 26, 32, 40, 58, 60, 63, 73, 89, 90, 99, 102, 104, 128, 135, 147, 153, 158, 160, 176, 185, 186, 187, 188, 196, 205, 208, 211, 212, 213, 214, 215, 216, 217, 218, 221, 222, 226, 227, 230, 231, 234, 237, 253, 262, 263, 266, 267, 269], "memori": [1, 26, 60, 79, 105, 155, 208, 214, 215, 217, 266, 268], "effici": [1, 208, 214], "through": [1, 60, 65, 261, 263, 267, 268], "vector": [1, 40, 135, 140, 191, 239, 250, 255, 256, 260, 262, 266], "reduc": [1, 13, 14, 16, 17, 88, 137, 139, 141, 154, 173, 175, 190, 196, 252, 255, 262, 267, 268], "consumpt": [1, 26, 267], "cach": 1, "local": [1, 217], "given": [1, 23, 92, 102, 125, 161, 163, 189, 205, 210, 213, 214, 217, 218, 222, 243, 253, 262, 263, 266, 268], "involv": [1, 12, 93, 104, 139, 144, 153, 160, 205, 213, 217, 221], "singleton": [1, 13, 14, 16, 17, 88, 98, 137, 139, 141, 154, 171, 173, 175, 181, 190, 246, 260, 266], "whose": [1, 5, 9, 11, 19, 20, 26, 47, 55, 62, 66, 85, 86, 87, 100, 102, 105, 136, 153, 161, 165, 166, 167, 176, 177, 178, 179, 180, 182, 183, 185, 186, 187, 196, 214, 228, 232, 233, 234, 235, 237, 238, 240, 241, 242, 243, 244, 246, 247, 248, 250, 251, 252, 253, 254, 255, 256, 258, 260, 266, 268], "one": [1, 12, 15, 19, 26, 32, 40, 51, 58, 60, 63, 65, 67, 69, 70, 71, 72, 73, 75, 85, 88, 89, 90, 93, 96, 98, 100, 102, 104, 105, 108, 109, 110, 118, 119, 123, 124, 125, 130, 131, 133, 134, 135, 138, 140, 142, 144, 146, 147, 148, 149, 150, 153, 157, 158, 160, 163, 171, 174, 176, 177, 185, 186, 187, 188, 191, 192, 196, 208, 211, 213, 214, 216, 217, 220, 221, 222, 224, 226, 228, 229, 230, 231, 232, 233, 234, 235, 237, 250, 251, 252, 260, 262, 263, 266, 268], "virtual": 1, "repeat": [1, 195, 196, 210, 268], "across": [1, 5, 93, 104, 144, 179, 210, 212, 213, 217, 261, 266], "correspond": [1, 16, 17, 23, 28, 31, 33, 37, 39, 43, 47, 59, 65, 73, 77, 96, 105, 108, 109, 114, 115, 116, 123, 124, 148, 153, 159, 161, 163, 173, 177, 180, 185, 186, 187, 188, 190, 191, 196, 210, 212, 226, 230, 234, 237, 239, 242, 246, 265, 266], "If": [1, 5, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 23, 24, 25, 26, 29, 34, 35, 40, 44, 47, 51, 55, 57, 59, 60, 61, 62, 63, 64, 65, 66, 74, 76, 77, 78, 85, 86, 87, 88, 89, 90, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 110, 114, 116, 118, 119, 120, 121, 122, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 153, 154, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 171, 172, 173, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 192, 193, 194, 196, 211, 213, 217, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 242, 243, 244, 246, 247, 248, 251, 252, 253, 254, 255, 258, 260, 261, 262, 266, 268], "unequ": 1, "lower": [1, 77, 100, 182, 238], "higher": [1, 5, 26, 92, 196, 211, 262, 267], "prepend": [1, 40, 92, 98, 135, 181], "until": [1, 26, 181], "store": [1, 26, 217, 258], "determin": [1, 10, 11, 12, 13, 14, 21, 22, 26, 30, 40, 41, 42, 44, 45, 47, 50, 51, 52, 61, 62, 64, 65, 66, 67, 69, 70, 71, 72, 75, 78, 85, 86, 87, 89, 90, 92, 93, 97, 99, 104, 110, 120, 121, 122, 126, 127, 128, 129, 130, 135, 138, 142, 144, 145, 153, 156, 157, 160, 165, 166, 167, 169, 170, 174, 176, 177, 178, 179, 180, 185, 186, 187, 188, 191, 192, 205, 210, 213, 216, 217, 224, 226, 228, 229, 230, 232, 233, 234, 235, 237, 238, 239, 240, 241, 244, 246, 247, 248, 250, 251, 252, 253, 254, 258, 260, 262, 266], "let": [1, 9, 10, 11, 12, 62, 66, 85, 87, 89, 90, 92, 96, 97, 99, 105, 120, 121, 122, 125, 126, 128, 139, 148, 154, 158, 163, 164, 167, 169, 173, 175, 179, 181, 190, 191, 196, 221, 224, 226, 228, 229, 230, 232, 233, 234, 235, 237, 238, 242, 243, 244, 252, 254, 255, 258], "b": [1, 9, 10, 11, 12, 57, 62, 66, 87, 93, 96, 97, 99, 104, 120, 121, 122, 125, 126, 128, 139, 144, 148, 164, 167, 169, 172, 179, 191, 196, 210, 213, 214, 218, 251, 254, 268], "both": [1, 40, 44, 47, 51, 65, 77, 89, 90, 93, 101, 104, 105, 110, 125, 135, 145, 153, 154, 175, 179, 180, 191, 196, 213, 214, 216, 220, 222, 239, 258, 262, 266, 267], "shape1": 1, "describ": [1, 5, 12, 75, 89, 90, 93, 96, 118, 119, 144, 148, 153, 154, 175, 198, 205, 213, 216, 220, 225, 236, 258, 266], "shape2": 1, "n1": [1, 92, 140], "len": [1, 140, 181], "n2": [1, 92, 140], "max": [1, 26, 77, 101, 111, 114, 181, 195, 196, 210, 246, 248, 251], "temporari": 1, "list": [1, 73, 78, 113, 117, 140, 172, 196, 208, 210, 217, 266, 268], "length": [1, 15, 110, 140, 159, 180, 196, 225, 227, 228, 231, 236, 255, 256], "while": [1, 104, 118, 125, 131, 132, 133, 134, 139, 143, 163, 173, 185, 186, 190, 195, 196, 203, 208, 210, 213, 214, 215, 217, 220, 251, 262, 267, 268, 269], "d1": 1, "els": [1, 26, 208, 267], "d2": 1, "set": [1, 18, 26, 49, 65, 105, 165, 168, 173, 182, 183, 185, 187, 188, 190, 195, 196, 210, 211, 212, 213, 214, 217, 218, 221, 222, 224, 226, 228, 229, 230, 232, 233, 234, 235, 237, 238, 242, 243, 244, 248, 251, 252, 254, 255, 261, 262, 266, 268, 269], "th": [1, 92, 100, 181, 196, 226, 230, 234, 237], "throw": 1, "except": [1, 7, 13, 14, 26, 74, 78, 89, 90, 92, 100, 105, 125, 147, 158, 160, 172, 176, 177, 189, 196, 205, 208, 210, 212, 214, 217, 219, 220, 224, 226, 228, 229, 230, 232, 233, 234, 235, 237, 251, 263, 266, 267, 268], "demonstr": 1, "applic": [1, 26, 89, 90, 154, 158, 175, 205, 258, 262, 266, 267], "4d": 1, "8": [1, 5, 7, 27, 181, 205, 208], "6": [1, 7, 181], "3d": 1, "7": [1, 7, 27, 222], "5": [1, 196, 266], "2d": 1, "1d": 1, "15": 1, "do": [1, 26, 75, 93, 144, 157, 203, 208, 211, 213, 214, 216, 217, 218, 262, 263, 265, 266, 268, 269], "doe": [1, 15, 26, 105, 148, 176, 177, 196, 205, 208, 211, 212, 213, 214, 215, 217, 218, 220, 222, 262, 266, 268, 269], "second": [1, 12, 65, 67, 69, 70, 71, 72, 96, 108, 109, 110, 123, 124, 130, 131, 133, 134, 135, 138, 142, 144, 146, 148, 153, 172, 174, 180, 185, 186, 187, 191, 192, 239, 242, 250, 252, 253, 255, 256, 266], "append": [1, 40, 69, 92, 98, 135, 241], "As": [1, 75, 125, 153, 160, 185, 186, 187, 188, 208, 216, 222, 268], "impli": [1, 185, 186, 187, 188, 265, 266], "__setitem__": [1, 176, 195, 210], "Such": [1, 212, 262], "right": [1, 69, 71, 110, 163, 169, 211, 255, 265], "hand": [1, 205], "left": [1, 5, 60, 69, 104, 106, 163, 176, 177, 196, 205, 242, 243, 255, 266], "index": [1, 5, 16, 17, 18, 32, 34, 49, 57, 83, 88, 100, 114, 116, 140, 143, 147, 163, 172, 176, 177, 180, 185, 186, 187, 195, 210, 226, 230, 234, 237, 266, 268], "perform": [1, 5, 13, 14, 26, 40, 59, 60, 93, 110, 135, 144, 158, 180, 196, 211, 212, 213, 214, 215, 216, 224, 226, 229, 230, 231, 233, 234, 235, 237, 255, 256, 262, 266, 267, 268], "empti": [1, 13, 14, 15, 154, 175, 195, 196, 210, 258, 266], "ok": 1, "allow": [1, 24, 25, 26, 29, 34, 35, 116, 118, 153, 159, 180, 196, 210, 211, 212, 214, 217, 220, 221, 262, 268], "NOT": [1, 132, 265], "adher": [2, 7, 8, 195, 196, 208, 261, 266], "convent": [2, 7, 10, 11, 26, 40, 61, 62, 64, 65, 66, 89, 90, 126, 128, 135, 153, 169, 195, 196, 203, 213, 217, 261, 262, 267], "each": [2, 9, 10, 11, 12, 20, 21, 22, 26, 28, 30, 31, 33, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 76, 77, 79, 85, 86, 87, 93, 96, 97, 99, 103, 104, 108, 109, 110, 112, 117, 120, 121, 122, 123, 124, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 138, 140, 142, 143, 144, 145, 146, 147, 148, 152, 153, 155, 156, 157, 158, 161, 162, 163, 164, 165, 166, 167, 169, 170, 172, 174, 178, 179, 180, 181, 184, 185, 186, 196, 208, 210, 212, 216, 220, 222, 234, 238, 239, 240, 244, 246, 247, 248, 251, 252, 253, 254, 255, 256, 261, 262, 266, 267, 268], "float": [2, 5, 9, 10, 11, 12, 13, 14, 15, 20, 21, 24, 25, 28, 29, 30, 31, 33, 34, 35, 37, 39, 40, 41, 42, 43, 44, 47, 49, 50, 51, 60, 61, 62, 63, 64, 65, 66, 76, 77, 80, 81, 82, 84, 85, 86, 87, 88, 89, 90, 93, 94, 96, 97, 99, 100, 101, 103, 104, 106, 107, 108, 109, 110, 112, 116, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 135, 137, 138, 139, 141, 142, 144, 145, 146, 147, 148, 149, 150, 153, 154, 155, 156, 157, 160, 162, 163, 164, 165, 166, 167, 169, 170, 173, 174, 175, 178, 179, 180, 184, 185, 186, 187, 188, 190, 191, 192, 193, 195, 203, 210, 212, 213, 220, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 240, 242, 243, 244, 246, 247, 248, 251, 252, 253, 254, 255, 256, 258, 260, 262, 266, 267], "point": [2, 5, 9, 10, 11, 12, 13, 14, 15, 20, 24, 25, 26, 29, 34, 35, 40, 41, 42, 44, 47, 50, 51, 60, 61, 62, 63, 64, 65, 66, 76, 77, 80, 81, 82, 84, 85, 86, 87, 88, 89, 90, 93, 94, 96, 97, 99, 100, 101, 103, 104, 106, 107, 110, 112, 116, 118, 119, 120, 121, 122, 125, 126, 127, 128, 129, 130, 135, 137, 138, 139, 141, 142, 144, 145, 146, 147, 148, 149, 150, 153, 154, 155, 156, 157, 160, 162, 163, 164, 165, 166, 167, 169, 170, 173, 174, 175, 178, 179, 180, 184, 185, 186, 187, 188, 190, 191, 193, 195, 203, 210, 212, 213, 217, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 240, 242, 243, 244, 246, 247, 248, 251, 252, 253, 254, 255, 256, 258, 260, 262, 266, 268], "creat": [3, 15, 60, 94, 95, 100, 105, 106, 107, 125, 149, 150, 193, 194, 202, 208, 217, 225, 236, 262, 266], "main": [5, 100, 182, 183, 211, 216, 241, 258, 261, 268], "namespac": [5, 7, 23, 113, 198, 208, 210, 223, 261, 262, 263, 266, 269], "under": [5, 261, 265, 266], "specifi": [5, 13, 14, 15, 16, 17, 18, 26, 29, 59, 60, 63, 74, 78, 88, 89, 90, 92, 94, 98, 101, 102, 106, 116, 118, 119, 125, 149, 154, 157, 158, 161, 171, 172, 175, 176, 177, 181, 182, 183, 185, 186, 187, 188, 191, 193, 196, 205, 210, 212, 213, 214, 216, 217, 218, 222, 224, 226, 227, 228, 229, 230, 232, 233, 234, 235, 237, 241, 258, 260, 262, 263, 266, 268, 269], "name": [5, 7, 23, 26, 104, 118, 185, 186, 187, 196, 213, 242, 251, 252, 253, 255, 261, 266, 267], "descript": [5, 7, 210, 212, 246, 260], "bool": [5, 13, 14, 16, 17, 18, 22, 24, 26, 28, 31, 33, 37, 39, 43, 45, 49, 52, 60, 63, 67, 70, 72, 75, 88, 89, 90, 91, 96, 105, 106, 107, 108, 109, 118, 119, 120, 121, 122, 123, 124, 125, 131, 132, 133, 134, 137, 139, 141, 148, 154, 159, 160, 165, 168, 173, 175, 190, 192, 205, 210, 220, 238, 246, 255, 260], "true": [5, 13, 14, 16, 17, 18, 24, 25, 26, 29, 35, 60, 63, 75, 88, 89, 90, 96, 101, 104, 105, 114, 120, 121, 122, 125, 131, 132, 133, 134, 137, 139, 141, 147, 148, 154, 159, 165, 168, 173, 175, 185, 186, 187, 188, 190, 192, 196, 210, 238, 246, 255, 260, 262], "fals": [5, 13, 14, 16, 17, 18, 24, 25, 26, 29, 35, 60, 63, 75, 88, 89, 90, 96, 105, 114, 120, 121, 122, 125, 131, 132, 133, 134, 137, 139, 141, 148, 154, 159, 165, 168, 173, 175, 185, 186, 187, 188, 190, 196, 238, 246, 255, 260], "int8": [5, 118, 119, 205], "bit": [5, 68, 69, 71, 85, 89, 90, 101, 111, 154, 165, 175, 205, 210, 212, 258], "sign": [5, 9, 10, 11, 12, 15, 20, 41, 44, 62, 65, 66, 71, 85, 87, 89, 90, 93, 97, 99, 104, 118, 119, 126, 128, 137, 138, 141, 142, 144, 145, 153, 154, 157, 163, 165, 167, 169, 175, 179, 185, 186, 187, 188, 195, 203, 210, 213, 252, 253, 258], "exist": [5, 7, 26, 60, 78, 105, 208, 210, 213, 216, 217, 218, 244, 263, 266, 267], "interv": [5, 10, 11, 13, 14, 15, 61, 62, 64, 66, 92, 98, 125, 126, 128, 143, 172, 180, 182, 183, 189, 191, 196, 224, 226, 228, 229, 230, 232, 233, 234, 235, 237, 239, 263], "128": 5, "127": 5, "int16": [5, 89, 90, 118, 119, 154, 175, 205, 258], "16": [5, 205], "32": [5, 205], "767": 5, "int32": [5, 89, 90, 118, 119, 154, 175, 205, 258], "147": 5, "483": 5, "647": 5, "int64": [5, 89, 90, 118, 119, 154, 175, 205, 258], "64": [5, 205], "9": [5, 27], "223": 5, "372": 5, "036": 5, "854": 5, "775": 5, "807": 5, "uint8": [5, 118, 119, 205], "unsign": [5, 89, 90, 118, 119, 154, 175, 195, 258], "255": 5, "uint16": [5, 89, 90, 118, 119, 154, 175, 205, 258], "65": 5, "535": [5, 210], "uint32": [5, 89, 90, 118, 119, 154, 175, 205, 258], "294": 5, "967": 5, "295": 5, "uint64": [5, 118, 119, 205], "18": 5, "446": [5, 210], "744": [5, 210], "073": 5, "709": [5, 210], "551": [5, 210], "615": 5, "float32": [5, 112, 118, 119, 155, 205, 253, 255, 256], "ieee": [5, 12, 65, 80, 81, 82, 84, 93, 99, 101, 110, 128, 144, 157, 169, 178, 179, 195, 203, 212, 213, 266], "754": [5, 12, 65, 80, 81, 82, 84, 93, 99, 101, 110, 128, 144, 157, 169, 178, 179, 195, 203, 212, 213, 266], "singl": [5, 7, 24, 25, 29, 34, 35, 116, 118, 185, 186, 195, 205, 210, 211, 213, 216, 217, 222, 262, 266, 267, 268], "precis": [5, 9, 20, 42, 60, 101, 106, 107, 112, 144, 155, 169, 205, 210, 212, 228, 232, 233, 234, 235, 237, 242, 243, 246, 253, 255, 256, 260, 266], "2019": [5, 12, 93, 99, 110, 128, 144, 195, 212, 266, 268], "float64": [5, 9, 20, 118, 119, 205, 228, 232, 233, 234, 235, 237, 242, 243, 246, 260], "doubl": [5, 180, 205, 210], "complex64": [5, 112, 118, 119, 155, 205, 210, 253, 255, 256], "imaginari": [5, 10, 11, 12, 13, 14, 44, 61, 62, 63, 64, 66, 79, 87, 88, 93, 96, 97, 99, 101, 112, 126, 128, 139, 144, 145, 147, 148, 149, 150, 153, 162, 167, 169, 179, 210, 213], "compon": [5, 10, 11, 12, 13, 14, 44, 62, 63, 66, 79, 87, 88, 93, 96, 97, 99, 101, 112, 126, 128, 139, 144, 145, 147, 148, 149, 150, 153, 155, 162, 167, 169, 178, 179, 185, 186, 187, 188, 210, 213, 227, 236], "complex128": [5, 9, 20, 118, 119, 205, 210, 228, 232, 233, 234, 235, 237, 242, 243, 246, 260], "method": [5, 26, 34, 105, 195, 198, 208, 214, 216, 217, 220, 221, 222, 266, 267, 268], "attribut": [5, 23, 101, 111, 160, 195, 207, 210, 263, 266, 267, 268], "requir": [5, 10, 11, 24, 25, 29, 34, 35, 59, 61, 62, 63, 64, 66, 89, 90, 105, 110, 119, 154, 169, 172, 175, 176, 177, 179, 185, 186, 188, 189, 195, 196, 203, 205, 208, 210, 211, 212, 213, 214, 215, 216, 217, 220, 222, 224, 225, 226, 228, 229, 230, 233, 234, 236, 239, 258, 261, 262, 266, 267, 268], "beyond": [5, 161, 205, 266], "It": [5, 23, 26, 105, 208, 214, 216, 266, 268, 269], "also": [5, 7, 26, 32, 34, 105, 110, 164, 208, 213, 214, 215, 216, 222, 226, 230, 234, 237, 255, 261, 268], "subnorm": [5, 110, 212], "k": [5, 40, 100, 110, 135, 147, 182, 183, 196, 212, 238, 242, 243, 244, 252, 254, 255, 256, 258, 266], "denorm": [5, 110, 212], "gradual": [5, 110, 212, 266], "underflow": [5, 9, 93, 104, 110, 212, 253], "hardwar": [5, 53, 110, 158, 212, 216, 217, 242, 255, 262, 266], "univers": [5, 110, 211, 212, 217, 262, 266], "mani": [5, 110, 181, 212, 266, 268], "platform": [5, 26, 110, 212], "compil": [5, 110, 179, 208, 211, 212, 215, 266], "toggl": [5, 110, 212], "daz": [5, 110, 212], "flush": [5, 110, 212], "ftz": [5, 110, 212], "increas": [5, 110, 212, 267], "guard": [5, 110, 212], "against": [5, 40, 73, 110, 135, 179, 196, 212, 248, 251, 269], "time": [5, 7, 16, 17, 26, 92, 110, 158, 185, 186, 208, 210, 212, 215, 216, 221, 238, 242, 243, 244, 252, 254, 255, 262, 266, 268], "attack": [5, 110, 212], "accordingli": [5, 10, 11, 13, 14, 16, 17, 59, 61, 62, 64, 66, 75, 88, 93, 99, 104, 110, 125, 126, 128, 137, 139, 140, 141, 144, 147, 154, 158, 160, 163, 169, 173, 175, 185, 186, 187, 188, 190, 196, 205, 212, 213, 214, 215, 217, 246, 252, 260, 262], "vari": [5, 110, 163, 179, 185, 186, 187, 188, 205, 212], "function": [5, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 26, 28, 29, 30, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 60, 61, 62, 64, 65, 66, 74, 75, 78, 86, 87, 89, 90, 92, 97, 99, 102, 105, 110, 117, 118, 119, 125, 126, 128, 131, 132, 133, 134, 135, 139, 147, 153, 154, 157, 158, 159, 160, 164, 166, 167, 168, 169, 172, 173, 175, 176, 177, 178, 179, 180, 181, 185, 186, 187, 188, 189, 190, 191, 195, 198, 208, 210, 211, 213, 214, 215, 216, 217, 220, 221, 222, 224, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 238, 239, 242, 243, 244, 248, 251, 252, 253, 254, 255, 256, 258, 261, 262, 263, 266, 267, 268], "access": [5, 26, 32, 105, 113, 196, 210, 216, 261, 263, 266], "variou": [5, 210], "cast": [5, 29, 49, 60, 63, 75, 89, 90, 92, 154, 175, 205, 213, 258, 266, 268], "introspect": 5, "isdtyp": [5, 195, 210], "integr": [5, 63, 116, 118, 119], "keyword": [5, 7, 26, 63, 89, 90, 117, 140, 154, 175, 195, 210, 214, 217, 221, 222, 258, 262, 263, 266, 267, 268], "affect": [5, 15, 49, 214, 217], "intermedi": [5, 9, 110], "calcul": [5, 9, 10, 11, 12, 20, 21, 42, 47, 50, 61, 62, 64, 65, 66, 86, 87, 89, 90, 92, 93, 97, 99, 126, 127, 128, 129, 130, 137, 139, 141, 144, 153, 154, 166, 167, 169, 173, 174, 175, 178, 179, 190, 210, 253], "implementor": [5, 261], "free": [5, 217, 265], "when": [5, 7, 12, 16, 17, 26, 32, 47, 49, 59, 63, 75, 89, 90, 93, 99, 104, 105, 110, 116, 118, 125, 128, 137, 138, 139, 141, 142, 144, 153, 154, 158, 159, 163, 173, 175, 176, 179, 190, 192, 195, 196, 205, 210, 211, 213, 214, 215, 216, 218, 220, 221, 222, 224, 226, 228, 229, 230, 232, 233, 234, 235, 237, 238, 242, 244, 248, 251, 252, 253, 254, 255, 256, 258, 262, 266, 267, 268], "accumul": 5, "reduct": [5, 13, 14], "long": [5, 113, 222], "ha": [5, 9, 13, 14, 20, 23, 29, 34, 35, 40, 44, 47, 55, 86, 87, 88, 89, 90, 93, 97, 98, 99, 104, 107, 135, 139, 140, 143, 144, 145, 147, 153, 154, 166, 167, 171, 173, 175, 176, 178, 179, 180, 181, 185, 186, 187, 188, 190, 196, 205, 208, 213, 216, 217, 220, 221, 239, 246, 254, 255, 258, 260, 262, 263, 266, 268, 269], "wai": [5, 26, 63, 105, 208, 211, 217, 218, 263, 266, 267, 268, 269], "f4": [5, 205], "ensur": [5, 26, 163, 208, 212, 262, 266, 267, 268], "portabl": [5, 59, 125, 212, 214, 217, 218, 266], "consum": [5, 26, 63, 116, 118, 139, 208, 213, 214, 222, 261, 266, 267], "recommend": [5, 7, 19, 23, 26, 125, 131, 132, 133, 134, 139, 157, 173, 190, 203, 210, 212, 216, 217, 266], "guidanc": [5, 7, 49, 210, 211, 218, 266], "govern": [5, 50, 174, 205, 262, 263], "interact": [5, 213], "either": [5, 9, 10, 11, 12, 24, 26, 35, 40, 65, 77, 87, 89, 90, 93, 96, 97, 99, 101, 104, 105, 110, 113, 119, 120, 121, 125, 126, 127, 128, 129, 130, 135, 137, 138, 141, 142, 144, 146, 154, 157, 164, 165, 166, 169, 175, 178, 179, 180, 192, 196, 212, 213, 214, 218, 222, 253, 258, 266, 267, 269], "whether": [5, 13, 14, 26, 59, 60, 63, 75, 79, 89, 90, 91, 105, 114, 119, 122, 125, 139, 155, 159, 165, 210, 217, 238, 242, 243, 252, 254, 261, 265, 266, 268], "otherwis": [5, 13, 14, 15, 16, 17, 26, 59, 60, 63, 75, 88, 105, 114, 116, 118, 137, 139, 141, 154, 158, 159, 163, 164, 173, 175, 190, 191, 192, 195, 196, 208, 217, 238, 240, 246, 253, 254, 260, 265], "note": [5, 7, 9, 10, 11, 12, 13, 14, 20, 21, 22, 24, 25, 26, 28, 29, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 59, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 75, 76, 77, 79, 85, 86, 87, 88, 89, 90, 92, 93, 96, 97, 99, 100, 101, 103, 104, 106, 107, 108, 109, 110, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 126, 127, 128, 129, 130, 131, 133, 134, 135, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 152, 153, 154, 155, 156, 157, 158, 160, 162, 163, 164, 165, 166, 167, 169, 170, 173, 174, 175, 176, 177, 178, 179, 180, 181, 184, 185, 186, 187, 188, 189, 190, 191, 192, 195, 196, 210, 216, 220, 222, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 242, 243, 244, 246, 247, 248, 250, 251, 252, 253, 254, 255, 256, 258, 260, 266, 267, 268, 269], "possibl": [5, 26, 60, 75, 104, 105, 137, 141, 159, 160, 178, 179, 208, 211, 212, 213, 214, 216, 217, 218, 220, 222, 262, 266, 267, 268, 269], "multipl": [5, 7, 13, 14, 16, 17, 40, 42, 44, 88, 89, 135, 137, 139, 141, 144, 145, 154, 173, 175, 190, 196, 208, 211, 213, 216, 217, 221, 222, 243, 244, 262, 263, 266, 268], "In": [5, 12, 19, 26, 59, 89, 90, 93, 96, 104, 119, 121, 122, 139, 144, 148, 154, 157, 164, 175, 195, 196, 198, 205, 212, 213, 216, 218, 233, 234, 252, 253, 255, 258, 262, 263, 267, 268, 269], "clearli": [5, 59, 119, 203, 213, 262, 263], "warn": [5, 158, 218], "about": [5, 7, 26, 101, 111, 214, 262, 266, 268, 269], "": [5, 26, 29, 32, 49, 58, 59, 60, 80, 104, 105, 140, 157, 173, 181, 182, 183, 190, 196, 203, 208, 210, 211, 212, 213, 214, 216, 217, 220, 222, 226, 230, 234, 237, 251, 255, 256, 262, 263, 266, 268], "organ": [5, 210, 262, 267, 268], "within": [5, 15, 27, 196, 205, 208, 210, 213, 217, 224, 226, 229, 230, 233, 234, 235, 237, 266], "numer": [5, 9, 12, 20, 21, 40, 42, 44, 46, 47, 50, 51, 79, 89, 90, 92, 93, 104, 118, 119, 120, 121, 122, 135, 140, 144, 145, 152, 153, 154, 155, 162, 164, 170, 174, 175, 180, 205, 212, 224, 226, 229, 230, 233, 234, 235, 237, 239, 250, 251, 253, 258, 262, 266, 268], "accord": [5, 12, 60, 71, 75, 89, 90, 93, 101, 104, 106, 125, 144, 153, 160, 163, 164, 173, 177, 190, 191, 192, 196, 212, 213], "These": [5, 214, 242, 267], "intend": [5, 89, 90, 154, 175, 208, 258], "posit": [7, 9, 10, 11, 13, 14, 20, 46, 62, 65, 66, 81, 93, 98, 100, 101, 104, 121, 126, 128, 143, 144, 147, 157, 161, 165, 167, 169, 179, 195, 196, 208, 210, 212, 222, 236, 238, 252, 267], "paramet": [7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 116, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 208, 210, 222, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 246, 247, 248, 250, 251, 252, 253, 254, 255, 256, 258, 260, 262], "extern": [7, 268], "usabl": 7, "accept": [7, 26, 131, 132, 133, 134, 139, 157, 173, 190, 208, 263], "call": [7, 34, 92, 216, 217, 220, 253, 266, 267, 268], "argument": [7, 10, 11, 26, 40, 61, 62, 63, 64, 65, 66, 86, 89, 90, 110, 117, 126, 128, 135, 154, 160, 163, 166, 169, 175, 178, 179, 180, 192, 195, 205, 210, 212, 214, 216, 217, 224, 226, 229, 230, 233, 234, 235, 237, 258, 262, 266, 267, 268], "map": [7, 213, 214], "base": [7, 47, 57, 58, 97, 98, 126, 127, 128, 129, 153, 185, 186, 187, 188, 196, 210, 214, 220, 222, 262, 263, 266, 267, 268], "sole": [7, 196, 203, 262], "incompat": [7, 26, 74, 105, 208, 263, 266], "us": [7, 19, 26, 27, 59, 60, 83, 101, 105, 110, 125, 127, 129, 139, 161, 185, 187, 195, 196, 205, 210, 212, 213, 214, 215, 217, 218, 221, 222, 223, 224, 226, 228, 229, 230, 232, 233, 234, 235, 237, 261, 262, 263, 264, 265, 266, 269], "normal": [7, 78, 172, 224, 226, 228, 229, 230, 232, 233, 234, 235, 237], "practic": [7, 19, 196, 262, 267], "avail": [7, 105, 117, 208, 216, 261, 263, 267], "still": [7, 26, 222, 262, 267, 268, 269], "consid": [7, 26, 63, 105, 131, 132, 133, 134, 185, 186, 187, 188, 213, 217, 236, 251, 262, 266, 268, 269], "compliant": [7, 26, 51, 93, 99, 105, 125, 128, 131, 132, 133, 134, 137, 138, 139, 141, 142, 173, 190, 212, 215, 217, 263, 266], "altern": [7, 214, 216, 269], "thei": [7, 26, 205, 211, 216, 217, 221, 222, 261, 262, 263, 266, 268, 269], "were": [7, 104, 158, 163, 210, 266], "option": [7, 13, 14, 15, 16, 17, 23, 26, 57, 58, 59, 60, 63, 77, 78, 88, 89, 90, 92, 94, 95, 100, 102, 105, 106, 107, 116, 118, 125, 137, 139, 141, 149, 150, 154, 158, 159, 161, 163, 173, 175, 176, 190, 193, 194, 195, 210, 221, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 246, 248, 251, 258, 260, 262, 267, 268], "lead": [7, 104, 213, 252, 255, 266], "readabl": [7, 205, 262, 267], "code": [7, 59, 205, 214, 215, 217, 220, 222, 262, 266, 267, 268], "easier": [7, 208, 214, 262], "evolv": [7, 208, 262], "over": [7, 13, 14, 26, 88, 125, 137, 139, 141, 154, 173, 175, 176, 180, 190, 191, 212, 213, 214, 216, 217, 221, 224, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 239, 258, 260, 262, 266], "ad": [7, 9, 10, 11, 12, 13, 14, 20, 21, 24, 26, 29, 35, 40, 42, 43, 44, 46, 47, 50, 51, 60, 61, 62, 63, 64, 66, 86, 87, 93, 96, 97, 99, 100, 101, 105, 106, 107, 120, 121, 122, 125, 126, 127, 128, 129, 135, 140, 144, 145, 147, 148, 149, 150, 152, 153, 154, 162, 164, 166, 167, 169, 170, 174, 175, 178, 179, 180, 185, 186, 187, 188, 191, 192, 196, 209, 210, 211, 217, 238, 239, 240, 242, 243, 244, 246, 247, 248, 250, 251, 252, 253, 254, 255, 256, 258, 260, 263], "worri": 7, "xi": [7, 140], "annot": [7, 210, 222, 266], "individu": [7, 139, 163, 217, 220, 221, 222, 225, 236, 266, 267], "aim": [7, 211, 222, 261, 262, 263, 266, 267, 268, 269], "strongli": [7, 214, 268], "look": [7, 268], "like": [7, 208, 211, 213, 214, 220, 222, 263, 266, 267, 268], "funcnam": 7, "key1": 7, "key2": 7, "none": [7, 13, 14, 15, 16, 17, 23, 26, 32, 49, 57, 58, 59, 60, 63, 77, 78, 83, 88, 89, 90, 92, 94, 95, 100, 102, 105, 106, 107, 114, 116, 118, 125, 137, 139, 141, 149, 150, 154, 158, 159, 161, 163, 173, 175, 176, 190, 193, 194, 196, 210, 217, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 246, 248, 251, 258, 260, 266, 267, 269], "out": [7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 196, 210, 211, 214, 216, 220, 221, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 246, 247, 248, 250, 251, 252, 253, 254, 255, 256, 258, 260, 265, 268], "int": [7, 12, 13, 14, 15, 16, 17, 18, 21, 22, 26, 27, 28, 30, 31, 32, 33, 34, 35, 37, 38, 39, 41, 42, 43, 45, 47, 48, 49, 50, 51, 52, 56, 57, 58, 59, 60, 65, 67, 69, 70, 71, 72, 74, 77, 78, 85, 88, 89, 90, 92, 93, 94, 96, 98, 100, 101, 102, 104, 106, 107, 108, 109, 110, 111, 123, 124, 125, 130, 137, 138, 139, 141, 142, 143, 144, 146, 148, 149, 151, 153, 154, 157, 158, 159, 160, 161, 168, 171, 172, 173, 174, 175, 176, 177, 180, 181, 182, 183, 189, 190, 191, 192, 193, 196, 205, 220, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 239, 241, 246, 247, 257, 258, 259, 260, 267], "str": [7, 8, 23, 118, 119, 140, 267], "modulo": 7, "self": [7, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 59, 91, 210, 268], "few": [7, 212, 220, 266, 268], "enhanc": 7, "default": [7, 13, 14, 15, 16, 17, 18, 23, 26, 59, 60, 63, 77, 78, 88, 89, 90, 92, 94, 95, 100, 102, 105, 106, 107, 115, 116, 118, 125, 137, 139, 140, 141, 147, 149, 150, 154, 158, 159, 161, 163, 168, 172, 173, 175, 177, 180, 182, 183, 185, 186, 187, 189, 190, 191, 193, 194, 195, 196, 210, 212, 217, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 241, 246, 248, 251, 252, 255, 258, 260], "form": [7, 23, 26, 40, 79, 135, 136, 182, 183, 214, 238, 240, 241, 242, 243, 244, 246, 247, 248, 251, 252, 253, 254, 255, 256, 258, 263, 267], "question": [7, 211, 266], "commonli": [7, 173, 190, 211, 213, 215, 261, 262, 266, 267], "written": [7, 208, 266, 268], "yyyi": [8, 23, 263], "mm": [8, 23, 263], "string": [8, 23, 118, 119, 210, 263, 266], "version": [8, 9, 10, 11, 12, 13, 14, 20, 21, 23, 24, 25, 26, 29, 34, 35, 40, 42, 43, 44, 46, 47, 50, 51, 59, 60, 61, 62, 63, 64, 66, 77, 79, 85, 86, 87, 90, 93, 96, 97, 99, 100, 101, 105, 106, 107, 110, 111, 112, 119, 120, 121, 122, 125, 126, 127, 128, 129, 135, 137, 138, 140, 141, 142, 143, 144, 145, 147, 148, 149, 150, 152, 153, 154, 155, 158, 162, 163, 164, 165, 166, 167, 169, 170, 174, 175, 176, 178, 179, 180, 181, 185, 186, 187, 188, 189, 191, 192, 195, 208, 211, 217, 221, 222, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 242, 243, 244, 246, 247, 248, 250, 251, 252, 253, 254, 255, 256, 258, 260, 264, 266, 268], "absolut": [9, 20, 85, 164, 212, 214, 246, 247, 253, 262], "x_i": [9, 10, 11, 61, 62, 64, 66, 68, 76, 77, 79, 86, 87, 97, 99, 103, 112, 120, 121, 122, 126, 127, 128, 129, 132, 137, 139, 141, 145, 152, 155, 156, 162, 164, 165, 166, 167, 169, 170, 173, 178, 179, 184, 190], "input": [9, 10, 11, 12, 13, 14, 16, 17, 18, 20, 26, 30, 41, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 75, 76, 77, 78, 79, 85, 86, 87, 88, 89, 90, 92, 93, 95, 96, 97, 98, 99, 102, 103, 104, 105, 107, 108, 109, 110, 112, 119, 120, 121, 122, 123, 124, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 194, 195, 203, 208, 210, 213, 215, 217, 218, 222, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 246, 247, 248, 250, 251, 252, 253, 255, 256, 258, 260, 262, 266, 268], "magnitud": [9, 12, 20, 85, 93, 104, 110, 144, 210, 255, 256], "represent": [9, 12, 20, 29, 44, 67, 70, 72, 80, 81, 82, 84, 93, 101, 104, 111, 144, 145, 146, 178, 179, 216, 267], "known": [9, 164, 212, 215, 216], "norm": [9, 224, 226, 228, 229, 230, 232, 233, 234, 235, 237, 246, 260, 262], "modulu": [9, 157], "z": [9, 10, 11, 61, 62, 64, 66, 126, 213], "bj": [9, 12, 79, 93, 144], "comput": [9, 12, 28, 31, 33, 37, 39, 40, 43, 57, 58, 67, 70, 72, 79, 88, 89, 90, 91, 92, 93, 96, 98, 104, 108, 109, 110, 123, 124, 131, 132, 133, 134, 135, 137, 138, 139, 141, 142, 144, 145, 147, 148, 152, 154, 158, 173, 175, 180, 185, 186, 187, 188, 190, 191, 196, 210, 212, 215, 220, 224, 225, 226, 228, 229, 230, 232, 233, 234, 235, 236, 237, 238, 239, 242, 243, 244, 246, 248, 251, 252, 253, 254, 255, 256, 258, 260, 262, 266], "operatornam": [9, 10, 11, 61, 62, 64, 66, 86, 87, 164, 166, 167, 178, 179, 213, 242, 243, 253, 255], "sqrt": [9, 10, 11, 61, 62, 195, 210, 212, 213, 224, 226, 228, 229, 230, 232, 233, 234, 235, 237, 260], "take": [9, 126, 128, 153, 169, 195, 210, 217, 222, 266], "care": [9, 214, 262], "undu": [9, 215], "overflow": [9, 12, 89, 90, 93, 104, 110, 125, 154, 175, 205, 253, 258, 262], "dure": [9, 40, 59, 110, 135, 173, 190, 205, 208, 251, 266, 267], "stage": [9, 110, 263], "contain": [9, 10, 11, 12, 13, 14, 15, 16, 17, 20, 21, 22, 23, 26, 28, 30, 31, 32, 33, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 76, 77, 78, 79, 85, 86, 87, 88, 89, 90, 92, 93, 94, 95, 96, 97, 99, 103, 104, 105, 108, 109, 110, 112, 113, 114, 116, 118, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 162, 163, 164, 165, 166, 167, 169, 170, 173, 174, 175, 178, 179, 180, 182, 183, 184, 185, 186, 187, 188, 190, 191, 193, 196, 210, 212, 213, 214, 216, 220, 221, 225, 226, 227, 230, 231, 234, 236, 237, 238, 239, 240, 241, 242, 243, 244, 246, 247, 248, 250, 251, 252, 253, 254, 255, 256, 258, 260, 266, 268], "nan": [9, 10, 11, 12, 13, 14, 24, 25, 35, 61, 62, 63, 64, 65, 66, 76, 77, 85, 86, 87, 93, 96, 97, 99, 103, 104, 110, 120, 121, 122, 126, 127, 128, 129, 130, 137, 138, 139, 141, 142, 144, 146, 148, 153, 157, 162, 163, 164, 165, 166, 167, 169, 173, 178, 179, 184, 185, 186, 187, 188, 190, 195, 203, 213, 266], "infin": [9, 10, 11, 12, 13, 14, 24, 25, 35, 62, 63, 64, 65, 66, 76, 81, 86, 87, 93, 96, 97, 99, 103, 104, 110, 120, 121, 126, 127, 128, 129, 130, 137, 141, 144, 148, 153, 157, 162, 165, 166, 167, 169, 178, 179, 184, 213, 253, 260], "imag": [9, 10, 11, 12, 24, 62, 63, 66, 87, 96, 97, 99, 120, 121, 122, 125, 126, 128, 139, 148, 162, 164, 167, 169, 179, 195, 210, 211, 266, 267, 268], "finit": [9, 10, 11, 12, 25, 35, 42, 62, 65, 66, 87, 93, 96, 97, 99, 104, 110, 114, 120, 121, 126, 128, 144, 148, 153, 157, 165, 167, 169, 179, 212], "2022": [9, 10, 11, 12, 13, 14, 20, 21, 24, 25, 26, 29, 35, 40, 42, 43, 44, 46, 47, 50, 51, 60, 61, 62, 63, 64, 66, 79, 86, 87, 93, 96, 97, 99, 100, 101, 106, 107, 111, 112, 119, 120, 121, 122, 125, 126, 127, 128, 129, 135, 140, 144, 145, 147, 148, 149, 150, 152, 153, 154, 155, 162, 164, 166, 167, 169, 170, 174, 175, 176, 178, 179, 180, 185, 186, 187, 188, 191, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 242, 243, 244, 246, 247, 248, 250, 251, 252, 253, 254, 255, 256, 258, 260], "12": [9, 10, 11, 12, 13, 14, 20, 21, 24, 25, 26, 29, 34, 35, 40, 42, 43, 44, 46, 47, 50, 51, 59, 60, 61, 62, 63, 64, 66, 77, 79, 85, 86, 87, 90, 93, 96, 97, 99, 100, 101, 105, 106, 107, 110, 111, 112, 119, 120, 121, 122, 125, 126, 127, 128, 129, 135, 137, 138, 140, 141, 142, 143, 144, 145, 147, 148, 149, 150, 152, 153, 154, 155, 158, 162, 163, 164, 165, 166, 167, 169, 170, 174, 175, 176, 178, 179, 180, 181, 185, 186, 187, 188, 189, 191, 192, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 242, 243, 244, 246, 247, 248, 250, 251, 252, 253, 254, 255, 256, 258, 260, 263], "approxim": [10, 11, 47, 61, 62, 64, 65, 66, 86, 87, 97, 99, 104, 126, 127, 128, 129, 153, 166, 167, 178, 179, 212, 248, 251], "princip": [10, 11, 61, 62, 64, 66, 126, 169, 213, 262], "invers": [10, 11, 61, 62, 64, 65, 66, 213, 224, 226, 229, 230, 231, 232, 233, 234, 235, 237, 244, 247, 251, 262], "cosin": [10, 11, 86, 87, 179], "express": [10, 61, 63, 64, 65, 86, 166, 178, 196, 205, 214, 262, 265], "radian": [10, 61, 64, 65, 86, 166, 178], "arc": [10, 61, 64], "frac": [10, 11, 61, 62, 64, 66, 86, 87, 93, 125, 127, 129, 164, 166, 167, 178, 179, 213, 253], "pi": [10, 11, 61, 62, 64, 66, 87, 126, 128, 167, 178, 179, 195], "j": [10, 11, 12, 25, 61, 62, 64, 66, 87, 93, 97, 99, 125, 126, 128, 139, 144, 163, 164, 166, 167, 169, 178, 179, 196, 213, 242, 255, 258], "ln": [10, 11, 61, 62, 64, 66, 126], "zj": [10, 61, 62, 64, 66], "conj": [10, 11, 61, 62, 64, 66, 87, 97, 99, 126, 127, 128, 129, 167, 169, 179, 195, 210], "multi": [10, 11, 61, 62, 64, 66, 195, 213, 216, 217, 239, 268], "branch": [10, 11, 61, 62, 64, 65, 66, 86, 87, 93, 97, 99, 126, 128, 144, 153, 166, 167, 169, 178, 179, 266], "cut": [10, 11, 61, 62, 64, 66, 86, 87, 97, 99, 126, 128, 153, 166, 167, 169, 178, 179, 266], "plane": [10, 11, 61, 62, 64, 66, 86, 87, 93, 97, 99, 144, 166, 167, 169, 178, 179, 266], "By": [10, 11, 13, 14, 61, 62, 64, 65, 66, 88, 89, 90, 126, 128, 137, 139, 141, 153, 154, 169, 173, 175, 190, 191, 212, 213, 239, 262, 267], "place": [10, 11, 15, 60, 61, 62, 63, 64, 66, 94, 95, 100, 105, 106, 107, 125, 149, 150, 161, 193, 194, 195, 203, 205, 210, 214, 217, 225, 236, 251], "line": [10, 11, 61, 62, 64, 66, 178, 179, 205, 213, 266, 267, 268, 269], "segment": [10, 11, 61, 62, 64, 66, 213], "infti": [10, 11, 61, 62, 64, 66, 86, 126, 128, 153, 169, 213], "axi": [10, 11, 13, 14, 16, 17, 18, 61, 62, 64, 66, 78, 88, 89, 90, 92, 98, 102, 126, 128, 137, 139, 141, 143, 153, 154, 158, 161, 168, 169, 171, 172, 173, 175, 176, 177, 180, 181, 189, 190, 191, 195, 210, 224, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 239, 246, 259, 260, 266], "rang": [10, 61, 62, 64, 66, 77, 89, 90, 126, 128, 154, 169, 175, 196, 210, 216, 258, 266], "strip": [10, 61, 62, 64, 66, 126, 128], "unbound": [10, 61, 62, 64, 66, 126, 128], "along": [10, 11, 13, 14, 16, 17, 18, 61, 62, 64, 66, 78, 88, 89, 90, 92, 100, 102, 126, 128, 137, 139, 141, 154, 158, 161, 168, 169, 172, 173, 175, 176, 177, 178, 179, 181, 189, 190, 191, 196, 210, 224, 226, 228, 229, 230, 232, 233, 234, 235, 237, 239, 258, 260, 262], "c99": [10, 11, 61, 62, 64, 66, 93, 126, 128, 144, 153, 169, 213, 263], "provision": [10, 11, 61, 62, 64, 66, 126, 128, 153, 169, 213], "statu": [10, 11, 61, 62, 64, 66, 126, 128, 153, 169, 213], "greater": [10, 11, 33, 38, 48, 61, 62, 65, 66, 69, 71, 77, 85, 93, 103, 104, 126, 128, 153, 157, 164, 165, 167, 169, 171, 179, 195, 196, 224, 226, 228, 229, 230, 232, 233, 234, 235, 237, 239, 247], "than": [10, 11, 19, 26, 32, 38, 40, 47, 48, 49, 55, 61, 62, 63, 65, 66, 69, 71, 76, 77, 85, 89, 90, 92, 93, 101, 102, 103, 104, 105, 126, 127, 128, 129, 135, 139, 144, 153, 154, 157, 164, 165, 167, 169, 171, 173, 175, 176, 179, 184, 185, 186, 187, 188, 190, 196, 205, 208, 211, 214, 217, 218, 221, 224, 226, 228, 229, 230, 232, 233, 234, 235, 237, 239, 246, 247, 248, 251, 258, 260, 262, 263, 266, 268], "less": [10, 11, 39, 47, 61, 65, 66, 76, 85, 93, 104, 126, 127, 128, 129, 153, 157, 164, 165, 169, 173, 190, 195, 196, 214, 224, 226, 228, 229, 230, 232, 233, 234, 235, 237, 246, 247, 248, 251, 260, 266], "\u03c0": [10, 64, 65, 84], "0j": [10, 11, 12, 25, 62, 63, 66, 87, 97, 99, 100, 126, 128, 149, 150, 164, 167, 169, 179, 213, 253], "nonzero": [10, 11, 12, 62, 66, 87, 93, 97, 99, 104, 144, 167, 179, 195, 196, 210, 251], "3\u03c0": [10, 65], "hyperbol": [11, 62, 66, 86, 87, 166, 167, 178, 179, 213], "aco": [11, 61, 195, 210, 212], "simpli": [11, 99, 128, 211, 222, 266, 268], "upper": [11, 77, 100, 183, 210, 238, 252], "half": [11, 15, 66, 125, 143, 169, 180, 196, 227], "area": [11, 62, 66], "sector": [11, 62, 66], "\u03c0j": [11, 62, 66, 126, 128], "3\u03c0j": [11, 126, 128], "sum": [12, 21, 90, 110, 130, 154, 195, 210, 246, 258, 260, 262], "x1_i": [12, 65, 67, 69, 70, 71, 72, 85, 93, 96, 104, 108, 109, 110, 123, 124, 130, 131, 133, 134, 138, 142, 144, 146, 148, 153, 157, 174, 192, 210], "x2_i": [12, 65, 67, 69, 70, 71, 72, 85, 93, 96, 104, 108, 109, 110, 123, 124, 130, 131, 133, 134, 138, 142, 144, 146, 148, 153, 157, 174, 192, 210], "union": [12, 13, 14, 15, 21, 22, 26, 28, 30, 31, 32, 33, 37, 38, 39, 41, 42, 43, 45, 47, 48, 49, 50, 51, 52, 59, 60, 65, 67, 69, 70, 71, 72, 75, 77, 78, 85, 88, 93, 94, 96, 101, 102, 104, 106, 107, 108, 109, 110, 111, 118, 119, 123, 124, 125, 130, 131, 133, 134, 137, 138, 139, 141, 142, 143, 144, 146, 148, 149, 153, 154, 157, 158, 160, 161, 171, 172, 173, 174, 175, 180, 190, 192, 193, 227, 231, 246, 248, 251, 260, 267], "first": [12, 16, 17, 19, 65, 67, 69, 70, 71, 72, 89, 90, 92, 96, 108, 109, 110, 123, 124, 130, 131, 133, 134, 135, 138, 142, 144, 146, 148, 153, 161, 172, 174, 178, 179, 180, 185, 186, 187, 191, 192, 196, 213, 239, 242, 250, 252, 253, 255, 256, 262, 266, 267, 268, 269], "At": [12, 65, 67, 69, 70, 71, 72, 85, 93, 96, 104, 108, 109, 110, 123, 124, 130, 131, 133, 134, 138, 142, 144, 146, 148, 153, 157, 160, 174, 192], "least": [12, 40, 65, 67, 69, 70, 71, 72, 85, 88, 93, 96, 104, 108, 109, 110, 118, 119, 123, 124, 130, 131, 133, 134, 135, 138, 142, 144, 146, 147, 148, 153, 157, 160, 174, 185, 186, 187, 188, 192, 211, 212, 251], "remain": [12, 93, 96, 104, 119, 121, 122, 144, 148, 157, 159, 164, 196, 214, 237], "neither": [12, 40, 93, 104, 135, 144, 180, 255, 267], "nor": [12, 93, 104, 144, 255, 267], "mathemat": [12, 19, 65, 84, 86, 87, 93, 99, 104, 126, 128, 144, 166, 167, 178, 179, 195, 213, 246, 260], "round": [12, 15, 76, 93, 103, 104, 144, 169, 184, 195, 210, 212], "nearest": [12, 93, 144, 162, 184, 212], "mode": [12, 93, 144, 212, 224, 226, 228, 229, 230, 232, 233, 234, 235, 237, 252], "too": [12, 26, 93, 104, 144, 262, 266], "larg": [12, 93, 104, 144, 216, 222, 253, 266], "appropri": [12, 26, 93, 104, 144, 213, 218], "commut": 12, "associ": [12, 42, 144, 198, 205, 248, 251, 254, 262, 265, 267], "tabl": [12, 93, 144, 195], "c": [12, 93, 96, 125, 144, 147, 148, 158, 172, 173, 179, 190, 196, 210, 213, 216, 219, 238, 242, 243, 244, 252, 254, 255, 263, 265, 266, 268], "d": [12, 93, 96, 125, 144, 148, 205, 225, 236], "dj": [12, 93, 144], "independ": [12, 93, 139, 144, 162, 196, 208, 216, 239, 252, 254, 262, 263, 266], "abov": [12, 89, 90, 93, 96, 126, 128, 144, 148, 153, 154, 169, 175, 182, 183, 196, 205, 213, 214, 216, 217, 220, 241, 242, 258, 262, 265, 268], "similarli": [12, 57, 119, 139, 140, 238, 255], "henc": [12, 79, 98, 147, 158, 185, 186, 187, 188, 196, 211, 213, 214, 215, 216, 220, 221, 222, 266, 268], "z1": 12, "z2": 12, "keepdim": [13, 14, 16, 17, 88, 137, 139, 141, 154, 173, 175, 190, 246, 260], "test": [13, 14, 91, 120, 121, 122, 139, 210, 212, 264, 266, 267, 268], "evalu": [13, 14, 22, 30, 36, 38, 41, 44, 45, 46, 48, 51, 52, 97, 99, 126, 127, 128, 129, 145, 152, 164, 165, 170, 208, 266], "ax": [13, 14, 16, 17, 19, 55, 56, 88, 89, 90, 102, 137, 139, 141, 143, 151, 154, 161, 171, 173, 175, 176, 180, 181, 190, 191, 196, 210, 226, 227, 230, 231, 234, 237, 239, 246, 251, 254, 257, 260], "logic": [13, 14, 24, 26, 93, 96, 131, 132, 133, 134, 144, 148, 217, 220, 226, 230, 234, 237], "AND": [13, 67, 96, 131, 265], "entir": [13, 14, 86, 87, 88, 97, 99, 137, 139, 141, 154, 166, 167, 173, 175, 190], "valid": [13, 14, 26, 27, 92, 98, 117, 143, 172, 180, 189, 196, 212, 220, 224, 226, 228, 229, 230, 232, 233, 234, 235, 237, 242, 252, 255, 267], "count": [13, 14, 78, 88, 89, 90, 92, 102, 176, 177, 185, 186, 191, 196, 210, 224, 226, 228, 229, 230, 232, 233, 234, 235, 237, 239, 243], "last": [13, 14, 18, 19, 55, 78, 89, 90, 92, 102, 161, 168, 172, 176, 177, 180, 191, 196, 224, 226, 228, 229, 230, 232, 233, 234, 235, 237, 239, 241, 246, 252, 255, 258], "invalid": [13, 14, 23, 92, 98, 218, 266], "rais": [13, 14, 19, 23, 24, 25, 26, 29, 34, 35, 40, 47, 51, 55, 60, 74, 92, 93, 97, 98, 105, 125, 135, 137, 141, 147, 153, 159, 160, 171, 172, 189, 191, 196, 205, 208, 210, 216, 217, 218, 220, 239, 247, 266], "wa": [13, 14, 19, 26, 88, 104, 137, 139, 141, 154, 173, 175, 190, 205, 217, 222, 266, 268], "OR": [14, 24, 70, 133, 148, 265], "start": [15, 125, 196, 210, 222, 266, 268], "stop": [15, 125, 196, 210, 267], "step": [15, 125, 196, 267], "evenli": [15, 125], "space": [15, 125, 225, 227, 236], "open": [15, 125, 143, 180, 196], "inclus": [15, 196, 266], "end": [15, 65, 86, 125, 164, 166, 178, 179, 203, 214, 253, 266, 267, 268], "exclus": [15, 196], "distanc": [15, 110], "between": [15, 26, 47, 51, 65, 78, 93, 96, 101, 125, 137, 138, 141, 142, 148, 153, 172, 185, 186, 187, 188, 205, 213, 214, 217, 225, 236, 262, 266, 268], "adjac": 15, "output": [15, 60, 63, 75, 78, 89, 90, 94, 95, 98, 100, 102, 105, 106, 107, 114, 125, 140, 149, 150, 159, 161, 163, 171, 172, 176, 181, 193, 194, 208, 210, 213, 214, 217, 219, 220, 222, 224, 225, 226, 228, 229, 230, 233, 234, 235, 236, 237, 258, 266], "infer": [15, 60, 63, 95, 106, 107, 150, 159, 194, 215, 262, 267], "cannot": [15, 26, 57, 105, 178, 179, 210, 213, 215, 266], "guarante": [15, 59, 185, 187, 208, 213, 217, 266, 268], "error": [15, 19, 23, 24, 25, 26, 29, 34, 35, 51, 55, 93, 105, 137, 141, 178, 179, 205, 212, 253, 266], "ceil": [15, 195], "indic": [16, 17, 18, 26, 60, 89, 90, 91, 105, 114, 119, 125, 143, 147, 161, 163, 164, 176, 177, 180, 182, 183, 185, 187, 196, 205, 210, 260, 266], "occur": [16, 17, 75, 110, 178, 179, 185, 186, 187, 188, 213, 267], "occurr": [16, 17, 185], "comparison": [16, 17, 18, 28, 31, 33, 37, 39, 43, 96, 108, 109, 123, 124, 137, 138, 141, 142, 148, 168, 195, 213, 263, 267], "search": [16, 17, 163, 195], "flatten": [16, 17, 78, 158, 161, 185, 186, 187, 188, 260, 262], "descend": [18, 168, 255, 256], "stabl": [18, 168, 216], "sort": [18, 163, 195, 210, 242, 243, 255, 256], "ascend": [18, 163, 168, 210], "stabil": [18, 168], "maintain": [18, 168, 211, 266, 268], "rel": [18, 19, 55, 102, 138, 142, 161, 168, 210, 241, 248, 251, 258], "compar": [18, 168, 185, 186, 187, 188, 212, 217, 267, 269], "properti": [19, 53, 54, 55, 56, 57, 58, 118, 210, 213, 217, 222, 266], "transpos": [19, 40, 55, 135, 136, 180, 238, 242, 251, 255, 262], "instanc": [19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 55, 59, 91, 205, 208, 210, 217], "permut": [19, 55, 151], "revers": [19, 55, 65, 102], "origin": [19, 55, 65, 110, 143, 159, 161, 210, 214, 224, 226, 229, 230, 233, 234, 235, 237, 266, 267], "limit": [19, 101, 111, 119, 212, 262, 265], "matric": [19, 40, 55, 135, 136, 140, 182, 183, 238, 240, 241, 242, 243, 244, 246, 247, 248, 251, 252, 253, 254, 255, 256, 258, 262], "deviat": [19, 139, 173, 212, 218, 266, 268], "et": [19, 255, 256], "al": 19, "intent": [19, 65], "found": [19, 213, 216, 268, 269], "problemat": [19, 63, 211, 214], "conflict": 19, "definit": [19, 86, 87, 166, 167, 178, 179, 210, 238, 267], "batch": [19, 260, 262], "cetera": [19, 255, 256], "permute_dim": [19, 195], "interfac": [19, 216, 262, 266, 268], "ab": [20, 110, 153, 195, 210, 246, 260], "augend": 21, "addend": 21, "self_i": [22, 28, 30, 31, 33, 36, 37, 38, 39, 41, 43, 44, 45, 46, 48, 50, 51, 52], "other_i": [22, 28, 30, 31, 33, 37, 38, 39, 41, 43, 45, 47, 48, 50, 51, 52], "bitwise_and": [22, 195], "api_vers": [23, 266], "object": [23, 24, 25, 26, 29, 32, 34, 35, 53, 57, 59, 60, 91, 101, 105, 111, 113, 115, 116, 117, 195, 196, 205, 208, 210, 214, 216, 217, 220, 222, 261, 263, 267, 268], "2020": [23, 222, 263, 265, 266], "10": [23, 27, 127, 196, 266], "latest": [23, 216], "modul": [23, 208, 263, 267, 268, 269], "everi": [23, 106, 107, 252, 266], "top": [23, 208, 266, 268], "level": [23, 205, 211, 216, 217, 261, 262, 266, 267], "public": [23, 261, 267, 268], "well": [23, 211, 213, 216, 217, 252, 268, 269], "part": [23, 35, 182, 183, 205, 210, 216, 221, 263, 266, 268], "convert": [24, 25, 29, 34, 35, 60, 105, 205, 210, 211, 213, 216, 266, 268], "handl": [24, 26, 61, 64, 86, 89, 90, 105, 127, 129, 139, 153, 154, 156, 164, 166, 170, 175, 178, 210, 211, 213, 214, 217, 218, 258, 266], "lazi": [24, 25, 29, 34, 35, 208, 210, 219, 268], "languag": [24, 25, 29, 34, 35, 214, 218, 220, 262, 266, 268], "therefor": [24, 25, 29, 32, 34, 35, 208, 216, 217, 218, 220, 222, 263, 266, 268], "abl": [24, 25, 29, 34, 35, 105, 214, 216, 217, 266, 268], "kind": [24, 25, 26, 29, 34, 35, 47, 51, 77, 93, 101, 105, 107, 111, 116, 118, 119, 153, 160, 205, 210, 220, 262, 265], "here": [24, 25, 26, 29, 34, 35, 196, 205, 214, 216, 221, 222, 268], "valueerror": [24, 25, 29, 34, 35, 60, 105, 159, 171, 268], "instead": [24, 25, 29, 34, 35, 63, 213, 216, 220, 267, 268], "2023": [24, 25, 26, 29, 34, 35, 59, 63, 77, 85, 90, 105, 110, 137, 138, 141, 142, 143, 154, 158, 163, 165, 175, 176, 180, 181, 185, 186, 187, 188, 189, 191, 224, 225, 226, 228, 229, 230, 233, 234, 236, 239, 258], "new": [25, 26, 77, 79, 85, 90, 98, 101, 105, 106, 107, 110, 111, 112, 119, 138, 142, 143, 149, 150, 155, 158, 159, 163, 165, 172, 176, 181, 189, 193, 194, 208, 210, 211, 214, 216, 217, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 263, 266, 267, 268], "stream": [26, 59, 217], "max_vers": [26, 210], "dl_devic": [26, 210], "enum": [26, 27], "pycapsul": 26, "export": [26, 105, 210, 216, 267], "from_dlpack": [26, 27, 195, 210, 216], "dlpack": [26, 27, 105, 210], "capsul": 26, "cuda": [26, 27, 211, 216, 268], "rocm": [26, 27, 211], "pointer": 26, "produc": [26, 32, 242, 252, 255, 268], "instruct": 26, "safe": [26, 125], "insert": [26, 98, 163, 210], "wait": 26, "event": [26, 265], "larger": [26, 101, 161, 173, 190, 251], "below": [26, 104, 105, 182, 183, 198, 216, 217, 241, 258], "signal": [26, 228, 232, 268], "ownership": 26, "stai": 26, "On": 26, "cpu": [26, 27, 208, 211, 216, 217, 262, 266, 268], "queue": [26, 59, 217], "similar": [26, 157, 196, 211, 213, 215, 266, 267, 268], "mechan": [26, 105, 208, 210, 211, 219, 261, 266], "most": [26, 208, 217, 242, 262, 266, 268], "yet": [26, 222, 266], "sycl": 26, "want": [26, 93, 144, 211, 215, 216, 266, 268, 269], "cl": 26, "agre": 26, "assum": [26, 86, 105, 166, 178, 208, 213, 217, 261, 266], "legaci": 26, "per": [26, 158, 211, 216, 264], "thread": [26, 266, 268], "disallow": 26, "due": [26, 42, 57, 58, 125, 144, 158, 176, 212, 213, 262, 266], "ambigu": [26, 63, 104, 214], "construct": [26, 181, 208, 210, 211, 220, 266], "particular": [26, 196, 211, 213, 216, 217, 222, 262, 265, 266, 268, 269], "kdlcpu": 26, "safeti": [26, 59], "prefer": [26, 104, 208, 262, 268], "develop": [26, 212, 266, 267, 268, 269], "who": [26, 212, 266, 267], "think": 26, "cost": 26, "caller": 26, "major": [26, 147, 158, 196, 263], "minor": [26, 263], "verifi": [26, 266], "even": [26, 93, 144, 153, 162, 212, 213, 214, 225, 227, 231, 236, 252, 262, 266, 268], "pass": [26, 65, 208, 212, 217], "format": [26, 27, 263], "__dlpack_device__": [26, 105, 195, 216], "buffererror": [26, 105, 210, 216], "v2023": [26, 105], "mandat": [26, 105, 266], "offer": [26, 105, 211, 216, 217, 221, 266, 268], "referenc": [26, 266], "underli": [26, 67, 70, 72, 79, 105, 155, 212, 253, 262], "interpret": [26, 105, 110, 213, 214, 269], "enumer": 26, "made": [26, 105, 208, 213, 261, 263, 266, 268], "never": [26, 60, 105, 159, 216, 266], "deem": [26, 105], "cross": [26, 105, 210, 217, 262, 266], "movement": [26, 105], "request": [26, 105, 266], "reus": [26, 60, 105, 214, 266], "buffer": [26, 60, 105, 214, 216], "happen": [26, 105, 214, 217, 220, 262], "dlpack_flag_bitmask_is_copi": 26, "flag": 26, "understood": [26, 205], "interchang": [26, 105, 208, 211, 219, 266], "detail": [26, 32, 49, 105, 147, 158, 185, 186, 187, 188, 195, 196, 207, 208, 215, 217, 221, 262, 266, 268], "stride": [26, 105, 214, 216], "fail": [26, 105, 266], "reason": [26, 105, 157, 179, 214, 216, 218, 262, 266, 267], "incorrect": 26, "scheme": [26, 263], "semver": 26, "abi": [26, 211, 216], "break": [26, 218], "introduc": [26, 63, 104, 161, 222, 267], "goe": 26, "togeth": [26, 205, 216], "dlmanagedtensorvers": 26, "struct": 26, "later": 26, "introduct": 26, "becaus": [26, 205, 211, 214, 217, 218, 220, 222, 242, 255, 266, 268, 269], "keep": [26, 205, 211, 266], "march": 26, "2025": 26, "onward": 26, "ideal": [26, 262], "late": 26, "okai": 26, "we": [26, 213, 255, 266], "get": [26, 101, 111, 211, 214, 216, 217], "now": [26, 105, 220, 266, 268], "our_own_dlpack_vers": 26, "fill": [26, 106, 107, 149, 150, 193, 194, 210], "field": [26, 185, 186, 187, 213, 242, 252, 253, 255, 266], "understand": [26, 251, 266, 267], "u": [26, 238, 251, 255], "just": [26, 266, 268], "our": 26, "elif": 26, "fine": [26, 222, 266], "own": [26, 208, 214, 266], "re": [26, 161, 211, 214, 222, 268], "intern": [26, 268], "did": 26, "older": [26, 179, 216, 263, 266], "around": [26, 267], "y": [26, 65, 105, 213, 214, 268], "dlmanagedtensor": 26, "so": [26, 101, 105, 113, 196, 203, 216, 262, 265, 266, 269], "tell": 26, "old": 26, "exchang": [26, 105, 216], "And": [26, 196, 217], "try": [26, 222, 266], "succe": 26, "info": [26, 113], "dltensor_vers": 26, "need": [26, 196, 211, 212, 214, 216, 218, 222, 262, 263, 266, 267, 268, 269], "used_dltensor_vers": 26, "done": [26, 208], "typeerror": [26, 29, 34, 35, 266, 268], "read": [26, 210, 214], "dlpack_flag_bitmask_read_onli": 26, "ignor": [26, 140, 160, 262], "respons": 26, "isn": [26, 211], "t": [26, 195, 211, 214, 217, 221, 222, 266, 268], "id": 27, "meant": 27, "device_typ": 27, "device_id": 27, "member": 27, "cpu_pin": 27, "opencl": 27, "vulkan": 27, "metal": 27, "vpi": 27, "cuda_manag": 27, "13": 27, "one_api": 27, "14": [27, 263], "truth": [28, 31, 33, 37, 39, 43, 91, 96, 108, 109, 123, 124, 148, 269], "undefin": [28, 31, 33, 37, 39, 43, 96, 108, 109, 123, 124, 148, 205, 262], "outsid": [29, 172, 189, 196, 205, 210, 216], "bound": [29, 77, 176, 177, 196, 205, 210, 222], "divis": [30, 41, 71, 93, 104, 157, 164, 213], "floor_divid": [30, 195], "greater_equ": [31, 195], "kei": [32, 49, 114, 116, 118, 266], "slice": [32, 49, 189, 195, 214], "ellipsi": [32, 49, 196], "semant": [32, 40, 49, 104, 135, 157, 176, 195, 196, 208, 214, 216, 218, 220, 221, 262, 266, 267, 268], "iter": [32, 196], "directli": [32, 266, 268], "__iter__": 32, "sequenc": [32, 60, 78, 125, 172, 180, 189, 196, 210, 226, 227, 230, 231, 234, 237, 257], "pep": [34, 40, 104, 135, 216, 263], "357": 34, "overflowerror": 35, "bitwise_invert": [36, 195], "less_equ": [37, 195], "bitwise_left_shift": [38, 195], "matrix": [40, 55, 135, 136, 140, 180, 182, 183, 238, 240, 241, 242, 243, 244, 246, 247, 248, 251, 252, 253, 254, 255, 256, 258, 262, 266], "product": [40, 42, 58, 89, 135, 144, 154, 180, 191, 210, 239, 250, 262], "built": [40, 135, 196, 205, 266], "465": [40, 135], "m": [40, 55, 92, 135, 136, 140, 158, 163, 180, 181, 182, 183, 196, 224, 226, 228, 229, 230, 232, 233, 234, 235, 237, 238, 240, 241, 242, 243, 244, 246, 247, 248, 250, 251, 252, 253, 254, 255, 256, 258], "remov": [40, 135, 171, 196, 213, 241, 258], "innermost": [40, 135, 136, 182, 183, 238, 240, 241, 242, 243, 244, 246, 247, 248, 251, 252, 253, 254, 255, 256, 258], "conjug": [40, 79, 135, 180, 191, 210, 238, 242, 255, 262], "transposit": [40, 135, 180], "desir": [40, 63, 75, 135, 143, 180, 212, 213, 216, 222], "prior": [40, 92, 135, 180], "inner": [40, 135, 210, 242, 262], "stack": [40, 55, 135, 136, 182, 183, 195, 221, 238, 240, 241, 242, 243, 244, 246, 247, 248, 251, 252, 253, 254, 255, 256, 258, 262], "l": [40, 135, 238, 258], "remaind": [41, 195, 196], "multipli": [42, 89, 154, 170, 195, 210, 212, 242, 255], "not_equ": [43, 195, 210], "negat": [44, 79, 145], "bitwise_or": [45, 195], "exponenti": [47, 97, 99, 130, 153, 213], "power": [47, 71, 97, 153, 213, 247, 268], "expon": [47, 153, 247], "versu": [47, 51, 63, 77, 93, 144, 153, 210], "bitwise_right_shift": [48, 195], "mix": [49, 125, 139, 160, 173, 190, 192, 195, 210, 214, 217, 262, 266], "how": [49, 93, 144, 208, 212, 217, 221, 267, 268, 269], "minuend": 50, "subtrahend": 50, "subtract": [50, 195, 210, 212], "divid": [51, 104, 156, 164, 195, 196, 210, 212], "choos": [51, 57, 59, 92, 93, 104, 125, 131, 132, 133, 134, 137, 138, 139, 141, 142, 144, 147, 158, 160, 173, 185, 186, 187, 188, 190, 195, 196, 203, 213, 214, 215, 217, 220, 266, 268], "bitwise_xor": [52, 195], "resid": [53, 59, 98, 143, 180, 196, 210, 216, 266], "fewer": 55, "unknown": [57, 58, 158], "graph": [57, 58, 75, 147, 158, 160, 185, 186, 187, 188, 196, 215, 220, 266], "static": [57, 215, 219], "resolv": [57, 60, 89, 90, 98, 104, 106, 107, 154, 175, 226, 227, 230, 231, 234, 237, 258, 266], "know": [57, 147, 158, 185, 186, 187, 188, 208, 211, 212, 215, 266, 268], "content": [57, 215, 265], "warrant": 57, "custom": [57, 211, 218], "immut": 57, "retriev": [57, 196, 208, 223, 262, 268], "behav": [57, 213], "current": [59, 116, 118, 139, 176, 203, 214, 217, 222, 266, 267, 268], "__dlpack__": [59, 105, 195, 210, 216], "caveat": 59, "would": [59, 60, 159, 163, 196, 210, 214, 220, 262, 266, 268], "locat": [59, 214], "explicit": [59, 60, 105, 176, 180, 217, 268], "enqueu": 59, "asynchron": 59, "explain": [59, 211], "clarifi": [59, 137, 141, 185, 186, 187, 210], "obj": 60, "nestedsequ": 60, "supportsbufferprotocol": 60, "possibli": [60, 221, 266], "nest": [60, 221], "protocol": [60, 208, 216, 222, 266, 268], "turn": [60, 208, 261], "memoryview": 60, "preced": [60, 213, 216, 217], "mixtur": 60, "convers": [60, 125, 210, 211, 266], "obei": [60, 125], "permit": [60, 63, 125, 215, 265], "To": [60, 104, 196, 210, 212, 213, 222, 266, 267, 269], "array_api": [60, 266], "astyp": [60, 195, 210], "exce": [60, 106, 107, 125], "sine": [61, 62, 166, 167, 179], "1j": [61, 64, 86, 87, 97, 99, 110, 166, 167, 178], "asinh": [61, 195, 210, 212], "asin": [62, 195, 210, 212], "irrespect": [63, 75, 213], "histor": [63, 179, 262], "discard": 63, "choic": [63, 173, 190, 208, 212, 213, 217, 218, 220, 221, 262, 263, 266, 268], "arbitrari": [63, 73, 114, 140, 160, 212], "achiev": [63, 196, 212], "outcom": 63, "clariti": 63, "newli": [63, 217], "alloc": [63, 182, 183, 215, 217], "tangent": [64, 65, 66, 178, 179], "atanh": [64, 195, 210, 212], "quotient": [65, 93, 104, 196], "domain": [65, 210, 212, 213, 266, 268], "notat": 65, "denot": [65, 191, 251], "pair": [65, 104, 239, 255], "codomain": 65, "quadrant": 65, "chosen": [65, 192, 216], "angl": [65, 87, 110, 167, 179], "rai": 65, "role": 65, "coordin": [65, 126, 140, 178, 179, 221, 266], "tradit": 65, "atan": [66, 195, 210, 212], "bitwis": [67, 70, 72, 195], "flip": [68, 195], "shift": [69, 71, 161, 227, 231], "arithmet": [71, 93, 139, 144, 195, 205, 213, 266], "propag": [71, 105, 137, 139, 141, 173, 190, 212], "floor": [71, 104, 195], "anoth": [73, 75, 105, 196, 208, 210, 211, 213, 214, 216, 217, 220, 242, 255, 266, 268], "capabl": [74, 113, 195, 198, 210], "being": [74, 196, 216, 217, 262, 266, 269], "from_": 75, "complet": [75, 160, 216, 221, 252, 263, 266, 268], "full": [75, 101, 160, 195, 210, 214, 252, 254, 255, 268], "smallest": [76, 101, 111, 246], "closest": [76, 103, 104, 162], "alreadi": [76, 103, 144, 162, 184, 216, 218, 263, 268], "min": [77, 101, 111, 182, 183, 191, 195, 210, 239, 246, 252, 255, 256, 260], "clamp": [77, 210], "min_i": 77, "max_i": 77, "join": [78, 172, 205], "befor": [78, 89, 90, 154, 163, 175, 185, 186, 187, 188, 191, 210, 213, 239, 258, 266], "concaten": 78, "leav": [78, 143, 172, 196, 203, 210, 212, 214, 251], "famili": [78, 172], "intxx": [78, 172, 205], "floatxx": [78, 172, 205], "share": [79, 155, 160, 208, 266], "718281828459045": 80, "euler": 80, "constant": [80, 84, 195, 196, 210], "71828182845904523536028747135266249775724709369995": 80, "Not": 82, "alia": [83, 118, 196, 210, 245, 249, 257, 259], "141592653589793": 84, "1415926535897932384626433": 84, "compos": [85, 205, 210], "begin": [86, 164, 166, 178, 179, 196, 203, 253, 268], "align": [86, 166, 178, 179, 210, 212, 267], "sum_": [86, 191], "2n": [86, 126], "jx": [86, 166, 178], "cosh": [86, 179, 195, 210, 212], "period": [87, 167, 178, 179], "ci": [87, 97, 99, 167, 268], "v": [87, 97, 99, 163, 167, 219, 251, 255, 266], "co": [87, 97, 99, 167, 195, 210, 212], "sin": [87, 97, 99, 167, 195, 210, 212, 214, 222], "total": [88, 147, 173, 190, 213], "include_initi": [89, 90], "cumul": [89, 90, 210], "unless": [89, 90, 144, 154, 175, 195, 258], "smaller": [89, 90, 154, 161, 175, 258, 268], "latter": [89, 90, 104, 154, 175, 196, 208, 213, 216, 258, 267], "help": [89, 90, 154, 175, 211, 212, 221, 258], "prevent": [89, 90, 154, 175, 258], "initi": [89, 90, 214, 266], "ident": [89, 90, 191, 213, 231, 243, 244, 247, 266], "success": [89, 90, 154, 175, 258], "discret": [92, 224, 225, 226, 228, 229, 230, 232, 233, 234, 235, 236, 237], "forward": [92, 224, 226, 228, 229, 230, 232, 233, 234, 235, 237, 266], "recurs": 92, "final": [92, 263], "dividend": [93, 104, 157], "divisor": [93, 104, 157, 173, 190], "small": [93, 104, 144, 212, 248, 251, 253, 266, 268], "gener": [93, 125, 139, 144, 157, 180, 208, 211, 213, 218, 262, 266, 267], "textbook": [93, 144], "formula": [93, 127, 129, 144], "ac": [93, 144, 213], "bd": [93, 144], "bc": [93, 144, 213], "riemann": [93, 144, 213], "sphere": [93, 144, 213], "infinit": [93, 114, 144, 169, 212, 213], "usual": [93, 144, 266], "interest": [93, 144, 212], "unlik": [93, 144, 263, 266], "consist": [93, 104, 118, 119, 125, 144, 163, 180, 196, 203, 213, 217, 222, 233, 234, 235, 237, 242, 251, 262, 266], "uniniti": [94, 95], "deriv": [95, 107, 150, 194, 196, 218, 267], "natur": [97, 126, 127, 128, 129, 153, 253, 262], "logarithm": [97, 126, 127, 128, 129, 130, 153, 253, 262], "expand": [98, 196, 268], "close": [98, 99, 125, 128, 162, 196, 266, 268], "indexerror": [98, 196], "exp": [99, 130, 153, 195, 210, 212, 253], "accur": [99, 128, 212, 253], "fdlibm": [99, 128, 212], "n_row": 100, "n_col": 100, "ones": [100, 150, 181, 195, 210, 214, 218, 266], "diagon": [100, 182, 183, 242, 251, 252, 258, 262], "elsewher": [100, 192, 213], "row": [100, 147, 158, 196, 246, 252, 254, 255], "column": [100, 242, 246, 252, 254, 255, 266], "finfo_object": [101, 210], "machin": [101, 111, 248, 251, 266], "inform": [101, 111, 266, 267, 268, 269], "occupi": [101, 111], "ep": [101, 248, 251, 266], "next": [101, 146, 266], "largest": [101, 111, 246, 255, 256], "smallest_norm": 101, "preserv": [102, 163, 196, 210, 213, 217], "reorder": [102, 143], "greatest": [103, 104], "238": 104, "goal": [104, 211, 214, 262, 268], "disambigu": 104, "toward": [104, 161, 212, 262, 267], "former": [104, 196, 213, 267], "overload": [104, 262], "led": 104, "subtl": 104, "bug": [104, 268, 269], "expect": [104, 118, 179, 205, 210, 212, 213, 215, 216, 217, 218, 222, 266], "design": [104, 210, 212, 264, 266, 268, 269], "ill": [104, 262], "diverg": [104, 269], "strictli": 104, "relat": [104, 196, 213, 217, 221, 262, 266, 268], "surpris": [104, 213], "unexpect": [104, 213, 218, 266], "enough": [105, 208, 211, 222, 261, 263, 266], "materi": [105, 216], "attributeerror": [105, 216], "present": [105, 118, 214, 215, 217, 261, 262, 263, 266], "suggest": [105, 268], "correctli": [105, 212], "move": [105, 143, 210, 217, 268], "agnost": 105, "fashion": 105, "illustr": [105, 214, 222], "def": [105, 222, 266, 267, 268], "func": 105, "xp_x": 105, "__array_namespace__": [105, 195, 223, 262, 266], "xp_y": 105, "work": [105, 211, 214, 216, 222, 266, 268, 269], "xxxxx": 105, "address": [105, 210, 262, 266, 267, 268], "unsupport": [105, 210], "fill_valu": [106, 107], "squar": [110, 169, 195, 210, 213, 238, 240, 242, 243, 244, 247, 251, 253, 254, 262], "root": [110, 169, 210, 213, 243], "hypotenus": 110, "triangl": 110, "side": [110, 163, 196, 216], "naiv": 110, "correct": [110, 173, 190, 214], "iinfo_object": [111, 210], "inspect": [113, 195], "util": [113, 195, 198, 210, 263, 266, 267], "class": [113, 198, 222, 266, 267], "xp": [113, 223, 261, 262, 266], "default_dtyp": [113, 195, 210], "dictionari": [114, 116, 118, 210], "fulli": [114, 217], "complianc": 114, "exclud": [114, 125, 196, 205], "demarc": [114, 215], "throughout": 114, "defaultdatatyp": 116, "concept": [116, 118, 196, 214, 266], "context": [116, 118, 213, 217, 267], "manag": [116, 118, 211, 217], "runtim": [117, 221, 222, 263, 266, 268], "creation": [117, 195, 208, 217, 266], "datatyp": 118, "decid": [118, 266], "belong": [118, 119, 160, 214], "shorthand": [118, 119, 196], "canon": 118, "float16": 119, "bfloat16": [119, 266], "int128": 119, "short": [119, 213, 266, 267], "extend": [119, 196, 213, 266], "extens": [119, 264, 268], "num": 125, "endpoint": 125, "delta_": 125, "textrm": [125, 164, 253], "sampl": [125, 173, 190, 225, 231, 236, 267], "nonneg": [125, 180, 196], "concern": [125, 158, 176, 210, 217, 221, 266], "polar": 126, "r": [126, 181, 196, 238, 242, 243, 244, 252, 254, 255, 266, 268], "theta": 126, "continu": [126, 128, 153, 169, 213, 242, 255, 266], "account": [126, 128, 153, 169, 266], "log_": [127, 129], "log": [127, 128, 129, 130, 153, 195, 210, 212], "mxn": [136, 182, 183, 241, 246, 248, 251, 252, 258], "sentinel": [137, 141], "pytorch": [139, 214, 217, 266, 267, 268], "jax": [139, 147, 158, 185, 186, 187, 188, 196, 214, 215, 266, 267, 268], "isnan": [139, 195, 210], "rather": [139, 205, 208, 211, 217, 218, 221, 262, 266], "reli": [139, 203, 211, 213, 215, 222, 268], "xy": 140, "grid": 140, "cartesian": 140, "ij": 140, "effect": [140, 173, 190, 217, 269], "ni": 140, "n3": 140, "nn": 140, "three": [140, 217], "p": [140, 243, 246, 260], "sourc": [143, 267, 269], "destin": 143, "uniqu": [143, 180, 185, 186, 187, 188, 210, 213, 226, 227, 230, 231, 234, 237, 242, 244, 252, 254, 255, 262], "state": [144, 195, 196, 266], "cdot": [144, 166, 170, 178, 191], "y_i": [145, 152], "direct": [146, 211, 266, 267], "build": [147, 158, 185, 186, 187, 188, 196, 208, 215, 221, 266], "dask": [147, 158, 185, 186, 187, 188, 196, 214, 215, 221, 266, 267, 268], "etc": [147, 158, 185, 186, 187, 188, 196, 215, 263], "find": [147, 158, 163, 185, 186, 187, 188, 196, 210, 215, 266, 267], "difficult": [147, 158, 185, 186, 187, 188, 196, 212, 215, 266], "omit": [147, 158, 185, 186, 187, 188, 196, 215, 216, 220], "section": [147, 158, 185, 186, 187, 188, 196, 210, 211, 215, 216, 217, 218, 222, 266, 268], "style": [147, 158, 196], "odd": [153, 225, 231, 233, 234, 236], "treat": [153, 181], "carefulli": 153, "That": [157, 196, 208, 218, 222, 266], "primarili": 157, "basi": 158, "liter": [158, 163, 224, 226, 228, 229, 230, 232, 233, 234, 235, 237, 246, 252, 260], "repetit": [158, 181], "prod": [158, 195, 210, 226, 230, 234, 237], "caus": 158, "advis": [158, 179, 214, 262], "regard": [158, 176, 210, 218, 262, 268], "degrad": 158, "One": [159, 220, 266, 269], "arrays_and_dtyp": 160, "among": [160, 163, 212, 213, 262], "restor": 161, "counterpart": 162, "sorter": 163, "control": [163, 217, 220, 221], "land": 163, "exactli": [163, 178, 179], "edg": 163, "satisfi": [163, 181, 195, 196, 212, 213, 267], "condit": [163, 192, 220, 265], "what": [163, 208, 216, 218, 222, 262, 266, 267, 268, 269], "constitut": [163, 173, 190], "argsort": [163, 195], "invok": [163, 267], "signum": 164, "whenev": [165, 268], "2j": 166, "sinh": [166, 179, 195, 210, 212], "indistinguish": [169, 196, 212], "degre": [173, 190, 243, 262], "freedom": [173, 190], "adjust": [173, 190, 266], "popul": [173, 190], "bessel": [173, 190, 211], "select": [176, 177, 196, 266], "conceptu": 176, "mutat": 176, "check": [176, 177, 196, 212, 238, 242, 243, 252, 254, 261, 268, 269], "analyt": [178, 179, 213], "pole": [178, 179], "tanh": [178, 195, 210, 212], "stem": [179, 242, 255], "patch": 179, "tensor": [180, 262, 266, 268], "contract": [180, 191, 262, 265], "outer": [180, 210], "dot": [180, 191, 262], "x1_ax": 180, "x2_ax": 180, "triangular": [182, 183, 238, 252], "closer": 184, "reconstruct": [185, 187], "distinct": [185, 186, 187, 188, 213, 262], "inverse_indic": [185, 187], "exact": [185, 187, 222], "aggreg": [185, 186], "namedtupl": [185, 186, 187, 242, 252, 253, 255, 262], "third": [185, 255], "fourth": 185, "split": [189, 210], "varianc": 190, "unbias": 190, "mathbf": 191, "overlin": [191, 251], "a_i": 191, "b_i": 191, "restrict": [191, 239, 262, 265], "yield": [192, 213], "2024": [192, 265], "signatur": [195, 208, 222, 266, 267], "subset": [195, 212, 267, 268], "categori": 195, "accuraci": [195, 219, 224, 226, 229, 230, 233, 234, 235, 237], "reflect": 195, "mt": 195, "__abs__": [195, 210], "__bool__": [195, 210, 220], "__complex__": [195, 210, 220], "__float__": [195, 210, 220], "__getitem__": [195, 196, 210], "__index__": [195, 210, 220], "__int__": [195, 210, 220], "to_devic": [195, 210, 217], "overview": 195, "algorithm": [195, 212, 253, 268], "inf": [195, 246, 260, 266], "newaxi": [195, 196, 210], "arang": [195, 267], "asarrai": [195, 210, 216, 268], "empty_lik": 195, "ey": [195, 210], "full_lik": [195, 210], "linspac": [195, 210], "meshgrid": [195, 210], "ones_lik": [195, 210], "tril": 195, "triu": 195, "zeros_lik": 195, "can_cast": 195, "finfo": [195, 210], "iinfo": [195, 210], "result_typ": 195, "acosh": [195, 210, 212], "atan2": [195, 212], "clip": [195, 196, 210], "copysign": [195, 210], "expm1": [195, 210, 212], "hypot": [195, 210, 212], "isfinit": [195, 210], "isinf": [195, 210], "log1p": [195, 210, 212], "log2": [195, 210, 212], "log10": [195, 210, 212], "logaddexp": [195, 212], "logical_and": 195, "logical_not": 195, "logical_or": 195, "logical_xor": 195, "nextaft": 195, "reciproc": [195, 212, 251], "signbit": [195, 210], "tan": [195, 210, 212], "trunc": [195, 210], "syntax": [195, 214, 216, 218, 266], "take_along_axi": 195, "__array_namespace_info__": [195, 198, 210], "default_devic": [195, 210], "linear": [195, 213, 254, 261], "algebra": [195, 213, 251, 261], "matrix_transpos": [195, 262], "tensordot": [195, 210, 262], "vecdot": [195, 210, 262], "manipul": 195, "broadcast_arrai": 195, "broadcast_to": 195, "concat": 195, "expand_dim": [195, 196], "moveaxi": [195, 210], "reshap": [195, 196], "roll": 195, "squeez": 195, "tile": [195, 210], "unstack": [195, 210], "argmax": 195, "argmin": 195, "count_nonzero": 195, "searchsort": [195, 210], "unique_al": [195, 210], "unique_count": [195, 210], "unique_invers": [195, 210], "unique_valu": [195, 210], "statist": 195, "cumulative_prod": 195, "cumulative_sum": [195, 210], "diff": 195, "__array_api_version__": [195, 207, 210, 263], "syntact": 196, "sugar": 196, "term": [196, 217, 262, 267], "colon": 196, "contrast": [196, 213, 220, 262], "combin": [196, 214, 221, 262], "basic": 196, "noth": 196, "perspect": 196, "item": [196, 214, 266], "2k": 196, "3k": 196, "q": [196, 242, 252], "obtain": [196, 265], "qk": 196, "100": [196, 220, 263], "junk": 196, "consider": [196, 214, 262], "comma": 196, "separ": [196, 210, 216, 261], "exp1": 196, "exp2": 196, "expn": 196, "forth": 196, "decreas": [196, 262], "entri": [196, 226, 227, 230, 231, 234, 237, 266], "retain": 196, "invoc": 196, "manner": [196, 216, 218], "sympi": 196, "flat": 196, "attempt": [196, 212, 213, 214, 217, 218, 266, 268], "dynam": 196, "mask": [196, 266], "filter": 196, "s1": 196, "sm": 196, "s2": 196, "sn": 196, "prohibit": [196, 214], "replac": [196, 220, 251, 269], "programmat": 198, "queri": 198, "them": [203, 211, 214, 218, 266, 268], "reproduc": [203, 212], "high": [205, 216, 217, 262, 266], "diagram": [205, 266], "lattic": 205, "particip": [205, 213], "matter": [205, 211, 213], "dash": 205, "connect": [205, 265], "i2": 205, "i1": 205, "i4": 205, "i8": 205, "u1": 205, "u2": 205, "u4": 205, "u8": 205, "f8": 205, "c8": 205, "c16": 205, "regardless": 205, "subject": [205, 253, 265], "met": 205, "addition": 205, "give": [205, 213, 216, 217], "No": [208, 263], "run": [208, 267, 268], "varieti": 208, "architectur": 208, "gpu": [208, 216, 217, 268], "distribut": [208, 212, 216, 217, 221, 265], "system": [208, 254, 266], "tpu": [208, 216], "emerg": [208, 216, 266], "instal": [208, 266, 269], "emploi": [208, 215, 217], "parallel": [208, 219, 266, 268], "jit": [208, 211, 266], "put": [208, 266, 268], "constraint": [208, 213, 264], "predict": 208, "itself": [208, 216, 220, 268], "motiv": 208, "importantli": 208, "awar": [208, 222, 268], "layer": [208, 221, 266, 268], "coupl": 208, "downstream": [208, 261, 266, 267], "import": [208, 211, 217, 220, 261, 262, 266, 268, 269], "structur": [208, 222, 266, 267], "interoper": [208, 216], "though": [208, 222, 266, 268], "soft": 208, "arraylib_nam": 208, "constrain": [208, 212], "unwil": 208, "signific": [208, 212, 214, 266], "adopt": [208, 213, 216, 268], "primari": [208, 216], "write": [208, 214, 266, 268], "consequ": [208, 222, 266], "easi": [208, 261], "unambigu": [208, 214, 216, 267], "clear": [208, 214, 216, 266, 268], "significantli": 208, "detract": 208, "experi": [208, 263], "strict": [208, 214], "typic": [208, 214, 216, 218, 263, 266, 268, 269], "good": [208, 211, 214, 217, 222, 266], "anyth": [208, 266], "thin": 208, "conveni": 208, "plan": [209, 266], "previou": [210, 268], "gh": [210, 268], "613": 210, "687": 210, "eager": [210, 219, 266], "708": 210, "revis": [210, 213, 217], "702": 210, "relax": 210, "730": 210, "749": 210, "intrins": 210, "652": 210, "602": 210, "741": 210, "665": 210, "751": 210, "701": 210, "625": 210, "742": 210, "752": 210, "fft": [210, 223, 226, 228, 229, 230, 232, 233, 234, 235, 237], "720": 210, "746": 210, "backport": 210, "689": 210, "715": 210, "693": 210, "653": 210, "703": 210, "713": 210, "656": 210, "690": 210, "699": 210, "705": 210, "692": 210, "604": 210, "740": 210, "fftn": [210, 230], "hfft": 210, "ifft": [210, 224], "ifftn": [210, 226], "irfft": [210, 235, 236], "irfftn": [210, 237], "fftfreq": 210, "rfftfreq": 210, "linalg": [210, 261, 262], "trace": [210, 214, 262, 267], "fix": [210, 217, 266, 268], "clarif": 210, "674": 210, "736": 210, "typo": 210, "633": 210, "681": 210, "706": 210, "miss": [210, 266], "639": 210, "issu": [210, 211, 213, 214, 216, 217, 221, 266, 268], "qr": 210, "661": 210, "choleski": [210, 262], "677": 210, "svd": [210, 251], "619": 210, "666": [210, 267], "644": 210, "622": 210, "723": 210, "497": 210, "498": 210, "546": 210, "525": 210, "528": 210, "557": 210, "529": 210, "448": 210, "447": 210, "537": 210, "526": 210, "554": 210, "517": 210, "520": 210, "521": 210, "522": 210, "523": 210, "524": 210, "442": 210, "434": 210, "445": 210, "454": 210, "453": 210, "436": 210, "451": 210, "452": 210, "484": 210, "435": 210, "531": 210, "530": 210, "532": 210, "568": 210, "514": 210, "534": 210, "536": 210, "437": 210, "441": 210, "438": 210, "553": 210, "440": [210, 263], "556": 210, "457": 210, "456": 210, "552": 210, "461": 210, "538": 210, "459": 210, "458": 210, "558": 210, "540": 210, "512": 210, "470": 210, "417": 210, "502": 210, "443": 210, "559": 210, "det": [210, 243, 253], "542": 210, "eigh": [210, 262], "543": 210, "eigvalsh": [210, 262], "547": 210, "matrix_norm": 210, "565": 210, "matrix_pow": 210, "549": 210, "matrix_rank": 210, "563": 210, "560": 210, "pinv": 210, "564": 210, "548": 210, "slogdet": [210, 262], "567": 210, "solv": [210, 222, 251], "566": 210, "561": 210, "svdval": 210, "562": 210, "541": 210, "vector_norm": 210, "550": [210, 268], "418": 210, "491": 210, "513": 210, "variabl": [210, 221, 254, 269], "515": 210, "527": 210, "573": 210, "480": 210, "485": 210, "496": 210, "503": 210, "427": 210, "416": 210, "fast": 210, "fourier": [210, 224, 225, 226, 228, 229, 230, 232, 233, 234, 235, 236, 237, 261], "transform": [210, 224, 225, 226, 228, 229, 230, 232, 233, 234, 235, 236, 237, 261, 267], "189": 210, "rfft": [210, 233, 236], "rfftn": [210, 234], "irfttn": 210, "fftshift": [210, 231], "ifftshift": 210, "464": 210, "429": 210, "439": 210, "572": 210, "510": 210, "511": 210, "473": 210, "scope": [211, 220, 221, 264, 267], "mention": [211, 218, 268], "There": [211, 214, 216, 217, 222, 266, 268, 269], "deal": [211, 221, 222, 263, 265], "assumpt": [211, 216, 263, 264, 266], "rest": [211, 266, 268], "ndarrai": [211, 216, 266, 268], "visual": 211, "often": [211, 213, 218, 262, 266, 267, 268], "difficulti": [211, 215], "relev": [211, 217, 222, 266], "certainti": 211, "inde": 211, "project": [211, 213, 216, 268], "statsmodel": 211, "scikit": [211, 221, 266, 267, 268], "bio": [211, 268], "qutip": 211, "strategi": [211, 217], "learn": [211, 221, 266, 267, 268], "submodul": [211, 261], "doesn": [211, 217, 266], "cupi": [211, 214, 266, 267, 268], "elementwisekernel": 211, "scipi": [211, 221, 266, 267], "astropi": [211, 268], "seem": [211, 216, 268], "almost": [211, 268], "inevit": 211, "someth": [211, 214, 266], "numba": [211, 216, 266, 268], "sens": [211, 220, 266, 268], "tend": [211, 214, 268], "reimplement": 211, "gamma": 211, "drop": [211, 222, 252, 255], "arraylib": 211, "cpython": 211, "backend": [211, 221, 266], "target": [211, 217], "better": [211, 268], "pypi": [211, 267, 268], "quit": [211, 266, 268], "readi": 211, "mainstream": 211, "todai": [211, 214, 262], "onc": [211, 263], "feasibl": [211, 266], "roundtiestoeven": 212, "ti": [212, 262, 266], "certain": [212, 213, 262], "boundari": 212, "reader": 212, "identifi": [212, 217, 267], "lack": 212, "phrase": [212, 218], "recogn": [212, 217], "seek": [212, 262, 267], "optim": [212, 214, 262, 268], "latitud": 212, "although": [212, 231, 253], "freeli": 212, "sun": 212, "microsystem": 212, "With": [212, 267, 268], "imposs": [212, 214, 215, 269], "suit": [212, 264, 266, 267], "span": 212, "report": 212, "averag": 212, "aid": [212, 269], "best": [212, 216, 262, 266], "effort": [212, 267], "theoret": 212, "sound": 212, "robust": 212, "bare": 212, "summat": [212, 262], "unfortun": 212, "impos": [212, 215], "rigor": 212, "sever": [212, 214, 263, 266], "curtail": 212, "unduli": 212, "topologi": 213, "continuum": 213, "onto": [213, 214], "surfac": [213, 266], "stereograph": 213, "coalesc": 213, "3j": 213, "4j": 213, "convei": 213, "niceti": 213, "translat": [213, 268], "neq": 213, "arriv": [213, 266], "opposit": 213, "subtleti": 213, "craft": 213, "intuit": 213, "julia": [213, 268], "minim": [213, 217], "imperfect": 213, "balanc": 213, "appear": [213, 263, 266, 269], "embrac": 213, "transcendent": 213, "wholli": 213, "analysi": [213, 214, 215, 266, 267, 268], "curv": [213, 266], "discontinu": [213, 268], "taken": [213, 266], "pm": 213, "whole": 213, "simpl": [213, 214, 263], "aris": [213, 262, 265, 266], "trigonometr": 213, "domin": 213, "a_1": 213, "ldot": 213, "a_n": 213, "reflex": 213, "leq": 213, "transit": 213, "antisymmetr": 213, "partial": 213, "establish": [213, 267], "six": 213, "lexicograph": 213, "principl": [213, 267], "situat": [213, 214, 216, 217, 218, 266, 268], "unit": [213, 225, 236], "despit": [213, 216], "admonit": [214, 215], "becom": [214, 216, 266, 268], "trigger": [214, 220], "confid": 214, "mxnet": [214, 266, 267, 268], "save": 214, "faster": 214, "tensorflow": [214, 266, 267, 268], "fundament": [214, 266], "inplac": 214, "update_index": 214, "idx": 214, "solut": [214, 251, 254, 268], "hard": [214, 216, 217, 220, 266], "go": [214, 263], "down": 214, "rout": 214, "val": [214, 220], "veri": [214, 253, 268], "wide": [214, 216, 252, 255, 266], "slightli": 214, "heavili": [214, 268], "you": [214, 269], "_must_": 214, "abstract": [214, 262, 267], "donat": 214, "lapack": [214, 262], "_may_": 214, "overwrit": 214, "whatev": 214, "fastest": 214, "aren": [214, 266], "longer": [214, 262], "problem": [214, 222, 251, 267, 268], "upon": [215, 266], "ahead": 215, "burden": [215, 266], "omiss": 215, "nativ": 216, "layout": 216, "packag": [216, 222, 263, 266, 267, 268], "live": [216, 266], "figur": 216, "contigu": 216, "promin": [216, 266], "releas": [216, 263, 267], "candid": [216, 266], "__cuda_array_interface__": 216, "moment": 216, "tri": [216, 268], "growth": 216, "amd": 216, "undesir": 216, "pattern": [216, 217, 221, 267, 268], "widest": 216, "lot": 216, "3118": 216, "hardli": 216, "mostli": [216, 220, 221, 266], "dealt": [216, 222], "__array__": [216, 268], "attach": 216, "hold": [216, 262], "rfc": [216, 266], "http": [216, 263, 269], "dmlc": 216, "github": [216, 263, 265, 269], "io": 216, "page": [216, 268], "standalon": [216, 269], "outlin": [216, 266], "cover": [216, 266, 269], "usag": [216, 261, 266], "node": 216, "spars": [216, 266], "why": [216, 266], "scale": 217, "exert": 217, "placement": 217, "global": 217, "switchabl": 217, "transfer": 217, "granular": 217, "downsid": 217, "verbos": 217, "much": [217, 266, 269], "kept": 217, "instanti": 217, "physic": 217, "revisit": 217, "themselv": 217, "expos": [217, 262], "bewar": 217, "framework": [217, 266], "elabor": 217, "polici": 217, "highest": 217, "prioriti": 217, "topic": [217, 221, 264, 266, 268], "pin": 217, "tricki": 217, "sinc": 217, "emit": 218, "misbehav": 218, "forese": 218, "extent": 218, "builtin": 218, "author": [218, 265, 266, 267, 268], "worth": 218, "compli": 218, "aspect": [220, 269], "impact": [220, 266], "prescrib": 220, "show": 220, "up": [220, 252, 261, 268], "five": 220, "dunder": [220, 263], "serial": 220, "compute_someth": 220, "statement": 220, "do_something_els": 220, "flow": 220, "cond": 220, "won": 221, "further": 221, "exercis": 221, "environ": [221, 262, 266, 269], "bla": [221, 262], "openmp": 221, "n_job": [221, 268], "worker": [221, 268], "chunk": 221, "approach": [221, 266, 267], "auto": [221, 268], "thing": 221, "improv": [221, 266, 268], "fit": [221, 265, 266, 268], "becam": [222, 266], "progress": [222, 269], "superclass": 222, "_basearrai": 222, "subclass": [222, 266], "insid": [222, 261], "typevar": 222, "variat": [222, 267], "don": [222, 268], "said": 222, "subtyp": 222, "hasattr": [223, 261, 262, 266], "ortho": [224, 226, 228, 229, 230, 232, 233, 234, 235, 237], "pad": [224, 226, 228, 229, 230, 232, 233, 234, 235, 237], "trim": [224, 226, 228, 229, 230, 232, 233, 234, 235, 237], "orthonorm": [224, 226, 228, 229, 230, 232, 233, 234, 235, 237, 252, 255], "frequenc": [225, 227, 236, 263, 267], "f": [225, 236], "window": [225, 236], "center": 227, "spectrum": 227, "swap": 227, "nyquist": [227, 236], "hermitian": [228, 232, 238, 242, 243], "symmetri": [228, 232], "decomposit": [238, 242, 251, 252, 255, 256, 262], "symmetr": [238, 242, 243], "mathbb": [238, 242, 243, 244, 252, 254, 255], "ll": 238, "h": [238, 242, 251, 255], "qquad": 238, "text": 238, "factor": [238, 255], "offset": [241, 258], "off": [241, 258], "eigenvalu": [242, 243, 262], "lambda": [242, 243], "orthogon": [242, 251, 252, 255, 262], "unitari": [242, 252, 255], "eigenvector": [242, 262], "softwar": [242, 255, 265, 266, 268], "fact": [242, 255], "phi": [242, 255], "eig": 242, "diag": [242, 255], "polynomi": [243, 266], "i_n": [243, 244], "eigval": 243, "xx": 244, "ord": [246, 260], "fro": 246, "nuc": 246, "frobeniu": 246, "nuclear": 246, "singular": [246, 248, 251, 255, 256], "induc": 246, "rtol": [248, 251], "toler": [248, 251], "largest_singular_valu": [248, 251], "epsilon": [248, 251], "moor": 251, "penros": 251, "pseudo": 251, "sigma": [251, 255], "tall": [252, 255], "geq": 252, "necessarili": [252, 269], "linearli": [252, 254, 266], "logabsdet": 253, "again": 253, "equat": 254, "coeffici": 254, "ordin": 254, "full_matric": 255, "u_k": 255, "v_k": 255, "vh": 255, "adjoint": 255, "l1": 260, "manhattan": 260, "l2": 260, "euclidean": 260, "coher": 261, "extension_nam": 261, "regular": [261, 263, 266], "__getattr__": 261, "endeavor": 262, "strai": 262, "far": 262, "restraint": 262, "decis": [262, 266], "accid": 262, "especi": 262, "arisen": 262, "been": [262, 266], "process": [262, 263, 267], "afford": 262, "opportun": 262, "subsequ": [262, 267], "codifi": [262, 267], "theme": 262, "abil": 262, "decim": 262, "overli": 262, "compel": 262, "compris": 262, "prudent": 262, "lastli": 262, "polymorph": 262, "dedic": 262, "agnostic": 262, "eschew": 262, "parameter": 262, "bias": 262, "underpin": 262, "cater": 262, "low": 262, "verbatim": 262, "poor": 262, "uplo": 262, "dai": 262, "monopoli": 262, "prolifer": 262, "conserv": [262, 268], "conservat": 262, "delin": 262, "overlap": 262, "confus": [262, 266], "parsimoni": 262, "einsum": 262, "einstein": 262, "vdot": 262, "multi_dot": 262, "chain": 262, "exhibit": 262, "consolid": 262, "propos": [263, 267, 268], "com": [263, 269], "blob": 263, "master": 263, "process_docu": 263, "md": 263, "summari": [263, 267], "matur": 263, "reach": [263, 268], "world": 263, "highli": 263, "strong": 263, "updat": 263, "date": 263, "shall": [263, 265], "alpha": 263, "beta": 263, "rc": 263, "post": 263, "dev": 263, "bugfix": 263, "__version__": 263, "resembl": 263, "year": [263, 266], "evolut": [264, 266], "verif": [264, 266], "benchmark": 264, "changelog": 264, "licens": 264, "websit": 265, "repositori": [265, 267], "mit": 265, "copyright": 265, "consortium": [265, 266], "contributor": 265, "permiss": 265, "herebi": 265, "grant": 265, "charg": 265, "person": 265, "file": [265, 267, 268, 269], "merg": [265, 266], "publish": [265, 267], "sublicens": 265, "sell": 265, "whom": 265, "furnish": 265, "notic": 265, "substanti": 265, "portion": 265, "THE": 265, "AS": 265, "warranti": 265, "OF": 265, "BUT": 265, "TO": 265, "merchant": 265, "FOR": 265, "noninfring": 265, "IN": 265, "NO": 265, "holder": 265, "BE": 265, "liabl": 265, "claim": 265, "damag": 265, "liabil": 265, "action": 265, "tort": 265, "WITH": 265, "wealth": 266, "scienc": 266, "deep": 266, "push": 266, "art": 266, "unintend": 266, "activ": 266, "creativ": 266, "fragment": 266, "multidimension": 266, "xarrai": [266, 267], "pick": 266, "bless": 266, "inconsist": 266, "obviou": 266, "mind": 266, "sure": 266, "rare": [266, 267], "unimport": 266, "scientif": 266, "mid": 266, "1990": 266, "earli": 266, "2000": 266, "numarrai": 266, "2005": 266, "superced": 266, "roughli": 266, "decad": 266, "past": 266, "mainli": 266, "rise": 266, "newer": 266, "inspir": [266, 268], "idea": 266, "seriou": 266, "grew": 266, "quickli": 266, "infeas": 266, "speed": 266, "innov": [266, 267], "group": 266, "assembl": 266, "draft": 266, "presenc": 266, "meta": 266, "concret": 266, "shown": 266, "core": [266, 268], "borrow": 266, "steep": 266, "switch": [266, 268], "accompani": 266, "actual": 266, "task": [266, 268], "schedul": 266, "characterist": 266, "grain": 266, "obstacl": 266, "cython": [266, 268], "datetim": 266, "void": 266, "uniformli": 266, "o": 266, "routin": 266, "bind": [266, 268], "cffi": 266, "ctype": 266, "ufunc": 266, "gufunc": 266, "extra": 266, "huge": 266, "amount": [266, 267, 268], "strength": 266, "advantag": 266, "foreign": 266, "indirect": 266, "program": 266, "pydata": 266, "weld": 266, "bohrium": 266, "arkouda": 266, "legat": 266, "grow": 266, "panda": [266, 267], "matplotlib": [266, 267], "networkx": 266, "xtensor": 266, "xnd": [266, 268], "stdlib": 266, "javascript": 266, "rust": 266, "rrai": 266, "nd4j": 266, "jvm": 266, "numsharp": 266, "dispatch": [266, 268], "pythran": 266, "transon": 266, "onnx": 266, "apach": 266, "tvm": 266, "mlir": 266, "taco": 266, "unumpi": [266, 268], "einop": 266, "arrow": 266, "consult": 266, "simplest": 266, "package_nam": 266, "uniform": 266, "hinder": 266, "inter": 266, "distinguish": 266, "is_array_api_obj": 266, "peopl": 266, "abc": 266, "inherit": 266, "isinst": 266, "prove": 266, "discov": 266, "assist": 266, "importlib": 266, "metadata": 266, "entry_point": 266, "dict": 266, "deprec": 266, "py3": 266, "supplant": 266, "load": 266, "path": 266, "haven": 266, "measur": 266, "isol": 266, "indispens": 266, "institut": 266, "electr": 266, "electron": 266, "engin": [266, 268], "york": 266, "scott": 266, "bradner": 266, "1997": 266, "word": 266, "2119": 266, "doi": 266, "17487": 266, "rfc2119": 266, "technic": 267, "vacuum": 267, "sometim": 267, "compet": 267, "friction": 267, "focu": 267, "accommod": [267, 268], "foo": 267, "bar": 267, "aspir": 267, "experiment": 267, "channel": 267, "resourc": [267, 268], "novel": 267, "thwart": 267, "reinvent": 267, "proverbi": 267, "wheel": 267, "foundat": 267, "articul": 267, "quantifi": 267, "analyz": 267, "ground": [267, 269], "empir": 267, "acquir": 267, "scrape": 267, "unifi": [267, 268], "extract": 267, "intersect": 267, "complement": 267, "suitabl": 267, "preval": 267, "eas": 267, "leverag": 267, "summar": 267, "tool": [267, 268], "explor": 267, "instrument": 267, "record": 267, "collect": 267, "json": 267, "human": 267, "docstr": 267, "_0": 267, "_arg": 267, "347": 267, "359": 267, "894": 267, "1173": 267, "skimag": 267, "174": 267, "sklearn": 267, "373": 267, "publicli": 267, "stori": 267, "broad": 267, "wider": 268, "wrap": 268, "familiar": 268, "survei": 268, "advanc": 268, "research": 268, "nsf": 268, "pain": 268, "brought": 268, "wish": 268, "multiprocess": 268, "shorten": 268, "fortran": 268, "easili": [268, 269], "pure": 268, "manual": 268, "Then": 268, "hoc": 268, "critic": 268, "corner": 268, "tractabl": 268, "spectral": 268, "periodogram": 268, "spectrogram": 268, "csd": 268, "welch": 268, "stft": 268, "istft": 268, "lombscargl": 268, "40": 268, "sai": [268, 269], "ineffici": 268, "x_np": 268, "asnumpi": 268, "freq": 268, "pxx": 268, "back": 268, "torch": 268, "littl": 268, "flexibl": 268, "py": [268, 269], "rearrang": 268, "_backend": 268, "glue": 268, "loc": 268, "some_func": 268, "get_backend": 268, "disappear": 268, "serv": 268, "50": 268, "tensorli": 268, "kera": 268, "eagerpi": 268, "notabl": 268, "suboptim": 268, "readili": 268, "cpyext": 268, "unsuccess": 268, "xla": 268, "vta": 268, "jump": 268, "hoop": 268, "attain": 268, "got": 268, "cfunc": 268, "np": 268, "assert_array_almost_equ": 268, "pyfunc": 268, "pyarray_cancastarrayto": 268, "assertequ": 268, "spec": 269, "clone": 269, "repo": 269, "pip": 269, "pytest": 269, "hypothesi": 269, "conda": 269, "array_api_tests_modul": 269, "edit": 269, "array_api_test": 269, "_array_modul": 269, "array_modul": 269, "command": 269, "asid": 269, "vendor": 269, "readm": 269}, "objects": {"array_api": [[8, 0, 1, "", "__array_api_version__"], [9, 1, 1, "", "abs"], [10, 1, 1, "", "acos"], [11, 1, 1, "", "acosh"], [12, 1, 1, "", "add"], [13, 1, 1, "", "all"], [14, 1, 1, "", "any"], [15, 1, 1, "", "arange"], [16, 1, 1, "", "argmax"], [17, 1, 1, "", "argmin"], [18, 1, 1, "", "argsort"], [60, 1, 1, "", "asarray"], [61, 1, 1, "", "asin"], [62, 1, 1, "", "asinh"], [63, 1, 1, "", "astype"], [64, 1, 1, "", "atan"], [65, 1, 1, "", "atan2"], [66, 1, 1, "", "atanh"], [67, 1, 1, "", "bitwise_and"], [68, 1, 1, "", "bitwise_invert"], [69, 1, 1, "", "bitwise_left_shift"], [70, 1, 1, "", "bitwise_or"], [71, 1, 1, "", "bitwise_right_shift"], [72, 1, 1, "", "bitwise_xor"], [73, 1, 1, "", "broadcast_arrays"], [74, 1, 1, "", "broadcast_to"], [75, 1, 1, "", "can_cast"], [76, 1, 1, "", "ceil"], [77, 1, 1, "", "clip"], [78, 1, 1, "", "concat"], [79, 1, 1, "", "conj"], [85, 1, 1, "", "copysign"], [86, 1, 1, "", "cos"], [87, 1, 1, "", "cosh"], [88, 1, 1, "", "count_nonzero"], [89, 1, 1, "", "cumulative_prod"], [90, 1, 1, "", "cumulative_sum"], [92, 1, 1, "", "diff"], [93, 1, 1, "", "divide"], [94, 1, 1, "", "empty"], [95, 1, 1, "", "empty_like"], [96, 1, 1, "", "equal"], [97, 1, 1, "", "exp"], [98, 1, 1, "", "expand_dims"], [99, 1, 1, "", "expm1"], [100, 1, 1, "", "eye"], [101, 1, 1, "", "finfo"], [102, 1, 1, "", "flip"], [103, 1, 1, "", "floor"], [104, 1, 1, "", "floor_divide"], [105, 1, 1, "", "from_dlpack"], [106, 1, 1, "", "full"], [107, 1, 1, "", "full_like"], [108, 1, 1, "", "greater"], [109, 1, 1, "", "greater_equal"], [110, 1, 1, "", "hypot"], [111, 1, 1, "", "iinfo"], [112, 1, 1, "", "imag"], [119, 1, 1, "", "isdtype"], [120, 1, 1, "", "isfinite"], [121, 1, 1, "", "isinf"], [122, 1, 1, "", "isnan"], [123, 1, 1, "", "less"], [124, 1, 1, "", "less_equal"], [125, 1, 1, "", "linspace"], [126, 1, 1, "", "log"], [127, 1, 1, "", "log10"], [128, 1, 1, "", "log1p"], [129, 1, 1, "", "log2"], [130, 1, 1, "", "logaddexp"], [131, 1, 1, "", "logical_and"], [132, 1, 1, "", "logical_not"], [133, 1, 1, "", "logical_or"], [134, 1, 1, "", "logical_xor"], [135, 1, 1, "", "matmul"], [136, 1, 1, "", "matrix_transpose"], [137, 1, 1, "", "max"], [138, 1, 1, "", "maximum"], [139, 1, 1, "", "mean"], [140, 1, 1, "", "meshgrid"], [141, 1, 1, "", "min"], [142, 1, 1, "", "minimum"], [143, 1, 1, "", "moveaxis"], [144, 1, 1, "", "multiply"], [145, 1, 1, "", "negative"], [146, 1, 1, "", "nextafter"], [147, 1, 1, "", "nonzero"], [148, 1, 1, "", "not_equal"], [149, 1, 1, "", "ones"], [150, 1, 1, "", "ones_like"], [151, 1, 1, "", "permute_dims"], [152, 1, 1, "", "positive"], [153, 1, 1, "", "pow"], [154, 1, 1, "", "prod"], [155, 1, 1, "", "real"], [156, 1, 1, "", "reciprocal"], [157, 1, 1, "", "remainder"], [158, 1, 1, "", "repeat"], [159, 1, 1, "", "reshape"], [160, 1, 1, "", "result_type"], [161, 1, 1, "", "roll"], [162, 1, 1, "", "round"], [163, 1, 1, "", "searchsorted"], [164, 1, 1, "", "sign"], [165, 1, 1, "", "signbit"], [166, 1, 1, "", "sin"], [167, 1, 1, "", "sinh"], [168, 1, 1, "", "sort"], [169, 1, 1, "", "sqrt"], [170, 1, 1, "", "square"], [171, 1, 1, "", "squeeze"], [172, 1, 1, "", "stack"], [173, 1, 1, "", "std"], [174, 1, 1, "", "subtract"], [175, 1, 1, "", "sum"], [176, 1, 1, "", "take"], [177, 1, 1, "", "take_along_axis"], [178, 1, 1, "", "tan"], [179, 1, 1, "", "tanh"], [180, 1, 1, "", "tensordot"], [181, 1, 1, "", "tile"], [182, 1, 1, "", "tril"], [183, 1, 1, "", "triu"], [184, 1, 1, "", "trunc"], [185, 1, 1, "", "unique_all"], [186, 1, 1, "", "unique_counts"], [187, 1, 1, "", "unique_inverse"], [188, 1, 1, "", "unique_values"], [189, 1, 1, "", "unstack"], [190, 1, 1, "", "var"], [191, 1, 1, "", "vecdot"], [192, 1, 1, "", "where"], [193, 1, 1, "", "zeros"], [194, 1, 1, "", "zeros_like"]], "array_api.array": [[19, 2, 1, "", "T"], [20, 3, 1, "", "__abs__"], [21, 3, 1, "", "__add__"], [22, 3, 1, "", "__and__"], [23, 3, 1, "", "__array_namespace__"], [24, 3, 1, "", "__bool__"], [25, 3, 1, "", "__complex__"], [26, 3, 1, "", "__dlpack__"], [27, 3, 1, "", "__dlpack_device__"], [28, 3, 1, "", "__eq__"], [29, 3, 1, "", "__float__"], [30, 3, 1, "", "__floordiv__"], [31, 3, 1, "", "__ge__"], [32, 3, 1, "", "__getitem__"], [33, 3, 1, "", "__gt__"], [34, 3, 1, "", "__index__"], [35, 3, 1, "", "__int__"], [36, 3, 1, "", "__invert__"], [37, 3, 1, "", "__le__"], [38, 3, 1, "", "__lshift__"], [39, 3, 1, "", "__lt__"], [40, 3, 1, "", "__matmul__"], [41, 3, 1, "", "__mod__"], [42, 3, 1, "", "__mul__"], [43, 3, 1, "", "__ne__"], [44, 3, 1, "", "__neg__"], [45, 3, 1, "", "__or__"], [46, 3, 1, "", "__pos__"], [47, 3, 1, "", "__pow__"], [48, 3, 1, "", "__rshift__"], [49, 3, 1, "", "__setitem__"], [50, 3, 1, "", "__sub__"], [51, 3, 1, "", "__truediv__"], [52, 3, 1, "", "__xor__"], [53, 2, 1, "", "device"], [54, 2, 1, "", "dtype"], [55, 2, 1, "", "mT"], [56, 2, 1, "", "ndim"], [57, 2, 1, "", "shape"], [58, 2, 1, "", "size"], [59, 3, 1, "", "to_device"]], "array_api.constants": [[80, 0, 1, "", "e"], [81, 0, 1, "", "inf"], [82, 0, 1, "", "nan"], [83, 0, 1, "", "newaxis"], [84, 0, 1, "", "pi"]], "array_api.data_types": [[91, 1, 1, "", "__eq__"]], "array_api.fft": [[224, 1, 1, "", "fft"], [225, 1, 1, "", "fftfreq"], [226, 1, 1, "", "fftn"], [227, 1, 1, "", "fftshift"], [228, 1, 1, "", "hfft"], [229, 1, 1, "", "ifft"], [230, 1, 1, "", "ifftn"], [231, 1, 1, "", "ifftshift"], [232, 1, 1, "", "ihfft"], [233, 1, 1, "", "irfft"], [234, 1, 1, "", "irfftn"], [235, 1, 1, "", "rfft"], [236, 1, 1, "", "rfftfreq"], [237, 1, 1, "", "rfftn"]], "array_api.info": [[113, 1, 1, "", "__array_namespace_info__"], [114, 1, 1, "", "capabilities"], [115, 1, 1, "", "default_device"], [116, 1, 1, "", "default_dtypes"], [117, 1, 1, "", "devices"], [118, 1, 1, "", "dtypes"]], "array_api.linalg": [[238, 1, 1, "", "cholesky"], [239, 1, 1, "", "cross"], [240, 1, 1, "", "det"], [241, 1, 1, "", "diagonal"], [242, 1, 1, "", "eigh"], [243, 1, 1, "", "eigvalsh"], [244, 1, 1, "", "inv"], [245, 1, 1, "", "matmul"], [246, 1, 1, "", "matrix_norm"], [247, 1, 1, "", "matrix_power"], [248, 1, 1, "", "matrix_rank"], [249, 1, 1, "", "matrix_transpose"], [250, 1, 1, "", "outer"], [251, 1, 1, "", "pinv"], [252, 1, 1, "", "qr"], [253, 1, 1, "", "slogdet"], [254, 1, 1, "", "solve"], [255, 1, 1, "", "svd"], [256, 1, 1, "", "svdvals"], [257, 1, 1, "", "tensordot"], [258, 1, 1, "", "trace"], [259, 1, 1, "", "vecdot"], [260, 1, 1, "", "vector_norm"]]}, "objtypes": {"0": "py:data", "1": "py:function", "2": "py:property", "3": "py:method"}, "objnames": {"0": ["py", "data", "Python data"], "1": ["py", "function", "Python function"], "2": ["py", "property", "Python property"], "3": ["py", "method", "Python method"]}, "titleterms": {"arrai": [0, 196, 205, 264, 266, 268], "object": [0, 2, 3, 4, 5, 6, 197, 198, 199, 200, 201, 202, 203, 204, 206, 207, 223, 262, 266], "oper": [0, 212], "arithmet": [0, 212], "bitwis": 0, "comparison": 0, "In": [0, 1, 266], "place": [0, 1], "reflect": 0, "attribut": 0, "method": [0, 7], "broadcast": 1, "overview": 1, "algorithm": 1, "exampl": [1, 211], "semant": [1, 217], "constant": 2, "api": [2, 3, 4, 6, 195, 197, 198, 199, 200, 201, 202, 203, 204, 206, 207, 210, 211, 223, 262, 263, 264, 266, 268], "creation": 3, "function": [3, 4, 6, 7, 197, 199, 200, 201, 202, 203, 204, 206, 212, 223], "data": [4, 5, 147, 158, 185, 186, 187, 188, 196, 210, 215, 216, 267], "type": [4, 5, 205, 210, 222, 268], "us": [5, 208, 211, 216, 267, 268], "default": 5, "categori": 5, "element": 6, "wise": 6, "signatur": 7, "__array_api_version__": 8, "ab": 9, "aco": 10, "acosh": 11, "add": [12, 268], "all": 13, "ani": 14, "arang": 15, "argmax": 16, "argmin": 17, "argsort": 18, "t": 19, "__abs__": 20, "__add__": 21, "__and__": 22, "__array_namespace__": 23, "__bool__": 24, "__complex__": 25, "__dlpack__": 26, "tip": [26, 60], "__dlpack_device__": 27, "__eq__": [28, 91], "__float__": 29, "__floordiv__": 30, "__ge__": 31, "__getitem__": 32, "__gt__": 33, "__index__": 34, "__int__": 35, "__invert__": 36, "__le__": 37, "__lshift__": 38, "__lt__": 39, "__matmul__": 40, "__mod__": 41, "__mul__": 42, "__ne__": 43, "__neg__": 44, "__or__": 45, "__pos__": 46, "__pow__": 47, "__rshift__": 48, "__setitem__": 49, "__sub__": 50, "__truediv__": 51, "__xor__": 52, "devic": [53, 117, 211, 217], "dtype": [54, 118], "mt": 55, "ndim": 56, "shape": [57, 147, 158, 185, 186, 187, 188, 196, 215], "size": 58, "to_devic": 59, "asarrai": 60, "note": [60, 105, 125, 205], "asin": 61, "asinh": 62, "astyp": 63, "atan": 64, "atan2": 65, "atanh": 66, "bitwise_and": 67, "bitwise_invert": 68, "bitwise_left_shift": 69, "bitwise_or": 70, "bitwise_right_shift": 71, "bitwise_xor": 72, "broadcast_arrai": 73, "broadcast_to": 74, "can_cast": 75, "ceil": 76, "clip": 77, "concat": 78, "conj": 79, "e": 80, "inf": 81, "nan": 82, "newaxi": 83, "pi": 84, "copysign": 85, "co": 86, "cosh": 87, "count_nonzero": 88, "cumulative_prod": 89, "cumulative_sum": 90, "diff": 92, "divid": 93, "empti": 94, "empty_lik": 95, "equal": 96, "exp": 97, "expand_dim": 98, "expm1": 99, "ey": 100, "finfo": 101, "flip": 102, "floor": 103, "floor_divid": 104, "from_dlpack": 105, "full": 106, "full_lik": 107, "greater": 108, "greater_equ": 109, "hypot": 110, "iinfo": 111, "imag": 112, "__array_namespace_info__": 113, "capabl": 114, "default_devic": 115, "default_dtyp": 116, "isdtyp": 119, "isfinit": 120, "isinf": 121, "isnan": 122, "less": 123, "less_equ": 124, "linspac": 125, "log": 126, "log10": 127, "log1p": 128, "log2": 129, "logaddexp": 130, "logical_and": 131, "logical_not": 132, "logical_or": 133, "logical_xor": 134, "matmul": [135, 245], "matrix_transpos": [136, 249], "max": 137, "maximum": 138, "mean": 139, "meshgrid": 140, "min": 141, "minimum": 142, "moveaxi": 143, "multipli": 144, "neg": 145, "nextaft": 146, "nonzero": 147, "depend": [147, 158, 185, 186, 187, 188, 196, 208, 215], "output": [147, 158, 185, 186, 187, 188, 196, 215], "not_equ": 148, "ones": 149, "ones_lik": 150, "permute_dim": 151, "posit": 152, "pow": 153, "prod": 154, "real": 155, "reciproc": 156, "remaind": 157, "repeat": 158, "reshap": 159, "result_typ": 160, "roll": 161, "round": 162, "searchsort": 163, "sign": [164, 205], "signbit": 165, "sin": 166, "sinh": 167, "sort": [168, 203], "sqrt": 169, "squar": 170, "squeez": 171, "stack": 172, "std": 173, "subtract": 174, "sum": 175, "take": 176, "take_along_axi": 177, "tan": 178, "tanh": 179, "tensordot": [180, 257], "tile": 181, "tril": 182, "triu": 183, "trunc": 184, "unique_al": 185, "unique_count": 186, "unique_invers": 187, "unique_valu": 188, "unstack": 189, "var": 190, "vecdot": [191, 259], "where": 192, "zero": 193, "zeros_lik": 194, "specif": 195, "index": [196, 197], "singl": 196, "axi": 196, "slice": 196, "syntax": [196, 217], "multi": 196, "boolean": 196, "return": 196, "valu": [196, 213], "inspect": [198, 210], "linear": [199, 212, 262], "algebra": [199, 212, 262], "manipul": 200, "search": 201, "set": 202, "statist": [204, 212], "promot": [205, 213], "rule": 205, "integ": 205, "tabl": 205, "unsign": 205, "mix": 205, "float": 205, "point": 205, "python": [205, 211, 264, 268], "scalar": 205, "util": 206, "version": [207, 210, 263], "assumpt": 208, "hardwar": [208, 268], "softwar": 208, "environ": 208, "backward": [208, 263], "compat": [208, 263], "product": 208, "code": [208, 211], "interact": 208, "benchmark": 209, "suit": [209, 269], "changelog": 210, "per": 210, "standard": [210, 211, 263, 264, 266], "v2023": 210, "12": 210, "updat": 210, "norm": [210, 266], "extens": [210, 211, 223, 261, 262, 263], "addit": 210, "break": 210, "chang": 210, "errata": 210, "v2022": 210, "complex": [210, 212, 213], "number": [210, 211, 212, 213], "support": [210, 211, 216, 217, 268], "c": 211, "situat": 211, "cython": 211, "usag": [211, 217, 223, 262, 264, 267], "1": [211, 268], "packag": 211, "i": 211, "mostli": 211, "pure": 211, "limit": 211, "2": [211, 268], "contain": 211, "lot": 211, "3": [211, 268], "numpi": 211, "directli": 211, "other": [211, 264], "longer": 211, "term": [211, 266], "approach": 211, "further": 211, "hpy": 211, "accuraci": 212, "mathemat": 212, "involv": 212, "The": 213, "plane": 213, "branch": 213, "cut": 213, "order": 213, "base": 213, "copi": 214, "view": 214, "behaviour": 214, "mutabl": 214, "mutat": 214, "interchang": 216, "mechan": 216, "dlpack": 216, "an": [216, 266], "memori": 216, "tensor": 216, "structur": 216, "non": [216, 266], "case": [216, 268], "intend": 217, "assign": 217, "out": [217, 266], "scope": [217, 263, 266], "except": 218, "design": [219, 262, 267], "topic": 219, "constraint": 219, "lazi": 220, "v": 220, "eager": 220, "execut": 220, "parallel": 221, "static": 222, "fourier": 223, "transform": 223, "name": [223, 262], "fft": 224, "fftfreq": 225, "fftn": 226, "fftshift": 227, "hfft": 228, "ifft": 229, "ifftn": 230, "ifftshift": 231, "ihfft": 232, "irfft": 233, "irfftn": 234, "rfft": 235, "rfftfreq": 236, "rfftn": 237, "choleski": 238, "cross": 239, "det": 240, "diagon": 241, "eigh": 242, "eigvalsh": 243, "inv": 244, "matrix_norm": 246, "matrix_pow": 247, "matrix_rank": 248, "outer": 250, "pinv": 251, "qr": 252, "slogdet": 253, "solv": 254, "svd": 255, "svdval": 256, "trace": 258, "vector_norm": 260, "modul": 261, "principl": 262, "futur": 263, "evolut": 263, "content": 264, "context": 264, "methodologi": 264, "licens": 265, "purpos": 266, "introduct": [266, 267], "thi": 266, "histori": 266, "includ": 266, "goal": 266, "implic": 266, "stakehold": 266, "how": 266, "read": 266, "document": 266, "adopt": 266, "check": 266, "complianc": 266, "discover": 266, "conform": [266, 269], "implement": 266, "option": 266, "featur": 266, "definit": 266, "refer": 266, "decis": 267, "make": [267, 268], "concret": 268, "acceler": 268, "distribut": 268, "scipi": 268, "simplifi": 268, "einop": 268, "remov": 268, "backend": 268, "system": 268, "ad": 268, "xtensor": 268, "4": 268, "jit": 268, "compil": 268, "comput": 268, "easier": 268, "more": 268, "robust": 268, "verif": 269, "test": 269, "measur": 269, "run": 269}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.todo": 2, "sphinx": 60}, "alltitles": {"Array object": [[0, "array-object"]], "Operators": [[0, "operators"]], "Arithmetic Operators": [[0, "arithmetic-operators"], [0, "id26"], [0, "id29"]], "Array Operators": [[0, "array-operators"], [0, "id27"], [0, "id30"]], "Bitwise Operators": [[0, "bitwise-operators"], [0, "id28"], [0, "id31"]], "Comparison Operators": [[0, "comparison-operators"]], "In-place Operators": [[0, "in-place-operators"]], "Reflected Operators": [[0, "reflected-operators"]], "Attributes": [[0, "attributes"]], "Methods": [[0, "methods"]], "Broadcasting": [[1, "broadcasting"]], "Overview": [[1, "overview"]], "Algorithm": [[1, "algorithm"]], "Examples": [[1, "examples"]], "In-place Semantics": [[1, "in-place-semantics"]], "Constants": [[2, "constants"]], "Objects in API": [[2, "objects-in-api"], [3, "objects-in-api"], [4, "objects-in-api"], [6, "objects-in-api"], [197, "objects-in-api"], [198, "objects-in-api"], [199, "objects-in-api"], [200, "objects-in-api"], [201, "objects-in-api"], [202, "objects-in-api"], [203, "objects-in-api"], [204, "objects-in-api"], [206, "objects-in-api"], [207, "objects-in-api"], [223, "objects-in-api"], [262, "objects-in-api"]], "Creation Functions": [[3, "creation-functions"]], "Data Type Functions": [[4, "data-type-functions"]], "Data Types": [[5, "data-types"], [210, "data-types"]], "Use of data type objects": [[5, "use-of-data-type-objects"]], "Default Data Types": [[5, "default-data-types"]], "Data Type Categories": [[5, "data-type-categories"]], "Element-wise Functions": [[6, "element-wise-functions"]], "Function and method signatures": [[7, "function-and-method-signatures"]], "__array_api_version__": [[8, "array-api-version"]], "abs": [[9, "abs"]], "acos": [[10, "acos"]], "acosh": [[11, "acosh"]], "add": [[12, "add"]], "all": [[13, "all"]], "any": [[14, "any"]], "arange": [[15, "arange"]], "argmax": [[16, "argmax"]], "argmin": [[17, "argmin"]], "argsort": [[18, "argsort"]], "T": [[19, "t"]], "__abs__": [[20, "abs"]], "__add__": [[21, "add"]], "__and__": [[22, "and"]], "__array_namespace__": [[23, "array-namespace"]], "__bool__": [[24, "bool"]], "__complex__": [[25, "complex"]], "__dlpack__": [[26, "dlpack"]], "Tip": [[26, null], [60, null]], "__dlpack_device__": [[27, "dlpack-device"]], "__eq__": [[28, "eq"], [91, "eq"]], "__float__": [[29, "float"]], "__floordiv__": [[30, "floordiv"]], "__ge__": [[31, "ge"]], "__getitem__": [[32, "getitem"]], "__gt__": [[33, "gt"]], "__index__": [[34, "index"]], "__int__": [[35, "int"]], "__invert__": [[36, "invert"]], "__le__": [[37, "le"]], "__lshift__": [[38, "lshift"]], "__lt__": [[39, "lt"]], "__matmul__": [[40, "matmul"]], "__mod__": [[41, "mod"]], "__mul__": [[42, "mul"]], "__ne__": [[43, "ne"]], "__neg__": [[44, "neg"]], "__or__": [[45, "or"]], "__pos__": [[46, "pos"]], "__pow__": [[47, "pow"]], "__rshift__": [[48, "rshift"]], "__setitem__": [[49, "setitem"]], "__sub__": [[50, "sub"]], "__truediv__": [[51, "truediv"]], "__xor__": [[52, "xor"]], "device": [[53, "device"]], "dtype": [[54, "dtype"]], "mT": [[55, "mt"]], "ndim": [[56, "ndim"]], "shape": [[57, "shape"]], "size": [[58, "size"]], "to_device": [[59, "to-device"]], "asarray": [[60, "asarray"]], "Note": [[60, null], [105, null], [125, null]], "asin": [[61, "asin"]], "asinh": [[62, "asinh"]], "astype": [[63, "astype"]], "atan": [[64, "atan"]], "atan2": [[65, "atan2"]], "atanh": [[66, "atanh"]], "bitwise_and": [[67, "bitwise-and"]], "bitwise_invert": [[68, "bitwise-invert"]], "bitwise_left_shift": [[69, "bitwise-left-shift"]], "bitwise_or": [[70, "bitwise-or"]], "bitwise_right_shift": [[71, "bitwise-right-shift"]], "bitwise_xor": [[72, "bitwise-xor"]], "broadcast_arrays": [[73, "broadcast-arrays"]], "broadcast_to": [[74, "broadcast-to"]], "can_cast": [[75, "can-cast"]], "ceil": [[76, "ceil"]], "clip": [[77, "clip"]], "concat": [[78, "concat"]], "conj": [[79, "conj"]], "e": [[80, "e"]], "inf": [[81, "inf"]], "nan": [[82, "nan"]], "newaxis": [[83, "newaxis"]], "pi": [[84, "pi"]], "copysign": [[85, "copysign"]], "cos": [[86, "cos"]], "cosh": [[87, "cosh"]], "count_nonzero": [[88, "count-nonzero"]], "cumulative_prod": [[89, "cumulative-prod"]], "cumulative_sum": [[90, "cumulative-sum"]], "diff": [[92, "diff"]], "divide": [[93, "divide"]], "empty": [[94, "empty"]], "empty_like": [[95, "empty-like"]], "equal": [[96, "equal"]], "exp": [[97, "exp"]], "expand_dims": [[98, "expand-dims"]], "expm1": [[99, "expm1"]], "eye": [[100, "eye"]], "finfo": [[101, "finfo"]], "flip": [[102, "flip"]], "floor": [[103, "floor"]], "floor_divide": [[104, "floor-divide"]], "from_dlpack": [[105, "from-dlpack"]], "full": [[106, "full"]], "full_like": [[107, "full-like"]], "greater": [[108, "greater"]], "greater_equal": [[109, "greater-equal"]], "hypot": [[110, "hypot"]], "iinfo": [[111, "iinfo"]], "imag": [[112, "imag"]], "__array_namespace_info__": [[113, "array-namespace-info"]], "capabilities": [[114, "capabilities"]], "default_device": [[115, "default-device"]], "default_dtypes": [[116, "default-dtypes"]], "devices": [[117, "devices"]], "dtypes": [[118, "dtypes"]], "isdtype": [[119, "isdtype"]], "isfinite": [[120, "isfinite"]], "isinf": [[121, "isinf"]], "isnan": [[122, "isnan"]], "less": [[123, "less"]], "less_equal": [[124, "less-equal"]], "linspace": [[125, "linspace"]], "log": [[126, "log"]], "log10": [[127, "log10"]], "log1p": [[128, "log1p"]], "log2": [[129, "log2"]], "logaddexp": [[130, "logaddexp"]], "logical_and": [[131, "logical-and"]], "logical_not": [[132, "logical-not"]], "logical_or": [[133, "logical-or"]], "logical_xor": [[134, "logical-xor"]], "matmul": [[135, "matmul"], [245, "matmul"]], "matrix_transpose": [[136, "matrix-transpose"], [249, "matrix-transpose"]], "max": [[137, "max"]], "maximum": [[138, "maximum"]], "mean": [[139, "mean"]], "meshgrid": [[140, "meshgrid"]], "min": [[141, "min"]], "minimum": [[142, "minimum"]], "moveaxis": [[143, "moveaxis"]], "multiply": [[144, "multiply"]], "negative": [[145, "negative"]], "nextafter": [[146, "nextafter"]], "nonzero": [[147, "nonzero"]], "Data-dependent output shape": [[147, null], [158, null], [185, null], [186, null], [187, null], [188, null], [196, null], [215, null]], "not_equal": [[148, "not-equal"]], "ones": [[149, "ones"]], "ones_like": [[150, "ones-like"]], "permute_dims": [[151, "permute-dims"]], "positive": [[152, "positive"]], "pow": [[153, "pow"]], "prod": [[154, "prod"]], "real": [[155, "real"]], "reciprocal": [[156, "reciprocal"]], "remainder": [[157, "remainder"]], "repeat": [[158, "repeat"]], "reshape": [[159, "reshape"]], "result_type": [[160, "result-type"]], "roll": [[161, "roll"]], "round": [[162, "round"]], "searchsorted": [[163, "searchsorted"]], "sign": [[164, "sign"]], "signbit": [[165, "signbit"]], "sin": [[166, "sin"]], "sinh": [[167, "sinh"]], "sort": [[168, "sort"]], "sqrt": [[169, "sqrt"]], "square": [[170, "square"]], "squeeze": [[171, "squeeze"]], "stack": [[172, "stack"]], "std": [[173, "std"]], "subtract": [[174, "subtract"]], "sum": [[175, "sum"]], "take": [[176, "take"]], "take_along_axis": [[177, "take-along-axis"]], "tan": [[178, "tan"]], "tanh": [[179, "tanh"]], "tensordot": [[180, "tensordot"], [257, "tensordot"]], "tile": [[181, "tile"]], "tril": [[182, "tril"]], "triu": [[183, "triu"]], "trunc": [[184, "trunc"]], "unique_all": [[185, "unique-all"]], "unique_counts": [[186, "unique-counts"]], "unique_inverse": [[187, "unique-inverse"]], "unique_values": [[188, "unique-values"]], "unstack": [[189, "unstack"]], "var": [[190, "var"]], "vecdot": [[191, "vecdot"], [259, "vecdot"]], "where": [[192, "where"]], "zeros": [[193, "zeros"]], "zeros_like": [[194, "zeros-like"]], "API specification": [[195, "api-specification"], [195, null]], "Indexing": [[196, "indexing"]], "Single-axis Indexing": [[196, "single-axis-indexing"]], "Slice Syntax": [[196, "slice-syntax"]], "Multi-axis Indexing": [[196, "multi-axis-indexing"]], "Boolean Array Indexing": [[196, "boolean-array-indexing"]], "Return Values": [[196, "return-values"]], "Indexing Functions": [[197, "indexing-functions"]], "Inspection": [[198, "inspection"]], "Inspection APIs": [[198, "inspection-apis"], [210, "inspection-apis"]], "Linear Algebra Functions": [[199, "linear-algebra-functions"]], "Manipulation Functions": [[200, "manipulation-functions"]], "Searching Functions": [[201, "searching-functions"]], "Set Functions": [[202, "set-functions"]], "Sorting Functions": [[203, "sorting-functions"]], "Statistical Functions": [[204, "statistical-functions"], [212, "statistical-functions"]], "Type Promotion Rules": [[205, "type-promotion-rules"]], "Rules": [[205, "rules"]], "Signed integer type promotion table": [[205, "signed-integer-type-promotion-table"]], "Unsigned integer type promotion table": [[205, "unsigned-integer-type-promotion-table"]], "Mixed unsigned and signed integer type promotion table": [[205, "mixed-unsigned-and-signed-integer-type-promotion-table"]], "Floating-point type promotion table": [[205, "floating-point-type-promotion-table"]], "Notes": [[205, "notes"]], "Mixing arrays with Python scalars": [[205, "mixing-arrays-with-python-scalars"]], "Utility Functions": [[206, "utility-functions"]], "Version": [[207, "version"]], "Assumptions": [[208, "assumptions"]], "Hardware and software environments": [[208, "hardware-and-software-environments"]], "Dependencies": [[208, "dependencies"]], "Backwards compatibility": [[208, "backwards-compatibility"], [263, "backwards-compatibility"]], "Production code & interactive use": [[208, "production-code-interactive-use"]], "Benchmark suite": [[209, "benchmark-suite"]], "Changelog per API standard version": [[210, "changelog-per-api-standard-version"]], "Changelog": [[210, "changelog"]], "v2023.12": [[210, "v2023-12"]], "Updates": [[210, "updates"], [210, "id3"]], "Normative": [[210, "normative"]], "APIs": [[210, "apis"], [210, "id1"], [210, "id4"], [210, "id8"]], "Extensions": [[210, "extensions"], [210, "id2"], [210, "id5"], [210, "id9"], [261, "extensions"]], "Additions": [[210, "additions"], [210, "id7"]], "Breaking Changes": [[210, "breaking-changes"]], "Errata": [[210, "errata"], [210, "id10"]], "v2022.12": [[210, "v2022-12"]], "Complex Number Support": [[210, "complex-number-support"], [210, "id6"]], "C API": [[211, "c-api"]], "Example situations for C/Cython usage": [[211, "example-situations-for-c-cython-usage"]], "Situation 1: a Python package that is mostly pure Python, with a limited number of Cython extensions": [[211, "situation-1-a-python-package-that-is-mostly-pure-python-with-a-limited-number-of-cython-extensions"]], "Situation 2: a Python package that contains a lot of Cython code": [[211, "situation-2-a-python-package-that-contains-a-lot-of-cython-code"]], "Situation 3: a Python package that uses the NumPy or Python C API directly": [[211, "situation-3-a-python-package-that-uses-the-numpy-or-python-c-api-directly"]], "Device support": [[211, "device-support"], [217, "device-support"]], "Other longer-term approaches": [[211, "other-longer-term-approaches"]], "Further Python API standardization": [[211, "further-python-api-standardization"]], "HPy": [[211, "hpy"]], "Accuracy": [[212, "accuracy"]], "Arithmetic Operations": [[212, "arithmetic-operations"]], "Mathematical Functions": [[212, "mathematical-functions"]], "Linear Algebra": [[212, "linear-algebra"]], "Operations Involving Complex Numbers": [[212, "operations-involving-complex-numbers"]], "Complex Numbers": [[213, "complex-numbers"]], "The Complex Plane": [[213, "the-complex-plane"]], "Branch Cuts": [[213, "branch-cuts"]], "Complex Number Ordering": [[213, "complex-number-ordering"]], "Valued-based Promotion": [[213, "valued-based-promotion"]], "Copy-view behaviour and mutability": [[214, "copy-view-behaviour-and-mutability"]], "Mutating views": [[214, null]], "Data-dependent output shapes": [[215, "data-dependent-output-shapes"]], "Data interchange mechanisms": [[216, "data-interchange-mechanisms"]], "DLPack: An in-memory tensor structure": [[216, "dlpack-an-in-memory-tensor-structure"]], "Non-supported use cases": [[216, "non-supported-use-cases"]], "Intended usage": [[217, "intended-usage"]], "Syntax for device assignment": [[217, "syntax-for-device-assignment"]], "Semantics": [[217, "semantics"]], "Out of scope for device support": [[217, "out-of-scope-for-device-support"]], "Exceptions": [[218, "exceptions"]], "Design topics & constraints": [[219, "design-topics-constraints"], [219, null]], "Lazy vs. eager execution": [[220, "lazy-vs-eager-execution"]], "Parallelism": [[221, "parallelism"]], "Static typing": [[222, "static-typing"]], "Fourier transform Functions": [[223, "fourier-transform-functions"]], "Extension name and usage": [[223, "extension-name-and-usage"], [262, "extension-name-and-usage"]], "fft": [[224, "fft"]], "fftfreq": [[225, "fftfreq"]], "fftn": [[226, "fftn"]], "fftshift": [[227, "fftshift"]], "hfft": [[228, "hfft"]], "ifft": [[229, "ifft"]], "ifftn": [[230, "ifftn"]], "ifftshift": [[231, "ifftshift"]], "ihfft": [[232, "ihfft"]], "irfft": [[233, "irfft"]], "irfftn": [[234, "irfftn"]], "rfft": [[235, "rfft"]], "rfftfreq": [[236, "rfftfreq"]], "rfftn": [[237, "rfftn"]], "cholesky": [[238, "cholesky"]], "cross": [[239, "cross"]], "det": [[240, "det"]], "diagonal": [[241, "diagonal"]], "eigh": [[242, "eigh"]], "eigvalsh": [[243, "eigvalsh"]], "inv": [[244, "inv"]], "matrix_norm": [[246, "matrix-norm"]], "matrix_power": [[247, "matrix-power"]], "matrix_rank": [[248, "matrix-rank"]], "outer": [[250, "outer"]], "pinv": [[251, "pinv"]], "qr": [[252, "qr"]], "slogdet": [[253, "slogdet"]], "solve": [[254, "solve"]], "svd": [[255, "svd"]], "svdvals": [[256, "svdvals"]], "trace": [[258, "trace"]], "vector_norm": [[260, "vector-norm"]], "Extension modules:": [[261, null]], "Linear Algebra Extension": [[262, "linear-algebra-extension"]], "Design Principles": [[262, "design-principles"]], "Future API standard evolution": [[263, "future-api-standard-evolution"]], "Scope extensions": [[263, "scope-extensions"]], "Versioning": [[263, "versioning"]], "Python array API standard": [[264, "python-array-api-standard"]], "Contents": [[264, "contents"]], "Context": [[264, null]], "API": [[264, null]], "Methodology and Usage": [[264, null]], "Other": [[264, null]], "License": [[265, "license"]], "Purpose and scope": [[266, "purpose-and-scope"]], "Introduction": [[266, "introduction"], [267, "introduction"]], "This API standard": [[266, "this-api-standard"]], "History": [[266, "history"]], "Scope (includes out-of-scope / non-goals)": [[266, "scope-includes-out-of-scope-non-goals"]], "In scope": [[266, "in-scope"]], "Out of scope": [[266, "out-of-scope"]], "Implications of in/out of scope": [[266, "implications-of-in-out-of-scope"]], "Stakeholders": [[266, "stakeholders"]], "How to read this document": [[266, "how-to-read-this-document"]], "How to adopt this API": [[266, "how-to-adopt-this-api"]], "Checking an array object for Compliance": [[266, "checking-an-array-object-for-compliance"]], "Discoverability of conforming implementations": [[266, "discoverability-of-conforming-implementations"]], "Optional feature": [[266, null]], "Conformance": [[266, "conformance"]], "Terms and Definitions": [[266, "terms-and-definitions"]], "Normative References": [[266, "normative-references"]], "Usage Data": [[267, "usage-data"]], "Design": [[267, "design"]], "Usage": [[267, "usage"]], "Use in Decision-Making": [[267, "use-in-decision-making"]], "Use cases": [[268, "use-cases"]], "Types of use cases": [[268, "types-of-use-cases"]], "Concrete use cases": [[268, "concrete-use-cases"]], "Use case 1: add hardware accelerator and distributed support to SciPy": [[268, "use-case-1-add-hardware-accelerator-and-distributed-support-to-scipy"]], "Use case 2: simplify einops by removing the backend system": [[268, "use-case-2-simplify-einops-by-removing-the-backend-system"]], "Use case 3: adding a Python API to xtensor": [[268, "use-case-3-adding-a-python-api-to-xtensor"]], "Use case 4: make JIT compilation of array computations easier and more robust": [[268, "use-case-4-make-jit-compilation-of-array-computations-easier-and-more-robust"]], "Verification - test suite": [[269, "verification-test-suite"]], "Measuring conformance": [[269, "measuring-conformance"]], "Running the tests": [[269, "running-the-tests"]]}, "indexentries": {"__array_api_version__ (in module array_api)": [[8, "array_api.__array_api_version__"]], "abs() (in module array_api)": [[9, "array_api.abs"]], "acos() (in module array_api)": [[10, "array_api.acos"]], "acosh() (in module array_api)": [[11, "array_api.acosh"]], "add() (in module array_api)": [[12, "array_api.add"]], "all() (in module array_api)": [[13, "array_api.all"]], "any() (in module array_api)": [[14, "array_api.any"]], "arange() (in module array_api)": [[15, "array_api.arange"]], "argmax() (in module array_api)": [[16, "array_api.argmax"]], "argmin() (in module array_api)": [[17, "array_api.argmin"]], "argsort() (in module array_api)": [[18, "array_api.argsort"]], "t (array property)": [[19, "array_api.array.T"]], "__abs__() (array method)": [[20, "array_api.array.__abs__"]], "__add__() (array method)": [[21, "array_api.array.__add__"]], "__and__() (array method)": [[22, "array_api.array.__and__"]], "__array_namespace__() (array method)": [[23, "array_api.array.__array_namespace__"]], "__bool__() (array method)": [[24, "array_api.array.__bool__"]], "__complex__() (array method)": [[25, "array_api.array.__complex__"]], "__dlpack__() (array method)": [[26, "array_api.array.__dlpack__"]], "__dlpack_device__() (array method)": [[27, "array_api.array.__dlpack_device__"]], "__eq__() (array method)": [[28, "array_api.array.__eq__"]], "__float__() (array method)": [[29, "array_api.array.__float__"]], "__floordiv__() (array method)": [[30, "array_api.array.__floordiv__"]], "__ge__() (array method)": [[31, "array_api.array.__ge__"]], "__getitem__() (array method)": [[32, "array_api.array.__getitem__"]], "__gt__() (array method)": [[33, "array_api.array.__gt__"]], "__index__() (array method)": [[34, "array_api.array.__index__"]], "__int__() (array method)": [[35, "array_api.array.__int__"]], "__invert__() (array method)": [[36, "array_api.array.__invert__"]], "__le__() (array method)": [[37, "array_api.array.__le__"]], "__lshift__() (array method)": [[38, "array_api.array.__lshift__"]], "__lt__() (array method)": [[39, "array_api.array.__lt__"]], "__matmul__() (array method)": [[40, "array_api.array.__matmul__"]], "__mod__() (array method)": [[41, "array_api.array.__mod__"]], "__mul__() (array method)": [[42, "array_api.array.__mul__"]], "__ne__() (array method)": [[43, "array_api.array.__ne__"]], "__neg__() (array method)": [[44, "array_api.array.__neg__"]], "__or__() (array method)": [[45, "array_api.array.__or__"]], "__pos__() (array method)": [[46, "array_api.array.__pos__"]], "__pow__() (array method)": [[47, "array_api.array.__pow__"]], "__rshift__() (array method)": [[48, "array_api.array.__rshift__"]], "__setitem__() (array method)": [[49, "array_api.array.__setitem__"]], "__sub__() (array method)": [[50, "array_api.array.__sub__"]], "__truediv__() (array method)": [[51, "array_api.array.__truediv__"]], "__xor__() (array method)": [[52, "array_api.array.__xor__"]], "device (array property)": [[53, "array_api.array.device"]], "dtype (array property)": [[54, "array_api.array.dtype"]], "mt (array property)": [[55, "array_api.array.mT"]], "ndim (array property)": [[56, "array_api.array.ndim"]], "shape (array property)": [[57, "array_api.array.shape"]], "size (array property)": [[58, "array_api.array.size"]], "to_device() (array method)": [[59, "array_api.array.to_device"]], "asarray() (in module array_api)": [[60, "array_api.asarray"]], "asin() (in module array_api)": [[61, "array_api.asin"]], "asinh() (in module array_api)": [[62, "array_api.asinh"]], "astype() (in module array_api)": [[63, "array_api.astype"]], "atan() (in module array_api)": [[64, "array_api.atan"]], "atan2() (in module array_api)": [[65, "array_api.atan2"]], "atanh() (in module array_api)": [[66, "array_api.atanh"]], "bitwise_and() (in module array_api)": [[67, "array_api.bitwise_and"]], "bitwise_invert() (in module array_api)": [[68, "array_api.bitwise_invert"]], "bitwise_left_shift() (in module array_api)": [[69, "array_api.bitwise_left_shift"]], "bitwise_or() (in module array_api)": [[70, "array_api.bitwise_or"]], "bitwise_right_shift() (in module array_api)": [[71, "array_api.bitwise_right_shift"]], "bitwise_xor() (in module array_api)": [[72, "array_api.bitwise_xor"]], "broadcast_arrays() (in module array_api)": [[73, "array_api.broadcast_arrays"]], "broadcast_to() (in module array_api)": [[74, "array_api.broadcast_to"]], "can_cast() (in module array_api)": [[75, "array_api.can_cast"]], "ceil() (in module array_api)": [[76, "array_api.ceil"]], "clip() (in module array_api)": [[77, "array_api.clip"]], "concat() (in module array_api)": [[78, "array_api.concat"]], "conj() (in module array_api)": [[79, "array_api.conj"]], "e (in module array_api.constants)": [[80, "array_api.constants.e"]], "inf (in module array_api.constants)": [[81, "array_api.constants.inf"]], "nan (in module array_api.constants)": [[82, "array_api.constants.nan"]], "newaxis (in module array_api.constants)": [[83, "array_api.constants.newaxis"]], "pi (in module array_api.constants)": [[84, "array_api.constants.pi"]], "copysign() (in module array_api)": [[85, "array_api.copysign"]], "cos() (in module array_api)": [[86, "array_api.cos"]], "cosh() (in module array_api)": [[87, "array_api.cosh"]], "count_nonzero() (in module array_api)": [[88, "array_api.count_nonzero"]], "cumulative_prod() (in module array_api)": [[89, "array_api.cumulative_prod"]], "cumulative_sum() (in module array_api)": [[90, "array_api.cumulative_sum"]], "__eq__() (in module array_api.data_types)": [[91, "array_api.data_types.__eq__"]], "diff() (in module array_api)": [[92, "array_api.diff"]], "divide() (in module array_api)": [[93, "array_api.divide"]], "empty() (in module array_api)": [[94, "array_api.empty"]], "empty_like() (in module array_api)": [[95, "array_api.empty_like"]], "equal() (in module array_api)": [[96, "array_api.equal"]], "exp() (in module array_api)": [[97, "array_api.exp"]], "expand_dims() (in module array_api)": [[98, "array_api.expand_dims"]], "expm1() (in module array_api)": [[99, "array_api.expm1"]], "eye() (in module array_api)": [[100, "array_api.eye"]], "finfo() (in module array_api)": [[101, "array_api.finfo"]], "flip() (in module array_api)": [[102, "array_api.flip"]], "floor() (in module array_api)": [[103, "array_api.floor"]], "floor_divide() (in module array_api)": [[104, "array_api.floor_divide"]], "from_dlpack() (in module array_api)": [[105, "array_api.from_dlpack"]], "full() (in module array_api)": [[106, "array_api.full"]], "full_like() (in module array_api)": [[107, "array_api.full_like"]], "greater() (in module array_api)": [[108, "array_api.greater"]], "greater_equal() (in module array_api)": [[109, "array_api.greater_equal"]], "hypot() (in module array_api)": [[110, "array_api.hypot"]], "iinfo() (in module array_api)": [[111, "array_api.iinfo"]], "imag() (in module array_api)": [[112, "array_api.imag"]], "__array_namespace_info__() (in module array_api.info)": [[113, "array_api.info.__array_namespace_info__"]], "capabilities() (in module array_api.info)": [[114, "array_api.info.capabilities"]], "default_device() (in module array_api.info)": [[115, "array_api.info.default_device"]], "default_dtypes() (in module array_api.info)": [[116, "array_api.info.default_dtypes"]], "devices() (in module array_api.info)": [[117, "array_api.info.devices"]], "dtypes() (in module array_api.info)": [[118, "array_api.info.dtypes"]], "isdtype() (in module array_api)": [[119, "array_api.isdtype"]], "isfinite() (in module array_api)": [[120, "array_api.isfinite"]], "isinf() (in module array_api)": [[121, "array_api.isinf"]], "isnan() (in module array_api)": [[122, "array_api.isnan"]], "less() (in module array_api)": [[123, "array_api.less"]], "less_equal() (in module array_api)": [[124, "array_api.less_equal"]], "linspace() (in module array_api)": [[125, "array_api.linspace"]], "log() (in module array_api)": [[126, "array_api.log"]], "log10() (in module array_api)": [[127, "array_api.log10"]], "log1p() (in module array_api)": [[128, "array_api.log1p"]], "log2() (in module array_api)": [[129, "array_api.log2"]], "logaddexp() (in module array_api)": [[130, "array_api.logaddexp"]], "logical_and() (in module array_api)": [[131, "array_api.logical_and"]], "logical_not() (in module array_api)": [[132, "array_api.logical_not"]], "logical_or() (in module array_api)": [[133, "array_api.logical_or"]], "logical_xor() (in module array_api)": [[134, "array_api.logical_xor"]], "matmul() (in module array_api)": [[135, "array_api.matmul"]], "matrix_transpose() (in module array_api)": [[136, "array_api.matrix_transpose"]], "max() (in module array_api)": [[137, "array_api.max"]], "maximum() (in module array_api)": [[138, "array_api.maximum"]], "mean() (in module array_api)": [[139, "array_api.mean"]], "meshgrid() (in module array_api)": [[140, "array_api.meshgrid"]], "min() (in module array_api)": [[141, "array_api.min"]], "minimum() (in module array_api)": [[142, "array_api.minimum"]], "moveaxis() (in module array_api)": [[143, "array_api.moveaxis"]], "multiply() (in module array_api)": [[144, "array_api.multiply"]], "negative() (in module array_api)": [[145, "array_api.negative"]], "nextafter() (in module array_api)": [[146, "array_api.nextafter"]], "nonzero() (in module array_api)": [[147, "array_api.nonzero"]], "not_equal() (in module array_api)": [[148, "array_api.not_equal"]], "ones() (in module array_api)": [[149, "array_api.ones"]], "ones_like() (in module array_api)": [[150, "array_api.ones_like"]], "permute_dims() (in module array_api)": [[151, "array_api.permute_dims"]], "positive() (in module array_api)": [[152, "array_api.positive"]], "pow() (in module array_api)": [[153, "array_api.pow"]], "prod() (in module array_api)": [[154, "array_api.prod"]], "real() (in module array_api)": [[155, "array_api.real"]], "reciprocal() (in module array_api)": [[156, "array_api.reciprocal"]], "remainder() (in module array_api)": [[157, "array_api.remainder"]], "repeat() (in module array_api)": [[158, "array_api.repeat"]], "reshape() (in module array_api)": [[159, "array_api.reshape"]], "result_type() (in module array_api)": [[160, "array_api.result_type"]], "roll() (in module array_api)": [[161, "array_api.roll"]], "round() (in module array_api)": [[162, "array_api.round"]], "searchsorted() (in module array_api)": [[163, "array_api.searchsorted"]], "sign() (in module array_api)": [[164, "array_api.sign"]], "signbit() (in module array_api)": [[165, "array_api.signbit"]], "sin() (in module array_api)": [[166, "array_api.sin"]], "sinh() (in module array_api)": [[167, "array_api.sinh"]], "sort() (in module array_api)": [[168, "array_api.sort"]], "sqrt() (in module array_api)": [[169, "array_api.sqrt"]], "square() (in module array_api)": [[170, "array_api.square"]], "squeeze() (in module array_api)": [[171, "array_api.squeeze"]], "stack() (in module array_api)": [[172, "array_api.stack"]], "std() (in module array_api)": [[173, "array_api.std"]], "subtract() (in module array_api)": [[174, "array_api.subtract"]], "sum() (in module array_api)": [[175, "array_api.sum"]], "take() (in module array_api)": [[176, "array_api.take"]], "take_along_axis() (in module array_api)": [[177, "array_api.take_along_axis"]], "tan() (in module array_api)": [[178, "array_api.tan"]], "tanh() (in module array_api)": [[179, "array_api.tanh"]], "tensordot() (in module array_api)": [[180, "array_api.tensordot"]], "tile() (in module array_api)": [[181, "array_api.tile"]], "tril() (in module array_api)": [[182, "array_api.tril"]], "triu() (in module array_api)": [[183, "array_api.triu"]], "trunc() (in module array_api)": [[184, "array_api.trunc"]], "unique_all() (in module array_api)": [[185, "array_api.unique_all"]], "unique_counts() (in module array_api)": [[186, "array_api.unique_counts"]], "unique_inverse() (in module array_api)": [[187, "array_api.unique_inverse"]], "unique_values() (in module array_api)": [[188, "array_api.unique_values"]], "unstack() (in module array_api)": [[189, "array_api.unstack"]], "var() (in module array_api)": [[190, "array_api.var"]], "vecdot() (in module array_api)": [[191, "array_api.vecdot"]], "where() (in module array_api)": [[192, "array_api.where"]], "zeros() (in module array_api)": [[193, "array_api.zeros"]], "zeros_like() (in module array_api)": [[194, "array_api.zeros_like"]], "fft() (in module array_api.fft)": [[224, "array_api.fft.fft"]], "fftfreq() (in module array_api.fft)": [[225, "array_api.fft.fftfreq"]], "fftn() (in module array_api.fft)": [[226, "array_api.fft.fftn"]], "fftshift() (in module array_api.fft)": [[227, "array_api.fft.fftshift"]], "hfft() (in module array_api.fft)": [[228, "array_api.fft.hfft"]], "ifft() (in module array_api.fft)": [[229, "array_api.fft.ifft"]], "ifftn() (in module array_api.fft)": [[230, "array_api.fft.ifftn"]], "ifftshift() (in module array_api.fft)": [[231, "array_api.fft.ifftshift"]], "ihfft() (in module array_api.fft)": [[232, "array_api.fft.ihfft"]], "irfft() (in module array_api.fft)": [[233, "array_api.fft.irfft"]], "irfftn() (in module array_api.fft)": [[234, "array_api.fft.irfftn"]], "rfft() (in module array_api.fft)": [[235, "array_api.fft.rfft"]], "rfftfreq() (in module array_api.fft)": [[236, "array_api.fft.rfftfreq"]], "rfftn() (in module array_api.fft)": [[237, "array_api.fft.rfftn"]], "cholesky() (in module array_api.linalg)": [[238, "array_api.linalg.cholesky"]], "cross() (in module array_api.linalg)": [[239, "array_api.linalg.cross"]], "det() (in module array_api.linalg)": [[240, "array_api.linalg.det"]], "diagonal() (in module array_api.linalg)": [[241, "array_api.linalg.diagonal"]], "eigh() (in module array_api.linalg)": [[242, "array_api.linalg.eigh"]], "eigvalsh() (in module array_api.linalg)": [[243, "array_api.linalg.eigvalsh"]], "inv() (in module array_api.linalg)": [[244, "array_api.linalg.inv"]], "matmul() (in module array_api.linalg)": [[245, "array_api.linalg.matmul"]], "matrix_norm() (in module array_api.linalg)": [[246, "array_api.linalg.matrix_norm"]], "matrix_power() (in module array_api.linalg)": [[247, "array_api.linalg.matrix_power"]], "matrix_rank() (in module array_api.linalg)": [[248, "array_api.linalg.matrix_rank"]], "matrix_transpose() (in module array_api.linalg)": [[249, "array_api.linalg.matrix_transpose"]], "outer() (in module array_api.linalg)": [[250, "array_api.linalg.outer"]], "pinv() (in module array_api.linalg)": [[251, "array_api.linalg.pinv"]], "qr() (in module array_api.linalg)": [[252, "array_api.linalg.qr"]], "slogdet() (in module array_api.linalg)": [[253, "array_api.linalg.slogdet"]], "solve() (in module array_api.linalg)": [[254, "array_api.linalg.solve"]], "svd() (in module array_api.linalg)": [[255, "array_api.linalg.svd"]], "svdvals() (in module array_api.linalg)": [[256, "array_api.linalg.svdvals"]], "tensordot() (in module array_api.linalg)": [[257, "array_api.linalg.tensordot"]], "trace() (in module array_api.linalg)": [[258, "array_api.linalg.trace"]], "vecdot() (in module array_api.linalg)": [[259, "array_api.linalg.vecdot"]], "vector_norm() (in module array_api.linalg)": [[260, "array_api.linalg.vector_norm"]]}})