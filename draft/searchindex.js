Search.setIndex({"docnames": ["API_specification/array_object", "API_specification/broadcasting", "API_specification/constants", "API_specification/creation_functions", "API_specification/data_type_functions", "API_specification/data_types", "API_specification/elementwise_functions", "API_specification/function_and_method_signatures", "API_specification/generated/array_api.__array_api_version__", "API_specification/generated/array_api.abs", "API_specification/generated/array_api.acos", "API_specification/generated/array_api.acosh", "API_specification/generated/array_api.add", "API_specification/generated/array_api.all", "API_specification/generated/array_api.any", "API_specification/generated/array_api.arange", "API_specification/generated/array_api.argmax", "API_specification/generated/array_api.argmin", "API_specification/generated/array_api.argsort", "API_specification/generated/array_api.array.T", "API_specification/generated/array_api.array.__abs__", "API_specification/generated/array_api.array.__add__", "API_specification/generated/array_api.array.__and__", "API_specification/generated/array_api.array.__array_namespace__", "API_specification/generated/array_api.array.__bool__", "API_specification/generated/array_api.array.__complex__", "API_specification/generated/array_api.array.__dlpack__", "API_specification/generated/array_api.array.__dlpack_device__", "API_specification/generated/array_api.array.__eq__", "API_specification/generated/array_api.array.__float__", "API_specification/generated/array_api.array.__floordiv__", "API_specification/generated/array_api.array.__ge__", "API_specification/generated/array_api.array.__getitem__", "API_specification/generated/array_api.array.__gt__", "API_specification/generated/array_api.array.__index__", "API_specification/generated/array_api.array.__int__", "API_specification/generated/array_api.array.__invert__", "API_specification/generated/array_api.array.__le__", "API_specification/generated/array_api.array.__lshift__", "API_specification/generated/array_api.array.__lt__", "API_specification/generated/array_api.array.__matmul__", "API_specification/generated/array_api.array.__mod__", "API_specification/generated/array_api.array.__mul__", "API_specification/generated/array_api.array.__ne__", "API_specification/generated/array_api.array.__neg__", "API_specification/generated/array_api.array.__or__", "API_specification/generated/array_api.array.__pos__", "API_specification/generated/array_api.array.__pow__", "API_specification/generated/array_api.array.__rshift__", "API_specification/generated/array_api.array.__setitem__", "API_specification/generated/array_api.array.__sub__", "API_specification/generated/array_api.array.__truediv__", "API_specification/generated/array_api.array.__xor__", "API_specification/generated/array_api.array.device", "API_specification/generated/array_api.array.dtype", "API_specification/generated/array_api.array.mT", "API_specification/generated/array_api.array.ndim", "API_specification/generated/array_api.array.shape", "API_specification/generated/array_api.array.size", "API_specification/generated/array_api.array.to_device", "API_specification/generated/array_api.asarray", "API_specification/generated/array_api.asin", "API_specification/generated/array_api.asinh", "API_specification/generated/array_api.astype", "API_specification/generated/array_api.atan", "API_specification/generated/array_api.atan2", "API_specification/generated/array_api.atanh", "API_specification/generated/array_api.bitwise_and", "API_specification/generated/array_api.bitwise_invert", "API_specification/generated/array_api.bitwise_left_shift", "API_specification/generated/array_api.bitwise_or", "API_specification/generated/array_api.bitwise_right_shift", "API_specification/generated/array_api.bitwise_xor", "API_specification/generated/array_api.broadcast_arrays", "API_specification/generated/array_api.broadcast_to", "API_specification/generated/array_api.can_cast", "API_specification/generated/array_api.ceil", "API_specification/generated/array_api.clip", "API_specification/generated/array_api.concat", "API_specification/generated/array_api.conj", "API_specification/generated/array_api.constants.e", "API_specification/generated/array_api.constants.inf", "API_specification/generated/array_api.constants.nan", "API_specification/generated/array_api.constants.newaxis", "API_specification/generated/array_api.constants.pi", "API_specification/generated/array_api.copysign", "API_specification/generated/array_api.cos", "API_specification/generated/array_api.cosh", "API_specification/generated/array_api.cumulative_sum", "API_specification/generated/array_api.data_types.__eq__", "API_specification/generated/array_api.divide", "API_specification/generated/array_api.empty", "API_specification/generated/array_api.empty_like", "API_specification/generated/array_api.equal", "API_specification/generated/array_api.exp", "API_specification/generated/array_api.expand_dims", "API_specification/generated/array_api.expm1", "API_specification/generated/array_api.eye", "API_specification/generated/array_api.finfo", "API_specification/generated/array_api.flip", "API_specification/generated/array_api.floor", "API_specification/generated/array_api.floor_divide", "API_specification/generated/array_api.from_dlpack", "API_specification/generated/array_api.full", "API_specification/generated/array_api.full_like", "API_specification/generated/array_api.greater", "API_specification/generated/array_api.greater_equal", "API_specification/generated/array_api.hypot", "API_specification/generated/array_api.iinfo", "API_specification/generated/array_api.imag", "API_specification/generated/array_api.info.__array_namespace_info__", "API_specification/generated/array_api.info.capabilities", "API_specification/generated/array_api.info.default_device", "API_specification/generated/array_api.info.default_dtypes", "API_specification/generated/array_api.info.devices", "API_specification/generated/array_api.info.dtypes", "API_specification/generated/array_api.isdtype", "API_specification/generated/array_api.isfinite", "API_specification/generated/array_api.isinf", "API_specification/generated/array_api.isnan", "API_specification/generated/array_api.less", "API_specification/generated/array_api.less_equal", "API_specification/generated/array_api.linspace", "API_specification/generated/array_api.log", "API_specification/generated/array_api.log10", "API_specification/generated/array_api.log1p", "API_specification/generated/array_api.log2", "API_specification/generated/array_api.logaddexp", "API_specification/generated/array_api.logical_and", "API_specification/generated/array_api.logical_not", "API_specification/generated/array_api.logical_or", "API_specification/generated/array_api.logical_xor", "API_specification/generated/array_api.matmul", "API_specification/generated/array_api.matrix_transpose", "API_specification/generated/array_api.max", "API_specification/generated/array_api.maximum", "API_specification/generated/array_api.mean", "API_specification/generated/array_api.meshgrid", "API_specification/generated/array_api.min", "API_specification/generated/array_api.minimum", "API_specification/generated/array_api.moveaxis", "API_specification/generated/array_api.multiply", "API_specification/generated/array_api.negative", "API_specification/generated/array_api.nextafter", "API_specification/generated/array_api.nonzero", "API_specification/generated/array_api.not_equal", "API_specification/generated/array_api.ones", "API_specification/generated/array_api.ones_like", "API_specification/generated/array_api.permute_dims", "API_specification/generated/array_api.positive", "API_specification/generated/array_api.pow", "API_specification/generated/array_api.prod", "API_specification/generated/array_api.real", "API_specification/generated/array_api.remainder", "API_specification/generated/array_api.repeat", "API_specification/generated/array_api.reshape", "API_specification/generated/array_api.result_type", "API_specification/generated/array_api.roll", "API_specification/generated/array_api.round", "API_specification/generated/array_api.searchsorted", "API_specification/generated/array_api.sign", "API_specification/generated/array_api.signbit", "API_specification/generated/array_api.sin", "API_specification/generated/array_api.sinh", "API_specification/generated/array_api.sort", "API_specification/generated/array_api.sqrt", "API_specification/generated/array_api.square", "API_specification/generated/array_api.squeeze", "API_specification/generated/array_api.stack", "API_specification/generated/array_api.std", "API_specification/generated/array_api.subtract", "API_specification/generated/array_api.sum", "API_specification/generated/array_api.take", "API_specification/generated/array_api.tan", "API_specification/generated/array_api.tanh", "API_specification/generated/array_api.tensordot", "API_specification/generated/array_api.tile", "API_specification/generated/array_api.tril", "API_specification/generated/array_api.triu", "API_specification/generated/array_api.trunc", "API_specification/generated/array_api.unique_all", "API_specification/generated/array_api.unique_counts", "API_specification/generated/array_api.unique_inverse", "API_specification/generated/array_api.unique_values", "API_specification/generated/array_api.unstack", "API_specification/generated/array_api.var", "API_specification/generated/array_api.vecdot", "API_specification/generated/array_api.where", "API_specification/generated/array_api.zeros", "API_specification/generated/array_api.zeros_like", "API_specification/index", "API_specification/indexing", "API_specification/indexing_functions", "API_specification/inspection", "API_specification/linear_algebra_functions", "API_specification/manipulation_functions", "API_specification/searching_functions", "API_specification/set_functions", "API_specification/sorting_functions", "API_specification/statistical_functions", "API_specification/type_promotion", "API_specification/utility_functions", "API_specification/version", "assumptions", "benchmark_suite", "changelog", "design_topics/C_API", "design_topics/accuracy", "design_topics/complex_numbers", "design_topics/copies_views_and_mutation", "design_topics/data_dependent_output_shapes", "design_topics/data_interchange", "design_topics/device_support", "design_topics/exceptions", "design_topics/index", "design_topics/lazy_eager", "design_topics/parallelism", "design_topics/static_typing", "extensions/fourier_transform_functions", "extensions/generated/array_api.fft.fft", "extensions/generated/array_api.fft.fftfreq", "extensions/generated/array_api.fft.fftn", "extensions/generated/array_api.fft.fftshift", "extensions/generated/array_api.fft.hfft", "extensions/generated/array_api.fft.ifft", "extensions/generated/array_api.fft.ifftn", "extensions/generated/array_api.fft.ifftshift", "extensions/generated/array_api.fft.ihfft", "extensions/generated/array_api.fft.irfft", "extensions/generated/array_api.fft.irfftn", "extensions/generated/array_api.fft.rfft", "extensions/generated/array_api.fft.rfftfreq", "extensions/generated/array_api.fft.rfftn", "extensions/generated/array_api.linalg.cholesky", "extensions/generated/array_api.linalg.cross", "extensions/generated/array_api.linalg.det", "extensions/generated/array_api.linalg.diagonal", "extensions/generated/array_api.linalg.eigh", "extensions/generated/array_api.linalg.eigvalsh", "extensions/generated/array_api.linalg.inv", "extensions/generated/array_api.linalg.matmul", "extensions/generated/array_api.linalg.matrix_norm", "extensions/generated/array_api.linalg.matrix_power", "extensions/generated/array_api.linalg.matrix_rank", "extensions/generated/array_api.linalg.matrix_transpose", "extensions/generated/array_api.linalg.outer", "extensions/generated/array_api.linalg.pinv", "extensions/generated/array_api.linalg.qr", "extensions/generated/array_api.linalg.slogdet", "extensions/generated/array_api.linalg.solve", "extensions/generated/array_api.linalg.svd", "extensions/generated/array_api.linalg.svdvals", "extensions/generated/array_api.linalg.tensordot", "extensions/generated/array_api.linalg.trace", "extensions/generated/array_api.linalg.vecdot", "extensions/generated/array_api.linalg.vector_norm", "extensions/index", "extensions/linear_algebra_functions", "future_API_evolution", "index", "license", "purpose_and_scope", "usage_data", "use_cases", "verification_test_suite"], "filenames": ["API_specification/array_object.rst", "API_specification/broadcasting.rst", "API_specification/constants.rst", "API_specification/creation_functions.rst", "API_specification/data_type_functions.rst", "API_specification/data_types.rst", "API_specification/elementwise_functions.rst", "API_specification/function_and_method_signatures.rst", "API_specification/generated/array_api.__array_api_version__.rst", "API_specification/generated/array_api.abs.rst", "API_specification/generated/array_api.acos.rst", "API_specification/generated/array_api.acosh.rst", "API_specification/generated/array_api.add.rst", "API_specification/generated/array_api.all.rst", "API_specification/generated/array_api.any.rst", "API_specification/generated/array_api.arange.rst", "API_specification/generated/array_api.argmax.rst", "API_specification/generated/array_api.argmin.rst", "API_specification/generated/array_api.argsort.rst", "API_specification/generated/array_api.array.T.rst", "API_specification/generated/array_api.array.__abs__.rst", "API_specification/generated/array_api.array.__add__.rst", "API_specification/generated/array_api.array.__and__.rst", "API_specification/generated/array_api.array.__array_namespace__.rst", "API_specification/generated/array_api.array.__bool__.rst", "API_specification/generated/array_api.array.__complex__.rst", "API_specification/generated/array_api.array.__dlpack__.rst", "API_specification/generated/array_api.array.__dlpack_device__.rst", "API_specification/generated/array_api.array.__eq__.rst", "API_specification/generated/array_api.array.__float__.rst", "API_specification/generated/array_api.array.__floordiv__.rst", "API_specification/generated/array_api.array.__ge__.rst", "API_specification/generated/array_api.array.__getitem__.rst", "API_specification/generated/array_api.array.__gt__.rst", "API_specification/generated/array_api.array.__index__.rst", "API_specification/generated/array_api.array.__int__.rst", "API_specification/generated/array_api.array.__invert__.rst", "API_specification/generated/array_api.array.__le__.rst", "API_specification/generated/array_api.array.__lshift__.rst", "API_specification/generated/array_api.array.__lt__.rst", "API_specification/generated/array_api.array.__matmul__.rst", "API_specification/generated/array_api.array.__mod__.rst", "API_specification/generated/array_api.array.__mul__.rst", "API_specification/generated/array_api.array.__ne__.rst", "API_specification/generated/array_api.array.__neg__.rst", "API_specification/generated/array_api.array.__or__.rst", "API_specification/generated/array_api.array.__pos__.rst", "API_specification/generated/array_api.array.__pow__.rst", "API_specification/generated/array_api.array.__rshift__.rst", "API_specification/generated/array_api.array.__setitem__.rst", "API_specification/generated/array_api.array.__sub__.rst", "API_specification/generated/array_api.array.__truediv__.rst", "API_specification/generated/array_api.array.__xor__.rst", "API_specification/generated/array_api.array.device.rst", "API_specification/generated/array_api.array.dtype.rst", "API_specification/generated/array_api.array.mT.rst", "API_specification/generated/array_api.array.ndim.rst", "API_specification/generated/array_api.array.shape.rst", "API_specification/generated/array_api.array.size.rst", "API_specification/generated/array_api.array.to_device.rst", "API_specification/generated/array_api.asarray.rst", "API_specification/generated/array_api.asin.rst", "API_specification/generated/array_api.asinh.rst", "API_specification/generated/array_api.astype.rst", "API_specification/generated/array_api.atan.rst", "API_specification/generated/array_api.atan2.rst", "API_specification/generated/array_api.atanh.rst", "API_specification/generated/array_api.bitwise_and.rst", "API_specification/generated/array_api.bitwise_invert.rst", "API_specification/generated/array_api.bitwise_left_shift.rst", "API_specification/generated/array_api.bitwise_or.rst", "API_specification/generated/array_api.bitwise_right_shift.rst", "API_specification/generated/array_api.bitwise_xor.rst", "API_specification/generated/array_api.broadcast_arrays.rst", "API_specification/generated/array_api.broadcast_to.rst", "API_specification/generated/array_api.can_cast.rst", "API_specification/generated/array_api.ceil.rst", "API_specification/generated/array_api.clip.rst", "API_specification/generated/array_api.concat.rst", "API_specification/generated/array_api.conj.rst", "API_specification/generated/array_api.constants.e.rst", "API_specification/generated/array_api.constants.inf.rst", "API_specification/generated/array_api.constants.nan.rst", "API_specification/generated/array_api.constants.newaxis.rst", "API_specification/generated/array_api.constants.pi.rst", "API_specification/generated/array_api.copysign.rst", "API_specification/generated/array_api.cos.rst", "API_specification/generated/array_api.cosh.rst", "API_specification/generated/array_api.cumulative_sum.rst", "API_specification/generated/array_api.data_types.__eq__.rst", "API_specification/generated/array_api.divide.rst", "API_specification/generated/array_api.empty.rst", "API_specification/generated/array_api.empty_like.rst", "API_specification/generated/array_api.equal.rst", "API_specification/generated/array_api.exp.rst", "API_specification/generated/array_api.expand_dims.rst", "API_specification/generated/array_api.expm1.rst", "API_specification/generated/array_api.eye.rst", "API_specification/generated/array_api.finfo.rst", "API_specification/generated/array_api.flip.rst", "API_specification/generated/array_api.floor.rst", "API_specification/generated/array_api.floor_divide.rst", "API_specification/generated/array_api.from_dlpack.rst", "API_specification/generated/array_api.full.rst", "API_specification/generated/array_api.full_like.rst", "API_specification/generated/array_api.greater.rst", "API_specification/generated/array_api.greater_equal.rst", "API_specification/generated/array_api.hypot.rst", "API_specification/generated/array_api.iinfo.rst", "API_specification/generated/array_api.imag.rst", "API_specification/generated/array_api.info.__array_namespace_info__.rst", "API_specification/generated/array_api.info.capabilities.rst", "API_specification/generated/array_api.info.default_device.rst", "API_specification/generated/array_api.info.default_dtypes.rst", "API_specification/generated/array_api.info.devices.rst", "API_specification/generated/array_api.info.dtypes.rst", "API_specification/generated/array_api.isdtype.rst", "API_specification/generated/array_api.isfinite.rst", "API_specification/generated/array_api.isinf.rst", "API_specification/generated/array_api.isnan.rst", "API_specification/generated/array_api.less.rst", "API_specification/generated/array_api.less_equal.rst", "API_specification/generated/array_api.linspace.rst", "API_specification/generated/array_api.log.rst", "API_specification/generated/array_api.log10.rst", "API_specification/generated/array_api.log1p.rst", "API_specification/generated/array_api.log2.rst", "API_specification/generated/array_api.logaddexp.rst", "API_specification/generated/array_api.logical_and.rst", "API_specification/generated/array_api.logical_not.rst", "API_specification/generated/array_api.logical_or.rst", "API_specification/generated/array_api.logical_xor.rst", "API_specification/generated/array_api.matmul.rst", "API_specification/generated/array_api.matrix_transpose.rst", "API_specification/generated/array_api.max.rst", "API_specification/generated/array_api.maximum.rst", "API_specification/generated/array_api.mean.rst", "API_specification/generated/array_api.meshgrid.rst", "API_specification/generated/array_api.min.rst", "API_specification/generated/array_api.minimum.rst", "API_specification/generated/array_api.moveaxis.rst", "API_specification/generated/array_api.multiply.rst", "API_specification/generated/array_api.negative.rst", "API_specification/generated/array_api.nextafter.rst", "API_specification/generated/array_api.nonzero.rst", "API_specification/generated/array_api.not_equal.rst", "API_specification/generated/array_api.ones.rst", "API_specification/generated/array_api.ones_like.rst", "API_specification/generated/array_api.permute_dims.rst", "API_specification/generated/array_api.positive.rst", "API_specification/generated/array_api.pow.rst", "API_specification/generated/array_api.prod.rst", "API_specification/generated/array_api.real.rst", "API_specification/generated/array_api.remainder.rst", "API_specification/generated/array_api.repeat.rst", "API_specification/generated/array_api.reshape.rst", "API_specification/generated/array_api.result_type.rst", "API_specification/generated/array_api.roll.rst", "API_specification/generated/array_api.round.rst", "API_specification/generated/array_api.searchsorted.rst", "API_specification/generated/array_api.sign.rst", "API_specification/generated/array_api.signbit.rst", "API_specification/generated/array_api.sin.rst", "API_specification/generated/array_api.sinh.rst", "API_specification/generated/array_api.sort.rst", "API_specification/generated/array_api.sqrt.rst", "API_specification/generated/array_api.square.rst", "API_specification/generated/array_api.squeeze.rst", "API_specification/generated/array_api.stack.rst", "API_specification/generated/array_api.std.rst", "API_specification/generated/array_api.subtract.rst", "API_specification/generated/array_api.sum.rst", "API_specification/generated/array_api.take.rst", "API_specification/generated/array_api.tan.rst", "API_specification/generated/array_api.tanh.rst", "API_specification/generated/array_api.tensordot.rst", "API_specification/generated/array_api.tile.rst", "API_specification/generated/array_api.tril.rst", "API_specification/generated/array_api.triu.rst", "API_specification/generated/array_api.trunc.rst", "API_specification/generated/array_api.unique_all.rst", "API_specification/generated/array_api.unique_counts.rst", "API_specification/generated/array_api.unique_inverse.rst", "API_specification/generated/array_api.unique_values.rst", "API_specification/generated/array_api.unstack.rst", "API_specification/generated/array_api.var.rst", "API_specification/generated/array_api.vecdot.rst", "API_specification/generated/array_api.where.rst", "API_specification/generated/array_api.zeros.rst", "API_specification/generated/array_api.zeros_like.rst", "API_specification/index.rst", "API_specification/indexing.rst", "API_specification/indexing_functions.rst", "API_specification/inspection.rst", "API_specification/linear_algebra_functions.rst", "API_specification/manipulation_functions.rst", "API_specification/searching_functions.rst", "API_specification/set_functions.rst", "API_specification/sorting_functions.rst", "API_specification/statistical_functions.rst", "API_specification/type_promotion.rst", "API_specification/utility_functions.rst", "API_specification/version.rst", "assumptions.md", "benchmark_suite.md", "changelog.rst", "design_topics/C_API.rst", "design_topics/accuracy.rst", "design_topics/complex_numbers.rst", "design_topics/copies_views_and_mutation.rst", "design_topics/data_dependent_output_shapes.rst", "design_topics/data_interchange.rst", "design_topics/device_support.rst", "design_topics/exceptions.rst", "design_topics/index.rst", "design_topics/lazy_eager.rst", "design_topics/parallelism.rst", "design_topics/static_typing.rst", "extensions/fourier_transform_functions.rst", "extensions/generated/array_api.fft.fft.rst", "extensions/generated/array_api.fft.fftfreq.rst", "extensions/generated/array_api.fft.fftn.rst", "extensions/generated/array_api.fft.fftshift.rst", "extensions/generated/array_api.fft.hfft.rst", "extensions/generated/array_api.fft.ifft.rst", "extensions/generated/array_api.fft.ifftn.rst", "extensions/generated/array_api.fft.ifftshift.rst", "extensions/generated/array_api.fft.ihfft.rst", "extensions/generated/array_api.fft.irfft.rst", "extensions/generated/array_api.fft.irfftn.rst", "extensions/generated/array_api.fft.rfft.rst", "extensions/generated/array_api.fft.rfftfreq.rst", "extensions/generated/array_api.fft.rfftn.rst", "extensions/generated/array_api.linalg.cholesky.rst", "extensions/generated/array_api.linalg.cross.rst", "extensions/generated/array_api.linalg.det.rst", "extensions/generated/array_api.linalg.diagonal.rst", "extensions/generated/array_api.linalg.eigh.rst", "extensions/generated/array_api.linalg.eigvalsh.rst", "extensions/generated/array_api.linalg.inv.rst", "extensions/generated/array_api.linalg.matmul.rst", "extensions/generated/array_api.linalg.matrix_norm.rst", "extensions/generated/array_api.linalg.matrix_power.rst", "extensions/generated/array_api.linalg.matrix_rank.rst", "extensions/generated/array_api.linalg.matrix_transpose.rst", "extensions/generated/array_api.linalg.outer.rst", "extensions/generated/array_api.linalg.pinv.rst", "extensions/generated/array_api.linalg.qr.rst", "extensions/generated/array_api.linalg.slogdet.rst", "extensions/generated/array_api.linalg.solve.rst", "extensions/generated/array_api.linalg.svd.rst", "extensions/generated/array_api.linalg.svdvals.rst", "extensions/generated/array_api.linalg.tensordot.rst", "extensions/generated/array_api.linalg.trace.rst", "extensions/generated/array_api.linalg.vecdot.rst", "extensions/generated/array_api.linalg.vector_norm.rst", "extensions/index.rst", "extensions/linear_algebra_functions.rst", "future_API_evolution.md", "index.rst", "license.rst", "purpose_and_scope.md", "usage_data.md", "use_cases.md", "verification_test_suite.md"], "titles": ["Array object", "Broadcasting", "Constants", "Creation Functions", "Data Type Functions", "Data Types", "Element-wise Functions", "Function and method signatures", "__array_api_version__", "abs", "acos", "acosh", "add", "all", "any", "arange", "argmax", "argmin", "argsort", "T", "__abs__", "__add__", "__and__", "__array_namespace__", "__bool__", "__complex__", "__dlpack__", "__dlpack_device__", "__eq__", "__float__", "__floordiv__", "__ge__", "__getitem__", "__gt__", "__index__", "__int__", "__invert__", "__le__", "__lshift__", "__lt__", "__matmul__", "__mod__", "__mul__", "__ne__", "__neg__", "__or__", "__pos__", "__pow__", "__rshift__", "__setitem__", "__sub__", "__truediv__", "__xor__", "device", "dtype", "mT", "ndim", "shape", "size", "to_device", "asarray", "asin", "asinh", "astype", "atan", "atan2", "atanh", "bitwise_and", "bitwise_invert", "bitwise_left_shift", "bitwise_or", "bitwise_right_shift", "bitwise_xor", "broadcast_arrays", "broadcast_to", "can_cast", "ceil", "clip", "concat", "conj", "e", "inf", "nan", "newaxis", "pi", "copysign", "cos", "cosh", "cumulative_sum", "__eq__", "divide", "empty", "empty_like", "equal", "exp", "expand_dims", "expm1", "eye", "finfo", "flip", "floor", "floor_divide", "from_dlpack", "full", "full_like", "greater", "greater_equal", "hypot", "iinfo", "imag", "__array_namespace_info__", "capabilities", "default_device", "default_dtypes", "devices", "dtypes", "isdtype", "isfinite", "isinf", "isnan", "less", "less_equal", "linspace", "log", "log10", "log1p", "log2", "logaddexp", "logical_and", "logical_not", "logical_or", "logical_xor", "matmul", "matrix_transpose", "max", "maximum", "mean", "meshgrid", "min", "minimum", "moveaxis", "multiply", "negative", "nextafter", "nonzero", "not_equal", "ones", "ones_like", "permute_dims", "positive", "pow", "prod", "real", "remainder", "repeat", "reshape", "result_type", "roll", "round", "searchsorted", "sign", "signbit", "sin", "sinh", "sort", "sqrt", "square", "squeeze", "stack", "std", "subtract", "sum", "take", "tan", "tanh", "tensordot", "tile", "tril", "triu", "trunc", "unique_all", "unique_counts", "unique_inverse", "unique_values", "unstack", "var", "vecdot", "where", "zeros", "zeros_like", "API specification", "Indexing", "Indexing Functions", "Inspection", "Linear Algebra Functions", "Manipulation Functions", "Searching Functions", "Set Functions", "Sorting Functions", "Statistical Functions", "Type Promotion Rules", "Utility Functions", "Version", "Assumptions", "Benchmark suite", "Changelog per API standard version", "C API", "Accuracy", "Complex Numbers", "Copy-view behaviour and mutability", "Data-dependent output shapes", "Data interchange mechanisms", "Device support", "Exceptions", "Design topics &amp; constraints", "Lazy vs. eager execution", "Parallelism", "Static typing", "Fourier transform Functions", "fft", "fftfreq", "fftn", "fftshift", "hfft", "ifft", "ifftn", "ifftshift", "ihfft", "irfft", "irfftn", "rfft", "rfftfreq", "rfftn", "cholesky", "cross", "det", "diagonal", "eigh", "eigvalsh", "inv", "matmul", "matrix_norm", "matrix_power", "matrix_rank", "matrix_transpose", "outer", "pinv", "qr", "slogdet", "solve", "svd", "svdvals", "tensordot", "trace", "vecdot", "vector_norm", "Extensions", "Linear Algebra Extension", "Future API standard evolution", "Python array API standard", "License", "Purpose and scope", "Usage Data", "Use cases", "Verification - test suite"], "terms": {"api": [0, 1, 5, 7, 8, 23, 26, 63, 102, 110, 111, 115, 116, 191, 200, 203, 207, 208, 209, 211, 212, 213, 214, 215, 216, 217, 256, 260, 262, 264], "specif": [0, 1, 2, 3, 4, 5, 6, 8, 19, 23, 26, 49, 51, 59, 63, 78, 90, 101, 111, 113, 115, 116, 122, 128, 129, 130, 131, 134, 135, 136, 138, 139, 150, 154, 156, 159, 168, 169, 172, 175, 180, 181, 185, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 205, 206, 207, 208, 209, 210, 211, 212, 213, 215, 217, 218, 237, 238, 256, 257, 258, 259, 261, 262, 263, 264], "A": [0, 1, 2, 3, 4, 5, 7, 13, 14, 26, 57, 97, 102, 116, 154, 168, 184, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 206, 209, 211, 212, 215, 216, 217, 218, 219, 221, 223, 224, 225, 227, 228, 229, 230, 232, 246, 249, 257, 260, 261, 262, 263], "conform": [0, 2, 3, 4, 5, 8, 9, 16, 17, 18, 31, 33, 37, 39, 59, 60, 96, 105, 106, 107, 111, 115, 116, 120, 121, 122, 125, 134, 135, 138, 139, 150, 154, 159, 164, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 205, 207, 208, 211, 218, 257], "implement": [0, 2, 3, 4, 5, 8, 9, 10, 11, 16, 17, 18, 20, 23, 24, 25, 26, 29, 30, 31, 33, 34, 35, 37, 39, 40, 41, 44, 47, 49, 51, 59, 60, 61, 62, 63, 64, 65, 66, 77, 86, 87, 88, 90, 94, 96, 101, 102, 103, 104, 105, 106, 107, 111, 116, 120, 121, 122, 123, 124, 125, 126, 132, 134, 135, 136, 138, 139, 141, 142, 144, 150, 151, 153, 154, 156, 159, 162, 163, 164, 166, 169, 171, 173, 174, 180, 181, 182, 183, 185, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 215, 217, 218, 221, 222, 225, 226, 229, 232, 233, 237, 238, 247, 249, 253, 256, 257, 258, 262, 263], "standard": [0, 2, 3, 4, 5, 7, 26, 98, 102, 116, 124, 126, 169, 174, 185, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 207, 208, 209, 211, 212, 213, 215, 216, 217, 256, 257, 260, 262, 263], "must": [0, 1, 2, 3, 4, 5, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 76, 77, 78, 79, 85, 86, 87, 88, 90, 91, 92, 93, 94, 95, 96, 97, 99, 100, 101, 102, 103, 104, 105, 106, 107, 109, 111, 113, 114, 115, 116, 117, 118, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 205, 207, 208, 209, 211, 213, 215, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 241, 242, 243, 245, 246, 247, 248, 249, 250, 251, 253, 255, 256, 257, 258, 261, 262], "provid": [0, 2, 3, 4, 5, 13, 14, 26, 59, 88, 95, 99, 102, 114, 116, 137, 140, 151, 154, 156, 168, 169, 171, 172, 184, 185, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 205, 206, 208, 209, 211, 212, 213, 216, 217, 218, 219, 221, 224, 225, 228, 229, 230, 232, 242, 253, 256, 257, 258, 260, 261, 262, 263], "support": [0, 1, 2, 3, 4, 5, 7, 9, 10, 11, 12, 13, 14, 16, 17, 18, 20, 21, 24, 26, 29, 31, 33, 35, 37, 39, 40, 42, 43, 44, 46, 47, 50, 51, 53, 57, 59, 60, 61, 62, 63, 64, 66, 86, 87, 88, 89, 90, 93, 94, 96, 97, 98, 101, 102, 103, 104, 105, 106, 107, 111, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 128, 129, 130, 131, 132, 134, 135, 137, 138, 139, 141, 142, 144, 145, 146, 147, 149, 150, 151, 154, 158, 160, 162, 163, 164, 165, 166, 170, 171, 172, 173, 174, 175, 180, 181, 182, 183, 186, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 203, 207, 208, 209, 214, 217, 218, 233, 234, 235, 237, 238, 239, 241, 242, 243, 245, 246, 247, 248, 249, 250, 251, 253, 255, 256, 257, 261, 262], "an": [0, 1, 5, 7, 9, 10, 11, 12, 13, 14, 15, 18, 19, 20, 21, 22, 23, 26, 28, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 76, 77, 78, 79, 83, 85, 86, 87, 88, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 114, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 191, 198, 200, 203, 205, 206, 207, 208, 209, 210, 212, 213, 215, 216, 217, 219, 220, 221, 223, 224, 225, 227, 228, 229, 230, 231, 232, 233, 234, 236, 237, 238, 239, 241, 242, 243, 246, 247, 248, 249, 250, 251, 253, 255, 256, 257, 258, 260, 262, 263], "have": [0, 1, 2, 5, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 55, 57, 58, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 76, 77, 78, 79, 85, 86, 87, 88, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 103, 104, 105, 106, 107, 108, 109, 111, 113, 115, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 191, 203, 205, 206, 208, 209, 212, 215, 217, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 241, 242, 243, 245, 246, 247, 248, 249, 250, 251, 253, 255, 257, 258, 261, 262, 263], "follow": [0, 1, 2, 3, 4, 5, 7, 10, 11, 12, 26, 44, 49, 61, 62, 64, 66, 88, 90, 98, 101, 103, 108, 110, 111, 113, 115, 116, 123, 125, 141, 142, 150, 153, 158, 165, 175, 180, 181, 182, 183, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 203, 205, 207, 208, 210, 211, 212, 213, 218, 219, 221, 223, 224, 225, 227, 228, 229, 230, 232, 241, 247, 255, 257, 258, 260, 261, 262, 263], "furthermor": [0, 261, 264], "minimum": [0, 9, 17, 20, 44, 134, 138, 142, 190, 205, 207], "rank": [0, 1, 13, 14, 95, 111, 137, 140, 144, 159, 168, 172, 175, 176, 184, 186, 191, 205, 219, 221, 223, 224, 225, 227, 228, 229, 230, 232, 234, 241, 243, 247, 249, 253, 255, 261], "i": [0, 1, 2, 5, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 23, 24, 25, 26, 29, 30, 31, 33, 34, 35, 37, 39, 40, 41, 42, 43, 44, 47, 49, 51, 55, 57, 59, 60, 61, 62, 63, 64, 65, 66, 69, 71, 74, 76, 77, 78, 79, 83, 85, 86, 87, 88, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 109, 113, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 132, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 198, 200, 203, 204, 205, 207, 208, 209, 211, 212, 213, 215, 216, 217, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 241, 242, 243, 245, 246, 247, 248, 249, 250, 251, 253, 255, 256, 257, 258, 260, 261, 262, 263, 264], "e": [0, 1, 2, 5, 7, 9, 10, 11, 18, 19, 20, 26, 40, 43, 47, 49, 51, 55, 57, 62, 63, 65, 66, 69, 71, 76, 77, 78, 86, 87, 88, 90, 93, 94, 95, 100, 101, 102, 107, 109, 115, 116, 122, 123, 124, 125, 126, 132, 134, 136, 137, 138, 140, 141, 142, 144, 145, 146, 147, 149, 150, 151, 152, 153, 154, 156, 158, 159, 161, 162, 163, 164, 165, 167, 168, 169, 171, 172, 173, 174, 175, 176, 180, 181, 182, 183, 185, 190, 191, 198, 200, 205, 206, 207, 208, 209, 210, 211, 212, 215, 219, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 232, 234, 237, 238, 241, 243, 246, 248, 249, 250, 251, 253, 255, 256, 257, 258, 261, 262, 263], "number": [0, 1, 5, 9, 10, 11, 12, 13, 14, 16, 17, 18, 25, 26, 31, 33, 35, 37, 39, 44, 56, 58, 60, 61, 62, 63, 64, 65, 66, 73, 76, 79, 82, 87, 88, 90, 93, 94, 95, 96, 97, 98, 100, 101, 103, 105, 106, 107, 108, 109, 111, 117, 118, 120, 121, 122, 123, 125, 134, 135, 136, 137, 138, 139, 140, 141, 142, 144, 145, 146, 147, 148, 150, 151, 152, 153, 154, 156, 157, 158, 159, 160, 161, 163, 164, 165, 166, 168, 169, 171, 172, 174, 175, 176, 179, 180, 181, 184, 185, 186, 191, 198, 200, 211, 214, 219, 221, 223, 224, 225, 227, 228, 229, 230, 232, 233, 237, 238, 239, 243, 247, 248, 249, 250, 253, 257, 261, 262], "dimens": [0, 1, 13, 14, 16, 17, 19, 40, 55, 56, 57, 58, 78, 88, 95, 99, 111, 132, 133, 134, 136, 138, 140, 144, 148, 151, 154, 155, 157, 167, 168, 169, 171, 172, 175, 176, 177, 178, 180, 181, 182, 183, 184, 185, 186, 191, 200, 219, 221, 222, 223, 224, 225, 227, 228, 229, 230, 232, 233, 234, 235, 236, 237, 238, 239, 241, 242, 243, 246, 247, 248, 249, 250, 251, 253, 255, 261], "0": [0, 1, 5, 9, 10, 11, 12, 15, 24, 25, 26, 29, 35, 38, 48, 57, 61, 62, 63, 64, 65, 66, 69, 71, 76, 78, 85, 86, 87, 90, 93, 94, 95, 96, 97, 98, 100, 101, 107, 123, 124, 125, 126, 134, 135, 136, 138, 139, 141, 143, 148, 150, 151, 153, 158, 159, 160, 161, 162, 163, 165, 168, 169, 171, 173, 174, 175, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 191, 198, 200, 208, 209, 220, 222, 231, 236, 241, 248, 250, 251, 253, 255, 261, 263], "1": [0, 1, 7, 10, 11, 13, 14, 15, 18, 25, 26, 27, 29, 35, 40, 61, 62, 63, 64, 65, 66, 85, 86, 87, 88, 94, 95, 96, 97, 98, 101, 122, 123, 124, 125, 126, 132, 146, 147, 148, 150, 151, 154, 155, 159, 160, 161, 164, 168, 169, 173, 174, 175, 176, 177, 178, 185, 186, 191, 208, 209, 216, 219, 220, 221, 223, 224, 225, 227, 228, 229, 230, 231, 232, 234, 237, 239, 241, 249, 250, 251, 255], "2": [0, 1, 5, 7, 9, 10, 11, 26, 27, 40, 61, 62, 64, 65, 66, 80, 86, 87, 90, 123, 125, 126, 132, 163, 166, 173, 174, 175, 176, 191, 208, 209, 217, 220, 223, 227, 228, 229, 230, 231, 232, 241, 243, 246, 247, 248, 250, 251, 252, 253, 255], "3": [0, 1, 5, 7, 27, 84, 172, 176, 203, 208, 209, 212, 234], "4": [0, 1, 5, 10, 11, 27, 62, 65, 123, 125, 176, 191, 216, 262], "explicitli": [0, 26, 40, 63, 111, 132, 172, 175, 191, 203, 205, 233, 237, 238, 247, 249, 257, 261, 263], "document": [0, 5, 7, 59, 101, 116, 154, 193, 198, 206, 208, 211, 213, 256, 258, 260, 262, 263, 264], "maximum": [0, 1, 16, 26, 111, 122, 134, 138, 190, 205, 207, 241], "n": [0, 1, 13, 14, 40, 55, 86, 88, 95, 122, 132, 133, 136, 137, 140, 144, 148, 151, 154, 159, 168, 169, 171, 173, 174, 175, 176, 177, 178, 184, 185, 186, 191, 205, 219, 220, 221, 223, 224, 225, 227, 228, 229, 230, 231, 232, 233, 234, 236, 237, 238, 239, 241, 242, 243, 245, 246, 247, 250, 251, 253, 255, 261], "zero": [0, 5, 13, 14, 16, 17, 24, 25, 29, 30, 34, 35, 40, 41, 47, 63, 65, 69, 88, 90, 95, 96, 97, 101, 107, 125, 128, 129, 130, 131, 132, 134, 135, 136, 137, 138, 139, 141, 144, 146, 147, 150, 151, 153, 159, 161, 169, 171, 177, 178, 179, 180, 181, 182, 183, 185, 186, 189, 190, 191, 198, 200, 205, 206, 208, 211, 219, 221, 222, 223, 224, 225, 227, 228, 229, 230, 232, 235, 242, 243, 246, 247, 248, 255, 263], "dimension": [0, 13, 14, 15, 16, 17, 19, 24, 25, 29, 34, 35, 40, 88, 97, 122, 132, 134, 136, 137, 138, 144, 151, 154, 159, 169, 171, 172, 180, 181, 182, 183, 185, 186, 191, 200, 205, 217, 219, 221, 223, 224, 225, 227, 228, 229, 230, 232, 234, 235, 238, 239, 243, 245, 246, 255, 257, 261], "apart": 0, "from": [0, 5, 13, 14, 15, 19, 26, 44, 59, 60, 63, 75, 78, 88, 92, 99, 101, 102, 103, 104, 107, 122, 123, 125, 137, 142, 147, 150, 151, 155, 156, 165, 167, 169, 171, 172, 174, 180, 182, 185, 186, 187, 189, 191, 200, 203, 205, 206, 207, 208, 211, 212, 213, 215, 219, 221, 223, 224, 225, 227, 228, 229, 230, 232, 234, 237, 248, 250, 253, 257, 258, 260, 261, 262, 263, 264], "ndim": [0, 186, 190, 234, 247, 250, 251], "devic": [0, 5, 15, 26, 27, 59, 60, 63, 91, 92, 97, 102, 103, 104, 110, 112, 113, 115, 122, 146, 147, 154, 177, 178, 188, 189, 190, 191, 193, 205, 211, 214, 220, 231, 247, 257, 261, 263], "dtype": [0, 5, 15, 26, 60, 63, 73, 75, 88, 89, 91, 92, 97, 98, 102, 103, 104, 108, 110, 116, 122, 146, 147, 151, 156, 171, 188, 189, 190, 200, 203, 205, 211, 217, 253, 261, 262, 263], "all": [0, 5, 15, 19, 23, 26, 60, 63, 87, 90, 97, 99, 102, 111, 115, 141, 157, 163, 174, 176, 177, 178, 184, 186, 190, 191, 203, 205, 206, 208, 209, 210, 211, 212, 213, 215, 219, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 232, 234, 246, 248, 249, 255, 256, 257, 260, 261, 263, 264], "thi": [0, 1, 5, 7, 15, 19, 26, 34, 58, 59, 63, 71, 78, 96, 101, 102, 107, 111, 115, 116, 122, 125, 128, 129, 130, 131, 136, 144, 150, 153, 154, 168, 169, 172, 180, 181, 182, 183, 185, 190, 191, 198, 200, 203, 205, 206, 207, 208, 209, 210, 211, 212, 213, 215, 216, 217, 218, 219, 221, 222, 224, 225, 228, 229, 230, 232, 247, 248, 249, 250, 256, 257, 258, 260, 262, 263, 264], "return": [0, 5, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 193, 198, 205, 206, 207, 209, 211, 212, 215, 217, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 241, 242, 243, 245, 246, 247, 248, 249, 250, 251, 253, 255, 257, 261, 263], "tupl": [0, 1, 13, 14, 26, 27, 32, 49, 57, 74, 78, 91, 99, 103, 115, 116, 134, 136, 138, 140, 144, 146, 148, 151, 155, 157, 167, 168, 169, 171, 175, 176, 180, 181, 182, 184, 185, 188, 191, 203, 237, 247, 248, 250, 252, 255, 261], "includ": [0, 1, 7, 9, 13, 14, 15, 16, 17, 20, 21, 23, 28, 30, 40, 41, 42, 43, 47, 51, 88, 107, 111, 115, 116, 118, 122, 132, 134, 136, 138, 151, 154, 165, 169, 171, 185, 190, 191, 200, 205, 206, 207, 208, 209, 210, 211, 212, 216, 241, 255, 257, 258, 260, 262, 263], "those": [0, 5, 7, 15, 23, 88, 90, 113, 115, 141, 144, 151, 154, 171, 200, 205, 208, 209, 212, 213, 215, 247, 250, 251, 253, 256, 257, 258, 261, 262, 263], "mean": [0, 26, 190, 203, 209, 211, 212, 217, 258, 261], "var": [0, 190], "std": [0, 190], "which": [0, 1, 5, 7, 8, 13, 14, 15, 16, 17, 18, 19, 26, 30, 40, 41, 44, 59, 60, 63, 75, 77, 78, 83, 88, 91, 92, 95, 97, 98, 99, 101, 102, 103, 104, 107, 108, 111, 113, 114, 115, 122, 132, 134, 136, 138, 142, 144, 146, 147, 151, 153, 154, 157, 159, 164, 168, 169, 171, 172, 173, 177, 178, 180, 181, 182, 183, 184, 185, 186, 188, 189, 191, 205, 206, 207, 208, 209, 210, 211, 212, 213, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 234, 241, 249, 250, 251, 253, 255, 256, 257, 258, 261, 262, 263], "some": [0, 96, 101, 113, 115, 125, 191, 206, 207, 208, 209, 212, 217, 261, 263, 264], "common": [0, 191, 200, 203, 212, 215, 216, 257, 261, 262, 263], "librari": [0, 5, 7, 26, 51, 57, 58, 59, 60, 63, 90, 96, 101, 102, 111, 113, 115, 116, 122, 125, 128, 129, 130, 131, 134, 135, 136, 138, 139, 144, 154, 159, 169, 174, 180, 181, 182, 183, 185, 190, 191, 203, 205, 206, 207, 208, 209, 210, 211, 212, 213, 215, 216, 217, 233, 237, 238, 247, 249, 256, 257, 258, 261, 262, 263, 264], "g": [0, 5, 9, 19, 20, 26, 47, 51, 57, 77, 88, 90, 102, 107, 109, 115, 116, 122, 134, 138, 141, 144, 151, 152, 154, 156, 158, 171, 176, 180, 181, 182, 183, 191, 198, 200, 205, 206, 207, 208, 209, 210, 211, 212, 215, 223, 227, 228, 229, 230, 232, 237, 238, 241, 248, 250, 251, 253, 255, 256, 257, 258, 261, 262, 263], "numpi": [0, 19, 63, 191, 203, 208, 209, 211, 212, 257, 261, 262, 263, 264], "scalar": [0, 2, 49, 60, 190, 191, 205, 215, 255, 263], "valu": [0, 1, 2, 5, 7, 9, 10, 11, 12, 15, 16, 17, 18, 20, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 37, 39, 41, 43, 49, 51, 57, 58, 60, 61, 62, 63, 64, 65, 66, 76, 77, 78, 85, 86, 87, 88, 89, 90, 91, 93, 94, 96, 97, 98, 100, 101, 103, 104, 105, 106, 107, 111, 113, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 134, 135, 136, 138, 139, 141, 143, 144, 145, 146, 150, 151, 153, 154, 158, 159, 160, 161, 162, 163, 164, 165, 169, 171, 172, 173, 174, 179, 180, 181, 182, 183, 185, 186, 188, 190, 198, 200, 203, 205, 207, 209, 210, 211, 215, 217, 219, 220, 221, 223, 224, 225, 227, 228, 229, 230, 231, 232, 233, 237, 238, 239, 241, 242, 243, 246, 247, 248, 249, 250, 251, 253, 255, 257, 261, 263], "rational": [0, 7, 88, 151, 171, 191, 211, 212, 253, 256, 258, 261], "alwai": [0, 12, 26, 42, 60, 63, 98, 102, 141, 155, 191, 203, 208, 209, 212, 237], "necessari": [0, 26, 60, 90, 102, 141, 155, 176, 191, 209, 261], "acceler": [0, 5, 107, 154, 203, 211], "where": [0, 1, 7, 13, 14, 15, 26, 47, 57, 65, 86, 87, 90, 94, 96, 97, 101, 103, 104, 124, 125, 126, 137, 141, 144, 148, 150, 154, 159, 160, 162, 163, 168, 169, 173, 174, 176, 184, 185, 186, 190, 191, 200, 206, 208, 211, 212, 215, 219, 221, 223, 224, 225, 227, 228, 229, 230, 232, 233, 234, 237, 238, 239, 241, 243, 246, 247, 248, 250, 251, 253, 257, 261, 262, 263], "non": [0, 1, 7, 13, 14, 16, 17, 63, 128, 129, 130, 131, 134, 136, 138, 144, 151, 169, 175, 185, 186, 191, 200, 205, 206, 212, 219, 221, 224, 225, 228, 229, 230, 232, 234, 235, 237, 241, 243, 250, 255, 263], "could": [0, 26, 180, 181, 182, 183, 203, 209, 216, 257, 261, 263], "forc": 0, "synchron": [0, 26, 59, 154, 261], "delai": [0, 24, 25, 29, 34, 35, 203, 215, 261], "execut": [0, 200, 203, 212, 214, 216, 261, 263], "model": [0, 57, 58, 90, 141, 208, 215, 263], "repres": [0, 8, 11, 12, 23, 24, 25, 26, 29, 34, 35, 62, 66, 87, 90, 101, 137, 141, 163, 173, 174, 205, 207, 211, 212, 248, 262, 263], "futur": [0, 26, 102, 204, 208, 209, 212, 216, 217, 237, 238, 259, 261, 263], "python": [0, 2, 5, 7, 24, 25, 26, 29, 34, 35, 49, 60, 101, 102, 153, 190, 191, 203, 205, 208, 211, 213, 215, 216, 217, 258, 260, 261, 262], "x": [0, 1, 5, 7, 9, 10, 11, 13, 14, 16, 17, 18, 20, 26, 61, 62, 63, 64, 65, 66, 68, 74, 76, 77, 79, 85, 86, 87, 88, 92, 94, 95, 96, 99, 100, 102, 104, 109, 117, 118, 119, 123, 124, 125, 126, 129, 133, 134, 136, 138, 140, 142, 144, 147, 148, 149, 151, 152, 154, 155, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 171, 172, 173, 174, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 189, 191, 208, 209, 217, 218, 219, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 232, 233, 235, 236, 237, 238, 239, 241, 242, 243, 244, 246, 247, 248, 249, 250, 251, 253, 255, 257, 261, 263], "__pos__": [0, 190, 205], "po": 0, "__neg__": [0, 190, 205], "neg": [0, 13, 14, 15, 44, 47, 65, 78, 88, 90, 95, 97, 99, 101, 118, 123, 125, 141, 150, 153, 157, 161, 165, 172, 175, 186, 190, 191, 205, 208, 219, 221, 223, 224, 225, 227, 228, 229, 230, 232, 234, 255, 261], "x1": [0, 7, 12, 40, 65, 67, 69, 70, 71, 72, 77, 85, 90, 93, 101, 105, 106, 107, 120, 121, 127, 128, 130, 131, 132, 135, 139, 141, 143, 145, 150, 153, 159, 170, 175, 186, 187, 205, 234, 240, 245, 249, 252, 254], "x2": [0, 7, 12, 40, 65, 67, 69, 70, 71, 72, 85, 90, 93, 101, 105, 106, 107, 120, 121, 127, 128, 130, 131, 132, 135, 139, 141, 143, 145, 150, 153, 159, 170, 175, 186, 187, 205, 234, 240, 245, 249, 252, 254], "__add__": [0, 50, 190, 205], "add": [0, 7, 21, 88, 170, 171, 190, 191, 205, 206, 207, 212, 253], "__sub__": [0, 190, 205], "sub": [0, 191], "__mul__": [0, 190, 205], "mul": 0, "__truediv__": [0, 190, 205], "truediv": 0, "__floordiv__": [0, 190], "floordiv": 0, "__mod__": [0, 190], "mod": 0, "__pow__": [0, 190, 205], "pow": [0, 47, 190, 205, 207], "should": [0, 1, 5, 7, 9, 10, 11, 12, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 29, 30, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 50, 51, 52, 55, 57, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 76, 77, 79, 85, 86, 87, 88, 90, 94, 95, 96, 98, 100, 101, 102, 105, 106, 107, 109, 113, 115, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 134, 135, 136, 137, 138, 139, 141, 142, 143, 149, 150, 151, 152, 153, 155, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 169, 170, 171, 173, 174, 175, 177, 178, 179, 180, 181, 182, 183, 185, 186, 191, 198, 205, 206, 207, 208, 211, 212, 213, 217, 219, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 232, 233, 234, 235, 237, 238, 239, 241, 242, 243, 246, 247, 248, 249, 250, 251, 253, 255, 256, 257, 261, 263, 264], "defin": [0, 5, 12, 23, 30, 41, 49, 60, 65, 79, 90, 101, 103, 104, 115, 122, 134, 135, 136, 138, 139, 140, 141, 153, 160, 165, 166, 169, 177, 178, 185, 186, 190, 193, 198, 205, 207, 208, 217, 221, 222, 225, 226, 229, 232, 233, 237, 238, 239, 246, 247, 249, 257, 262, 263, 264], "real": [0, 5, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 24, 25, 29, 30, 31, 33, 35, 37, 39, 41, 44, 51, 60, 61, 62, 63, 64, 65, 66, 76, 77, 85, 86, 87, 88, 90, 91, 93, 94, 96, 97, 98, 100, 101, 103, 105, 106, 107, 113, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 134, 135, 136, 138, 139, 141, 142, 143, 144, 145, 146, 147, 150, 151, 153, 158, 159, 160, 161, 162, 163, 164, 165, 169, 171, 173, 174, 179, 185, 186, 188, 190, 200, 205, 208, 220, 223, 227, 228, 229, 230, 231, 232, 233, 237, 238, 239, 241, 243, 246, 247, 248, 249, 250, 251, 253, 255, 258], "data": [0, 1, 2, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76, 77, 78, 79, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 111, 113, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 145, 146, 147, 148, 149, 150, 151, 152, 153, 155, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 185, 186, 187, 188, 189, 190, 193, 200, 203, 206, 208, 209, 212, 214, 215, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 241, 242, 243, 245, 246, 247, 248, 249, 250, 251, 253, 255, 257, 258, 259, 260, 261, 264], "type": [0, 2, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 55, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76, 77, 78, 79, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 113, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 189, 190, 191, 193, 203, 206, 208, 209, 211, 213, 214, 215, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 241, 242, 243, 245, 246, 247, 248, 249, 250, 251, 253, 255, 257, 258, 261, 262], "__matmul__": [0, 190, 205], "matmul": [0, 40, 190, 200, 205, 257], "The": [0, 1, 5, 7, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 22, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 55, 57, 58, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 76, 77, 78, 79, 85, 86, 87, 88, 90, 93, 94, 96, 99, 100, 101, 102, 105, 106, 107, 109, 110, 111, 113, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 138, 139, 140, 141, 142, 143, 144, 145, 148, 149, 150, 151, 152, 153, 154, 158, 159, 160, 161, 162, 163, 164, 165, 166, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 185, 186, 187, 191, 200, 203, 205, 206, 207, 209, 210, 211, 212, 215, 216, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 241, 242, 243, 245, 246, 247, 248, 249, 250, 251, 253, 255, 256, 257, 258, 260, 261, 262, 263, 264], "__invert__": [0, 190], "inv": [0, 205, 257], "invert": [0, 68, 239, 242, 249], "__inv__": 0, "__and__": [0, 190], "__or__": [0, 190], "__xor__": [0, 190], "xor": [0, 72, 131], "__lshift__": [0, 190], "lshift": 0, "__rshift__": [0, 190], "rshift": 0, "integ": [0, 5, 9, 13, 14, 15, 20, 22, 26, 29, 30, 34, 35, 36, 38, 41, 44, 45, 47, 48, 51, 52, 60, 67, 68, 69, 70, 71, 72, 76, 77, 88, 90, 100, 101, 103, 104, 108, 111, 115, 116, 122, 134, 136, 138, 142, 150, 151, 153, 154, 156, 158, 159, 169, 171, 172, 179, 185, 186, 190, 191, 205, 207, 208, 219, 221, 223, 224, 225, 227, 228, 229, 230, 232, 234, 242, 243, 253, 255, 261], "boolean": [0, 5, 22, 24, 25, 26, 29, 35, 36, 43, 45, 52, 57, 60, 63, 67, 68, 70, 72, 88, 89, 102, 103, 104, 111, 115, 116, 122, 128, 129, 130, 131, 144, 190, 200, 205], "__lt__": [0, 190, 205], "lt": 0, "__le__": [0, 190, 205], "le": 0, "__gt__": [0, 190, 205], "gt": [0, 247, 250], "__ge__": [0, 190, 205], "ge": 0, "__eq__": [0, 190, 205, 212], "eq": 0, "__ne__": [0, 190, 205], "ne": 0, "ar": [0, 1, 5, 7, 15, 16, 17, 19, 23, 24, 25, 26, 27, 29, 34, 35, 40, 49, 55, 58, 60, 77, 85, 86, 89, 90, 94, 97, 98, 99, 101, 102, 107, 114, 115, 122, 128, 129, 130, 131, 132, 141, 144, 150, 154, 157, 158, 162, 173, 174, 176, 180, 182, 186, 191, 200, 203, 205, 206, 207, 208, 209, 210, 211, 212, 213, 215, 216, 217, 219, 220, 221, 222, 224, 225, 226, 228, 229, 230, 231, 232, 234, 237, 238, 243, 246, 247, 250, 256, 257, 258, 261, 262, 263, 264], "onli": [0, 1, 5, 7, 16, 17, 23, 26, 40, 57, 58, 63, 99, 102, 107, 113, 115, 116, 122, 128, 129, 130, 131, 132, 136, 169, 185, 186, 190, 191, 200, 203, 205, 206, 208, 209, 211, 212, 213, 215, 217, 222, 234, 239, 246, 247, 249, 257, 258, 261, 262, 263, 264], "other": [0, 5, 21, 22, 23, 26, 28, 30, 31, 33, 37, 38, 39, 40, 41, 42, 43, 45, 47, 48, 50, 51, 52, 63, 89, 90, 96, 101, 102, 125, 140, 141, 169, 185, 191, 193, 203, 205, 207, 208, 209, 210, 211, 212, 213, 217, 234, 246, 256, 257, 260, 261, 263], "ani": [0, 1, 9, 10, 11, 23, 24, 25, 26, 28, 29, 34, 35, 43, 59, 61, 62, 66, 89, 93, 107, 117, 118, 145, 165, 190, 191, 200, 205, 208, 209, 211, 217, 250, 258, 260, 261, 264], "For": [0, 1, 5, 7, 9, 10, 11, 12, 16, 17, 18, 20, 24, 25, 26, 29, 30, 31, 33, 35, 37, 39, 41, 44, 57, 58, 61, 62, 64, 65, 66, 76, 79, 85, 86, 87, 88, 90, 93, 94, 96, 100, 101, 105, 106, 107, 113, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 134, 135, 137, 138, 139, 141, 142, 143, 145, 150, 151, 153, 154, 158, 159, 160, 161, 162, 163, 164, 165, 166, 168, 171, 173, 174, 179, 180, 181, 182, 183, 191, 198, 203, 207, 208, 210, 212, 215, 220, 229, 231, 248, 250, 251, 253, 261, 263, 264], "backward": [0, 13, 14, 16, 17, 18, 31, 33, 37, 39, 105, 106, 120, 121, 122, 134, 135, 138, 139, 153, 164, 186, 191, 205, 208, 209, 213, 219, 221, 223, 224, 225, 227, 228, 229, 230, 232, 234, 261], "compat": [0, 1, 12, 13, 14, 16, 17, 18, 21, 22, 26, 28, 30, 31, 33, 37, 38, 39, 40, 41, 42, 43, 45, 47, 48, 49, 50, 51, 52, 65, 67, 69, 70, 71, 72, 74, 77, 85, 90, 93, 101, 105, 106, 107, 120, 121, 122, 127, 128, 130, 131, 132, 134, 135, 136, 138, 139, 141, 143, 145, 150, 151, 153, 154, 155, 164, 169, 170, 171, 185, 186, 187, 200, 205, 208, 209, 213, 234, 241, 243, 246, 249, 255, 261, 263], "mai": [0, 5, 7, 15, 16, 17, 18, 23, 26, 28, 31, 33, 37, 39, 43, 51, 57, 58, 59, 60, 89, 90, 93, 101, 102, 105, 106, 107, 110, 115, 116, 120, 121, 122, 128, 129, 130, 131, 134, 135, 136, 138, 139, 141, 144, 145, 154, 155, 159, 164, 169, 174, 180, 181, 182, 183, 185, 190, 191, 198, 200, 203, 206, 207, 208, 209, 210, 211, 212, 213, 215, 216, 217, 237, 247, 248, 250, 256, 257, 261, 262, 263], "complex": [0, 5, 9, 10, 11, 12, 13, 14, 16, 17, 18, 20, 21, 24, 25, 29, 31, 33, 35, 37, 39, 40, 42, 43, 44, 46, 47, 50, 51, 60, 61, 62, 63, 64, 66, 79, 86, 87, 88, 90, 93, 94, 96, 97, 98, 103, 104, 105, 106, 107, 109, 113, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 132, 134, 135, 137, 138, 139, 141, 142, 144, 145, 146, 147, 149, 150, 151, 152, 158, 160, 162, 163, 164, 165, 166, 170, 171, 173, 174, 175, 180, 181, 182, 183, 186, 200, 207, 211, 212, 214, 215, 219, 221, 223, 224, 225, 227, 228, 229, 230, 232, 233, 234, 235, 237, 238, 239, 241, 242, 243, 245, 246, 247, 248, 249, 250, 251, 253, 255, 257, 261, 262], "howev": [0, 5, 16, 17, 18, 31, 33, 37, 39, 57, 88, 101, 105, 106, 107, 116, 120, 121, 122, 134, 135, 138, 139, 154, 159, 164, 172, 173, 174, 203, 206, 207, 208, 209, 210, 212, 257, 258, 261, 263], "inequ": [0, 16, 17, 18, 31, 33, 37, 39, 105, 106, 120, 121, 134, 135, 138, 139, 164], "unspecifi": [0, 5, 10, 11, 16, 17, 18, 30, 31, 33, 37, 39, 41, 47, 51, 60, 62, 66, 77, 78, 87, 90, 94, 96, 101, 103, 104, 105, 106, 120, 121, 122, 134, 135, 138, 139, 150, 153, 159, 163, 164, 165, 168, 172, 174, 191, 198, 200, 205, 221, 222, 225, 226, 229, 232, 237, 238, 261], "thu": [0, 5, 16, 17, 18, 30, 31, 33, 37, 39, 41, 47, 57, 60, 71, 77, 101, 103, 104, 105, 106, 120, 121, 122, 134, 135, 138, 139, 150, 153, 159, 164, 173, 174, 191, 198, 207, 208, 221, 222, 225, 226, 229, 232, 237, 238, 250, 257], "depend": [0, 5, 9, 10, 11, 16, 17, 18, 20, 26, 29, 31, 33, 37, 39, 44, 47, 51, 57, 58, 59, 61, 62, 63, 64, 65, 66, 77, 86, 87, 90, 94, 96, 105, 106, 111, 120, 121, 122, 123, 124, 125, 126, 141, 142, 150, 159, 162, 163, 164, 173, 174, 187, 198, 200, 207, 208, 211, 214, 215, 217, 237, 238, 247, 248, 249, 250, 257, 261, 263, 264], "see": [0, 5, 10, 11, 12, 13, 14, 16, 17, 18, 21, 22, 26, 28, 30, 31, 33, 34, 37, 38, 39, 40, 41, 42, 43, 45, 47, 48, 49, 50, 51, 52, 53, 59, 61, 62, 64, 65, 66, 67, 69, 70, 71, 72, 74, 77, 85, 90, 93, 96, 101, 102, 104, 105, 106, 107, 111, 114, 120, 121, 123, 125, 127, 128, 130, 131, 132, 134, 135, 136, 138, 139, 141, 143, 144, 145, 150, 151, 153, 154, 156, 160, 164, 165, 166, 169, 170, 171, 180, 181, 182, 183, 185, 186, 187, 190, 191, 200, 202, 203, 206, 208, 210, 211, 212, 217, 234, 241, 243, 246, 249, 255, 256, 261, 262, 263, 264], "order": [0, 5, 7, 16, 17, 18, 19, 26, 31, 33, 37, 39, 55, 60, 63, 65, 89, 99, 101, 102, 105, 106, 120, 121, 134, 135, 138, 139, 144, 154, 159, 164, 173, 174, 175, 180, 181, 182, 183, 191, 198, 200, 205, 207, 210, 211, 213, 228, 229, 237, 238, 241, 250, 251, 255, 257, 258, 261, 262], "chang": [0, 1, 9, 10, 11, 12, 13, 14, 20, 21, 24, 25, 26, 29, 34, 35, 40, 42, 43, 44, 46, 47, 50, 51, 59, 60, 61, 62, 63, 64, 66, 86, 87, 90, 93, 94, 96, 97, 98, 102, 103, 104, 117, 118, 119, 122, 123, 124, 125, 126, 132, 134, 137, 138, 141, 142, 144, 145, 146, 147, 149, 150, 151, 155, 158, 160, 162, 163, 165, 166, 170, 171, 172, 173, 174, 175, 180, 181, 182, 183, 186, 203, 219, 220, 221, 223, 224, 225, 228, 229, 231, 233, 234, 235, 237, 238, 239, 241, 242, 243, 245, 246, 247, 248, 249, 250, 251, 253, 255, 258, 261, 263, 264], "shape": [0, 1, 18, 40, 55, 63, 73, 74, 78, 88, 91, 92, 95, 99, 103, 104, 111, 132, 133, 137, 146, 147, 155, 157, 159, 164, 168, 172, 175, 176, 177, 178, 184, 186, 188, 189, 190, 205, 214, 215, 217, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 235, 236, 237, 238, 239, 241, 242, 243, 245, 246, 247, 248, 249, 250, 251, 253, 261, 263], "result": [0, 1, 5, 9, 10, 11, 12, 13, 14, 15, 16, 17, 20, 21, 22, 24, 25, 28, 29, 30, 31, 33, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 76, 77, 79, 85, 86, 87, 90, 93, 94, 96, 100, 101, 105, 106, 107, 109, 117, 118, 119, 120, 121, 123, 124, 125, 126, 127, 128, 129, 130, 131, 134, 135, 136, 138, 139, 141, 142, 143, 145, 149, 150, 151, 152, 153, 154, 156, 158, 159, 160, 161, 162, 163, 165, 166, 168, 169, 170, 171, 173, 174, 175, 179, 180, 185, 191, 198, 200, 205, 207, 208, 209, 215, 233, 234, 236, 241, 242, 248, 255, 261, 262, 263, 264], "promot": [0, 1, 5, 10, 11, 12, 21, 22, 30, 40, 41, 42, 44, 45, 47, 49, 50, 51, 52, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 75, 78, 85, 86, 87, 90, 94, 96, 101, 104, 107, 122, 123, 124, 125, 126, 127, 132, 135, 136, 139, 141, 142, 150, 153, 156, 162, 163, 165, 166, 168, 169, 170, 173, 174, 175, 185, 186, 187, 190, 205, 233, 234, 239, 241, 242, 243, 245, 246, 247, 248, 249, 255, 257], "rule": [0, 5, 7, 10, 11, 12, 21, 22, 30, 40, 41, 42, 44, 45, 47, 49, 50, 51, 52, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 75, 78, 85, 86, 87, 88, 90, 94, 96, 101, 103, 104, 107, 122, 123, 124, 125, 126, 127, 132, 135, 139, 141, 142, 150, 153, 156, 160, 162, 163, 165, 166, 168, 170, 173, 174, 175, 186, 187, 190, 191, 205, 208, 211, 233, 234, 239, 241, 242, 243, 245, 246, 247, 248, 249, 255, 257, 261, 263], "broadcast": [0, 12, 13, 14, 16, 17, 21, 22, 28, 30, 31, 33, 37, 38, 39, 40, 41, 42, 43, 45, 47, 48, 49, 50, 51, 52, 65, 67, 69, 70, 71, 72, 73, 74, 77, 85, 90, 93, 101, 105, 106, 107, 120, 121, 127, 128, 130, 131, 132, 134, 135, 136, 138, 139, 141, 143, 145, 150, 151, 153, 154, 169, 170, 171, 175, 185, 186, 187, 190, 205, 234, 241, 243, 246, 249, 255, 261], "same": [0, 5, 7, 9, 12, 15, 18, 19, 20, 26, 32, 36, 38, 40, 41, 46, 48, 50, 55, 59, 63, 68, 73, 74, 76, 77, 78, 79, 88, 90, 92, 95, 98, 99, 100, 101, 102, 104, 109, 132, 133, 134, 136, 137, 138, 140, 141, 143, 147, 148, 149, 150, 151, 152, 153, 154, 155, 157, 158, 159, 160, 164, 167, 168, 169, 170, 171, 172, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 189, 191, 200, 203, 205, 208, 209, 211, 212, 217, 219, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 232, 233, 235, 236, 237, 239, 242, 246, 247, 248, 249, 250, 251, 253, 256, 257, 261, 263], "behavior": [0, 5, 47, 49, 59, 60, 63, 77, 90, 101, 103, 104, 107, 122, 141, 150, 153, 159, 172, 180, 181, 182, 183, 190, 191, 193, 200, 203, 205, 207, 208, 215, 216, 221, 222, 225, 226, 229, 232, 257, 258, 261, 262, 263, 264], "special": [0, 9, 10, 11, 12, 20, 21, 24, 25, 28, 29, 30, 35, 41, 42, 43, 47, 51, 61, 62, 64, 65, 66, 76, 85, 86, 87, 88, 90, 93, 94, 96, 100, 101, 107, 117, 118, 119, 123, 124, 125, 126, 127, 134, 135, 136, 138, 139, 141, 143, 145, 150, 151, 153, 158, 160, 161, 162, 163, 165, 166, 169, 171, 173, 174, 179, 185, 205, 206, 208, 248, 253], "case": [0, 1, 5, 7, 9, 10, 11, 12, 15, 20, 21, 24, 25, 26, 28, 29, 30, 35, 41, 42, 43, 47, 51, 60, 61, 62, 64, 65, 66, 76, 85, 86, 87, 88, 90, 93, 94, 96, 100, 101, 102, 107, 117, 118, 119, 123, 124, 125, 126, 127, 134, 135, 136, 137, 138, 139, 141, 143, 145, 150, 151, 153, 158, 160, 161, 162, 163, 165, 166, 169, 171, 173, 174, 179, 185, 191, 203, 205, 206, 207, 208, 209, 212, 213, 215, 247, 248, 250, 253, 257, 259, 261, 264], "its": [0, 5, 26, 40, 73, 90, 98, 132, 141, 155, 157, 207, 208, 211, 212, 256, 261, 262, 263], "respect": [0, 9, 12, 20, 21, 22, 28, 30, 31, 33, 37, 38, 39, 41, 42, 43, 45, 48, 50, 51, 52, 65, 67, 69, 70, 71, 72, 77, 87, 90, 93, 101, 105, 106, 107, 113, 120, 121, 122, 127, 128, 130, 131, 135, 137, 139, 140, 141, 143, 145, 153, 163, 170, 173, 174, 175, 180, 181, 186, 205, 207, 210, 212, 237, 247, 250], "binari": [0, 5, 67, 70, 72, 173, 174, 206], "two": [0, 1, 5, 15, 19, 40, 55, 65, 71, 97, 102, 132, 133, 137, 158, 175, 177, 178, 180, 181, 182, 183, 186, 191, 200, 211, 212, 215, 216, 221, 222, 225, 226, 229, 232, 233, 235, 236, 237, 238, 239, 241, 242, 243, 245, 246, 247, 248, 249, 250, 251, 253, 257, 261, 262, 263, 264], "operand": [0, 1, 9, 10, 11, 12, 24, 25, 29, 35, 61, 62, 64, 65, 66, 76, 85, 86, 87, 88, 90, 93, 94, 96, 100, 101, 107, 117, 118, 119, 123, 124, 125, 126, 127, 134, 135, 138, 139, 141, 143, 145, 150, 151, 153, 158, 160, 161, 162, 163, 165, 166, 171, 173, 174, 179, 200, 205, 207, 248, 253], "assign": [0, 209], "exampl": [0, 5, 12, 23, 26, 115, 116, 168, 190, 191, 203, 208, 209, 210, 212, 215, 216, 217, 253, 257, 261, 263, 264], "after": [0, 1, 26, 40, 132, 165, 176], "addit": [0, 5, 7, 12, 26, 50, 59, 88, 115, 170, 190, 191, 200, 206, 208, 211, 257, 261, 262, 264], "modifi": [0, 26, 209, 260], "equal": [0, 1, 9, 10, 11, 18, 20, 21, 22, 26, 28, 30, 31, 33, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 58, 61, 62, 63, 64, 65, 66, 69, 71, 77, 87, 89, 94, 96, 97, 103, 104, 107, 116, 118, 123, 124, 125, 126, 136, 144, 145, 146, 147, 150, 151, 158, 163, 164, 165, 169, 171, 172, 174, 175, 176, 180, 181, 182, 183, 185, 190, 191, 198, 205, 208, 212, 219, 221, 223, 224, 225, 227, 228, 229, 230, 232, 234, 236, 242, 243, 246, 247, 248, 249, 253, 261], "equival": [0, 20, 21, 22, 28, 30, 31, 33, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 71, 101, 107, 128, 129, 130, 131, 153, 158, 172, 191, 200, 208, 209, 243, 246, 249, 255, 261], "discuss": [0, 93, 145, 205, 211, 212, 216, 261, 262, 263], "copi": [0, 1, 26, 59, 60, 63, 102, 155, 164, 205, 206, 211, 212, 214, 260, 261], "view": [0, 102, 214], "behaviour": [0, 214, 261, 263], "mutabl": [0, 214], "via": [0, 26, 101, 102, 172, 191, 206, 211, 212, 216, 218, 246, 256, 257, 258, 261], "__iadd__": 0, "__isub__": 0, "__imul__": 0, "__itruediv__": 0, "__ifloordiv__": 0, "__ipow__": 0, "__imod__": 0, "__imatmul__": 0, "__iand__": 0, "__ior__": 0, "__ixor__": 0, "__ilshift__": 0, "__irshift__": 0, "appli": [0, 12, 77, 78, 85, 90, 141, 156, 158, 168, 175, 191, 200, 203, 208, 219, 221, 224, 225, 228, 229, 230, 232, 243, 246, 257, 261, 263], "match": [0, 1, 5, 9, 20, 26, 63, 101, 153, 175, 180, 181, 213, 223, 227, 228, 229, 230, 232, 237, 238, 241, 255, 263], "op": [0, 200], "__radd__": 0, "__rsub__": 0, "__rmul__": 0, "__rtruediv__": 0, "__rfloordiv__": 0, "__rpow__": 0, "__rmod__": 0, "__rmatmul__": 0, "__rand__": 0, "__ror__": 0, "__rxor__": 0, "__rlshift__": 0, "__rrshift__": 0, "arrai": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 83, 85, 86, 87, 88, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 196, 197, 198, 199, 201, 202, 203, 205, 206, 207, 208, 209, 210, 211, 212, 213, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 262, 264], "refer": [1, 13, 14, 96, 97, 125, 169, 175, 176, 185, 186, 191, 208, 209, 217, 219, 221, 223, 224, 225, 227, 228, 229, 230, 232, 234], "automat": [1, 261], "implicit": [1, 211, 212, 215, 261], "expans": [1, 261], "size": [1, 13, 14, 88, 95, 122, 144, 157, 167, 172, 175, 186, 190, 191, 210, 216, 219, 221, 223, 224, 225, 227, 228, 229, 230, 232, 234, 236, 245, 247, 250, 261], "without": [1, 7, 26, 57, 102, 113, 115, 144, 154, 155, 180, 181, 182, 183, 203, 206, 207, 210, 260, 261, 263], "purpos": [1, 5, 96, 107, 125, 203, 248, 257, 259, 260, 263], "make": [1, 7, 203, 206, 207, 209, 211, 215, 219, 221, 223, 224, 225, 227, 228, 229, 230, 232, 256, 258, 261], "differ": [1, 12, 26, 49, 50, 77, 78, 88, 90, 98, 101, 102, 141, 151, 168, 170, 171, 191, 203, 209, 212, 213, 215, 226, 237, 247, 248, 250, 253, 257, 261, 262, 263], "element": [1, 9, 10, 11, 12, 13, 14, 15, 20, 21, 22, 24, 25, 28, 29, 30, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 54, 58, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 76, 77, 79, 85, 86, 87, 88, 90, 93, 94, 96, 97, 99, 100, 101, 103, 104, 105, 106, 107, 109, 117, 118, 119, 120, 121, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 134, 135, 136, 138, 139, 141, 142, 143, 144, 145, 149, 150, 151, 152, 153, 154, 155, 157, 158, 159, 160, 161, 162, 163, 165, 166, 167, 169, 170, 171, 172, 173, 174, 176, 177, 178, 179, 180, 181, 182, 183, 185, 187, 190, 191, 205, 207, 219, 221, 223, 224, 225, 227, 228, 229, 230, 232, 234, 237, 246, 247, 248, 250, 253, 261], "wise": [1, 9, 10, 12, 20, 21, 22, 28, 30, 31, 33, 36, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 61, 64, 65, 67, 68, 69, 70, 71, 72, 77, 79, 85, 90, 93, 101, 105, 106, 107, 109, 120, 121, 127, 128, 129, 130, 131, 135, 139, 141, 143, 145, 150, 152, 153, 170, 190, 205, 207, 261], "oper": [1, 12, 19, 24, 26, 34, 40, 57, 58, 59, 61, 64, 71, 86, 88, 90, 101, 124, 126, 132, 141, 150, 151, 153, 156, 162, 166, 171, 173, 175, 190, 191, 197, 200, 205, 208, 209, 210, 211, 212, 253, 257, 258, 261, 262, 263], "facilit": [1, 198, 203], "user": [1, 7, 26, 110, 174, 203, 206, 207, 209, 212, 216, 257, 261, 262, 263], "ergonom": 1, "encourag": [1, 261, 262], "avoid": [1, 9, 63, 90, 96, 101, 107, 125, 141, 155, 206, 209, 212, 215, 257, 261, 263], "unnecessari": [1, 257], "can": [1, 7, 26, 60, 75, 110, 114, 116, 191, 200, 203, 206, 208, 209, 211, 212, 217, 246, 247, 250, 256, 257, 261, 262, 263, 264], "potenti": [1, 26, 96, 111, 125, 154, 209, 261], "enabl": [1, 26, 102, 212, 216, 217, 261], "more": [1, 5, 7, 15, 19, 26, 40, 58, 60, 63, 73, 88, 96, 99, 101, 125, 132, 144, 150, 154, 172, 180, 181, 182, 183, 191, 200, 203, 206, 207, 208, 209, 210, 211, 212, 213, 216, 217, 221, 222, 225, 226, 229, 232, 248, 257, 258, 261, 262, 264], "memori": [1, 26, 60, 102, 203, 209, 210, 212, 261, 263], "effici": [1, 203, 209], "through": [1, 60, 65, 256, 258, 262, 263], "vector": [1, 40, 132, 137, 186, 234, 245, 250, 251, 255, 257, 261], "reduc": [1, 13, 14, 16, 17, 134, 136, 138, 151, 169, 171, 185, 191, 247, 250, 257, 262, 263], "consumpt": [1, 26, 262], "cach": 1, "local": [1, 212], "given": [1, 23, 99, 122, 157, 159, 184, 200, 205, 208, 209, 212, 213, 217, 238, 248, 257, 258, 261, 263], "involv": [1, 12, 90, 101, 141, 150, 156, 200, 207, 208, 212, 216], "singleton": [1, 13, 14, 16, 17, 95, 134, 136, 138, 151, 167, 169, 171, 176, 185, 241, 255, 261], "whose": [1, 5, 9, 11, 19, 20, 26, 47, 55, 62, 66, 85, 86, 87, 97, 99, 102, 133, 150, 157, 161, 162, 163, 172, 173, 174, 175, 177, 178, 180, 181, 182, 191, 209, 223, 227, 228, 229, 230, 232, 233, 235, 236, 237, 238, 239, 241, 242, 243, 245, 246, 247, 248, 249, 250, 251, 253, 255, 261, 263], "one": [1, 15, 19, 26, 40, 51, 58, 60, 63, 73, 75, 88, 90, 95, 97, 99, 101, 102, 115, 116, 122, 132, 137, 141, 144, 146, 147, 154, 159, 167, 172, 180, 181, 182, 183, 186, 191, 203, 206, 208, 209, 211, 212, 215, 216, 217, 219, 221, 223, 224, 225, 226, 227, 228, 229, 230, 232, 245, 246, 247, 255, 257, 258, 261, 263], "virtual": 1, "repeat": [1, 190, 191, 205, 263], "across": [1, 5, 90, 101, 141, 174, 205, 207, 208, 212, 256, 261], "correspond": [1, 16, 17, 23, 47, 59, 65, 73, 77, 102, 111, 112, 113, 150, 155, 157, 159, 169, 175, 180, 181, 182, 183, 185, 186, 191, 205, 207, 221, 225, 229, 232, 234, 237, 241, 249, 260, 261], "If": [1, 5, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 23, 24, 25, 26, 29, 34, 35, 40, 44, 47, 51, 55, 57, 59, 60, 61, 62, 63, 64, 65, 66, 74, 76, 77, 78, 85, 86, 87, 88, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 107, 111, 113, 115, 116, 117, 118, 119, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 150, 151, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 167, 168, 169, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 188, 189, 191, 206, 208, 212, 218, 219, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 232, 233, 234, 237, 238, 239, 241, 242, 243, 246, 247, 248, 249, 250, 253, 255, 256, 257, 261, 263], "unequ": 1, "lower": [1, 77, 97, 177, 233], "higher": [1, 5, 26, 191, 206, 257, 262], "prepend": [1, 40, 95, 132, 176], "until": [1, 26, 176], "store": [1, 26, 212, 253], "determin": [1, 10, 11, 12, 13, 14, 21, 22, 26, 30, 40, 41, 42, 44, 45, 47, 50, 51, 52, 61, 62, 64, 65, 66, 67, 69, 70, 71, 72, 75, 78, 85, 86, 87, 88, 90, 94, 96, 101, 107, 117, 118, 119, 123, 124, 125, 126, 127, 132, 135, 139, 141, 142, 150, 153, 161, 162, 163, 165, 166, 170, 172, 173, 174, 175, 180, 181, 182, 183, 186, 187, 200, 205, 208, 211, 212, 219, 221, 223, 224, 225, 227, 228, 229, 230, 232, 233, 234, 235, 236, 239, 241, 242, 243, 245, 246, 247, 248, 249, 253, 255, 257, 261], "let": [1, 9, 10, 11, 12, 62, 66, 85, 87, 88, 93, 94, 96, 102, 117, 118, 119, 122, 123, 125, 136, 145, 151, 154, 159, 160, 163, 165, 169, 171, 174, 176, 185, 186, 191, 216, 219, 221, 223, 224, 225, 227, 228, 229, 230, 232, 233, 237, 238, 239, 247, 249, 250, 253], "b": [1, 9, 10, 11, 12, 57, 62, 66, 87, 90, 93, 94, 96, 101, 117, 118, 119, 122, 123, 125, 141, 145, 160, 163, 165, 168, 174, 186, 191, 205, 208, 209, 213, 246, 249, 263], "both": [1, 40, 44, 47, 51, 65, 77, 88, 90, 98, 101, 102, 107, 122, 132, 142, 150, 151, 171, 174, 175, 186, 191, 208, 209, 211, 215, 217, 234, 253, 257, 261, 262], "shape1": 1, "describ": [1, 5, 12, 88, 90, 93, 115, 116, 141, 145, 150, 151, 171, 193, 200, 208, 211, 215, 220, 231, 253, 261], "shape2": 1, "n1": [1, 137], "len": [1, 137, 176], "n2": [1, 137], "max": [1, 26, 77, 98, 108, 111, 176, 190, 191, 205, 241, 243, 246], "temporari": 1, "list": [1, 73, 78, 114, 137, 168, 191, 203, 205, 212, 261, 263], "length": [1, 15, 107, 137, 155, 175, 191, 220, 222, 223, 226, 231, 250, 251], "while": [1, 101, 115, 122, 128, 129, 130, 131, 136, 140, 159, 169, 180, 181, 185, 190, 191, 198, 203, 205, 208, 209, 210, 212, 215, 246, 257, 262, 263, 264], "d1": 1, "els": [1, 26, 203, 262], "d2": 1, "set": [1, 18, 26, 49, 65, 102, 161, 164, 169, 177, 178, 180, 182, 183, 185, 190, 191, 205, 206, 207, 208, 209, 212, 213, 216, 217, 219, 221, 223, 224, 225, 227, 228, 229, 230, 232, 233, 237, 238, 239, 243, 246, 247, 249, 250, 256, 257, 261, 263, 264], "th": [1, 97, 176, 191, 221, 225, 229, 232], "throw": 1, "except": [1, 7, 13, 14, 26, 74, 78, 88, 97, 102, 122, 144, 154, 168, 172, 184, 191, 200, 203, 205, 207, 209, 212, 214, 215, 219, 221, 223, 224, 225, 227, 228, 229, 230, 232, 246, 258, 261, 262, 263], "demonstr": 1, "applic": [1, 26, 88, 151, 154, 171, 200, 253, 257, 261, 262], "4d": 1, "8": [1, 5, 7, 27, 176, 200, 203], "6": [1, 7, 176], "3d": 1, "7": [1, 7, 27, 217], "5": [1, 191, 261], "2d": 1, "1d": 1, "15": 1, "do": [1, 26, 90, 141, 153, 198, 203, 206, 208, 209, 211, 212, 213, 257, 258, 260, 261, 263, 264], "doe": [1, 15, 26, 102, 145, 172, 191, 200, 203, 206, 207, 208, 209, 210, 212, 213, 215, 217, 257, 261, 263, 264], "second": [1, 12, 65, 67, 69, 70, 71, 72, 93, 105, 106, 107, 120, 121, 127, 128, 130, 131, 132, 135, 139, 141, 143, 145, 150, 168, 170, 175, 180, 181, 182, 186, 187, 234, 237, 245, 247, 248, 250, 251, 261], "append": [1, 40, 69, 95, 132, 236], "As": [1, 122, 150, 180, 181, 182, 183, 203, 211, 217, 263], "impli": [1, 180, 181, 182, 183, 260, 261], "__setitem__": [1, 172, 190, 205], "Such": [1, 207, 257], "right": [1, 69, 71, 107, 159, 165, 206, 250, 260], "hand": [1, 200], "left": [1, 5, 60, 69, 101, 103, 159, 172, 191, 200, 237, 238, 250, 261], "index": [1, 5, 16, 17, 18, 32, 34, 49, 57, 83, 97, 111, 113, 137, 140, 144, 159, 168, 172, 175, 180, 181, 182, 190, 205, 221, 225, 229, 232, 261, 263], "perform": [1, 5, 13, 14, 26, 40, 59, 60, 90, 107, 132, 141, 154, 175, 191, 206, 207, 208, 209, 210, 211, 219, 221, 224, 225, 226, 228, 229, 230, 232, 250, 251, 257, 261, 262, 263], "empti": [1, 13, 14, 15, 151, 171, 190, 191, 205, 253, 261], "ok": 1, "allow": [1, 24, 25, 26, 29, 34, 35, 113, 115, 150, 155, 175, 191, 205, 206, 207, 209, 212, 215, 216, 257, 263], "NOT": [1, 129, 260], "adher": [2, 7, 8, 190, 191, 203, 256, 261], "convent": [2, 7, 10, 11, 26, 40, 61, 62, 64, 65, 66, 88, 123, 125, 132, 150, 165, 190, 191, 198, 208, 212, 256, 257, 262], "each": [2, 9, 10, 11, 12, 20, 21, 22, 26, 28, 30, 31, 33, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 76, 77, 79, 85, 86, 87, 90, 93, 94, 96, 100, 101, 105, 106, 107, 109, 114, 117, 118, 119, 120, 121, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 135, 137, 139, 140, 141, 142, 143, 144, 145, 149, 150, 152, 153, 154, 157, 158, 159, 160, 161, 162, 163, 165, 166, 168, 170, 173, 174, 175, 176, 179, 180, 181, 191, 203, 205, 207, 211, 215, 217, 229, 233, 234, 235, 239, 241, 242, 243, 246, 247, 248, 249, 250, 251, 256, 257, 261, 262, 263], "float": [2, 5, 9, 10, 11, 12, 13, 14, 15, 20, 21, 24, 25, 28, 29, 30, 31, 33, 34, 35, 37, 39, 40, 41, 42, 43, 44, 47, 49, 50, 51, 60, 61, 62, 63, 64, 65, 66, 76, 77, 79, 80, 81, 82, 84, 85, 86, 87, 88, 90, 91, 93, 94, 96, 97, 98, 100, 101, 103, 104, 107, 109, 113, 115, 116, 117, 118, 119, 122, 123, 124, 125, 126, 127, 132, 134, 135, 136, 138, 139, 141, 142, 143, 144, 145, 146, 147, 150, 151, 152, 153, 156, 158, 159, 160, 161, 162, 163, 165, 166, 169, 170, 171, 173, 174, 175, 179, 180, 181, 182, 183, 185, 186, 188, 190, 198, 205, 207, 208, 215, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 235, 237, 238, 239, 241, 242, 243, 246, 247, 248, 249, 250, 251, 253, 255, 257, 261, 262], "point": [2, 5, 9, 10, 11, 12, 13, 14, 15, 20, 24, 25, 26, 29, 34, 35, 40, 41, 42, 44, 47, 50, 51, 60, 61, 62, 63, 64, 65, 66, 76, 77, 79, 80, 81, 82, 84, 85, 86, 87, 88, 90, 91, 93, 94, 96, 97, 98, 100, 101, 103, 104, 107, 109, 113, 115, 116, 117, 118, 119, 122, 123, 124, 125, 126, 127, 132, 134, 135, 136, 138, 139, 141, 142, 143, 144, 145, 146, 147, 150, 151, 152, 153, 156, 158, 159, 160, 161, 162, 163, 165, 166, 169, 170, 171, 173, 174, 175, 179, 180, 181, 182, 183, 185, 186, 188, 190, 198, 205, 207, 208, 212, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 235, 237, 238, 239, 241, 242, 243, 246, 247, 248, 249, 250, 251, 253, 255, 257, 261, 263], "creat": [3, 15, 60, 91, 92, 97, 102, 103, 104, 122, 146, 147, 188, 189, 197, 203, 212, 220, 231, 257, 261], "main": [5, 97, 177, 178, 206, 211, 236, 253, 256, 263], "namespac": [5, 7, 23, 110, 193, 203, 205, 218, 256, 257, 258, 261, 264], "under": [5, 256, 260, 261], "specifi": [5, 13, 14, 15, 16, 17, 18, 26, 29, 59, 60, 63, 74, 78, 88, 91, 95, 98, 99, 103, 113, 115, 116, 122, 146, 151, 153, 154, 157, 167, 168, 171, 172, 176, 177, 178, 180, 181, 182, 183, 186, 188, 191, 200, 205, 207, 208, 209, 211, 212, 213, 217, 219, 221, 222, 223, 224, 225, 227, 228, 229, 230, 232, 236, 253, 255, 257, 258, 261, 263, 264], "name": [5, 7, 23, 26, 101, 115, 180, 181, 182, 191, 208, 237, 246, 247, 248, 250, 256, 261, 262], "descript": [5, 7, 205, 207, 241, 255], "bool": [5, 13, 14, 16, 17, 18, 22, 24, 26, 28, 31, 33, 37, 39, 43, 45, 49, 52, 60, 63, 75, 88, 89, 93, 102, 103, 104, 105, 106, 115, 116, 117, 118, 119, 120, 121, 122, 128, 129, 130, 131, 134, 136, 138, 145, 151, 155, 161, 164, 169, 171, 185, 200, 205, 215, 233, 241, 250, 255], "true": [5, 13, 14, 16, 17, 18, 24, 25, 26, 29, 35, 60, 63, 75, 88, 93, 98, 101, 102, 111, 117, 118, 119, 122, 128, 129, 130, 131, 134, 136, 138, 144, 145, 151, 155, 161, 164, 169, 171, 180, 181, 182, 183, 185, 187, 191, 205, 233, 241, 250, 255, 257], "fals": [5, 13, 14, 16, 17, 18, 24, 25, 26, 29, 35, 60, 63, 75, 88, 93, 102, 111, 117, 118, 119, 122, 128, 129, 130, 131, 134, 136, 138, 145, 151, 155, 161, 164, 169, 171, 180, 181, 182, 183, 185, 191, 233, 241, 250, 255], "int8": [5, 115, 116, 200], "bit": [5, 68, 69, 71, 85, 88, 98, 108, 151, 161, 171, 200, 205, 207, 253], "sign": [5, 9, 10, 11, 12, 15, 20, 41, 44, 62, 65, 66, 71, 85, 87, 88, 90, 94, 96, 101, 115, 116, 123, 125, 134, 135, 138, 139, 141, 142, 150, 151, 153, 159, 161, 163, 165, 171, 174, 180, 181, 182, 183, 190, 198, 205, 208, 247, 248, 253], "exist": [5, 7, 26, 60, 78, 102, 203, 205, 208, 211, 212, 213, 239, 258, 261, 262], "interv": [5, 10, 11, 13, 14, 15, 61, 62, 64, 66, 95, 122, 123, 125, 140, 168, 175, 177, 178, 184, 186, 191, 219, 221, 223, 224, 225, 227, 228, 229, 230, 232, 234, 258], "128": 5, "127": 5, "int16": [5, 88, 115, 116, 151, 171, 200, 253], "16": [5, 200], "32": [5, 200], "767": 5, "int32": [5, 88, 115, 116, 151, 171, 200, 253], "147": 5, "483": 5, "647": 5, "int64": [5, 88, 115, 116, 151, 171, 200, 253], "64": [5, 200], "9": [5, 27], "223": 5, "372": 5, "036": 5, "854": 5, "775": 5, "807": 5, "uint8": [5, 115, 116, 200], "unsign": [5, 88, 115, 116, 151, 171, 190, 253], "255": 5, "uint16": [5, 88, 115, 116, 151, 171, 200, 253], "65": 5, "535": [5, 205], "uint32": [5, 88, 115, 116, 151, 171, 200, 253], "294": 5, "967": 5, "295": 5, "uint64": [5, 115, 116, 200], "18": 5, "446": [5, 205], "744": [5, 205], "073": 5, "709": [5, 205], "551": [5, 205], "615": 5, "float32": [5, 109, 115, 116, 152, 200, 248, 250, 251], "ieee": [5, 12, 65, 80, 81, 82, 84, 90, 96, 98, 107, 125, 141, 153, 165, 173, 174, 190, 198, 207, 208, 261], "754": [5, 12, 65, 80, 81, 82, 84, 90, 96, 98, 107, 125, 141, 153, 165, 173, 174, 190, 198, 207, 208, 261], "singl": [5, 7, 24, 25, 29, 34, 35, 113, 115, 180, 181, 190, 200, 205, 206, 208, 211, 212, 217, 257, 261, 262, 263], "precis": [5, 9, 20, 42, 60, 98, 103, 104, 109, 141, 152, 165, 200, 205, 207, 223, 227, 228, 229, 230, 232, 237, 238, 241, 248, 250, 251, 255, 261], "2019": [5, 12, 90, 96, 107, 125, 141, 190, 207, 261, 263], "float64": [5, 9, 20, 115, 116, 200, 223, 227, 228, 229, 230, 232, 237, 238, 241, 255], "doubl": [5, 175, 200, 205], "complex64": [5, 109, 115, 116, 152, 200, 205, 248, 250, 251], "imaginari": [5, 10, 11, 12, 13, 14, 44, 61, 62, 63, 64, 66, 79, 87, 90, 93, 94, 96, 98, 109, 123, 125, 141, 142, 144, 145, 146, 147, 150, 158, 163, 165, 174, 205, 208], "compon": [5, 10, 11, 12, 13, 14, 44, 62, 63, 66, 79, 87, 90, 93, 94, 96, 98, 109, 123, 125, 141, 142, 144, 145, 146, 147, 150, 152, 158, 163, 165, 173, 174, 180, 181, 182, 183, 205, 208, 222, 231], "complex128": [5, 9, 20, 115, 116, 200, 205, 223, 227, 228, 229, 230, 232, 237, 238, 241, 255], "method": [5, 26, 34, 102, 190, 193, 203, 209, 211, 212, 215, 216, 217, 261, 262, 263], "attribut": [5, 23, 98, 108, 190, 202, 205, 258, 261, 262, 263], "requir": [5, 10, 11, 24, 25, 29, 34, 35, 59, 61, 62, 63, 64, 66, 88, 102, 107, 116, 151, 165, 168, 171, 172, 174, 180, 181, 183, 184, 190, 191, 198, 200, 203, 205, 206, 207, 208, 209, 210, 211, 212, 215, 217, 219, 220, 221, 223, 224, 225, 228, 229, 231, 234, 253, 256, 257, 261, 262, 263], "beyond": [5, 157, 200, 261], "It": [5, 23, 26, 102, 203, 209, 211, 261, 263, 264], "also": [5, 7, 26, 34, 102, 107, 160, 200, 203, 208, 209, 210, 211, 217, 221, 225, 229, 232, 250, 256, 263], "subnorm": [5, 107], "k": [5, 40, 97, 107, 132, 144, 177, 178, 191, 233, 237, 238, 239, 247, 249, 250, 251, 253, 261], "denorm": [5, 107], "gradual": [5, 107, 261], "underflow": [5, 9, 90, 101, 107, 248], "hardwar": [5, 53, 107, 154, 207, 211, 212, 237, 250, 257, 261], "univers": [5, 107, 206, 212, 257, 261], "mani": [5, 107, 176, 261, 263], "platform": [5, 26, 107], "compil": [5, 107, 174, 203, 206, 210, 261], "toggl": [5, 107], "daz": [5, 107], "flush": [5, 107], "ftz": [5, 107], "increas": [5, 107, 207, 262], "guard": [5, 107], "against": [5, 40, 73, 107, 132, 174, 191, 243, 246, 264], "time": [5, 7, 16, 17, 26, 107, 154, 180, 181, 203, 205, 210, 211, 216, 233, 237, 238, 239, 247, 249, 250, 257, 261, 263], "attack": [5, 107], "accordingli": [5, 10, 11, 13, 14, 16, 17, 59, 61, 62, 64, 66, 90, 96, 101, 107, 122, 123, 125, 134, 136, 137, 138, 141, 144, 151, 154, 159, 165, 169, 171, 180, 181, 182, 183, 185, 191, 200, 207, 208, 209, 210, 212, 241, 247, 255, 257], "vari": [5, 107, 159, 174, 180, 181, 182, 183, 200, 207], "function": [5, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 26, 28, 29, 30, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 60, 61, 62, 64, 65, 66, 74, 78, 86, 87, 88, 94, 96, 99, 102, 107, 114, 115, 116, 122, 123, 125, 128, 129, 130, 131, 132, 136, 144, 150, 151, 153, 154, 155, 160, 162, 163, 164, 165, 168, 169, 171, 172, 173, 174, 175, 176, 180, 181, 182, 183, 184, 185, 186, 190, 193, 203, 205, 206, 208, 209, 210, 211, 212, 215, 216, 217, 219, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 232, 233, 234, 237, 238, 239, 243, 246, 247, 248, 249, 250, 251, 253, 256, 257, 258, 261, 262, 263], "access": [5, 26, 32, 102, 110, 191, 205, 211, 256, 258, 261], "variou": [5, 205], "cast": [5, 29, 49, 60, 63, 75, 88, 151, 171, 200, 208, 253, 261, 263], "introspect": 5, "isdtyp": [5, 190, 205], "integr": [5, 63, 113, 115, 116], "keyword": [5, 7, 26, 63, 88, 114, 137, 151, 171, 190, 205, 209, 212, 216, 217, 253, 257, 258, 261, 262, 263], "affect": [5, 15, 49, 209, 212], "intermedi": [5, 9, 107], "calcul": [5, 9, 10, 11, 12, 20, 21, 42, 47, 50, 61, 62, 64, 65, 66, 86, 87, 88, 90, 94, 96, 123, 124, 125, 126, 127, 134, 136, 138, 141, 150, 151, 162, 163, 165, 169, 170, 171, 173, 174, 185, 205, 248], "implementor": [5, 256], "free": [5, 212, 260], "when": [5, 7, 12, 16, 17, 26, 47, 49, 59, 63, 90, 96, 101, 102, 107, 113, 115, 122, 125, 134, 135, 138, 139, 141, 150, 151, 154, 155, 159, 169, 171, 174, 185, 187, 190, 191, 200, 205, 206, 208, 209, 210, 211, 213, 215, 216, 217, 219, 221, 223, 224, 225, 227, 228, 229, 230, 232, 233, 237, 239, 243, 246, 247, 248, 249, 250, 251, 253, 257, 261, 262, 263], "accumul": 5, "reduct": [5, 13, 14], "long": [5, 110, 217], "ha": [5, 9, 13, 14, 20, 23, 29, 34, 35, 40, 44, 47, 55, 86, 87, 88, 90, 94, 95, 96, 101, 104, 132, 136, 137, 140, 141, 142, 144, 150, 151, 162, 163, 167, 169, 171, 172, 173, 174, 175, 176, 180, 181, 182, 183, 185, 191, 200, 203, 208, 211, 212, 215, 216, 234, 241, 249, 250, 253, 255, 257, 258, 261, 263, 264], "wai": [5, 26, 63, 102, 203, 206, 212, 213, 258, 261, 262, 263, 264], "f4": [5, 200], "ensur": [5, 26, 159, 203, 207, 257, 261, 262, 263], "portabl": [5, 59, 122, 207, 209, 212, 213, 261], "consum": [5, 26, 63, 113, 115, 203, 208, 209, 217, 256, 261, 262], "recommend": [5, 7, 19, 23, 26, 122, 128, 129, 130, 131, 136, 153, 169, 185, 198, 205, 207, 211, 212, 261], "guidanc": [5, 7, 49, 205, 206, 213, 261], "govern": [5, 50, 170, 200, 257, 258], "interact": [5, 208], "either": [5, 9, 10, 11, 12, 24, 26, 35, 40, 65, 77, 87, 88, 90, 93, 94, 96, 98, 101, 102, 107, 110, 116, 117, 118, 122, 123, 124, 125, 126, 127, 132, 134, 135, 138, 139, 141, 143, 151, 153, 160, 161, 162, 165, 171, 173, 174, 175, 191, 207, 208, 209, 213, 217, 248, 253, 261, 262, 264], "whether": [5, 13, 14, 26, 59, 60, 63, 88, 89, 102, 111, 116, 119, 122, 155, 161, 205, 212, 233, 237, 238, 247, 249, 256, 260, 261, 263], "otherwis": [5, 13, 14, 15, 16, 17, 26, 59, 60, 63, 75, 102, 111, 113, 115, 134, 136, 138, 151, 154, 155, 159, 160, 169, 171, 185, 186, 187, 190, 191, 203, 212, 233, 235, 241, 248, 255, 260], "note": [5, 7, 9, 10, 11, 12, 13, 14, 20, 21, 24, 25, 26, 29, 34, 35, 40, 42, 43, 44, 46, 47, 50, 51, 59, 61, 62, 63, 64, 65, 66, 76, 77, 79, 85, 86, 87, 88, 90, 93, 94, 96, 97, 98, 100, 101, 103, 104, 107, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 123, 124, 125, 126, 127, 132, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 150, 151, 152, 153, 154, 158, 159, 160, 161, 162, 163, 165, 166, 169, 170, 171, 172, 173, 174, 175, 176, 179, 180, 181, 182, 183, 184, 185, 186, 190, 191, 205, 211, 215, 217, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 238, 239, 241, 242, 243, 245, 246, 247, 248, 249, 250, 251, 253, 255, 261, 262, 263, 264], "possibl": [5, 26, 60, 101, 102, 134, 138, 155, 173, 174, 203, 206, 207, 208, 209, 211, 212, 213, 215, 217, 257, 261, 262, 263, 264], "multipl": [5, 7, 13, 14, 16, 17, 40, 42, 44, 132, 134, 136, 138, 141, 142, 151, 169, 171, 185, 191, 203, 206, 208, 211, 212, 216, 217, 238, 239, 257, 258, 261, 263], "In": [5, 12, 19, 26, 59, 88, 90, 93, 101, 116, 118, 119, 141, 145, 151, 153, 160, 171, 190, 191, 193, 200, 207, 208, 211, 213, 228, 229, 247, 248, 250, 253, 257, 258, 262, 263, 264], "clearli": [5, 59, 116, 198, 208, 257, 258], "warn": [5, 154, 213], "about": [5, 7, 26, 98, 108, 209, 257, 261, 263, 264], "": [5, 26, 29, 32, 49, 58, 59, 60, 80, 101, 102, 137, 153, 169, 176, 177, 178, 185, 191, 198, 203, 205, 206, 207, 208, 209, 211, 212, 215, 217, 221, 225, 229, 232, 246, 250, 251, 257, 258, 261, 263], "organ": [5, 205, 257, 262, 263], "within": [5, 15, 27, 191, 200, 203, 205, 208, 212, 219, 221, 224, 225, 228, 229, 230, 232, 261], "numer": [5, 9, 12, 20, 21, 40, 42, 44, 46, 47, 50, 51, 88, 90, 101, 115, 116, 117, 118, 119, 132, 137, 141, 142, 149, 150, 151, 158, 160, 166, 170, 171, 175, 200, 207, 219, 221, 224, 225, 228, 229, 230, 232, 234, 245, 246, 248, 253, 257, 261, 263], "accord": [5, 12, 60, 71, 75, 88, 90, 98, 101, 103, 122, 141, 150, 159, 160, 169, 185, 186, 191, 207, 208], "These": [5, 209, 237, 262], "intend": [5, 88, 151, 171, 203, 253], "posit": [7, 9, 10, 11, 13, 14, 20, 46, 62, 65, 66, 81, 90, 95, 97, 98, 101, 118, 123, 125, 140, 141, 144, 153, 157, 161, 163, 165, 174, 190, 191, 203, 205, 207, 217, 231, 233, 247, 262], "paramet": [7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 113, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 203, 205, 217, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 241, 242, 243, 245, 246, 247, 248, 249, 250, 251, 253, 255, 257], "extern": [7, 263], "usabl": 7, "accept": [7, 26, 128, 129, 130, 131, 136, 153, 169, 185, 203, 258], "call": [7, 34, 211, 212, 215, 248, 261, 262, 263], "argument": [7, 10, 11, 26, 40, 61, 62, 63, 64, 65, 66, 86, 88, 107, 114, 123, 125, 132, 151, 156, 159, 162, 165, 171, 173, 174, 175, 190, 200, 205, 207, 209, 211, 212, 219, 221, 224, 225, 228, 229, 230, 232, 253, 257, 261, 262, 263], "map": [7, 208, 209], "base": [7, 47, 57, 58, 94, 95, 123, 124, 125, 126, 150, 180, 181, 182, 183, 191, 205, 209, 215, 217, 257, 258, 261, 262, 263], "sole": [7, 191, 198, 257], "incompat": [7, 26, 74, 102, 203, 258, 261], "us": [7, 19, 26, 27, 59, 60, 83, 98, 102, 107, 122, 124, 126, 157, 180, 182, 190, 191, 200, 205, 207, 208, 209, 210, 212, 213, 216, 217, 218, 219, 221, 223, 224, 225, 227, 228, 229, 230, 232, 256, 257, 258, 259, 260, 261, 264], "normal": [7, 78, 168, 219, 221, 223, 224, 225, 227, 228, 229, 230, 232], "practic": [7, 19, 191, 257, 262], "avail": [7, 102, 114, 203, 211, 256, 258, 262], "still": [7, 26, 217, 257, 262, 263, 264], "consid": [7, 26, 63, 102, 128, 129, 130, 131, 180, 181, 182, 183, 208, 212, 231, 246, 257, 261, 263, 264], "compliant": [7, 26, 51, 90, 96, 102, 122, 125, 128, 129, 130, 131, 134, 135, 136, 138, 139, 169, 185, 207, 210, 212, 258, 261], "altern": [7, 209, 211, 264], "thei": [7, 26, 200, 206, 211, 212, 216, 217, 256, 257, 258, 261, 263, 264], "were": [7, 101, 154, 159, 205, 261], "option": [7, 13, 14, 15, 16, 17, 23, 26, 57, 58, 59, 60, 63, 77, 78, 88, 91, 92, 97, 99, 102, 103, 104, 113, 115, 122, 134, 136, 138, 146, 147, 151, 154, 155, 157, 159, 169, 171, 172, 185, 188, 189, 190, 205, 216, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 241, 243, 246, 253, 255, 257, 262, 263], "lead": [7, 101, 208, 247, 250, 261], "readabl": [7, 200, 257, 262], "code": [7, 59, 200, 209, 210, 212, 215, 217, 257, 261, 262, 263], "easier": [7, 203, 209, 257], "evolv": [7, 203, 257], "over": [7, 13, 14, 26, 122, 134, 136, 138, 151, 169, 171, 172, 175, 185, 186, 207, 208, 209, 211, 212, 216, 219, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 232, 234, 253, 255, 257, 261], "ad": [7, 9, 10, 11, 12, 13, 14, 20, 21, 24, 26, 29, 35, 40, 42, 43, 44, 46, 47, 50, 51, 60, 61, 62, 63, 64, 66, 86, 87, 90, 93, 94, 96, 97, 98, 102, 103, 104, 117, 118, 119, 122, 123, 124, 125, 126, 132, 137, 141, 142, 144, 145, 146, 147, 149, 150, 151, 158, 160, 162, 163, 165, 166, 170, 171, 173, 174, 175, 180, 181, 182, 183, 186, 191, 204, 205, 206, 212, 233, 234, 235, 237, 238, 239, 241, 242, 243, 245, 246, 247, 248, 249, 250, 251, 253, 255, 258], "worri": 7, "xi": [7, 137], "annot": [7, 205, 217, 261], "individu": [7, 159, 212, 215, 216, 217, 220, 231, 261, 262], "aim": [7, 206, 217, 256, 257, 258, 261, 262, 263, 264], "strongli": [7, 209, 263], "look": [7, 263], "like": [7, 203, 206, 208, 209, 215, 217, 258, 261, 262, 263], "funcnam": 7, "key1": 7, "key2": 7, "none": [7, 13, 14, 15, 16, 17, 23, 26, 32, 49, 57, 58, 59, 60, 63, 77, 78, 83, 88, 91, 92, 97, 99, 102, 103, 104, 111, 113, 115, 122, 134, 136, 138, 146, 147, 151, 154, 155, 157, 159, 169, 171, 172, 185, 188, 189, 191, 205, 212, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 241, 243, 246, 253, 254, 255, 261, 262, 264], "out": [7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 191, 205, 206, 209, 211, 215, 216, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 241, 242, 243, 245, 246, 247, 248, 249, 250, 251, 253, 255, 260, 263], "int": [7, 13, 14, 15, 16, 17, 18, 21, 22, 26, 27, 28, 30, 31, 32, 33, 34, 35, 37, 38, 39, 41, 42, 43, 45, 47, 48, 49, 50, 51, 52, 56, 57, 58, 59, 60, 74, 77, 78, 88, 91, 95, 97, 98, 99, 101, 103, 104, 108, 122, 134, 136, 138, 140, 146, 148, 151, 154, 155, 157, 164, 167, 168, 169, 171, 172, 175, 176, 177, 178, 184, 185, 186, 188, 191, 200, 215, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 234, 236, 241, 242, 252, 253, 254, 255, 262], "str": [7, 8, 23, 115, 116, 137, 262], "modulo": 7, "self": [7, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 59, 89, 205, 263], "few": [7, 207, 215, 261, 263], "enhanc": 7, "default": [7, 13, 14, 15, 16, 17, 18, 23, 26, 59, 60, 63, 77, 78, 88, 91, 92, 97, 99, 102, 103, 104, 112, 113, 115, 122, 134, 136, 137, 138, 144, 146, 147, 151, 154, 155, 157, 159, 164, 168, 169, 171, 175, 177, 178, 180, 181, 182, 184, 185, 186, 188, 189, 190, 191, 205, 207, 212, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 236, 241, 243, 246, 247, 250, 253, 255], "form": [7, 23, 26, 40, 79, 132, 133, 177, 178, 209, 233, 235, 236, 237, 238, 239, 241, 242, 243, 246, 247, 248, 249, 250, 251, 253, 258, 262], "question": [7, 206, 261], "commonli": [7, 169, 185, 206, 208, 210, 256, 257, 261, 262], "written": [7, 203, 261, 263], "yyyi": [8, 23, 258], "mm": [8, 23, 258], "string": [8, 23, 115, 116, 205, 258, 261], "version": [8, 9, 10, 11, 12, 13, 14, 20, 21, 23, 24, 25, 26, 29, 34, 35, 40, 42, 43, 44, 46, 47, 50, 51, 59, 60, 61, 62, 63, 64, 66, 77, 79, 85, 86, 87, 88, 90, 93, 94, 96, 97, 98, 102, 103, 104, 107, 108, 109, 116, 117, 118, 119, 122, 123, 124, 125, 126, 132, 134, 135, 137, 138, 139, 140, 141, 142, 144, 145, 146, 147, 149, 150, 151, 152, 154, 158, 159, 160, 161, 162, 163, 165, 166, 170, 171, 172, 173, 174, 175, 176, 180, 181, 182, 183, 184, 186, 190, 203, 206, 212, 216, 217, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 238, 239, 241, 242, 243, 245, 246, 247, 248, 249, 250, 251, 253, 255, 259, 261, 263], "absolut": [9, 20, 85, 160, 207, 209, 241, 242, 248, 257], "x_i": [9, 10, 11, 61, 62, 64, 66, 68, 76, 77, 79, 86, 87, 94, 96, 100, 109, 117, 118, 119, 123, 124, 125, 126, 129, 134, 136, 138, 142, 149, 152, 158, 160, 161, 162, 163, 165, 166, 169, 173, 174, 179, 185], "input": [9, 10, 11, 12, 13, 14, 16, 17, 18, 20, 26, 30, 41, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 75, 76, 77, 78, 79, 85, 86, 87, 88, 90, 92, 93, 94, 95, 96, 99, 100, 101, 102, 104, 105, 106, 107, 109, 116, 117, 118, 119, 120, 121, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 189, 190, 198, 203, 205, 208, 210, 212, 213, 217, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 241, 242, 243, 245, 246, 247, 248, 250, 251, 253, 255, 257, 261, 263], "magnitud": [9, 12, 20, 85, 90, 101, 107, 141, 205, 250, 251], "represent": [9, 12, 20, 29, 44, 67, 70, 72, 80, 81, 82, 84, 90, 98, 101, 108, 141, 142, 143, 173, 174, 207, 211, 262], "known": [9, 160, 207, 210, 211], "norm": [9, 219, 221, 223, 224, 225, 227, 228, 229, 230, 232, 241, 255, 257], "modulu": [9, 153], "z": [9, 10, 11, 61, 62, 64, 66, 123, 208], "bj": [9, 12, 79, 90, 141], "comput": [9, 12, 28, 31, 33, 37, 39, 40, 43, 57, 58, 67, 70, 72, 79, 88, 89, 90, 93, 95, 101, 105, 106, 107, 120, 121, 128, 129, 130, 131, 132, 134, 135, 136, 138, 139, 141, 142, 144, 145, 149, 151, 154, 169, 171, 175, 180, 181, 182, 183, 185, 186, 191, 205, 207, 210, 215, 219, 220, 221, 223, 224, 225, 227, 228, 229, 230, 231, 232, 233, 234, 237, 238, 239, 241, 243, 246, 247, 248, 249, 250, 251, 253, 255, 257, 261], "operatornam": [9, 10, 11, 61, 62, 64, 66, 86, 87, 160, 162, 163, 173, 174, 208, 237, 238, 248, 250], "sqrt": [9, 10, 11, 61, 62, 190, 205, 208, 219, 221, 223, 224, 225, 227, 228, 229, 230, 232, 255], "take": [9, 123, 125, 150, 165, 190, 205, 212, 217, 261], "care": [9, 209, 257], "undu": [9, 210], "overflow": [9, 12, 88, 90, 101, 107, 122, 151, 171, 200, 248, 253, 257], "dure": [9, 40, 59, 107, 132, 169, 185, 200, 203, 246, 261, 262], "stage": [9, 107, 258], "contain": [9, 10, 11, 12, 13, 14, 15, 16, 17, 20, 21, 22, 23, 26, 28, 30, 31, 32, 33, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 76, 77, 78, 79, 85, 86, 87, 88, 90, 91, 92, 93, 94, 96, 100, 101, 102, 105, 106, 107, 109, 110, 111, 113, 115, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 158, 159, 160, 161, 162, 163, 165, 166, 169, 170, 171, 173, 174, 175, 177, 178, 179, 180, 181, 182, 183, 185, 186, 188, 191, 205, 207, 208, 209, 211, 215, 216, 220, 221, 222, 225, 226, 229, 231, 232, 233, 234, 235, 236, 237, 238, 239, 241, 242, 243, 245, 246, 247, 248, 249, 250, 251, 253, 255, 261, 263], "nan": [9, 10, 11, 12, 13, 14, 24, 25, 35, 61, 62, 63, 64, 65, 66, 76, 85, 86, 87, 90, 93, 94, 96, 100, 101, 107, 117, 118, 119, 123, 124, 125, 126, 127, 134, 135, 136, 138, 139, 141, 143, 145, 150, 153, 158, 159, 160, 161, 162, 163, 165, 169, 173, 174, 179, 180, 181, 182, 183, 185, 190, 198, 208, 261], "infin": [9, 10, 11, 12, 13, 14, 24, 25, 35, 62, 63, 64, 65, 66, 76, 81, 86, 87, 90, 93, 94, 96, 100, 101, 107, 117, 118, 123, 124, 125, 126, 127, 134, 138, 141, 145, 150, 153, 158, 161, 162, 163, 165, 173, 174, 179, 208, 248, 255], "imag": [9, 10, 11, 12, 24, 62, 63, 66, 87, 93, 94, 96, 117, 118, 119, 122, 123, 125, 145, 158, 160, 163, 165, 174, 190, 205, 206, 261, 262, 263], "finit": [9, 10, 11, 12, 25, 35, 42, 62, 65, 66, 87, 90, 93, 94, 96, 101, 107, 111, 117, 118, 123, 125, 141, 145, 150, 153, 161, 163, 165, 174, 207], "2022": [9, 10, 11, 12, 13, 14, 20, 21, 24, 25, 26, 29, 35, 40, 42, 43, 44, 46, 47, 50, 51, 60, 61, 62, 63, 64, 66, 79, 86, 87, 90, 93, 94, 96, 97, 98, 103, 104, 108, 109, 116, 117, 118, 119, 122, 123, 124, 125, 126, 132, 137, 141, 142, 144, 145, 146, 147, 149, 150, 151, 152, 158, 160, 162, 163, 165, 166, 170, 171, 172, 173, 174, 175, 180, 181, 182, 183, 186, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 238, 239, 241, 242, 243, 245, 246, 247, 248, 249, 250, 251, 253, 255], "12": [9, 10, 11, 12, 13, 14, 20, 21, 24, 25, 26, 29, 34, 35, 40, 42, 43, 44, 46, 47, 50, 51, 59, 60, 61, 62, 63, 64, 66, 77, 79, 85, 86, 87, 88, 90, 93, 94, 96, 97, 98, 102, 103, 104, 107, 108, 109, 116, 117, 118, 119, 122, 123, 124, 125, 126, 132, 134, 135, 137, 138, 139, 140, 141, 142, 144, 145, 146, 147, 149, 150, 151, 152, 154, 158, 159, 160, 161, 162, 163, 165, 166, 170, 171, 172, 173, 174, 175, 176, 180, 181, 182, 183, 184, 186, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 238, 239, 241, 242, 243, 245, 246, 247, 248, 249, 250, 251, 253, 255, 258], "approxim": [10, 11, 47, 61, 62, 64, 65, 66, 86, 87, 94, 96, 101, 123, 124, 125, 126, 150, 162, 163, 173, 174, 207, 243, 246], "princip": [10, 11, 61, 62, 64, 66, 123, 165, 208, 257], "invers": [10, 11, 61, 62, 64, 65, 66, 208, 219, 221, 224, 225, 226, 227, 228, 229, 230, 232, 239, 242, 246, 257], "cosin": [10, 11, 86, 87, 174], "express": [10, 61, 63, 64, 65, 86, 162, 173, 191, 200, 209, 257, 260], "radian": [10, 61, 64, 65, 86, 162, 173], "arc": [10, 61, 64], "frac": [10, 11, 61, 62, 64, 66, 86, 87, 90, 122, 124, 126, 160, 162, 163, 173, 174, 208, 248], "pi": [10, 11, 61, 62, 64, 66, 87, 123, 125, 163, 173, 174, 190], "j": [10, 11, 12, 25, 61, 62, 64, 66, 87, 90, 94, 96, 122, 123, 125, 141, 159, 160, 162, 163, 165, 173, 174, 191, 208, 237, 250, 253], "ln": [10, 11, 61, 62, 64, 66, 123], "zj": [10, 61, 62, 64, 66], "conj": [10, 11, 61, 62, 64, 66, 87, 94, 96, 123, 124, 125, 126, 163, 165, 174, 190, 205], "multi": [10, 11, 61, 62, 64, 66, 190, 208, 211, 212, 234, 263], "branch": [10, 11, 61, 62, 64, 65, 66, 86, 87, 90, 94, 96, 123, 125, 141, 150, 162, 163, 165, 173, 174, 261], "cut": [10, 11, 61, 62, 64, 66, 86, 87, 94, 96, 123, 125, 150, 162, 163, 165, 173, 174, 261], "plane": [10, 11, 61, 62, 64, 66, 86, 87, 90, 94, 96, 141, 162, 163, 165, 173, 174, 261], "By": [10, 11, 13, 14, 61, 62, 64, 65, 66, 88, 123, 125, 134, 136, 138, 150, 151, 165, 169, 171, 185, 186, 207, 208, 234, 257, 262], "place": [10, 11, 15, 60, 61, 62, 63, 64, 66, 91, 92, 97, 102, 103, 104, 122, 146, 147, 157, 188, 189, 190, 198, 200, 205, 209, 212, 220, 231, 246], "line": [10, 11, 61, 62, 64, 66, 173, 174, 200, 208, 261, 262, 263, 264], "segment": [10, 11, 61, 62, 64, 66, 208], "infti": [10, 11, 61, 62, 64, 66, 86, 123, 125, 150, 165, 208], "axi": [10, 11, 13, 14, 16, 17, 18, 61, 62, 64, 66, 78, 88, 95, 99, 123, 125, 134, 136, 138, 140, 150, 151, 154, 157, 164, 165, 167, 168, 169, 171, 172, 175, 176, 184, 185, 186, 190, 205, 219, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 232, 234, 241, 254, 255, 261], "rang": [10, 61, 62, 64, 66, 77, 88, 123, 125, 151, 165, 171, 191, 205, 211, 253, 261], "strip": [10, 61, 62, 64, 66, 123, 125], "unbound": [10, 61, 62, 64, 66, 123, 125], "along": [10, 11, 13, 14, 16, 17, 18, 61, 62, 64, 66, 78, 88, 97, 99, 123, 125, 134, 136, 138, 151, 154, 157, 164, 165, 168, 169, 171, 172, 173, 174, 176, 184, 185, 186, 191, 205, 219, 221, 223, 224, 225, 227, 228, 229, 230, 232, 234, 253, 255, 257], "c99": [10, 11, 61, 62, 64, 66, 90, 123, 125, 141, 150, 165, 208, 258], "provision": [10, 11, 61, 62, 64, 66, 123, 125, 150, 165, 208], "statu": [10, 11, 61, 62, 64, 66, 123, 125, 150, 165, 208], "greater": [10, 11, 33, 38, 48, 61, 62, 65, 66, 69, 71, 77, 85, 90, 100, 101, 123, 125, 150, 153, 160, 161, 163, 165, 167, 174, 190, 191, 219, 221, 223, 224, 225, 227, 228, 229, 230, 232, 234, 242], "than": [10, 11, 19, 26, 38, 40, 47, 48, 49, 55, 61, 62, 63, 65, 66, 69, 71, 76, 77, 85, 88, 90, 98, 99, 100, 101, 102, 123, 124, 125, 126, 132, 141, 150, 151, 153, 160, 161, 163, 165, 167, 169, 171, 172, 174, 179, 180, 181, 182, 183, 185, 191, 200, 203, 206, 209, 212, 213, 216, 219, 221, 223, 224, 225, 227, 228, 229, 230, 232, 234, 241, 242, 243, 246, 253, 255, 257, 258, 261, 263], "less": [10, 11, 39, 47, 61, 65, 66, 76, 85, 90, 101, 123, 124, 125, 126, 150, 153, 160, 161, 165, 169, 185, 190, 191, 209, 219, 221, 223, 224, 225, 227, 228, 229, 230, 232, 241, 242, 243, 246, 255, 261], "\u03c0": [10, 64, 65, 84], "0j": [10, 11, 12, 25, 62, 63, 66, 87, 94, 96, 97, 123, 125, 146, 147, 160, 163, 165, 174, 208, 248], "nonzero": [10, 11, 12, 62, 66, 87, 90, 94, 96, 101, 141, 163, 174, 190, 191, 205, 246], "3\u03c0": [10, 65], "hyperbol": [11, 62, 66, 86, 87, 162, 163, 173, 174, 208], "aco": [11, 61, 190, 205, 207], "simpli": [11, 96, 125, 206, 217, 261, 263], "upper": [11, 77, 97, 178, 205, 233, 247], "half": [11, 15, 66, 122, 140, 165, 175, 191, 222], "area": [11, 62, 66], "sector": [11, 62, 66], "\u03c0j": [11, 62, 66, 123, 125], "3\u03c0j": [11, 123, 125], "sum": [12, 21, 88, 107, 127, 151, 190, 205, 241, 253, 255, 257], "x1_i": [12, 65, 67, 69, 70, 71, 72, 85, 90, 93, 101, 105, 106, 107, 120, 121, 127, 128, 130, 131, 135, 139, 141, 143, 145, 150, 153, 170, 187, 205], "x2_i": [12, 65, 67, 69, 70, 71, 72, 85, 90, 93, 101, 105, 106, 107, 120, 121, 127, 128, 130, 131, 135, 139, 141, 143, 145, 150, 153, 170, 187, 205], "first": [12, 16, 17, 19, 65, 67, 69, 70, 71, 72, 88, 93, 105, 106, 107, 120, 121, 127, 128, 130, 131, 132, 135, 139, 141, 143, 145, 150, 157, 168, 170, 173, 174, 175, 180, 181, 182, 186, 187, 191, 208, 234, 237, 245, 247, 248, 250, 251, 257, 261, 262, 263, 264], "remain": [12, 90, 93, 101, 116, 118, 119, 141, 145, 153, 155, 160, 191, 209, 232], "neither": [12, 40, 90, 101, 132, 141, 175, 250, 262], "nor": [12, 90, 101, 141, 250, 262], "mathemat": [12, 19, 65, 84, 86, 87, 90, 96, 101, 123, 125, 141, 162, 163, 173, 174, 190, 208, 241, 255], "round": [12, 15, 76, 90, 100, 101, 141, 165, 179, 190, 205, 207], "nearest": [12, 90, 141, 158, 179, 207], "mode": [12, 90, 141, 207, 219, 221, 223, 224, 225, 227, 228, 229, 230, 232, 247], "too": [12, 26, 90, 101, 141, 257, 261], "larg": [12, 90, 101, 141, 211, 217, 248, 261], "appropri": [12, 26, 90, 101, 141, 208, 213], "commut": 12, "associ": [12, 42, 141, 193, 200, 243, 246, 249, 257, 260, 262], "tabl": [12, 90, 141, 190], "c": [12, 90, 93, 122, 141, 144, 145, 154, 168, 169, 174, 185, 191, 205, 208, 211, 214, 233, 237, 238, 239, 247, 249, 250, 258, 260, 261, 263], "d": [12, 90, 93, 122, 141, 145, 200, 220, 231], "dj": [12, 90, 141], "independ": [12, 90, 141, 158, 191, 203, 211, 234, 247, 249, 257, 258, 261], "abov": [12, 88, 90, 93, 123, 125, 141, 145, 150, 151, 165, 171, 177, 178, 191, 200, 208, 209, 211, 212, 215, 236, 237, 253, 257, 260, 263], "similarli": [12, 57, 116, 137, 200, 233, 250], "henc": [12, 79, 95, 144, 154, 180, 181, 182, 183, 191, 206, 208, 209, 210, 211, 215, 216, 217, 261, 263], "z1": 12, "z2": 12, "keepdim": [13, 14, 16, 17, 134, 136, 138, 151, 169, 171, 185, 241, 255], "test": [13, 14, 89, 117, 118, 119, 205, 207, 259, 261, 262, 263], "evalu": [13, 14, 22, 30, 36, 38, 41, 44, 45, 46, 48, 51, 52, 94, 96, 123, 124, 125, 126, 142, 149, 160, 161, 166, 203, 261], "union": [13, 14, 15, 21, 22, 26, 28, 30, 31, 32, 33, 37, 38, 39, 41, 42, 43, 45, 47, 48, 49, 50, 51, 52, 59, 60, 75, 77, 78, 91, 98, 99, 103, 104, 108, 115, 116, 122, 134, 136, 138, 140, 146, 151, 154, 156, 157, 167, 168, 169, 171, 175, 185, 188, 222, 226, 241, 243, 246, 255, 262], "ax": [13, 14, 16, 17, 19, 55, 56, 99, 134, 136, 138, 140, 148, 151, 157, 167, 169, 171, 175, 176, 185, 186, 191, 205, 221, 222, 225, 226, 229, 232, 234, 241, 246, 249, 252, 255], "logic": [13, 14, 24, 26, 90, 93, 128, 129, 130, 131, 141, 145, 212, 215, 221, 225, 229, 232], "AND": [13, 67, 93, 128, 260], "entir": [13, 14, 86, 87, 94, 96, 134, 136, 138, 151, 162, 163, 169, 171, 185], "valid": [13, 14, 26, 27, 95, 114, 140, 168, 175, 184, 191, 207, 215, 219, 221, 223, 224, 225, 227, 228, 229, 230, 232, 237, 247, 250, 262], "count": [13, 14, 78, 88, 99, 172, 180, 181, 186, 191, 205, 219, 221, 223, 224, 225, 227, 228, 229, 230, 232, 234, 238], "last": [13, 14, 18, 19, 55, 78, 88, 99, 157, 164, 168, 172, 175, 186, 191, 219, 221, 223, 224, 225, 227, 228, 229, 230, 232, 234, 236, 241, 247, 250, 253], "invalid": [13, 14, 23, 95, 213, 261], "rais": [13, 14, 19, 23, 24, 25, 26, 29, 34, 35, 40, 47, 51, 55, 60, 74, 90, 94, 95, 102, 122, 132, 134, 138, 144, 150, 155, 167, 168, 184, 186, 191, 200, 203, 205, 211, 212, 213, 215, 234, 242, 261], "wa": [13, 14, 19, 26, 101, 134, 136, 138, 151, 169, 171, 185, 200, 212, 217, 261, 263], "OR": [14, 24, 70, 130, 145, 260], "start": [15, 122, 191, 205, 217, 261, 263], "stop": [15, 122, 191, 205, 262], "step": [15, 122, 191, 262], "evenli": [15, 122], "space": [15, 122, 220, 222, 231], "open": [15, 122, 140, 175, 191], "inclus": [15, 191, 261], "end": [15, 65, 86, 122, 160, 162, 173, 174, 198, 209, 248, 261, 262, 263], "exclus": [15, 191], "distanc": [15, 107], "between": [15, 26, 47, 51, 65, 78, 90, 93, 98, 122, 134, 135, 138, 139, 145, 150, 168, 180, 181, 182, 183, 200, 208, 209, 212, 220, 231, 257, 261, 263], "adjac": 15, "output": [15, 60, 63, 78, 88, 91, 92, 95, 97, 99, 102, 103, 104, 111, 122, 137, 146, 147, 155, 157, 159, 167, 168, 172, 176, 188, 189, 203, 205, 208, 209, 212, 214, 215, 217, 219, 220, 221, 223, 224, 225, 228, 229, 230, 231, 232, 253, 261], "infer": [15, 60, 63, 92, 103, 104, 147, 155, 189, 210, 257, 262], "cannot": [15, 26, 57, 102, 173, 174, 205, 208, 210, 261], "guarante": [15, 59, 180, 182, 203, 208, 212, 261, 263], "error": [15, 19, 23, 24, 25, 26, 29, 34, 35, 51, 55, 90, 102, 134, 138, 173, 174, 200, 207, 248, 261], "ceil": [15, 190], "indic": [16, 17, 18, 26, 60, 88, 89, 102, 111, 116, 122, 140, 144, 157, 159, 160, 172, 175, 177, 178, 180, 182, 191, 200, 205, 255, 261], "occur": [16, 17, 75, 107, 173, 174, 180, 181, 182, 183, 208, 262], "occurr": [16, 17, 180], "comparison": [16, 17, 18, 31, 33, 37, 39, 93, 105, 106, 120, 121, 134, 135, 138, 139, 145, 164, 190, 208, 258, 262], "search": [16, 17, 159, 190], "flatten": [16, 17, 78, 154, 157, 180, 181, 182, 183, 255, 257], "descend": [18, 164, 250, 251], "stabl": [18, 164, 211], "sort": [18, 159, 190, 205, 237, 238, 250, 251], "ascend": [18, 159, 164, 205], "stabil": [18, 164], "maintain": [18, 164, 206, 261, 263], "rel": [18, 19, 55, 99, 135, 139, 157, 164, 205, 236, 243, 246, 253], "compar": [18, 164, 180, 181, 182, 183, 207, 212, 262, 264], "properti": [19, 53, 54, 55, 56, 57, 58, 115, 205, 208, 212, 217, 261], "transpos": [19, 40, 55, 132, 133, 175, 233, 237, 246, 250, 257], "instanc": [19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 55, 59, 89, 200, 203, 205, 212], "permut": [19, 55, 148], "revers": [19, 55, 65, 99], "origin": [19, 55, 65, 107, 140, 155, 157, 205, 209, 219, 221, 224, 225, 228, 229, 230, 232, 261, 262], "limit": [19, 98, 108, 116, 207, 257, 260], "matric": [19, 40, 55, 132, 133, 137, 177, 178, 233, 235, 236, 237, 238, 239, 241, 242, 243, 246, 247, 248, 249, 250, 251, 253, 257], "deviat": [19, 169, 207, 213, 261, 263], "et": [19, 250, 251], "al": 19, "intent": [19, 65], "found": [19, 208, 211, 263, 264], "problemat": [19, 63, 206, 209], "conflict": 19, "definit": [19, 86, 87, 162, 163, 173, 174, 205, 233, 262], "batch": [19, 255, 257], "cetera": [19, 250, 251], "permute_dim": [19, 190], "interfac": [19, 211, 257, 261, 263], "ab": [20, 107, 150, 190, 205, 241, 255], "augend": 21, "addend": 21, "self_i": [22, 28, 30, 31, 33, 36, 37, 38, 39, 41, 43, 44, 45, 46, 48, 50, 51, 52], "other_i": [22, 28, 30, 31, 33, 37, 38, 39, 41, 43, 45, 47, 48, 50, 51, 52], "bitwise_and": [22, 190], "api_vers": [23, 261], "object": [23, 24, 25, 26, 29, 34, 35, 53, 57, 59, 60, 89, 98, 102, 108, 110, 112, 113, 114, 190, 191, 200, 203, 205, 209, 211, 212, 215, 217, 256, 258, 262, 263], "2020": [23, 217, 258, 260, 261], "10": [23, 27, 124, 191, 261], "latest": [23, 211], "modul": [23, 203, 258, 262, 263, 264], "everi": [23, 103, 104, 247, 261], "top": [23, 203, 261, 263], "level": [23, 200, 206, 211, 212, 256, 257, 261, 262], "public": [23, 256, 262, 263], "well": [23, 206, 208, 211, 212, 247, 263, 264], "part": [23, 35, 177, 178, 200, 205, 211, 216, 258, 261, 263], "convert": [24, 25, 29, 34, 35, 60, 102, 200, 205, 206, 208, 211, 261, 263], "handl": [24, 26, 61, 64, 86, 88, 102, 124, 126, 150, 151, 160, 162, 166, 171, 173, 205, 206, 208, 209, 212, 213, 253, 261], "lazi": [24, 25, 29, 34, 35, 203, 205, 214, 263], "languag": [24, 25, 29, 34, 35, 209, 213, 215, 257, 261, 263], "therefor": [24, 25, 29, 34, 35, 203, 211, 212, 213, 215, 217, 258, 261, 263], "abl": [24, 25, 29, 34, 35, 102, 209, 211, 212, 261, 263], "kind": [24, 25, 26, 29, 34, 35, 47, 51, 77, 90, 98, 102, 104, 108, 113, 115, 116, 150, 200, 205, 215, 257, 260], "here": [24, 25, 26, 29, 34, 35, 191, 200, 209, 211, 216, 217, 263], "valueerror": [24, 25, 26, 29, 34, 35, 60, 102, 155, 167, 263], "instead": [24, 25, 29, 34, 35, 63, 208, 211, 215, 262, 263], "2023": [24, 25, 26, 29, 34, 35, 59, 63, 77, 85, 88, 102, 107, 134, 135, 138, 139, 140, 151, 154, 159, 161, 171, 172, 175, 176, 180, 181, 182, 183, 184, 186, 219, 220, 221, 223, 224, 225, 228, 229, 231, 234, 253], "new": [25, 26, 77, 79, 85, 88, 95, 98, 102, 103, 104, 107, 108, 109, 116, 135, 139, 140, 146, 147, 152, 154, 155, 159, 161, 168, 172, 176, 184, 188, 189, 203, 205, 206, 209, 211, 212, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 258, 261, 262, 263], "stream": [26, 59, 212], "max_vers": [26, 205], "dl_devic": [26, 205], "enum": [26, 27], "pycapsul": 26, "export": [26, 102, 205, 211, 262], "from_dlpack": [26, 27, 190, 205, 211], "dlpack": [26, 27, 102, 205], "capsul": 26, "cuda": [26, 27, 206, 211, 263], "rocm": [26, 27, 206], "pointer": 26, "produc": [26, 237, 247, 250, 263], "instruct": 26, "safe": [26, 122], "insert": [26, 95, 159, 205], "wait": 26, "event": [26, 260], "larger": [26, 98, 157, 169, 185, 246], "below": [26, 101, 102, 177, 178, 193, 211, 212, 236, 253], "signal": [26, 223, 227, 263], "ownership": 26, "stai": 26, "On": 26, "cpu": [26, 27, 203, 206, 211, 212, 257, 261, 263], "queue": [26, 59, 212], "similar": [26, 153, 191, 206, 208, 210, 261, 262, 263], "mechan": [26, 102, 203, 205, 206, 214, 256, 261], "most": [26, 203, 212, 237, 257, 261, 263], "yet": [26, 217, 261], "sycl": 26, "want": [26, 90, 141, 206, 210, 211, 261, 263, 264], "cl": 26, "agre": 26, "assum": [26, 86, 102, 162, 173, 203, 208, 212, 256, 261], "legaci": 26, "per": [26, 154, 206, 211, 259], "thread": [26, 261, 263], "disallow": 26, "due": [26, 42, 57, 58, 122, 141, 154, 172, 207, 208, 257, 261], "ambigu": [26, 63, 101, 209], "construct": [26, 176, 203, 205, 206, 215, 261], "particular": [26, 191, 206, 208, 211, 212, 217, 257, 260, 261, 263, 264], "kdlcpu": 26, "safeti": [26, 59], "prefer": [26, 101, 203, 257, 263], "develop": [26, 207, 261, 262, 263, 264], "who": [26, 207, 261, 262], "think": 26, "cost": 26, "caller": 26, "major": [26, 144, 154, 191, 258], "minor": [26, 258], "verifi": [26, 261], "even": [26, 90, 141, 150, 158, 207, 208, 209, 220, 222, 226, 231, 247, 257, 261, 263], "pass": [26, 65, 203, 207, 212], "format": [26, 27, 258], "__dlpack_device__": [26, 102, 190, 211], "buffererror": [26, 102, 205, 211], "v2023": [26, 102], "mandat": [26, 102, 261], "offer": [26, 102, 206, 211, 212, 216, 261, 263], "referenc": [26, 261], "underli": [26, 67, 70, 72, 102, 207, 248, 257], "interpret": [26, 102, 107, 208, 209, 264], "enumer": 26, "made": [26, 102, 203, 208, 256, 258, 261, 263], "never": [26, 60, 102, 155, 211, 261], "deem": [26, 102], "cross": [26, 102, 205, 212, 257, 261], "movement": [26, 102], "request": [26, 102, 261], "reus": [26, 60, 102, 209, 261], "buffer": [26, 60, 102, 209, 211], "happen": [26, 102, 209, 212, 215, 257], "dlpack_flag_bitmask_is_copi": 26, "flag": 26, "understood": [26, 200], "interchang": [26, 102, 203, 206, 214, 261], "detail": [26, 102, 144, 154, 180, 181, 182, 183, 190, 191, 202, 203, 210, 212, 216, 257, 261, 263], "stride": [26, 102, 209, 211], "fail": [26, 102, 261], "reason": [26, 102, 153, 174, 209, 211, 213, 257, 261, 262], "incorrect": 26, "scheme": [26, 258], "semver": 26, "abi": [26, 206, 211], "break": [26, 213], "introduc": [26, 63, 101, 157, 217, 262], "goe": 26, "togeth": [26, 200, 211], "dlmanagedtensorvers": 26, "struct": 26, "later": 26, "introduct": 26, "becaus": [26, 200, 206, 209, 212, 213, 215, 217, 237, 250, 261, 263, 264], "keep": [26, 200, 206, 261], "march": 26, "2025": 26, "onward": 26, "ideal": [26, 257], "late": 26, "okai": 26, "we": [26, 208, 250, 261], "get": [26, 98, 108, 206, 209, 211, 212], "now": [26, 102, 215, 261, 263], "our_own_dlpack_vers": 26, "fill": [26, 103, 104, 146, 147, 188, 189, 205], "field": [26, 180, 181, 182, 208, 237, 247, 248, 250, 261], "understand": [26, 246, 261, 262], "u": [26, 233, 246, 250], "just": [26, 261, 263], "our": 26, "elif": 26, "fine": [26, 217, 261], "own": [26, 203, 209, 261], "re": [26, 157, 206, 209, 217, 263], "intern": [26, 263], "did": 26, "older": [26, 174, 211, 258, 261], "around": [26, 262], "y": [26, 65, 102, 208, 209, 263], "dlmanagedtensor": 26, "so": [26, 98, 102, 110, 191, 198, 211, 257, 260, 261, 264], "tell": 26, "old": 26, "exchang": [26, 102, 211], "And": [26, 191, 212], "try": [26, 217, 261], "succe": 26, "info": [26, 110], "dltensor_vers": 26, "need": [26, 191, 206, 207, 209, 211, 213, 217, 257, 258, 261, 262, 263, 264], "used_dltensor_vers": 26, "done": [26, 203], "typeerror": [26, 29, 34, 35, 261, 263], "read": [26, 205, 209], "dlpack_flag_bitmask_read_onli": 26, "ignor": [26, 137, 257], "respons": 26, "isn": [26, 206], "t": [26, 190, 206, 209, 212, 216, 217, 261, 263], "id": 27, "meant": 27, "device_typ": 27, "device_id": 27, "member": 27, "cpu_pin": 27, "opencl": 27, "vulkan": 27, "metal": 27, "vpi": 27, "cuda_manag": 27, "13": 27, "one_api": 27, "14": [27, 258], "truth": [28, 31, 33, 37, 39, 43, 89, 93, 105, 106, 120, 121, 145, 264], "outsid": [29, 168, 184, 191, 200, 205, 211], "bound": [29, 77, 172, 191, 200, 205, 217], "divis": [30, 41, 71, 90, 101, 153, 160, 208], "floor_divid": [30, 190], "greater_equ": [31, 190], "kei": [32, 49, 111, 113, 115, 261], "slice": [32, 49, 184, 190, 209], "ellipsi": [32, 49, 191], "pep": [34, 40, 101, 132, 211, 258], "357": 34, "overflowerror": 35, "bitwise_invert": [36, 190], "less_equ": [37, 190], "bitwise_left_shift": [38, 190], "matrix": [40, 55, 132, 133, 137, 175, 177, 178, 233, 235, 236, 237, 238, 239, 241, 242, 243, 246, 247, 248, 249, 250, 251, 253, 257, 261], "product": [40, 42, 58, 132, 141, 151, 175, 186, 205, 234, 245, 257], "semant": [40, 101, 132, 153, 172, 190, 191, 203, 209, 211, 213, 215, 216, 257, 261, 262, 263], "built": [40, 132, 191, 200, 261], "465": [40, 132], "least": [40, 90, 115, 116, 132, 141, 144, 180, 181, 182, 183, 206, 207, 246], "m": [40, 55, 132, 133, 137, 154, 159, 175, 176, 177, 178, 191, 219, 221, 223, 224, 225, 227, 228, 229, 230, 232, 233, 235, 236, 237, 238, 239, 241, 242, 243, 245, 246, 247, 248, 249, 250, 251, 253], "remov": [40, 132, 167, 191, 208, 236, 253], "innermost": [40, 132, 133, 177, 178, 233, 235, 236, 237, 238, 239, 241, 242, 243, 246, 247, 248, 249, 250, 251, 253], "conjug": [40, 79, 132, 175, 186, 205, 233, 237, 250, 257], "transposit": [40, 132, 175], "desir": [40, 63, 75, 132, 140, 175, 207, 208, 211, 217], "prior": [40, 132, 175], "inner": [40, 132, 205, 237, 257], "stack": [40, 55, 132, 133, 177, 178, 190, 216, 233, 235, 236, 237, 238, 239, 241, 242, 243, 246, 247, 248, 249, 250, 251, 253, 257], "l": [40, 132, 233, 253], "remaind": [41, 190, 191], "multipli": [42, 151, 166, 190, 205, 207, 237, 250], "not_equ": [43, 190, 205], "negat": [44, 79, 142], "bitwise_or": [45, 190], "exponenti": [47, 94, 96, 127, 150, 208], "power": [47, 71, 94, 150, 208, 242, 263], "expon": [47, 150, 242], "versu": [47, 51, 63, 77, 90, 141, 150, 205], "bitwise_right_shift": [48, 190], "mix": [49, 122, 136, 156, 169, 185, 190, 205, 209, 212, 257, 261], "how": [49, 90, 141, 203, 207, 212, 216, 262, 263, 264], "minuend": 50, "subtrahend": 50, "subtract": [50, 190, 205, 207], "choos": [51, 57, 59, 90, 101, 122, 128, 129, 130, 131, 134, 135, 136, 138, 139, 141, 144, 154, 169, 180, 181, 182, 183, 185, 190, 191, 198, 208, 209, 210, 212, 215, 261, 263], "divid": [51, 101, 160, 190, 191, 205, 207], "bitwise_xor": [52, 190], "resid": [53, 59, 95, 140, 175, 191, 205, 211, 261], "fewer": 55, "unknown": [57, 58, 154], "graph": [57, 58, 144, 154, 180, 181, 182, 183, 191, 210, 215, 261], "static": [57, 210, 214], "resolv": [57, 60, 88, 95, 101, 103, 104, 151, 171, 221, 222, 225, 226, 229, 232, 253, 261], "know": [57, 144, 154, 180, 181, 182, 183, 203, 206, 207, 210, 261, 263], "content": [57, 210, 260], "warrant": 57, "custom": [57, 206, 213], "immut": 57, "retriev": [57, 191, 203, 218, 257, 263], "behav": [57, 208], "current": [59, 113, 115, 172, 198, 209, 212, 217, 261, 262, 263], "__dlpack__": [59, 102, 190, 205, 211], "caveat": 59, "would": [59, 60, 155, 159, 191, 205, 209, 215, 257, 261, 263], "locat": [59, 209], "explicit": [59, 60, 102, 172, 175, 212, 263], "enqueu": 59, "asynchron": 59, "explain": [59, 206], "clarifi": [59, 134, 138, 180, 181, 182, 205], "obj": 60, "nestedsequ": 60, "supportsbufferprotocol": 60, "possibli": [60, 216, 261], "nest": [60, 216], "sequenc": [60, 78, 122, 168, 175, 184, 191, 205, 221, 222, 225, 226, 229, 232, 252], "protocol": [60, 203, 211, 217, 261, 263], "turn": [60, 203, 256], "memoryview": 60, "preced": [60, 208, 211, 212], "mixtur": 60, "convers": [60, 122, 205, 206, 261], "obei": [60, 122], "permit": [60, 63, 122, 210, 260], "To": [60, 101, 191, 205, 207, 208, 217, 261, 262, 264], "array_api": [60, 261], "astyp": [60, 190, 205], "exce": [60, 103, 104, 122], "sine": [61, 62, 162, 163, 174], "1j": [61, 64, 86, 87, 94, 96, 107, 162, 163, 173], "asinh": [61, 190, 205, 207], "asin": [62, 190, 205, 207], "irrespect": [63, 208], "histor": [63, 174, 257], "discard": 63, "choic": [63, 169, 185, 203, 207, 208, 212, 213, 215, 216, 257, 258, 261, 263], "arbitrari": [63, 73, 111, 137, 156, 207], "achiev": [63, 191, 207], "outcom": 63, "clariti": 63, "newli": [63, 212], "alloc": [63, 177, 178, 210, 212], "tangent": [64, 65, 66, 173, 174], "atanh": [64, 190, 205, 207], "quotient": [65, 90, 101, 191], "domain": [65, 205, 207, 208, 261, 263], "notat": 65, "denot": [65, 186, 246], "pair": [65, 101, 234, 250], "codomain": 65, "quadrant": 65, "chosen": [65, 187, 211], "angl": [65, 87, 107, 163, 174], "rai": 65, "role": 65, "coordin": [65, 123, 137, 173, 174, 216, 261], "tradit": 65, "atan": [66, 190, 205, 207], "bitwis": [67, 70, 72, 190], "flip": [68, 190], "shift": [69, 71, 157, 222, 226], "arithmet": [71, 90, 136, 141, 190, 200, 208, 261], "propag": [71, 102, 134, 136, 138, 169, 185, 207], "floor": [71, 101, 190], "anoth": [73, 75, 102, 191, 203, 205, 206, 208, 209, 211, 212, 215, 237, 250, 261, 263], "from_": 75, "smallest": [76, 98, 108, 241], "closest": [76, 100, 101, 158], "alreadi": [76, 100, 141, 158, 179, 211, 213, 258, 263], "min": [77, 98, 108, 177, 178, 186, 190, 205, 234, 241, 247, 250, 251, 255], "clamp": [77, 205], "join": [78, 168, 200], "befor": [78, 88, 151, 159, 171, 180, 181, 182, 183, 186, 205, 208, 234, 253, 261], "concaten": 78, "leav": [78, 140, 168, 191, 198, 205, 207, 209, 246], "famili": [78, 168], "intxx": [78, 168, 200], "floatxx": [78, 168, 200], "718281828459045": 80, "euler": 80, "constant": [80, 84, 190, 191, 205], "71828182845904523536028747135266249775724709369995": 80, "Not": 82, "alia": [83, 115, 191, 205, 240, 244, 252, 254], "141592653589793": 84, "1415926535897932384626433": 84, "compos": [85, 200, 205], "begin": [86, 160, 162, 173, 174, 191, 198, 248, 263], "align": [86, 162, 173, 174, 205, 207, 262], "sum_": [86, 186], "2n": [86, 123], "jx": [86, 162, 173], "cosh": [86, 174, 190, 205, 207], "period": [87, 163, 173, 174], "ci": [87, 94, 96, 163, 263], "v": [87, 94, 96, 159, 163, 214, 246, 250, 261], "co": [87, 94, 96, 163, 190, 205, 207], "sin": [87, 94, 96, 163, 190, 205, 207, 209, 217], "include_initi": 88, "cumul": [88, 205], "unless": [88, 141, 151, 171, 190, 253], "smaller": [88, 151, 157, 171, 253, 263], "latter": [88, 101, 151, 171, 191, 203, 208, 211, 253, 262], "help": [88, 151, 171, 206, 207, 216, 253], "prevent": [88, 151, 171, 253], "initi": [88, 209, 261], "ident": [88, 186, 208, 226, 238, 239, 242, 261], "success": [88, 151, 171, 253], "dividend": [90, 101, 153], "divisor": [90, 101, 153, 169, 185], "small": [90, 101, 141, 207, 243, 246, 248, 261, 263], "gener": [90, 122, 141, 153, 175, 203, 206, 208, 213, 257, 261, 262], "textbook": [90, 141], "formula": [90, 124, 126, 141], "ac": [90, 141, 208], "bd": [90, 141], "bc": [90, 141, 208], "riemann": [90, 141, 208], "sphere": [90, 141, 208], "infinit": [90, 111, 141, 165, 207, 208], "usual": [90, 141, 261], "interest": [90, 141, 207], "unlik": [90, 141, 258, 261], "consist": [90, 101, 115, 116, 122, 141, 159, 175, 191, 198, 208, 212, 217, 228, 229, 230, 232, 237, 246, 257, 261], "uniniti": [91, 92], "deriv": [92, 104, 147, 189, 191, 213, 262], "natur": [94, 123, 124, 125, 126, 150, 248, 257], "logarithm": [94, 123, 124, 125, 126, 127, 150, 248, 257], "expand": [95, 191, 263], "close": [95, 96, 122, 125, 158, 191, 261, 263], "indexerror": [95, 191], "exp": [96, 127, 150, 190, 205, 207, 248], "accur": [96, 125, 207, 248], "fdlibm": [96, 125, 207], "n_row": 97, "n_col": 97, "ones": [97, 147, 176, 190, 205, 209, 213, 261], "diagon": [97, 177, 178, 237, 246, 247, 253, 257], "elsewher": [97, 187, 208], "row": [97, 144, 154, 191, 241, 247, 249, 250], "column": [97, 237, 241, 247, 249, 250, 261], "finfo_object": [98, 205], "machin": [98, 108, 243, 246, 261], "inform": [98, 108, 261, 262, 263, 264], "occupi": [98, 108], "ep": [98, 243, 246, 261], "next": [98, 143, 261], "largest": [98, 108, 241, 250, 251], "smallest_norm": 98, "full": [98, 190, 205, 209, 247, 249, 250, 263], "preserv": [99, 159, 191, 205, 208, 212], "reorder": [99, 140], "greatest": [100, 101], "238": 101, "goal": [101, 206, 209, 257, 263], "disambigu": 101, "toward": [101, 157, 207, 257, 262], "former": [101, 191, 208, 262], "overload": [101, 257], "led": 101, "subtl": 101, "bug": [101, 263, 264], "expect": [101, 115, 174, 200, 205, 207, 208, 210, 211, 212, 213, 217, 261], "design": [101, 205, 207, 259, 261, 263, 264], "ill": [101, 257], "diverg": [101, 264], "strictli": 101, "relat": [101, 191, 208, 212, 216, 257, 261, 263], "surpris": [101, 208], "unexpect": [101, 208, 213, 261], "enough": [102, 203, 206, 217, 256, 258, 261], "materi": [102, 211], "attributeerror": [102, 211], "present": [102, 115, 209, 210, 212, 256, 257, 258, 261], "suggest": [102, 263], "correctli": [102, 207], "move": [102, 140, 205, 212, 263], "agnost": 102, "fashion": 102, "illustr": [102, 209, 217], "def": [102, 217, 261, 262, 263], "func": 102, "xp_x": 102, "__array_namespace__": [102, 190, 218, 257, 261], "xp_y": 102, "work": [102, 206, 209, 211, 217, 261, 263, 264], "xxxxx": 102, "address": [102, 205, 257, 261, 262, 263], "unsupport": [102, 205], "fill_valu": [103, 104], "squar": [107, 165, 190, 205, 208, 233, 235, 237, 238, 239, 242, 246, 248, 249, 257], "root": [107, 165, 205, 208, 238], "hypotenus": 107, "triangl": 107, "side": [107, 159, 191, 211], "naiv": 107, "correct": [107, 169, 185, 209], "iinfo_object": [108, 205], "inspect": [110, 190], "util": [110, 190, 193, 205, 258, 261, 262], "class": [110, 193, 217, 261, 262], "xp": [110, 218, 256, 257, 261], "capabl": [110, 190, 193, 205], "default_dtyp": [110, 190, 205], "dictionari": [111, 113, 115, 205], "fulli": [111, 212], "complianc": 111, "exclud": [111, 122, 191, 200], "demarc": [111, 210], "throughout": 111, "defaultdatatyp": 113, "concept": [113, 115, 191, 209, 261], "context": [113, 115, 208, 212, 262], "manag": [113, 115, 206, 212], "runtim": [114, 216, 217, 258, 261, 263], "creation": [114, 190, 203, 212, 261], "datatyp": 115, "decid": [115, 261], "belong": [115, 116, 209], "shorthand": [115, 116, 191], "canon": 115, "float16": 116, "bfloat16": [116, 261], "int128": 116, "short": [116, 208, 261, 262], "extend": [116, 191, 208, 261], "extens": [116, 259, 263], "num": 122, "endpoint": 122, "delta_": 122, "textrm": [122, 160, 248], "sampl": [122, 169, 185, 220, 226, 231, 262], "nonneg": [122, 175, 191], "concern": [122, 154, 172, 205, 212, 216, 261], "polar": 123, "r": [123, 176, 191, 233, 237, 238, 239, 247, 249, 250, 261, 263], "theta": 123, "continu": [123, 125, 150, 165, 208, 237, 250, 261], "account": [123, 125, 150, 165, 261], "log_": [124, 126], "log": [124, 125, 126, 127, 150, 190, 205, 207], "mxn": [133, 177, 178, 236, 241, 243, 246, 247, 253], "sentinel": [134, 138], "xy": 137, "grid": 137, "cartesian": 137, "ij": 137, "effect": [137, 169, 185, 212, 264], "ni": 137, "n3": 137, "nn": 137, "three": [137, 212], "p": [137, 238, 241, 255], "sourc": [140, 262, 264], "destin": 140, "uniqu": [140, 175, 180, 181, 182, 183, 205, 208, 221, 222, 225, 226, 229, 232, 237, 239, 247, 249, 250, 257], "state": [141, 190, 191, 261], "cdot": [141, 162, 166, 173, 186], "y_i": [142, 149], "direct": [143, 206, 261, 262], "build": [144, 154, 180, 181, 182, 183, 191, 203, 210, 216, 261], "jax": [144, 154, 180, 181, 182, 183, 191, 209, 210, 261, 262, 263], "dask": [144, 154, 180, 181, 182, 183, 191, 209, 210, 216, 261, 262, 263], "etc": [144, 154, 180, 181, 182, 183, 191, 210, 258], "find": [144, 154, 159, 180, 181, 182, 183, 191, 205, 210, 261, 262], "difficult": [144, 154, 180, 181, 182, 183, 191, 207, 210, 261], "omit": [144, 154, 180, 181, 182, 183, 191, 210, 211, 215], "section": [144, 154, 180, 181, 182, 183, 191, 205, 206, 210, 211, 212, 213, 217, 261, 263], "typl": 144, "total": [144, 169, 185, 208], "style": [144, 154, 191], "odd": [150, 220, 226, 228, 229, 231], "treat": [150, 176], "carefulli": 150, "That": [153, 191, 203, 213, 217, 261], "primarili": 153, "basi": 154, "liter": [154, 159, 219, 221, 223, 224, 225, 227, 228, 229, 230, 232, 241, 247, 255], "repetit": [154, 176], "prod": [154, 190, 205, 221, 225, 229, 232], "caus": 154, "advis": [154, 174, 209, 257], "regard": [154, 172, 205, 213, 257, 263], "degrad": 154, "One": [155, 215, 261, 264], "arrays_and_dtyp": 156, "restor": 157, "counterpart": 158, "sorter": 159, "control": [159, 212, 215, 216], "land": 159, "exactli": [159, 173, 174], "edg": 159, "satisfi": [159, 176, 190, 191, 207, 208, 262], "condit": [159, 187, 215, 260], "what": [159, 203, 211, 213, 217, 257, 261, 262, 263, 264], "constitut": [159, 169, 185], "among": [159, 207, 208, 257], "argsort": [159, 190], "invok": [159, 262], "signum": 160, "whenev": [161, 263], "2j": 162, "sinh": [162, 174, 190, 205, 207], "indistinguish": [165, 191, 207], "degre": [169, 185, 238, 257], "freedom": [169, 185], "adjust": [169, 185, 261], "popul": [169, 185], "bessel": [169, 185, 206], "conceptu": 172, "mutat": 172, "check": [172, 191, 207, 233, 237, 238, 247, 249, 256, 263, 264], "select": [172, 191, 261], "analyt": [173, 174, 208], "pole": [173, 174], "tanh": [173, 190, 205, 207], "stem": [174, 237, 250], "patch": 174, "tensor": [175, 257, 261, 263], "contract": [175, 186, 257, 260], "outer": [175, 205], "dot": [175, 186, 257], "x1_ax": 175, "x2_ax": 175, "triangular": [177, 178, 233, 247], "closer": 179, "reconstruct": [180, 182], "distinct": [180, 181, 182, 183, 208, 257], "inverse_indic": [180, 182], "exact": [180, 182, 217], "aggreg": [180, 181], "namedtupl": [180, 181, 182, 237, 247, 248, 250, 257], "third": [180, 250], "fourth": 180, "split": [184, 205], "varianc": 185, "unbias": 185, "mathbf": 186, "overlin": [186, 246], "a_i": 186, "b_i": 186, "restrict": [186, 234, 257, 260], "yield": [187, 208], "signatur": [190, 203, 217, 261, 262], "subset": [190, 207, 262, 263], "categori": 190, "accuraci": [190, 214, 219, 221, 224, 225, 228, 229, 230, 232], "reflect": 190, "mt": 190, "__abs__": [190, 205], "__bool__": [190, 205, 215], "__complex__": [190, 205, 215], "__float__": [190, 205, 215], "__getitem__": [190, 191, 205], "__index__": [190, 205, 215], "__int__": [190, 205, 215], "to_devic": [190, 205, 212], "overview": 190, "algorithm": [190, 207, 248, 263], "inf": [190, 241, 255, 261], "newaxi": [190, 191, 205], "arang": [190, 262], "asarrai": [190, 205, 211, 263], "empty_lik": 190, "ey": [190, 205], "full_lik": [190, 205], "linspac": [190, 205], "meshgrid": [190, 205], "ones_lik": [190, 205], "tril": 190, "triu": 190, "zeros_lik": 190, "can_cast": 190, "finfo": [190, 205], "iinfo": [190, 205], "result_typ": 190, "acosh": [190, 205, 207], "atan2": [190, 207], "clip": [190, 191, 205], "copysign": [190, 205], "expm1": [190, 205, 207], "hypot": [190, 205], "isfinit": [190, 205], "isinf": [190, 205], "isnan": [190, 205], "log1p": [190, 205, 207], "log2": [190, 205, 207], "log10": [190, 205, 207], "logaddexp": 190, "logical_and": 190, "logical_not": 190, "logical_or": 190, "logical_xor": 190, "nextaft": 190, "signbit": [190, 205], "tan": [190, 205, 207], "trunc": [190, 205], "syntax": [190, 209, 211, 213, 261], "__array_namespace_info__": [190, 193, 205], "default_devic": [190, 205], "linear": [190, 208, 249, 256], "algebra": [190, 208, 246, 256], "matrix_transpos": [190, 257], "tensordot": [190, 205, 257], "vecdot": [190, 205, 257], "manipul": 190, "broadcast_arrai": 190, "broadcast_to": 190, "concat": 190, "expand_dim": [190, 191], "moveaxi": [190, 205], "reshap": [190, 191], "roll": 190, "squeez": 190, "tile": [190, 205], "unstack": [190, 205], "argmax": 190, "argmin": 190, "searchsort": [190, 205], "unique_al": [190, 205], "unique_count": [190, 205], "unique_invers": [190, 205], "unique_valu": [190, 205], "statist": 190, "cumulative_sum": [190, 205], "__array_api_version__": [190, 202, 205, 258], "syntact": 191, "sugar": 191, "term": [191, 212, 257, 262], "colon": 191, "contrast": [191, 208, 215, 257], "combin": [191, 209, 216, 257], "basic": 191, "noth": 191, "perspect": 191, "item": [191, 209, 261], "2k": 191, "3k": 191, "q": [191, 237, 247], "obtain": [191, 260], "qk": 191, "being": [191, 211, 212, 257, 261, 264], "100": [191, 215, 258], "junk": 191, "consider": [191, 209, 257], "comma": 191, "separ": [191, 205, 211, 256], "exp1": 191, "exp2": 191, "expn": 191, "forth": 191, "decreas": [191, 257], "entri": [191, 221, 222, 225, 226, 229, 232, 261], "retain": 191, "invoc": 191, "manner": [191, 211, 213], "sympi": 191, "flat": 191, "attempt": [191, 207, 208, 209, 212, 213, 261, 263], "dynam": 191, "mask": [191, 261], "filter": 191, "s1": 191, "sm": 191, "s2": 191, "sn": 191, "prohibit": [191, 209], "replac": [191, 215, 246, 264], "iter": 191, "programmat": 193, "queri": 193, "reli": [198, 206, 208, 210, 217, 263], "them": [198, 206, 209, 213, 261, 263], "reproduc": [198, 207], "high": [200, 211, 212, 257, 261], "diagram": [200, 261], "lattic": 200, "particip": [200, 208], "matter": [200, 206, 208], "dash": 200, "undefin": [200, 257], "connect": [200, 260], "rather": [200, 203, 206, 212, 213, 216, 257, 261], "i2": 200, "i1": 200, "i4": 200, "i8": 200, "u1": 200, "u2": 200, "u4": 200, "u8": 200, "f8": 200, "c8": 200, "c16": 200, "regardless": 200, "subject": [200, 248, 260], "met": 200, "give": [200, 208, 211, 212], "No": [203, 258], "run": [203, 262, 263], "varieti": 203, "architectur": 203, "gpu": [203, 211, 212, 263], "distribut": [203, 207, 211, 212, 216, 260], "system": [203, 249, 261], "tpu": [203, 211], "emerg": [203, 211, 261], "instal": [203, 261, 264], "emploi": [203, 210, 212], "parallel": [203, 214, 261, 263], "jit": [203, 206, 261], "put": [203, 261, 263], "constraint": [203, 208, 259], "predict": 203, "itself": [203, 211, 215, 263], "motiv": 203, "importantli": 203, "awar": [203, 217, 263], "layer": [203, 216, 261, 263], "coupl": 203, "downstream": [203, 256, 261, 262], "import": [203, 206, 212, 215, 256, 257, 261, 263, 264], "structur": [203, 217, 261, 262], "interoper": [203, 211], "share": [203, 261], "though": [203, 217, 261, 263], "soft": 203, "arraylib_nam": 203, "constrain": [203, 207], "unwil": 203, "signific": [203, 207, 209, 261], "adopt": [203, 208, 211, 263], "primari": [203, 211], "write": [203, 209, 261, 263], "consequ": [203, 217, 261], "easi": [203, 256], "unambigu": [203, 209, 211, 262], "clear": [203, 209, 211, 261, 263], "significantli": 203, "detract": 203, "experi": [203, 258], "strict": [203, 209], "typic": [203, 209, 211, 213, 258, 261, 263, 264], "good": [203, 206, 209, 212, 217, 261], "anyth": [203, 261], "thin": 203, "conveni": 203, "plan": [204, 261], "previou": [205, 263], "gh": [205, 263], "613": 205, "687": 205, "eager": [205, 214, 261], "708": 205, "revis": [205, 208, 212], "702": 205, "relax": 205, "730": 205, "749": 205, "intrins": 205, "652": 205, "602": 205, "741": 205, "665": 205, "751": 205, "701": 205, "625": 205, "742": 205, "752": 205, "fft": [205, 218, 221, 223, 224, 225, 227, 228, 229, 230, 232], "720": 205, "746": 205, "backport": 205, "689": 205, "715": 205, "693": 205, "653": 205, "703": 205, "713": 205, "656": 205, "690": 205, "699": 205, "705": 205, "692": 205, "604": 205, "740": 205, "fftn": [205, 225], "hfft": 205, "ifft": [205, 219], "ifftn": [205, 221], "irfft": [205, 230, 231], "irfftn": [205, 232], "fftfreq": 205, "rfftfreq": 205, "linalg": [205, 256, 257], "trace": [205, 209, 257, 262], "fix": [205, 212, 261, 263], "clarif": 205, "674": 205, "736": 205, "typo": 205, "633": 205, "681": 205, "706": 205, "miss": [205, 261], "639": 205, "issu": [205, 206, 208, 209, 211, 212, 216, 261, 263], "qr": 205, "661": 205, "choleski": [205, 257], "677": 205, "svd": [205, 246], "619": 205, "666": [205, 262], "644": 205, "622": 205, "723": 205, "497": 205, "498": 205, "546": 205, "525": 205, "528": 205, "557": 205, "529": 205, "448": 205, "447": 205, "537": 205, "526": 205, "554": 205, "517": 205, "520": 205, "521": 205, "522": 205, "523": 205, "524": 205, "442": 205, "434": 205, "445": 205, "454": 205, "453": 205, "436": 205, "451": 205, "452": 205, "484": 205, "435": 205, "531": 205, "530": 205, "532": 205, "568": 205, "514": 205, "534": 205, "536": 205, "437": 205, "441": 205, "438": 205, "553": 205, "440": [205, 258], "556": 205, "457": 205, "456": 205, "552": 205, "461": 205, "538": 205, "459": 205, "458": 205, "558": 205, "540": 205, "512": 205, "470": 205, "417": 205, "502": 205, "443": 205, "559": 205, "det": [205, 238, 248], "542": 205, "eigh": [205, 257], "543": 205, "eigvalsh": 205, "547": 205, "matrix_norm": 205, "565": 205, "matrix_pow": 205, "549": 205, "matrix_rank": 205, "563": 205, "560": 205, "pinv": 205, "564": 205, "548": 205, "slogdet": [205, 257], "567": 205, "solv": [205, 217, 246], "566": 205, "561": 205, "svdval": 205, "562": 205, "541": 205, "vector_norm": 205, "550": [205, 263], "418": 205, "491": 205, "513": 205, "variabl": [205, 216, 249, 264], "515": 205, "527": 205, "573": 205, "480": 205, "485": 205, "496": 205, "503": 205, "427": 205, "416": 205, "fast": 205, "fourier": [205, 219, 220, 221, 223, 224, 225, 227, 228, 229, 230, 231, 232, 256], "transform": [205, 219, 220, 221, 223, 224, 225, 227, 228, 229, 230, 231, 232, 256, 262], "189": 205, "rfft": [205, 228, 231], "rfftn": [205, 229], "irfttn": 205, "fftshift": [205, 226], "ifftshift": 205, "464": 205, "429": 205, "439": 205, "572": 205, "510": 205, "511": 205, "473": 205, "scope": [206, 215, 216, 259, 262], "mention": [206, 213, 263], "There": [206, 209, 211, 212, 217, 261, 263, 264], "deal": [206, 216, 217, 258, 260], "assumpt": [206, 211, 258, 259, 261], "rest": [206, 261, 263], "ndarrai": [206, 211, 261, 263], "visual": 206, "often": [206, 208, 213, 257, 261, 262, 263], "difficulti": [206, 210], "relev": [206, 212, 217, 261], "certainti": 206, "inde": 206, "project": [206, 208, 211, 263], "statsmodel": 206, "scikit": [206, 216, 261, 262, 263], "bio": [206, 263], "qutip": 206, "strategi": [206, 212], "learn": [206, 216, 261, 262, 263], "submodul": [206, 256], "doesn": [206, 212, 261], "cupi": [206, 209, 261, 262, 263], "elementwisekernel": 206, "scipi": [206, 216, 261, 262], "astropi": [206, 263], "seem": [206, 211, 263], "almost": [206, 263], "inevit": 206, "someth": [206, 209, 261], "numba": [206, 211, 261, 263], "sens": [206, 215, 261, 263], "tend": [206, 209, 263], "reimplement": 206, "gamma": 206, "drop": [206, 217, 247, 250], "arraylib": 206, "cpython": 206, "backend": [206, 216, 261], "target": [206, 212], "better": [206, 263], "pypi": [206, 262, 263], "quit": [206, 261, 263], "readi": 206, "mainstream": 206, "todai": [206, 209, 257], "onc": [206, 258], "feasibl": [206, 261], "roundtiestoeven": 207, "ti": [207, 257, 261], "certain": [207, 208, 257], "boundari": 207, "reader": 207, "identifi": [207, 212, 262], "lack": 207, "phrase": [207, 213], "recogn": [207, 212], "seek": [207, 257, 262], "optim": [207, 209, 257, 263], "latitud": 207, "although": [207, 226, 248], "freeli": 207, "sun": 207, "microsystem": 207, "With": [207, 262, 263], "imposs": [207, 209, 210, 264], "suit": [207, 259, 261, 262], "span": 207, "report": 207, "averag": 207, "aid": [207, 264], "best": [207, 211, 257, 261], "effort": [207, 262], "theoret": 207, "sound": 207, "robust": 207, "bare": 207, "summat": [207, 257], "unfortun": 207, "impos": [207, 210], "rigor": 207, "sever": [207, 209, 258, 261], "curtail": 207, "unduli": 207, "topologi": 208, "continuum": 208, "onto": [208, 209], "surfac": [208, 261], "stereograph": 208, "coalesc": 208, "3j": 208, "4j": 208, "convei": 208, "niceti": 208, "translat": [208, 263], "neq": 208, "arriv": [208, 261], "opposit": 208, "subtleti": 208, "craft": 208, "intuit": 208, "julia": [208, 263], "minim": [208, 212], "imperfect": 208, "balanc": 208, "appear": [208, 258, 261, 264], "embrac": 208, "transcendent": 208, "wholli": 208, "analysi": [208, 209, 210, 261, 262, 263], "curv": [208, 261], "discontinu": [208, 263], "taken": [208, 261], "pm": 208, "whole": 208, "simpl": [208, 209, 258], "aris": [208, 257, 260, 261], "trigonometr": 208, "domin": 208, "a_1": 208, "ldot": 208, "a_n": 208, "reflex": 208, "leq": 208, "transit": 208, "antisymmetr": 208, "partial": 208, "establish": [208, 262], "six": 208, "lexicograph": 208, "principl": [208, 262], "situat": [208, 209, 211, 212, 213, 261, 263], "unit": [208, 220, 231], "despit": [208, 211], "admonit": [209, 210], "becom": [209, 211, 261, 263], "trigger": [209, 215], "confid": 209, "pytorch": [209, 212, 261, 262, 263], "mxnet": [209, 261, 262, 263], "save": 209, "faster": 209, "tensorflow": [209, 261, 262, 263], "fundament": [209, 261], "inplac": 209, "update_index": 209, "idx": 209, "solut": [209, 246, 249, 263], "hard": [209, 211, 212, 215, 261], "go": [209, 258], "down": 209, "rout": 209, "val": [209, 215], "veri": [209, 248, 263], "wide": [209, 211, 247, 250, 261], "slightli": 209, "heavili": [209, 263], "you": [209, 264], "_must_": 209, "abstract": [209, 257, 262], "donat": 209, "lapack": [209, 257], "_may_": 209, "overwrit": 209, "whatev": 209, "fastest": 209, "aren": [209, 261], "longer": [209, 257], "problem": [209, 217, 246, 262, 263], "upon": [210, 261], "ahead": 210, "burden": [210, 261], "omiss": 210, "nativ": 211, "layout": 211, "packag": [211, 217, 258, 261, 262, 263], "live": [211, 261], "figur": 211, "contigu": 211, "promin": [211, 261], "releas": [211, 258, 262], "candid": [211, 261], "__cuda_array_interface__": 211, "moment": 211, "tri": [211, 263], "growth": 211, "amd": 211, "undesir": 211, "pattern": [211, 212, 216, 262, 263], "widest": 211, "lot": 211, "3118": 211, "hardli": 211, "mostli": [211, 215, 216, 261], "dealt": [211, 217], "__array__": [211, 263], "attach": 211, "hold": [211, 257], "rfc": [211, 261], "http": [211, 258, 264], "dmlc": 211, "github": [211, 258, 260, 264], "io": 211, "page": [211, 263], "standalon": [211, 264], "outlin": [211, 261], "cover": [211, 261, 264], "usag": [211, 256, 261], "node": 211, "spars": [211, 261], "why": [211, 261], "complet": [211, 216, 247, 258, 261, 263], "scale": 212, "exert": 212, "placement": 212, "global": 212, "switchabl": 212, "transfer": 212, "granular": 212, "downsid": 212, "verbos": 212, "much": [212, 261, 264], "kept": 212, "instanti": 212, "physic": 212, "revisit": 212, "themselv": 212, "expos": [212, 257], "bewar": 212, "framework": [212, 261], "elabor": 212, "polici": 212, "highest": 212, "prioriti": 212, "topic": [212, 216, 259, 261, 263], "pin": 212, "tricki": 212, "sinc": 212, "emit": 213, "misbehav": 213, "forese": 213, "extent": 213, "builtin": 213, "author": [213, 260, 261, 262, 263], "worth": 213, "compli": 213, "aspect": [215, 264], "impact": [215, 261], "prescrib": 215, "show": 215, "up": [215, 247, 256, 263], "five": 215, "dunder": [215, 258], "serial": 215, "compute_someth": 215, "statement": 215, "do_something_els": 215, "flow": 215, "cond": 215, "won": 216, "further": 216, "exercis": 216, "environ": [216, 257, 261, 264], "bla": [216, 257], "openmp": 216, "n_job": [216, 263], "worker": [216, 263], "chunk": 216, "approach": [216, 261, 262], "auto": [216, 263], "thing": 216, "improv": [216, 261, 263], "fit": [216, 260, 261, 263], "becam": [217, 261], "progress": [217, 264], "superclass": 217, "_basearrai": 217, "subclass": [217, 261], "insid": [217, 256], "typevar": 217, "variat": [217, 262], "don": [217, 263], "said": 217, "subtyp": 217, "hasattr": [218, 256, 257, 261], "ortho": [219, 221, 223, 224, 225, 227, 228, 229, 230, 232], "forward": [219, 221, 223, 224, 225, 227, 228, 229, 230, 232, 261], "discret": [219, 220, 221, 223, 224, 225, 227, 228, 229, 230, 231, 232], "pad": [219, 221, 223, 224, 225, 227, 228, 229, 230, 232], "trim": [219, 221, 223, 224, 225, 227, 228, 229, 230, 232], "orthonorm": [219, 221, 223, 224, 225, 227, 228, 229, 230, 232, 247, 250], "frequenc": [220, 222, 231, 258, 262], "f": [220, 231], "window": [220, 231], "center": 222, "spectrum": 222, "swap": 222, "nyquist": [222, 231], "hermitian": [223, 227, 233, 237, 238], "symmetri": [223, 227], "decomposit": [233, 237, 246, 247, 250, 251, 257], "symmetr": [233, 237, 238], "mathbb": [233, 237, 238, 239, 247, 249, 250], "ll": 233, "h": [233, 237, 246, 250], "qquad": 233, "text": 233, "factor": [233, 250], "offset": [236, 253], "off": [236, 253], "eigenvalu": [237, 238, 257], "lambda": [237, 238], "orthogon": [237, 246, 247, 250, 257], "unitari": [237, 247, 250], "eigenvector": 237, "softwar": [237, 250, 260, 261, 263], "fact": [237, 250], "phi": [237, 250], "eig": [237, 257], "diag": [237, 250], "polynomi": [238, 261], "i_n": [238, 239], "eigval": [238, 257], "xx": 239, "ord": [241, 255], "fro": 241, "nuc": 241, "frobeniu": 241, "nuclear": 241, "singular": [241, 243, 246, 250, 251], "induc": 241, "rtol": [243, 246], "toler": [243, 246], "largest_singular_valu": [243, 246], "epsilon": [243, 246], "moor": 246, "penros": 246, "pseudo": 246, "sigma": [246, 250], "reciproc": 246, "tall": [247, 250], "geq": 247, "necessarili": [247, 264], "linearli": [247, 249, 261], "logabsdet": 248, "again": 248, "equat": 249, "coeffici": 249, "ordin": 249, "full_matric": 250, "u_k": 250, "v_k": 250, "vh": 250, "adjoint": 250, "l1": 255, "manhattan": 255, "l2": 255, "euclidean": 255, "coher": 256, "extension_nam": 256, "regular": [256, 258, 261], "__getattr__": 256, "endeavor": 257, "strai": 257, "far": 257, "restraint": 257, "decis": [257, 261], "accid": 257, "especi": 257, "arisen": 257, "been": [257, 261], "process": [257, 258, 262], "afford": 257, "opportun": 257, "subsequ": [257, 262], "codifi": [257, 262], "theme": 257, "abil": 257, "decim": 257, "overli": 257, "compel": 257, "compris": 257, "prudent": 257, "lastli": 257, "polymorph": 257, "dedic": 257, "eignvector": 257, "agnostic": 257, "eschew": 257, "parameter": 257, "bias": 257, "underpin": 257, "cater": 257, "low": 257, "verbatim": 257, "poor": 257, "uplo": 257, "dai": 257, "monopoli": 257, "prolifer": 257, "conserv": [257, 263], "conservat": 257, "delin": 257, "overlap": 257, "confus": [257, 261], "parsimoni": 257, "einsum": 257, "einstein": 257, "vdot": 257, "multi_dot": 257, "chain": 257, "exhibit": 257, "consolid": 257, "propos": [258, 262, 263], "com": [258, 264], "blob": 258, "master": 258, "process_docu": 258, "md": 258, "summari": [258, 262], "matur": 258, "reach": [258, 263], "final": 258, "world": 258, "highli": 258, "strong": 258, "updat": 258, "date": 258, "shall": [258, 260], "alpha": 258, "beta": 258, "rc": 258, "post": 258, "dev": 258, "bugfix": 258, "__version__": 258, "resembl": 258, "year": [258, 261], "evolut": [259, 261], "verif": [259, 261], "benchmark": 259, "changelog": 259, "licens": 259, "websit": 260, "repositori": [260, 262], "mit": 260, "copyright": 260, "2024": 260, "consortium": [260, 261], "contributor": 260, "permiss": 260, "herebi": 260, "grant": 260, "charg": 260, "person": 260, "file": [260, 262, 263, 264], "merg": [260, 261], "publish": [260, 262], "sublicens": 260, "sell": 260, "whom": 260, "furnish": 260, "notic": 260, "substanti": 260, "portion": 260, "THE": 260, "AS": 260, "warranti": 260, "OF": 260, "BUT": 260, "TO": 260, "merchant": 260, "FOR": 260, "noninfring": 260, "IN": 260, "NO": 260, "holder": 260, "BE": 260, "liabl": 260, "claim": 260, "damag": 260, "liabil": 260, "action": 260, "tort": 260, "WITH": 260, "wealth": 261, "scienc": 261, "deep": 261, "push": 261, "art": 261, "unintend": 261, "activ": 261, "creativ": 261, "fragment": 261, "multidimension": 261, "xarrai": [261, 262], "pick": 261, "bless": 261, "inconsist": 261, "obviou": 261, "mind": 261, "sure": 261, "rare": [261, 262], "unimport": 261, "scientif": 261, "mid": 261, "1990": 261, "earli": 261, "2000": 261, "numarrai": 261, "2005": 261, "superced": 261, "roughli": 261, "decad": 261, "past": 261, "mainli": 261, "rise": 261, "newer": 261, "inspir": [261, 263], "idea": 261, "seriou": 261, "grew": 261, "quickli": 261, "infeas": 261, "speed": 261, "innov": [261, 262], "group": 261, "assembl": 261, "draft": 261, "presenc": 261, "meta": 261, "concret": 261, "shown": 261, "core": [261, 263], "borrow": 261, "steep": 261, "switch": [261, 263], "accompani": 261, "actual": 261, "task": [261, 263], "schedul": 261, "characterist": 261, "grain": 261, "obstacl": 261, "cython": [261, 263], "datetim": 261, "void": 261, "uniformli": 261, "o": 261, "routin": 261, "bind": [261, 263], "cffi": 261, "ctype": 261, "ufunc": 261, "gufunc": 261, "extra": 261, "huge": 261, "amount": [261, 262, 263], "strength": 261, "advantag": 261, "foreign": 261, "indirect": 261, "program": 261, "pydata": 261, "weld": 261, "bohrium": 261, "arkouda": 261, "legat": 261, "grow": 261, "panda": [261, 262], "matplotlib": [261, 262], "networkx": 261, "xtensor": 261, "xnd": [261, 263], "stdlib": 261, "javascript": 261, "rust": 261, "rrai": 261, "nd4j": 261, "jvm": 261, "numsharp": 261, "dispatch": [261, 263], "pythran": 261, "transon": 261, "onnx": 261, "apach": 261, "tvm": 261, "mlir": 261, "taco": 261, "unumpi": [261, 263], "einop": 261, "arrow": 261, "consult": 261, "simplest": 261, "directli": [261, 263], "package_nam": 261, "uniform": 261, "hinder": 261, "inter": 261, "distinguish": 261, "is_array_api_obj": 261, "peopl": 261, "abc": 261, "inherit": 261, "isinst": 261, "prove": 261, "discov": 261, "assist": 261, "importlib": 261, "metadata": 261, "entry_point": 261, "dict": 261, "deprec": 261, "py3": 261, "supplant": 261, "load": 261, "path": 261, "haven": 261, "measur": 261, "isol": 261, "indispens": 261, "institut": 261, "electr": 261, "electron": 261, "engin": [261, 263], "york": 261, "scott": 261, "bradner": 261, "1997": 261, "word": 261, "2119": 261, "doi": 261, "17487": 261, "rfc2119": 261, "technic": 262, "vacuum": 262, "sometim": 262, "compet": 262, "friction": 262, "focu": 262, "accommod": [262, 263], "foo": 262, "bar": 262, "aspir": 262, "experiment": 262, "channel": 262, "resourc": [262, 263], "novel": 262, "thwart": 262, "reinvent": 262, "proverbi": 262, "wheel": 262, "foundat": 262, "articul": 262, "quantifi": 262, "analyz": 262, "ground": [262, 264], "empir": 262, "acquir": 262, "scrape": 262, "unifi": [262, 263], "extract": 262, "intersect": 262, "complement": 262, "suitabl": 262, "preval": 262, "eas": 262, "leverag": 262, "summar": 262, "tool": [262, 263], "explor": 262, "instrument": 262, "record": 262, "collect": 262, "json": 262, "human": 262, "docstr": 262, "_0": 262, "_arg": 262, "347": 262, "359": 262, "894": 262, "1173": 262, "skimag": 262, "174": 262, "sklearn": 262, "373": 262, "publicli": 262, "stori": 262, "broad": 262, "wider": 263, "wrap": 263, "familiar": 263, "survei": 263, "advanc": 263, "research": 263, "nsf": 263, "pain": 263, "brought": 263, "wish": 263, "multiprocess": 263, "shorten": 263, "fortran": 263, "easili": [263, 264], "pure": 263, "manual": 263, "Then": 263, "hoc": 263, "critic": 263, "corner": 263, "tractabl": 263, "spectral": 263, "periodogram": 263, "spectrogram": 263, "csd": 263, "welch": 263, "stft": 263, "istft": 263, "lombscargl": 263, "40": 263, "sai": [263, 264], "ineffici": 263, "x_np": 263, "asnumpi": 263, "freq": 263, "pxx": 263, "back": 263, "torch": 263, "littl": 263, "flexibl": 263, "py": [263, 264], "rearrang": 263, "_backend": 263, "glue": 263, "loc": 263, "some_func": 263, "get_backend": 263, "disappear": 263, "serv": 263, "50": 263, "tensorli": 263, "kera": 263, "eagerpi": 263, "notabl": 263, "suboptim": 263, "readili": 263, "cpyext": 263, "unsuccess": 263, "xla": 263, "vta": 263, "jump": 263, "hoop": 263, "attain": 263, "got": 263, "cfunc": 263, "np": 263, "assert_array_almost_equ": 263, "pyfunc": 263, "pyarray_cancastarrayto": 263, "assertequ": 263, "spec": 264, "clone": 264, "repo": 264, "pip": 264, "pytest": 264, "hypothesi": 264, "conda": 264, "array_api_tests_modul": 264, "edit": 264, "array_api_test": 264, "_array_modul": 264, "array_modul": 264, "command": 264, "asid": 264, "vendor": 264, "readm": 264}, "objects": {"array_api": [[8, 0, 1, "", "__array_api_version__"], [9, 1, 1, "", "abs"], [10, 1, 1, "", "acos"], [11, 1, 1, "", "acosh"], [12, 1, 1, "", "add"], [13, 1, 1, "", "all"], [14, 1, 1, "", "any"], [15, 1, 1, "", "arange"], [16, 1, 1, "", "argmax"], [17, 1, 1, "", "argmin"], [18, 1, 1, "", "argsort"], [60, 1, 1, "", "asarray"], [61, 1, 1, "", "asin"], [62, 1, 1, "", "asinh"], [63, 1, 1, "", "astype"], [64, 1, 1, "", "atan"], [65, 1, 1, "", "atan2"], [66, 1, 1, "", "atanh"], [67, 1, 1, "", "bitwise_and"], [68, 1, 1, "", "bitwise_invert"], [69, 1, 1, "", "bitwise_left_shift"], [70, 1, 1, "", "bitwise_or"], [71, 1, 1, "", "bitwise_right_shift"], [72, 1, 1, "", "bitwise_xor"], [73, 1, 1, "", "broadcast_arrays"], [74, 1, 1, "", "broadcast_to"], [75, 1, 1, "", "can_cast"], [76, 1, 1, "", "ceil"], [77, 1, 1, "", "clip"], [78, 1, 1, "", "concat"], [79, 1, 1, "", "conj"], [85, 1, 1, "", "copysign"], [86, 1, 1, "", "cos"], [87, 1, 1, "", "cosh"], [88, 1, 1, "", "cumulative_sum"], [90, 1, 1, "", "divide"], [91, 1, 1, "", "empty"], [92, 1, 1, "", "empty_like"], [93, 1, 1, "", "equal"], [94, 1, 1, "", "exp"], [95, 1, 1, "", "expand_dims"], [96, 1, 1, "", "expm1"], [97, 1, 1, "", "eye"], [98, 1, 1, "", "finfo"], [99, 1, 1, "", "flip"], [100, 1, 1, "", "floor"], [101, 1, 1, "", "floor_divide"], [102, 1, 1, "", "from_dlpack"], [103, 1, 1, "", "full"], [104, 1, 1, "", "full_like"], [105, 1, 1, "", "greater"], [106, 1, 1, "", "greater_equal"], [107, 1, 1, "", "hypot"], [108, 1, 1, "", "iinfo"], [109, 1, 1, "", "imag"], [116, 1, 1, "", "isdtype"], [117, 1, 1, "", "isfinite"], [118, 1, 1, "", "isinf"], [119, 1, 1, "", "isnan"], [120, 1, 1, "", "less"], [121, 1, 1, "", "less_equal"], [122, 1, 1, "", "linspace"], [123, 1, 1, "", "log"], [124, 1, 1, "", "log10"], [125, 1, 1, "", "log1p"], [126, 1, 1, "", "log2"], [127, 1, 1, "", "logaddexp"], [128, 1, 1, "", "logical_and"], [129, 1, 1, "", "logical_not"], [130, 1, 1, "", "logical_or"], [131, 1, 1, "", "logical_xor"], [132, 1, 1, "", "matmul"], [133, 1, 1, "", "matrix_transpose"], [134, 1, 1, "", "max"], [135, 1, 1, "", "maximum"], [136, 1, 1, "", "mean"], [137, 1, 1, "", "meshgrid"], [138, 1, 1, "", "min"], [139, 1, 1, "", "minimum"], [140, 1, 1, "", "moveaxis"], [141, 1, 1, "", "multiply"], [142, 1, 1, "", "negative"], [143, 1, 1, "", "nextafter"], [144, 1, 1, "", "nonzero"], [145, 1, 1, "", "not_equal"], [146, 1, 1, "", "ones"], [147, 1, 1, "", "ones_like"], [148, 1, 1, "", "permute_dims"], [149, 1, 1, "", "positive"], [150, 1, 1, "", "pow"], [151, 1, 1, "", "prod"], [152, 1, 1, "", "real"], [153, 1, 1, "", "remainder"], [154, 1, 1, "", "repeat"], [155, 1, 1, "", "reshape"], [156, 1, 1, "", "result_type"], [157, 1, 1, "", "roll"], [158, 1, 1, "", "round"], [159, 1, 1, "", "searchsorted"], [160, 1, 1, "", "sign"], [161, 1, 1, "", "signbit"], [162, 1, 1, "", "sin"], [163, 1, 1, "", "sinh"], [164, 1, 1, "", "sort"], [165, 1, 1, "", "sqrt"], [166, 1, 1, "", "square"], [167, 1, 1, "", "squeeze"], [168, 1, 1, "", "stack"], [169, 1, 1, "", "std"], [170, 1, 1, "", "subtract"], [171, 1, 1, "", "sum"], [172, 1, 1, "", "take"], [173, 1, 1, "", "tan"], [174, 1, 1, "", "tanh"], [175, 1, 1, "", "tensordot"], [176, 1, 1, "", "tile"], [177, 1, 1, "", "tril"], [178, 1, 1, "", "triu"], [179, 1, 1, "", "trunc"], [180, 1, 1, "", "unique_all"], [181, 1, 1, "", "unique_counts"], [182, 1, 1, "", "unique_inverse"], [183, 1, 1, "", "unique_values"], [184, 1, 1, "", "unstack"], [185, 1, 1, "", "var"], [186, 1, 1, "", "vecdot"], [187, 1, 1, "", "where"], [188, 1, 1, "", "zeros"], [189, 1, 1, "", "zeros_like"]], "array_api.array": [[19, 2, 1, "", "T"], [20, 3, 1, "", "__abs__"], [21, 3, 1, "", "__add__"], [22, 3, 1, "", "__and__"], [23, 3, 1, "", "__array_namespace__"], [24, 3, 1, "", "__bool__"], [25, 3, 1, "", "__complex__"], [26, 3, 1, "", "__dlpack__"], [27, 3, 1, "", "__dlpack_device__"], [28, 3, 1, "", "__eq__"], [29, 3, 1, "", "__float__"], [30, 3, 1, "", "__floordiv__"], [31, 3, 1, "", "__ge__"], [32, 3, 1, "", "__getitem__"], [33, 3, 1, "", "__gt__"], [34, 3, 1, "", "__index__"], [35, 3, 1, "", "__int__"], [36, 3, 1, "", "__invert__"], [37, 3, 1, "", "__le__"], [38, 3, 1, "", "__lshift__"], [39, 3, 1, "", "__lt__"], [40, 3, 1, "", "__matmul__"], [41, 3, 1, "", "__mod__"], [42, 3, 1, "", "__mul__"], [43, 3, 1, "", "__ne__"], [44, 3, 1, "", "__neg__"], [45, 3, 1, "", "__or__"], [46, 3, 1, "", "__pos__"], [47, 3, 1, "", "__pow__"], [48, 3, 1, "", "__rshift__"], [49, 3, 1, "", "__setitem__"], [50, 3, 1, "", "__sub__"], [51, 3, 1, "", "__truediv__"], [52, 3, 1, "", "__xor__"], [53, 2, 1, "", "device"], [54, 2, 1, "", "dtype"], [55, 2, 1, "", "mT"], [56, 2, 1, "", "ndim"], [57, 2, 1, "", "shape"], [58, 2, 1, "", "size"], [59, 3, 1, "", "to_device"]], "array_api.constants": [[80, 0, 1, "", "e"], [81, 0, 1, "", "inf"], [82, 0, 1, "", "nan"], [83, 0, 1, "", "newaxis"], [84, 0, 1, "", "pi"]], "array_api.data_types": [[89, 1, 1, "", "__eq__"]], "array_api.fft": [[219, 1, 1, "", "fft"], [220, 1, 1, "", "fftfreq"], [221, 1, 1, "", "fftn"], [222, 1, 1, "", "fftshift"], [223, 1, 1, "", "hfft"], [224, 1, 1, "", "ifft"], [225, 1, 1, "", "ifftn"], [226, 1, 1, "", "ifftshift"], [227, 1, 1, "", "ihfft"], [228, 1, 1, "", "irfft"], [229, 1, 1, "", "irfftn"], [230, 1, 1, "", "rfft"], [231, 1, 1, "", "rfftfreq"], [232, 1, 1, "", "rfftn"]], "array_api.info": [[110, 1, 1, "", "__array_namespace_info__"], [111, 1, 1, "", "capabilities"], [112, 1, 1, "", "default_device"], [113, 1, 1, "", "default_dtypes"], [114, 1, 1, "", "devices"], [115, 1, 1, "", "dtypes"]], "array_api.linalg": [[233, 1, 1, "", "cholesky"], [234, 1, 1, "", "cross"], [235, 1, 1, "", "det"], [236, 1, 1, "", "diagonal"], [237, 1, 1, "", "eigh"], [238, 1, 1, "", "eigvalsh"], [239, 1, 1, "", "inv"], [240, 1, 1, "", "matmul"], [241, 1, 1, "", "matrix_norm"], [242, 1, 1, "", "matrix_power"], [243, 1, 1, "", "matrix_rank"], [244, 1, 1, "", "matrix_transpose"], [245, 1, 1, "", "outer"], [246, 1, 1, "", "pinv"], [247, 1, 1, "", "qr"], [248, 1, 1, "", "slogdet"], [249, 1, 1, "", "solve"], [250, 1, 1, "", "svd"], [251, 1, 1, "", "svdvals"], [252, 1, 1, "", "tensordot"], [253, 1, 1, "", "trace"], [254, 1, 1, "", "vecdot"], [255, 1, 1, "", "vector_norm"]]}, "objtypes": {"0": "py:data", "1": "py:function", "2": "py:property", "3": "py:method"}, "objnames": {"0": ["py", "data", "Python data"], "1": ["py", "function", "Python function"], "2": ["py", "property", "Python property"], "3": ["py", "method", "Python method"]}, "titleterms": {"arrai": [0, 191, 200, 259, 261, 263], "object": [0, 2, 3, 4, 5, 6, 192, 193, 194, 195, 196, 197, 198, 199, 201, 202, 218, 257, 261], "oper": [0, 207], "arithmet": [0, 207], "bitwis": 0, "comparison": 0, "In": [0, 1, 261], "place": [0, 1], "reflect": 0, "attribut": 0, "method": [0, 7], "broadcast": 1, "overview": 1, "algorithm": 1, "exampl": [1, 206], "semant": [1, 212], "constant": 2, "api": [2, 3, 4, 6, 190, 192, 193, 194, 195, 196, 197, 198, 199, 201, 202, 205, 206, 218, 257, 258, 259, 261, 263], "creation": 3, "function": [3, 4, 6, 7, 192, 194, 195, 196, 197, 198, 199, 201, 207, 218], "data": [4, 5, 144, 154, 180, 181, 182, 183, 191, 205, 210, 211, 262], "type": [4, 5, 200, 205, 217, 263], "us": [5, 203, 206, 211, 262, 263], "default": 5, "categori": 5, "element": 6, "wise": 6, "signatur": 7, "__array_api_version__": 8, "ab": 9, "aco": 10, "acosh": 11, "add": [12, 263], "all": 13, "ani": 14, "arang": 15, "argmax": 16, "argmin": 17, "argsort": 18, "t": 19, "__abs__": 20, "__add__": 21, "__and__": 22, "__array_namespace__": 23, "__bool__": 24, "__complex__": 25, "__dlpack__": 26, "tip": [26, 60], "__dlpack_device__": 27, "__eq__": [28, 89], "__float__": 29, "__floordiv__": 30, "__ge__": 31, "__getitem__": 32, "__gt__": 33, "__index__": 34, "__int__": 35, "__invert__": 36, "__le__": 37, "__lshift__": 38, "__lt__": 39, "__matmul__": 40, "__mod__": 41, "__mul__": 42, "__ne__": 43, "__neg__": 44, "__or__": 45, "__pos__": 46, "__pow__": 47, "__rshift__": 48, "__setitem__": 49, "__sub__": 50, "__truediv__": 51, "__xor__": 52, "devic": [53, 114, 206, 212], "dtype": [54, 115], "mt": 55, "ndim": 56, "shape": [57, 144, 154, 180, 181, 182, 183, 191, 210], "size": 58, "to_devic": 59, "asarrai": 60, "note": [60, 102, 122, 200], "asin": 61, "asinh": 62, "astyp": 63, "atan": 64, "atan2": 65, "atanh": 66, "bitwise_and": 67, "bitwise_invert": 68, "bitwise_left_shift": 69, "bitwise_or": 70, "bitwise_right_shift": 71, "bitwise_xor": 72, "broadcast_arrai": 73, "broadcast_to": 74, "can_cast": 75, "ceil": 76, "clip": 77, "concat": 78, "conj": 79, "e": 80, "inf": 81, "nan": 82, "newaxi": 83, "pi": 84, "copysign": 85, "co": 86, "cosh": 87, "cumulative_sum": 88, "divid": 90, "empti": 91, "empty_lik": 92, "equal": 93, "exp": 94, "expand_dim": 95, "expm1": 96, "ey": 97, "finfo": 98, "flip": 99, "floor": 100, "floor_divid": 101, "from_dlpack": 102, "full": 103, "full_lik": 104, "greater": 105, "greater_equ": 106, "hypot": 107, "iinfo": 108, "imag": 109, "__array_namespace_info__": 110, "capabl": 111, "default_devic": 112, "default_dtyp": 113, "isdtyp": 116, "isfinit": 117, "isinf": 118, "isnan": 119, "less": 120, "less_equ": 121, "linspac": 122, "log": 123, "log10": 124, "log1p": 125, "log2": 126, "logaddexp": 127, "logical_and": 128, "logical_not": 129, "logical_or": 130, "logical_xor": 131, "matmul": [132, 240], "matrix_transpos": [133, 244], "max": 134, "maximum": 135, "mean": 136, "meshgrid": 137, "min": 138, "minimum": 139, "moveaxi": 140, "multipli": 141, "neg": 142, "nextaft": 143, "nonzero": 144, "depend": [144, 154, 180, 181, 182, 183, 191, 203, 210], "output": [144, 154, 180, 181, 182, 183, 191, 210], "not_equ": 145, "ones": 146, "ones_lik": 147, "permute_dim": 148, "posit": 149, "pow": 150, "prod": 151, "real": 152, "remaind": 153, "repeat": 154, "reshap": 155, "result_typ": 156, "roll": 157, "round": 158, "searchsort": 159, "sign": [160, 200], "signbit": 161, "sin": 162, "sinh": 163, "sort": [164, 198], "sqrt": 165, "squar": 166, "squeez": 167, "stack": 168, "std": 169, "subtract": 170, "sum": 171, "take": 172, "tan": 173, "tanh": 174, "tensordot": [175, 252], "tile": 176, "tril": 177, "triu": 178, "trunc": 179, "unique_al": 180, "unique_count": 181, "unique_invers": 182, "unique_valu": 183, "unstack": 184, "var": 185, "vecdot": [186, 254], "where": 187, "zero": 188, "zeros_lik": 189, "specif": 190, "index": [191, 192], "singl": 191, "axi": 191, "slice": 191, "syntax": [191, 212], "multi": 191, "boolean": 191, "return": 191, "valu": [191, 208], "inspect": [193, 205], "linear": [194, 207, 257], "algebra": [194, 207, 257], "manipul": 195, "search": 196, "set": 197, "statist": [199, 207], "promot": [200, 208], "rule": 200, "integ": 200, "tabl": 200, "unsign": 200, "mix": 200, "float": 200, "point": 200, "python": [200, 206, 259, 263], "scalar": 200, "util": 201, "version": [202, 205, 258], "assumpt": 203, "hardwar": [203, 263], "softwar": 203, "environ": 203, "backward": [203, 258], "compat": [203, 258], "product": 203, "code": [203, 206], "interact": 203, "benchmark": 204, "suit": [204, 264], "changelog": 205, "per": 205, "standard": [205, 206, 258, 259, 261], "v2023": 205, "12": 205, "updat": 205, "norm": [205, 261], "extens": [205, 206, 218, 256, 257, 258], "addit": 205, "break": 205, "chang": 205, "errata": 205, "v2022": 205, "complex": [205, 208], "number": [205, 206, 208], "support": [205, 206, 211, 212, 263], "c": 206, "situat": 206, "cython": 206, "usag": [206, 212, 218, 257, 259, 262], "1": [206, 263], "packag": 206, "i": 206, "mostli": 206, "pure": 206, "limit": 206, "2": [206, 263], "contain": 206, "lot": 206, "3": [206, 263], "numpi": 206, "directli": 206, "other": [206, 259], "longer": 206, "term": [206, 261], "approach": 206, "further": 206, "hpy": 206, "accuraci": 207, "mathemat": 207, "The": 208, "plane": 208, "branch": 208, "cut": 208, "order": 208, "base": 208, "copi": 209, "view": 209, "behaviour": 209, "mutabl": 209, "mutat": 209, "interchang": 211, "mechan": 211, "dlpack": 211, "an": [211, 261], "memori": 211, "tensor": 211, "structur": 211, "non": [211, 261], "case": [211, 263], "intend": 212, "assign": 212, "out": [212, 261], "scope": [212, 258, 261], "except": 213, "design": [214, 257, 262], "topic": 214, "constraint": 214, "lazi": 215, "v": 215, "eager": 215, "execut": 215, "parallel": 216, "static": 217, "fourier": 218, "transform": 218, "name": [218, 257], "fft": 219, "fftfreq": 220, "fftn": 221, "fftshift": 222, "hfft": 223, "ifft": 224, "ifftn": 225, "ifftshift": 226, "ihfft": 227, "irfft": 228, "irfftn": 229, "rfft": 230, "rfftfreq": 231, "rfftn": 232, "choleski": 233, "cross": 234, "det": 235, "diagon": 236, "eigh": 237, "eigvalsh": 238, "inv": 239, "matrix_norm": 241, "matrix_pow": 242, "matrix_rank": 243, "outer": 245, "pinv": 246, "qr": 247, "slogdet": 248, "solv": 249, "svd": 250, "svdval": 251, "trace": 253, "vector_norm": 255, "modul": 256, "principl": 257, "futur": 258, "evolut": 258, "content": 259, "context": 259, "methodologi": 259, "licens": 260, "purpos": 261, "introduct": [261, 262], "thi": 261, "histori": 261, "includ": 261, "goal": 261, "implic": 261, "stakehold": 261, "how": 261, "read": 261, "document": 261, "adopt": 261, "check": 261, "complianc": 261, "discover": 261, "conform": [261, 264], "implement": 261, "option": 261, "featur": 261, "definit": 261, "refer": 261, "decis": 262, "make": [262, 263], "concret": 263, "acceler": 263, "distribut": 263, "scipi": 263, "simplifi": 263, "einop": 263, "remov": 263, "backend": 263, "system": 263, "ad": 263, "xtensor": 263, "4": 263, "jit": 263, "compil": 263, "comput": 263, "easier": 263, "more": 263, "robust": 263, "verif": 264, "test": 264, "measur": 264, "run": 264}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.todo": 2, "sphinx": 60}, "alltitles": {"Array object": [[0, "array-object"]], "Operators": [[0, "operators"]], "Arithmetic Operators": [[0, "arithmetic-operators"], [0, "id26"], [0, "id29"]], "Array Operators": [[0, "array-operators"], [0, "id27"], [0, "id30"]], "Bitwise Operators": [[0, "bitwise-operators"], [0, "id28"], [0, "id31"]], "Comparison Operators": [[0, "comparison-operators"]], "In-place Operators": [[0, "in-place-operators"]], "Reflected Operators": [[0, "reflected-operators"]], "Attributes": [[0, "attributes"]], "Methods": [[0, "methods"]], "Broadcasting": [[1, "broadcasting"]], "Overview": [[1, "overview"]], "Algorithm": [[1, "algorithm"]], "Examples": [[1, "examples"]], "In-place Semantics": [[1, "in-place-semantics"]], "Constants": [[2, "constants"]], "Objects in API": [[2, "objects-in-api"], [3, "objects-in-api"], [4, "objects-in-api"], [6, "objects-in-api"], [192, "objects-in-api"], [193, "objects-in-api"], [194, "objects-in-api"], [195, "objects-in-api"], [196, "objects-in-api"], [197, "objects-in-api"], [198, "objects-in-api"], [199, "objects-in-api"], [201, "objects-in-api"], [202, "objects-in-api"], [218, "objects-in-api"], [257, "objects-in-api"]], "Creation Functions": [[3, "creation-functions"]], "Data Type Functions": [[4, "data-type-functions"]], "Data Types": [[5, "data-types"], [205, "data-types"]], "Use of data type objects": [[5, "use-of-data-type-objects"]], "Default Data Types": [[5, "default-data-types"]], "Data Type Categories": [[5, "data-type-categories"]], "Element-wise Functions": [[6, "element-wise-functions"]], "Function and method signatures": [[7, "function-and-method-signatures"]], "__array_api_version__": [[8, "array-api-version"]], "abs": [[9, "abs"]], "acos": [[10, "acos"]], "acosh": [[11, "acosh"]], "add": [[12, "add"]], "all": [[13, "all"]], "any": [[14, "any"]], "arange": [[15, "arange"]], "argmax": [[16, "argmax"]], "argmin": [[17, "argmin"]], "argsort": [[18, "argsort"]], "T": [[19, "t"]], "__abs__": [[20, "abs"]], "__add__": [[21, "add"]], "__and__": [[22, "and"]], "__array_namespace__": [[23, "array-namespace"]], "__bool__": [[24, "bool"]], "__complex__": [[25, "complex"]], "__dlpack__": [[26, "dlpack"]], "Tip": [[26, null], [60, null]], "__dlpack_device__": [[27, "dlpack-device"]], "__eq__": [[28, "eq"], [89, "eq"]], "__float__": [[29, "float"]], "__floordiv__": [[30, "floordiv"]], "__ge__": [[31, "ge"]], "__getitem__": [[32, "getitem"]], "__gt__": [[33, "gt"]], "__index__": [[34, "index"]], "__int__": [[35, "int"]], "__invert__": [[36, "invert"]], "__le__": [[37, "le"]], "__lshift__": [[38, "lshift"]], "__lt__": [[39, "lt"]], "__matmul__": [[40, "matmul"]], "__mod__": [[41, "mod"]], "__mul__": [[42, "mul"]], "__ne__": [[43, "ne"]], "__neg__": [[44, "neg"]], "__or__": [[45, "or"]], "__pos__": [[46, "pos"]], "__pow__": [[47, "pow"]], "__rshift__": [[48, "rshift"]], "__setitem__": [[49, "setitem"]], "__sub__": [[50, "sub"]], "__truediv__": [[51, "truediv"]], "__xor__": [[52, "xor"]], "device": [[53, "device"]], "dtype": [[54, "dtype"]], "mT": [[55, "mt"]], "ndim": [[56, "ndim"]], "shape": [[57, "shape"]], "size": [[58, "size"]], "to_device": [[59, "to-device"]], "asarray": [[60, "asarray"]], "Note": [[60, null], [102, null], [122, null]], "asin": [[61, "asin"]], "asinh": [[62, "asinh"]], "astype": [[63, "astype"]], "atan": [[64, "atan"]], "atan2": [[65, "atan2"]], "atanh": [[66, "atanh"]], "bitwise_and": [[67, "bitwise-and"]], "bitwise_invert": [[68, "bitwise-invert"]], "bitwise_left_shift": [[69, "bitwise-left-shift"]], "bitwise_or": [[70, "bitwise-or"]], "bitwise_right_shift": [[71, "bitwise-right-shift"]], "bitwise_xor": [[72, "bitwise-xor"]], "broadcast_arrays": [[73, "broadcast-arrays"]], "broadcast_to": [[74, "broadcast-to"]], "can_cast": [[75, "can-cast"]], "ceil": [[76, "ceil"]], "clip": [[77, "clip"]], "concat": [[78, "concat"]], "conj": [[79, "conj"]], "e": [[80, "e"]], "inf": [[81, "inf"]], "nan": [[82, "nan"]], "newaxis": [[83, "newaxis"]], "pi": [[84, "pi"]], "copysign": [[85, "copysign"]], "cos": [[86, "cos"]], "cosh": [[87, "cosh"]], "cumulative_sum": [[88, "cumulative-sum"]], "divide": [[90, "divide"]], "empty": [[91, "empty"]], "empty_like": [[92, "empty-like"]], "equal": [[93, "equal"]], "exp": [[94, "exp"]], "expand_dims": [[95, "expand-dims"]], "expm1": [[96, "expm1"]], "eye": [[97, "eye"]], "finfo": [[98, "finfo"]], "flip": [[99, "flip"]], "floor": [[100, "floor"]], "floor_divide": [[101, "floor-divide"]], "from_dlpack": [[102, "from-dlpack"]], "full": [[103, "full"]], "full_like": [[104, "full-like"]], "greater": [[105, "greater"]], "greater_equal": [[106, "greater-equal"]], "hypot": [[107, "hypot"]], "iinfo": [[108, "iinfo"]], "imag": [[109, "imag"]], "__array_namespace_info__": [[110, "array-namespace-info"]], "capabilities": [[111, "capabilities"]], "default_device": [[112, "default-device"]], "default_dtypes": [[113, "default-dtypes"]], "devices": [[114, "devices"]], "dtypes": [[115, "dtypes"]], "isdtype": [[116, "isdtype"]], "isfinite": [[117, "isfinite"]], "isinf": [[118, "isinf"]], "isnan": [[119, "isnan"]], "less": [[120, "less"]], "less_equal": [[121, "less-equal"]], "linspace": [[122, "linspace"]], "log": [[123, "log"]], "log10": [[124, "log10"]], "log1p": [[125, "log1p"]], "log2": [[126, "log2"]], "logaddexp": [[127, "logaddexp"]], "logical_and": [[128, "logical-and"]], "logical_not": [[129, "logical-not"]], "logical_or": [[130, "logical-or"]], "logical_xor": [[131, "logical-xor"]], "matmul": [[132, "matmul"], [240, "matmul"]], "matrix_transpose": [[133, "matrix-transpose"], [244, "matrix-transpose"]], "max": [[134, "max"]], "maximum": [[135, "maximum"]], "mean": [[136, "mean"]], "meshgrid": [[137, "meshgrid"]], "min": [[138, "min"]], "minimum": [[139, "minimum"]], "moveaxis": [[140, "moveaxis"]], "multiply": [[141, "multiply"]], "negative": [[142, "negative"]], "nextafter": [[143, "nextafter"]], "nonzero": [[144, "nonzero"]], "Data-dependent output shape": [[144, null], [154, null], [180, null], [181, null], [182, null], [183, null], [191, null], [210, null]], "not_equal": [[145, "not-equal"]], "ones": [[146, "ones"]], "ones_like": [[147, "ones-like"]], "permute_dims": [[148, "permute-dims"]], "positive": [[149, "positive"]], "pow": [[150, "pow"]], "prod": [[151, "prod"]], "real": [[152, "real"]], "remainder": [[153, "remainder"]], "repeat": [[154, "repeat"]], "reshape": [[155, "reshape"]], "result_type": [[156, "result-type"]], "roll": [[157, "roll"]], "round": [[158, "round"]], "searchsorted": [[159, "searchsorted"]], "sign": [[160, "sign"]], "signbit": [[161, "signbit"]], "sin": [[162, "sin"]], "sinh": [[163, "sinh"]], "sort": [[164, "sort"]], "sqrt": [[165, "sqrt"]], "square": [[166, "square"]], "squeeze": [[167, "squeeze"]], "stack": [[168, "stack"]], "std": [[169, "std"]], "subtract": [[170, "subtract"]], "sum": [[171, "sum"]], "take": [[172, "take"]], "tan": [[173, "tan"]], "tanh": [[174, "tanh"]], "tensordot": [[175, "tensordot"], [252, "tensordot"]], "tile": [[176, "tile"]], "tril": [[177, "tril"]], "triu": [[178, "triu"]], "trunc": [[179, "trunc"]], "unique_all": [[180, "unique-all"]], "unique_counts": [[181, "unique-counts"]], "unique_inverse": [[182, "unique-inverse"]], "unique_values": [[183, "unique-values"]], "unstack": [[184, "unstack"]], "var": [[185, "var"]], "vecdot": [[186, "vecdot"], [254, "vecdot"]], "where": [[187, "where"]], "zeros": [[188, "zeros"]], "zeros_like": [[189, "zeros-like"]], "API specification": [[190, "api-specification"], [190, null]], "Indexing": [[191, "indexing"]], "Single-axis Indexing": [[191, "single-axis-indexing"]], "Slice Syntax": [[191, "slice-syntax"]], "Multi-axis Indexing": [[191, "multi-axis-indexing"]], "Boolean Array Indexing": [[191, "boolean-array-indexing"]], "Return Values": [[191, "return-values"]], "Indexing Functions": [[192, "indexing-functions"]], "Inspection": [[193, "inspection"]], "Inspection APIs": [[193, "inspection-apis"], [205, "inspection-apis"]], "Linear Algebra Functions": [[194, "linear-algebra-functions"]], "Manipulation Functions": [[195, "manipulation-functions"]], "Searching Functions": [[196, "searching-functions"]], "Set Functions": [[197, "set-functions"]], "Sorting Functions": [[198, "sorting-functions"]], "Statistical Functions": [[199, "statistical-functions"], [207, "statistical-functions"]], "Type Promotion Rules": [[200, "type-promotion-rules"]], "Rules": [[200, "rules"]], "Signed integer type promotion table": [[200, "signed-integer-type-promotion-table"]], "Unsigned integer type promotion table": [[200, "unsigned-integer-type-promotion-table"]], "Mixed unsigned and signed integer type promotion table": [[200, "mixed-unsigned-and-signed-integer-type-promotion-table"]], "Floating-point type promotion table": [[200, "floating-point-type-promotion-table"]], "Notes": [[200, "notes"]], "Mixing arrays with Python scalars": [[200, "mixing-arrays-with-python-scalars"]], "Utility Functions": [[201, "utility-functions"]], "Version": [[202, "version"]], "Assumptions": [[203, "assumptions"]], "Hardware and software environments": [[203, "hardware-and-software-environments"]], "Dependencies": [[203, "dependencies"]], "Backwards compatibility": [[203, "backwards-compatibility"], [258, "backwards-compatibility"]], "Production code & interactive use": [[203, "production-code-interactive-use"]], "Benchmark suite": [[204, "benchmark-suite"]], "Changelog per API standard version": [[205, "changelog-per-api-standard-version"]], "Changelog": [[205, "changelog"]], "v2023.12": [[205, "v2023-12"]], "Updates": [[205, "updates"], [205, "id3"]], "Normative": [[205, "normative"]], "APIs": [[205, "apis"], [205, "id1"], [205, "id4"], [205, "id8"]], "Extensions": [[205, "extensions"], [205, "id2"], [205, "id5"], [205, "id9"], [256, "extensions"]], "Additions": [[205, "additions"], [205, "id7"]], "Breaking Changes": [[205, "breaking-changes"]], "Errata": [[205, "errata"], [205, "id10"]], "v2022.12": [[205, "v2022-12"]], "Complex Number Support": [[205, "complex-number-support"], [205, "id6"]], "C API": [[206, "c-api"]], "Example situations for C/Cython usage": [[206, "example-situations-for-c-cython-usage"]], "Situation 1: a Python package that is mostly pure Python, with a limited number of Cython extensions": [[206, "situation-1-a-python-package-that-is-mostly-pure-python-with-a-limited-number-of-cython-extensions"]], "Situation 2: a Python package that contains a lot of Cython code": [[206, "situation-2-a-python-package-that-contains-a-lot-of-cython-code"]], "Situation 3: a Python package that uses the NumPy or Python C API directly": [[206, "situation-3-a-python-package-that-uses-the-numpy-or-python-c-api-directly"]], "Device support": [[206, "device-support"], [212, "device-support"]], "Other longer-term approaches": [[206, "other-longer-term-approaches"]], "Further Python API standardization": [[206, "further-python-api-standardization"]], "HPy": [[206, "hpy"]], "Accuracy": [[207, "accuracy"]], "Arithmetic Operations": [[207, "arithmetic-operations"]], "Mathematical Functions": [[207, "mathematical-functions"]], "Linear Algebra": [[207, "linear-algebra"]], "Complex Numbers": [[208, "complex-numbers"]], "The Complex Plane": [[208, "the-complex-plane"]], "Branch Cuts": [[208, "branch-cuts"]], "Complex Number Ordering": [[208, "complex-number-ordering"]], "Valued-based Promotion": [[208, "valued-based-promotion"]], "Copy-view behaviour and mutability": [[209, "copy-view-behaviour-and-mutability"]], "Mutating views": [[209, null]], "Data-dependent output shapes": [[210, "data-dependent-output-shapes"]], "Data interchange mechanisms": [[211, "data-interchange-mechanisms"]], "DLPack: An in-memory tensor structure": [[211, "dlpack-an-in-memory-tensor-structure"]], "Non-supported use cases": [[211, "non-supported-use-cases"]], "Intended usage": [[212, "intended-usage"]], "Syntax for device assignment": [[212, "syntax-for-device-assignment"]], "Semantics": [[212, "semantics"]], "Out of scope for device support": [[212, "out-of-scope-for-device-support"]], "Exceptions": [[213, "exceptions"]], "Design topics & constraints": [[214, "design-topics-constraints"], [214, null]], "Lazy vs. eager execution": [[215, "lazy-vs-eager-execution"]], "Parallelism": [[216, "parallelism"]], "Static typing": [[217, "static-typing"]], "Fourier transform Functions": [[218, "fourier-transform-functions"]], "Extension name and usage": [[218, "extension-name-and-usage"], [257, "extension-name-and-usage"]], "fft": [[219, "fft"]], "fftfreq": [[220, "fftfreq"]], "fftn": [[221, "fftn"]], "fftshift": [[222, "fftshift"]], "hfft": [[223, "hfft"]], "ifft": [[224, "ifft"]], "ifftn": [[225, "ifftn"]], "ifftshift": [[226, "ifftshift"]], "ihfft": [[227, "ihfft"]], "irfft": [[228, "irfft"]], "irfftn": [[229, "irfftn"]], "rfft": [[230, "rfft"]], "rfftfreq": [[231, "rfftfreq"]], "rfftn": [[232, "rfftn"]], "cholesky": [[233, "cholesky"]], "cross": [[234, "cross"]], "det": [[235, "det"]], "diagonal": [[236, "diagonal"]], "eigh": [[237, "eigh"]], "eigvalsh": [[238, "eigvalsh"]], "inv": [[239, "inv"]], "matrix_norm": [[241, "matrix-norm"]], "matrix_power": [[242, "matrix-power"]], "matrix_rank": [[243, "matrix-rank"]], "outer": [[245, "outer"]], "pinv": [[246, "pinv"]], "qr": [[247, "qr"]], "slogdet": [[248, "slogdet"]], "solve": [[249, "solve"]], "svd": [[250, "svd"]], "svdvals": [[251, "svdvals"]], "trace": [[253, "trace"]], "vector_norm": [[255, "vector-norm"]], "Extension modules:": [[256, null]], "Linear Algebra Extension": [[257, "linear-algebra-extension"]], "Design Principles": [[257, "design-principles"]], "Future API standard evolution": [[258, "future-api-standard-evolution"]], "Scope extensions": [[258, "scope-extensions"]], "Versioning": [[258, "versioning"]], "Python array API standard": [[259, "python-array-api-standard"]], "Contents": [[259, "contents"]], "Context": [[259, null]], "API": [[259, null]], "Methodology and Usage": [[259, null]], "Other": [[259, null]], "License": [[260, "license"]], "Purpose and scope": [[261, "purpose-and-scope"]], "Introduction": [[261, "introduction"], [262, "introduction"]], "This API standard": [[261, "this-api-standard"]], "History": [[261, "history"]], "Scope (includes out-of-scope / non-goals)": [[261, "scope-includes-out-of-scope-non-goals"]], "In scope": [[261, "in-scope"]], "Out of scope": [[261, "out-of-scope"]], "Implications of in/out of scope": [[261, "implications-of-in-out-of-scope"]], "Stakeholders": [[261, "stakeholders"]], "How to read this document": [[261, "how-to-read-this-document"]], "How to adopt this API": [[261, "how-to-adopt-this-api"]], "Checking an array object for Compliance": [[261, "checking-an-array-object-for-compliance"]], "Discoverability of conforming implementations": [[261, "discoverability-of-conforming-implementations"]], "Optional feature": [[261, null]], "Conformance": [[261, "conformance"]], "Terms and Definitions": [[261, "terms-and-definitions"]], "Normative References": [[261, "normative-references"]], "Usage Data": [[262, "usage-data"]], "Design": [[262, "design"]], "Usage": [[262, "usage"]], "Use in Decision-Making": [[262, "use-in-decision-making"]], "Use cases": [[263, "use-cases"]], "Types of use cases": [[263, "types-of-use-cases"]], "Concrete use cases": [[263, "concrete-use-cases"]], "Use case 1: add hardware accelerator and distributed support to SciPy": [[263, "use-case-1-add-hardware-accelerator-and-distributed-support-to-scipy"]], "Use case 2: simplify einops by removing the backend system": [[263, "use-case-2-simplify-einops-by-removing-the-backend-system"]], "Use case 3: adding a Python API to xtensor": [[263, "use-case-3-adding-a-python-api-to-xtensor"]], "Use case 4: make JIT compilation of array computations easier and more robust": [[263, "use-case-4-make-jit-compilation-of-array-computations-easier-and-more-robust"]], "Verification - test suite": [[264, "verification-test-suite"]], "Measuring conformance": [[264, "measuring-conformance"]], "Running the tests": [[264, "running-the-tests"]]}, "indexentries": {"__array_api_version__ (in module array_api)": [[8, "array_api.__array_api_version__"]], "abs() (in module array_api)": [[9, "array_api.abs"]], "acos() (in module array_api)": [[10, "array_api.acos"]], "acosh() (in module array_api)": [[11, "array_api.acosh"]], "add() (in module array_api)": [[12, "array_api.add"]], "all() (in module array_api)": [[13, "array_api.all"]], "any() (in module array_api)": [[14, "array_api.any"]], "arange() (in module array_api)": [[15, "array_api.arange"]], "argmax() (in module array_api)": [[16, "array_api.argmax"]], "argmin() (in module array_api)": [[17, "array_api.argmin"]], "argsort() (in module array_api)": [[18, "array_api.argsort"]], "t (array property)": [[19, "array_api.array.T"]], "__abs__() (array method)": [[20, "array_api.array.__abs__"]], "__add__() (array method)": [[21, "array_api.array.__add__"]], "__and__() (array method)": [[22, "array_api.array.__and__"]], "__array_namespace__() (array method)": [[23, "array_api.array.__array_namespace__"]], "__bool__() (array method)": [[24, "array_api.array.__bool__"]], "__complex__() (array method)": [[25, "array_api.array.__complex__"]], "__dlpack__() (array method)": [[26, "array_api.array.__dlpack__"]], "__dlpack_device__() (array method)": [[27, "array_api.array.__dlpack_device__"]], "__eq__() (array method)": [[28, "array_api.array.__eq__"]], "__float__() (array method)": [[29, "array_api.array.__float__"]], "__floordiv__() (array method)": [[30, "array_api.array.__floordiv__"]], "__ge__() (array method)": [[31, "array_api.array.__ge__"]], "__getitem__() (array method)": [[32, "array_api.array.__getitem__"]], "__gt__() (array method)": [[33, "array_api.array.__gt__"]], "__index__() (array method)": [[34, "array_api.array.__index__"]], "__int__() (array method)": [[35, "array_api.array.__int__"]], "__invert__() (array method)": [[36, "array_api.array.__invert__"]], "__le__() (array method)": [[37, "array_api.array.__le__"]], "__lshift__() (array method)": [[38, "array_api.array.__lshift__"]], "__lt__() (array method)": [[39, "array_api.array.__lt__"]], "__matmul__() (array method)": [[40, "array_api.array.__matmul__"]], "__mod__() (array method)": [[41, "array_api.array.__mod__"]], "__mul__() (array method)": [[42, "array_api.array.__mul__"]], "__ne__() (array method)": [[43, "array_api.array.__ne__"]], "__neg__() (array method)": [[44, "array_api.array.__neg__"]], "__or__() (array method)": [[45, "array_api.array.__or__"]], "__pos__() (array method)": [[46, "array_api.array.__pos__"]], "__pow__() (array method)": [[47, "array_api.array.__pow__"]], "__rshift__() (array method)": [[48, "array_api.array.__rshift__"]], "__setitem__() (array method)": [[49, "array_api.array.__setitem__"]], "__sub__() (array method)": [[50, "array_api.array.__sub__"]], "__truediv__() (array method)": [[51, "array_api.array.__truediv__"]], "__xor__() (array method)": [[52, "array_api.array.__xor__"]], "device (array property)": [[53, "array_api.array.device"]], "dtype (array property)": [[54, "array_api.array.dtype"]], "mt (array property)": [[55, "array_api.array.mT"]], "ndim (array property)": [[56, "array_api.array.ndim"]], "shape (array property)": [[57, "array_api.array.shape"]], "size (array property)": [[58, "array_api.array.size"]], "to_device() (array method)": [[59, "array_api.array.to_device"]], "asarray() (in module array_api)": [[60, "array_api.asarray"]], "asin() (in module array_api)": [[61, "array_api.asin"]], "asinh() (in module array_api)": [[62, "array_api.asinh"]], "astype() (in module array_api)": [[63, "array_api.astype"]], "atan() (in module array_api)": [[64, "array_api.atan"]], "atan2() (in module array_api)": [[65, "array_api.atan2"]], "atanh() (in module array_api)": [[66, "array_api.atanh"]], "bitwise_and() (in module array_api)": [[67, "array_api.bitwise_and"]], "bitwise_invert() (in module array_api)": [[68, "array_api.bitwise_invert"]], "bitwise_left_shift() (in module array_api)": [[69, "array_api.bitwise_left_shift"]], "bitwise_or() (in module array_api)": [[70, "array_api.bitwise_or"]], "bitwise_right_shift() (in module array_api)": [[71, "array_api.bitwise_right_shift"]], "bitwise_xor() (in module array_api)": [[72, "array_api.bitwise_xor"]], "broadcast_arrays() (in module array_api)": [[73, "array_api.broadcast_arrays"]], "broadcast_to() (in module array_api)": [[74, "array_api.broadcast_to"]], "can_cast() (in module array_api)": [[75, "array_api.can_cast"]], "ceil() (in module array_api)": [[76, "array_api.ceil"]], "clip() (in module array_api)": [[77, "array_api.clip"]], "concat() (in module array_api)": [[78, "array_api.concat"]], "conj() (in module array_api)": [[79, "array_api.conj"]], "e (in module array_api.constants)": [[80, "array_api.constants.e"]], "inf (in module array_api.constants)": [[81, "array_api.constants.inf"]], "nan (in module array_api.constants)": [[82, "array_api.constants.nan"]], "newaxis (in module array_api.constants)": [[83, "array_api.constants.newaxis"]], "pi (in module array_api.constants)": [[84, "array_api.constants.pi"]], "copysign() (in module array_api)": [[85, "array_api.copysign"]], "cos() (in module array_api)": [[86, "array_api.cos"]], "cosh() (in module array_api)": [[87, "array_api.cosh"]], "cumulative_sum() (in module array_api)": [[88, "array_api.cumulative_sum"]], "__eq__() (in module array_api.data_types)": [[89, "array_api.data_types.__eq__"]], "divide() (in module array_api)": [[90, "array_api.divide"]], "empty() (in module array_api)": [[91, "array_api.empty"]], "empty_like() (in module array_api)": [[92, "array_api.empty_like"]], "equal() (in module array_api)": [[93, "array_api.equal"]], "exp() (in module array_api)": [[94, "array_api.exp"]], "expand_dims() (in module array_api)": [[95, "array_api.expand_dims"]], "expm1() (in module array_api)": [[96, "array_api.expm1"]], "eye() (in module array_api)": [[97, "array_api.eye"]], "finfo() (in module array_api)": [[98, "array_api.finfo"]], "flip() (in module array_api)": [[99, "array_api.flip"]], "floor() (in module array_api)": [[100, "array_api.floor"]], "floor_divide() (in module array_api)": [[101, "array_api.floor_divide"]], "from_dlpack() (in module array_api)": [[102, "array_api.from_dlpack"]], "full() (in module array_api)": [[103, "array_api.full"]], "full_like() (in module array_api)": [[104, "array_api.full_like"]], "greater() (in module array_api)": [[105, "array_api.greater"]], "greater_equal() (in module array_api)": [[106, "array_api.greater_equal"]], "hypot() (in module array_api)": [[107, "array_api.hypot"]], "iinfo() (in module array_api)": [[108, "array_api.iinfo"]], "imag() (in module array_api)": [[109, "array_api.imag"]], "__array_namespace_info__() (in module array_api.info)": [[110, "array_api.info.__array_namespace_info__"]], "capabilities() (in module array_api.info)": [[111, "array_api.info.capabilities"]], "default_device() (in module array_api.info)": [[112, "array_api.info.default_device"]], "default_dtypes() (in module array_api.info)": [[113, "array_api.info.default_dtypes"]], "devices() (in module array_api.info)": [[114, "array_api.info.devices"]], "dtypes() (in module array_api.info)": [[115, "array_api.info.dtypes"]], "isdtype() (in module array_api)": [[116, "array_api.isdtype"]], "isfinite() (in module array_api)": [[117, "array_api.isfinite"]], "isinf() (in module array_api)": [[118, "array_api.isinf"]], "isnan() (in module array_api)": [[119, "array_api.isnan"]], "less() (in module array_api)": [[120, "array_api.less"]], "less_equal() (in module array_api)": [[121, "array_api.less_equal"]], "linspace() (in module array_api)": [[122, "array_api.linspace"]], "log() (in module array_api)": [[123, "array_api.log"]], "log10() (in module array_api)": [[124, "array_api.log10"]], "log1p() (in module array_api)": [[125, "array_api.log1p"]], "log2() (in module array_api)": [[126, "array_api.log2"]], "logaddexp() (in module array_api)": [[127, "array_api.logaddexp"]], "logical_and() (in module array_api)": [[128, "array_api.logical_and"]], "logical_not() (in module array_api)": [[129, "array_api.logical_not"]], "logical_or() (in module array_api)": [[130, "array_api.logical_or"]], "logical_xor() (in module array_api)": [[131, "array_api.logical_xor"]], "matmul() (in module array_api)": [[132, "array_api.matmul"]], "matrix_transpose() (in module array_api)": [[133, "array_api.matrix_transpose"]], "max() (in module array_api)": [[134, "array_api.max"]], "maximum() (in module array_api)": [[135, "array_api.maximum"]], "mean() (in module array_api)": [[136, "array_api.mean"]], "meshgrid() (in module array_api)": [[137, "array_api.meshgrid"]], "min() (in module array_api)": [[138, "array_api.min"]], "minimum() (in module array_api)": [[139, "array_api.minimum"]], "moveaxis() (in module array_api)": [[140, "array_api.moveaxis"]], "multiply() (in module array_api)": [[141, "array_api.multiply"]], "negative() (in module array_api)": [[142, "array_api.negative"]], "nextafter() (in module array_api)": [[143, "array_api.nextafter"]], "nonzero() (in module array_api)": [[144, "array_api.nonzero"]], "not_equal() (in module array_api)": [[145, "array_api.not_equal"]], "ones() (in module array_api)": [[146, "array_api.ones"]], "ones_like() (in module array_api)": [[147, "array_api.ones_like"]], "permute_dims() (in module array_api)": [[148, "array_api.permute_dims"]], "positive() (in module array_api)": [[149, "array_api.positive"]], "pow() (in module array_api)": [[150, "array_api.pow"]], "prod() (in module array_api)": [[151, "array_api.prod"]], "real() (in module array_api)": [[152, "array_api.real"]], "remainder() (in module array_api)": [[153, "array_api.remainder"]], "repeat() (in module array_api)": [[154, "array_api.repeat"]], "reshape() (in module array_api)": [[155, "array_api.reshape"]], "result_type() (in module array_api)": [[156, "array_api.result_type"]], "roll() (in module array_api)": [[157, "array_api.roll"]], "round() (in module array_api)": [[158, "array_api.round"]], "searchsorted() (in module array_api)": [[159, "array_api.searchsorted"]], "sign() (in module array_api)": [[160, "array_api.sign"]], "signbit() (in module array_api)": [[161, "array_api.signbit"]], "sin() (in module array_api)": [[162, "array_api.sin"]], "sinh() (in module array_api)": [[163, "array_api.sinh"]], "sort() (in module array_api)": [[164, "array_api.sort"]], "sqrt() (in module array_api)": [[165, "array_api.sqrt"]], "square() (in module array_api)": [[166, "array_api.square"]], "squeeze() (in module array_api)": [[167, "array_api.squeeze"]], "stack() (in module array_api)": [[168, "array_api.stack"]], "std() (in module array_api)": [[169, "array_api.std"]], "subtract() (in module array_api)": [[170, "array_api.subtract"]], "sum() (in module array_api)": [[171, "array_api.sum"]], "take() (in module array_api)": [[172, "array_api.take"]], "tan() (in module array_api)": [[173, "array_api.tan"]], "tanh() (in module array_api)": [[174, "array_api.tanh"]], "tensordot() (in module array_api)": [[175, "array_api.tensordot"]], "tile() (in module array_api)": [[176, "array_api.tile"]], "tril() (in module array_api)": [[177, "array_api.tril"]], "triu() (in module array_api)": [[178, "array_api.triu"]], "trunc() (in module array_api)": [[179, "array_api.trunc"]], "unique_all() (in module array_api)": [[180, "array_api.unique_all"]], "unique_counts() (in module array_api)": [[181, "array_api.unique_counts"]], "unique_inverse() (in module array_api)": [[182, "array_api.unique_inverse"]], "unique_values() (in module array_api)": [[183, "array_api.unique_values"]], "unstack() (in module array_api)": [[184, "array_api.unstack"]], "var() (in module array_api)": [[185, "array_api.var"]], "vecdot() (in module array_api)": [[186, "array_api.vecdot"]], "where() (in module array_api)": [[187, "array_api.where"]], "zeros() (in module array_api)": [[188, "array_api.zeros"]], "zeros_like() (in module array_api)": [[189, "array_api.zeros_like"]], "fft() (in module array_api.fft)": [[219, "array_api.fft.fft"]], "fftfreq() (in module array_api.fft)": [[220, "array_api.fft.fftfreq"]], "fftn() (in module array_api.fft)": [[221, "array_api.fft.fftn"]], "fftshift() (in module array_api.fft)": [[222, "array_api.fft.fftshift"]], "hfft() (in module array_api.fft)": [[223, "array_api.fft.hfft"]], "ifft() (in module array_api.fft)": [[224, "array_api.fft.ifft"]], "ifftn() (in module array_api.fft)": [[225, "array_api.fft.ifftn"]], "ifftshift() (in module array_api.fft)": [[226, "array_api.fft.ifftshift"]], "ihfft() (in module array_api.fft)": [[227, "array_api.fft.ihfft"]], "irfft() (in module array_api.fft)": [[228, "array_api.fft.irfft"]], "irfftn() (in module array_api.fft)": [[229, "array_api.fft.irfftn"]], "rfft() (in module array_api.fft)": [[230, "array_api.fft.rfft"]], "rfftfreq() (in module array_api.fft)": [[231, "array_api.fft.rfftfreq"]], "rfftn() (in module array_api.fft)": [[232, "array_api.fft.rfftn"]], "cholesky() (in module array_api.linalg)": [[233, "array_api.linalg.cholesky"]], "cross() (in module array_api.linalg)": [[234, "array_api.linalg.cross"]], "det() (in module array_api.linalg)": [[235, "array_api.linalg.det"]], "diagonal() (in module array_api.linalg)": [[236, "array_api.linalg.diagonal"]], "eigh() (in module array_api.linalg)": [[237, "array_api.linalg.eigh"]], "eigvalsh() (in module array_api.linalg)": [[238, "array_api.linalg.eigvalsh"]], "inv() (in module array_api.linalg)": [[239, "array_api.linalg.inv"]], "matmul() (in module array_api.linalg)": [[240, "array_api.linalg.matmul"]], "matrix_norm() (in module array_api.linalg)": [[241, "array_api.linalg.matrix_norm"]], "matrix_power() (in module array_api.linalg)": [[242, "array_api.linalg.matrix_power"]], "matrix_rank() (in module array_api.linalg)": [[243, "array_api.linalg.matrix_rank"]], "matrix_transpose() (in module array_api.linalg)": [[244, "array_api.linalg.matrix_transpose"]], "outer() (in module array_api.linalg)": [[245, "array_api.linalg.outer"]], "pinv() (in module array_api.linalg)": [[246, "array_api.linalg.pinv"]], "qr() (in module array_api.linalg)": [[247, "array_api.linalg.qr"]], "slogdet() (in module array_api.linalg)": [[248, "array_api.linalg.slogdet"]], "solve() (in module array_api.linalg)": [[249, "array_api.linalg.solve"]], "svd() (in module array_api.linalg)": [[250, "array_api.linalg.svd"]], "svdvals() (in module array_api.linalg)": [[251, "array_api.linalg.svdvals"]], "tensordot() (in module array_api.linalg)": [[252, "array_api.linalg.tensordot"]], "trace() (in module array_api.linalg)": [[253, "array_api.linalg.trace"]], "vecdot() (in module array_api.linalg)": [[254, "array_api.linalg.vecdot"]], "vector_norm() (in module array_api.linalg)": [[255, "array_api.linalg.vector_norm"]]}})