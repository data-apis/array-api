Search.setIndex({"docnames": ["API_specification/array_object", "API_specification/broadcasting", "API_specification/constants", "API_specification/creation_functions", "API_specification/data_type_functions", "API_specification/data_types", "API_specification/elementwise_functions", "API_specification/function_and_method_signatures", "API_specification/generated/array_api.__array_api_version__", "API_specification/generated/array_api.abs", "API_specification/generated/array_api.acos", "API_specification/generated/array_api.acosh", "API_specification/generated/array_api.add", "API_specification/generated/array_api.all", "API_specification/generated/array_api.any", "API_specification/generated/array_api.arange", "API_specification/generated/array_api.argmax", "API_specification/generated/array_api.argmin", "API_specification/generated/array_api.argsort", "API_specification/generated/array_api.array.T", "API_specification/generated/array_api.array.__abs__", "API_specification/generated/array_api.array.__add__", "API_specification/generated/array_api.array.__and__", "API_specification/generated/array_api.array.__array_namespace__", "API_specification/generated/array_api.array.__bool__", "API_specification/generated/array_api.array.__complex__", "API_specification/generated/array_api.array.__dlpack__", "API_specification/generated/array_api.array.__dlpack_device__", "API_specification/generated/array_api.array.__eq__", "API_specification/generated/array_api.array.__float__", "API_specification/generated/array_api.array.__floordiv__", "API_specification/generated/array_api.array.__ge__", "API_specification/generated/array_api.array.__getitem__", "API_specification/generated/array_api.array.__gt__", "API_specification/generated/array_api.array.__index__", "API_specification/generated/array_api.array.__int__", "API_specification/generated/array_api.array.__invert__", "API_specification/generated/array_api.array.__le__", "API_specification/generated/array_api.array.__lshift__", "API_specification/generated/array_api.array.__lt__", "API_specification/generated/array_api.array.__matmul__", "API_specification/generated/array_api.array.__mod__", "API_specification/generated/array_api.array.__mul__", "API_specification/generated/array_api.array.__ne__", "API_specification/generated/array_api.array.__neg__", "API_specification/generated/array_api.array.__or__", "API_specification/generated/array_api.array.__pos__", "API_specification/generated/array_api.array.__pow__", "API_specification/generated/array_api.array.__rshift__", "API_specification/generated/array_api.array.__setitem__", "API_specification/generated/array_api.array.__sub__", "API_specification/generated/array_api.array.__truediv__", "API_specification/generated/array_api.array.__xor__", "API_specification/generated/array_api.array.device", "API_specification/generated/array_api.array.dtype", "API_specification/generated/array_api.array.mT", "API_specification/generated/array_api.array.ndim", "API_specification/generated/array_api.array.shape", "API_specification/generated/array_api.array.size", "API_specification/generated/array_api.array.to_device", "API_specification/generated/array_api.asarray", "API_specification/generated/array_api.asin", "API_specification/generated/array_api.asinh", "API_specification/generated/array_api.astype", "API_specification/generated/array_api.atan", "API_specification/generated/array_api.atan2", "API_specification/generated/array_api.atanh", "API_specification/generated/array_api.bitwise_and", "API_specification/generated/array_api.bitwise_invert", "API_specification/generated/array_api.bitwise_left_shift", "API_specification/generated/array_api.bitwise_or", "API_specification/generated/array_api.bitwise_right_shift", "API_specification/generated/array_api.bitwise_xor", "API_specification/generated/array_api.broadcast_arrays", "API_specification/generated/array_api.broadcast_to", "API_specification/generated/array_api.can_cast", "API_specification/generated/array_api.ceil", "API_specification/generated/array_api.clip", "API_specification/generated/array_api.concat", "API_specification/generated/array_api.conj", "API_specification/generated/array_api.constants.e", "API_specification/generated/array_api.constants.inf", "API_specification/generated/array_api.constants.nan", "API_specification/generated/array_api.constants.newaxis", "API_specification/generated/array_api.constants.pi", "API_specification/generated/array_api.copysign", "API_specification/generated/array_api.cos", "API_specification/generated/array_api.cosh", "API_specification/generated/array_api.cumulative_sum", "API_specification/generated/array_api.data_types.__eq__", "API_specification/generated/array_api.divide", "API_specification/generated/array_api.empty", "API_specification/generated/array_api.empty_like", "API_specification/generated/array_api.equal", "API_specification/generated/array_api.exp", "API_specification/generated/array_api.expand_dims", "API_specification/generated/array_api.expm1", "API_specification/generated/array_api.eye", "API_specification/generated/array_api.finfo", "API_specification/generated/array_api.flip", "API_specification/generated/array_api.floor", "API_specification/generated/array_api.floor_divide", "API_specification/generated/array_api.from_dlpack", "API_specification/generated/array_api.full", "API_specification/generated/array_api.full_like", "API_specification/generated/array_api.greater", "API_specification/generated/array_api.greater_equal", "API_specification/generated/array_api.iinfo", "API_specification/generated/array_api.imag", "API_specification/generated/array_api.isdtype", "API_specification/generated/array_api.isfinite", "API_specification/generated/array_api.isinf", "API_specification/generated/array_api.isnan", "API_specification/generated/array_api.less", "API_specification/generated/array_api.less_equal", "API_specification/generated/array_api.linspace", "API_specification/generated/array_api.log", "API_specification/generated/array_api.log10", "API_specification/generated/array_api.log1p", "API_specification/generated/array_api.log2", "API_specification/generated/array_api.logaddexp", "API_specification/generated/array_api.logical_and", "API_specification/generated/array_api.logical_not", "API_specification/generated/array_api.logical_or", "API_specification/generated/array_api.logical_xor", "API_specification/generated/array_api.matmul", "API_specification/generated/array_api.matrix_transpose", "API_specification/generated/array_api.max", "API_specification/generated/array_api.maximum", "API_specification/generated/array_api.mean", "API_specification/generated/array_api.meshgrid", "API_specification/generated/array_api.min", "API_specification/generated/array_api.minimum", "API_specification/generated/array_api.moveaxis", "API_specification/generated/array_api.multiply", "API_specification/generated/array_api.negative", "API_specification/generated/array_api.nonzero", "API_specification/generated/array_api.not_equal", "API_specification/generated/array_api.ones", "API_specification/generated/array_api.ones_like", "API_specification/generated/array_api.permute_dims", "API_specification/generated/array_api.positive", "API_specification/generated/array_api.pow", "API_specification/generated/array_api.prod", "API_specification/generated/array_api.real", "API_specification/generated/array_api.remainder", "API_specification/generated/array_api.reshape", "API_specification/generated/array_api.result_type", "API_specification/generated/array_api.roll", "API_specification/generated/array_api.round", "API_specification/generated/array_api.searchsorted", "API_specification/generated/array_api.sign", "API_specification/generated/array_api.signbit", "API_specification/generated/array_api.sin", "API_specification/generated/array_api.sinh", "API_specification/generated/array_api.sort", "API_specification/generated/array_api.sqrt", "API_specification/generated/array_api.square", "API_specification/generated/array_api.squeeze", "API_specification/generated/array_api.stack", "API_specification/generated/array_api.std", "API_specification/generated/array_api.subtract", "API_specification/generated/array_api.sum", "API_specification/generated/array_api.take", "API_specification/generated/array_api.tan", "API_specification/generated/array_api.tanh", "API_specification/generated/array_api.tensordot", "API_specification/generated/array_api.tile", "API_specification/generated/array_api.tril", "API_specification/generated/array_api.triu", "API_specification/generated/array_api.trunc", "API_specification/generated/array_api.unique_all", "API_specification/generated/array_api.unique_counts", "API_specification/generated/array_api.unique_inverse", "API_specification/generated/array_api.unique_values", "API_specification/generated/array_api.unstack", "API_specification/generated/array_api.var", "API_specification/generated/array_api.vecdot", "API_specification/generated/array_api.where", "API_specification/generated/array_api.zeros", "API_specification/generated/array_api.zeros_like", "API_specification/index", "API_specification/indexing", "API_specification/indexing_functions", "API_specification/linear_algebra_functions", "API_specification/manipulation_functions", "API_specification/searching_functions", "API_specification/set_functions", "API_specification/sorting_functions", "API_specification/statistical_functions", "API_specification/type_promotion", "API_specification/utility_functions", "API_specification/version", "assumptions", "benchmark_suite", "changelog", "design_topics/C_API", "design_topics/accuracy", "design_topics/complex_numbers", "design_topics/copies_views_and_mutation", "design_topics/data_dependent_output_shapes", "design_topics/data_interchange", "design_topics/device_support", "design_topics/exceptions", "design_topics/index", "design_topics/lazy_eager", "design_topics/parallelism", "design_topics/static_typing", "extensions/fourier_transform_functions", "extensions/generated/array_api.fft.fft", "extensions/generated/array_api.fft.fftfreq", "extensions/generated/array_api.fft.fftn", "extensions/generated/array_api.fft.fftshift", "extensions/generated/array_api.fft.hfft", "extensions/generated/array_api.fft.ifft", "extensions/generated/array_api.fft.ifftn", "extensions/generated/array_api.fft.ifftshift", "extensions/generated/array_api.fft.ihfft", "extensions/generated/array_api.fft.irfft", "extensions/generated/array_api.fft.irfftn", "extensions/generated/array_api.fft.rfft", "extensions/generated/array_api.fft.rfftfreq", "extensions/generated/array_api.fft.rfftn", "extensions/generated/array_api.linalg.cholesky", "extensions/generated/array_api.linalg.cross", "extensions/generated/array_api.linalg.det", "extensions/generated/array_api.linalg.diagonal", "extensions/generated/array_api.linalg.eigh", "extensions/generated/array_api.linalg.eigvalsh", "extensions/generated/array_api.linalg.inv", "extensions/generated/array_api.linalg.matmul", "extensions/generated/array_api.linalg.matrix_norm", "extensions/generated/array_api.linalg.matrix_power", "extensions/generated/array_api.linalg.matrix_rank", "extensions/generated/array_api.linalg.matrix_transpose", "extensions/generated/array_api.linalg.outer", "extensions/generated/array_api.linalg.pinv", "extensions/generated/array_api.linalg.qr", "extensions/generated/array_api.linalg.slogdet", "extensions/generated/array_api.linalg.solve", "extensions/generated/array_api.linalg.svd", "extensions/generated/array_api.linalg.svdvals", "extensions/generated/array_api.linalg.tensordot", "extensions/generated/array_api.linalg.trace", "extensions/generated/array_api.linalg.vecdot", "extensions/generated/array_api.linalg.vector_norm", "extensions/index", "extensions/linear_algebra_functions", "future_API_evolution", "index", "license", "purpose_and_scope", "usage_data", "use_cases", "verification_test_suite"], "filenames": ["API_specification/array_object.rst", "API_specification/broadcasting.rst", "API_specification/constants.rst", "API_specification/creation_functions.rst", "API_specification/data_type_functions.rst", "API_specification/data_types.rst", "API_specification/elementwise_functions.rst", "API_specification/function_and_method_signatures.rst", "API_specification/generated/array_api.__array_api_version__.rst", "API_specification/generated/array_api.abs.rst", "API_specification/generated/array_api.acos.rst", "API_specification/generated/array_api.acosh.rst", "API_specification/generated/array_api.add.rst", "API_specification/generated/array_api.all.rst", "API_specification/generated/array_api.any.rst", "API_specification/generated/array_api.arange.rst", "API_specification/generated/array_api.argmax.rst", "API_specification/generated/array_api.argmin.rst", "API_specification/generated/array_api.argsort.rst", "API_specification/generated/array_api.array.T.rst", "API_specification/generated/array_api.array.__abs__.rst", "API_specification/generated/array_api.array.__add__.rst", "API_specification/generated/array_api.array.__and__.rst", "API_specification/generated/array_api.array.__array_namespace__.rst", "API_specification/generated/array_api.array.__bool__.rst", "API_specification/generated/array_api.array.__complex__.rst", "API_specification/generated/array_api.array.__dlpack__.rst", "API_specification/generated/array_api.array.__dlpack_device__.rst", "API_specification/generated/array_api.array.__eq__.rst", "API_specification/generated/array_api.array.__float__.rst", "API_specification/generated/array_api.array.__floordiv__.rst", "API_specification/generated/array_api.array.__ge__.rst", "API_specification/generated/array_api.array.__getitem__.rst", "API_specification/generated/array_api.array.__gt__.rst", "API_specification/generated/array_api.array.__index__.rst", "API_specification/generated/array_api.array.__int__.rst", "API_specification/generated/array_api.array.__invert__.rst", "API_specification/generated/array_api.array.__le__.rst", "API_specification/generated/array_api.array.__lshift__.rst", "API_specification/generated/array_api.array.__lt__.rst", "API_specification/generated/array_api.array.__matmul__.rst", "API_specification/generated/array_api.array.__mod__.rst", "API_specification/generated/array_api.array.__mul__.rst", "API_specification/generated/array_api.array.__ne__.rst", "API_specification/generated/array_api.array.__neg__.rst", "API_specification/generated/array_api.array.__or__.rst", "API_specification/generated/array_api.array.__pos__.rst", "API_specification/generated/array_api.array.__pow__.rst", "API_specification/generated/array_api.array.__rshift__.rst", "API_specification/generated/array_api.array.__setitem__.rst", "API_specification/generated/array_api.array.__sub__.rst", "API_specification/generated/array_api.array.__truediv__.rst", "API_specification/generated/array_api.array.__xor__.rst", "API_specification/generated/array_api.array.device.rst", "API_specification/generated/array_api.array.dtype.rst", "API_specification/generated/array_api.array.mT.rst", "API_specification/generated/array_api.array.ndim.rst", "API_specification/generated/array_api.array.shape.rst", "API_specification/generated/array_api.array.size.rst", "API_specification/generated/array_api.array.to_device.rst", "API_specification/generated/array_api.asarray.rst", "API_specification/generated/array_api.asin.rst", "API_specification/generated/array_api.asinh.rst", "API_specification/generated/array_api.astype.rst", "API_specification/generated/array_api.atan.rst", "API_specification/generated/array_api.atan2.rst", "API_specification/generated/array_api.atanh.rst", "API_specification/generated/array_api.bitwise_and.rst", "API_specification/generated/array_api.bitwise_invert.rst", "API_specification/generated/array_api.bitwise_left_shift.rst", "API_specification/generated/array_api.bitwise_or.rst", "API_specification/generated/array_api.bitwise_right_shift.rst", "API_specification/generated/array_api.bitwise_xor.rst", "API_specification/generated/array_api.broadcast_arrays.rst", "API_specification/generated/array_api.broadcast_to.rst", "API_specification/generated/array_api.can_cast.rst", "API_specification/generated/array_api.ceil.rst", "API_specification/generated/array_api.clip.rst", "API_specification/generated/array_api.concat.rst", "API_specification/generated/array_api.conj.rst", "API_specification/generated/array_api.constants.e.rst", "API_specification/generated/array_api.constants.inf.rst", "API_specification/generated/array_api.constants.nan.rst", "API_specification/generated/array_api.constants.newaxis.rst", "API_specification/generated/array_api.constants.pi.rst", "API_specification/generated/array_api.copysign.rst", "API_specification/generated/array_api.cos.rst", "API_specification/generated/array_api.cosh.rst", "API_specification/generated/array_api.cumulative_sum.rst", "API_specification/generated/array_api.data_types.__eq__.rst", "API_specification/generated/array_api.divide.rst", "API_specification/generated/array_api.empty.rst", "API_specification/generated/array_api.empty_like.rst", "API_specification/generated/array_api.equal.rst", "API_specification/generated/array_api.exp.rst", "API_specification/generated/array_api.expand_dims.rst", "API_specification/generated/array_api.expm1.rst", "API_specification/generated/array_api.eye.rst", "API_specification/generated/array_api.finfo.rst", "API_specification/generated/array_api.flip.rst", "API_specification/generated/array_api.floor.rst", "API_specification/generated/array_api.floor_divide.rst", "API_specification/generated/array_api.from_dlpack.rst", "API_specification/generated/array_api.full.rst", "API_specification/generated/array_api.full_like.rst", "API_specification/generated/array_api.greater.rst", "API_specification/generated/array_api.greater_equal.rst", "API_specification/generated/array_api.iinfo.rst", "API_specification/generated/array_api.imag.rst", "API_specification/generated/array_api.isdtype.rst", "API_specification/generated/array_api.isfinite.rst", "API_specification/generated/array_api.isinf.rst", "API_specification/generated/array_api.isnan.rst", "API_specification/generated/array_api.less.rst", "API_specification/generated/array_api.less_equal.rst", "API_specification/generated/array_api.linspace.rst", "API_specification/generated/array_api.log.rst", "API_specification/generated/array_api.log10.rst", "API_specification/generated/array_api.log1p.rst", "API_specification/generated/array_api.log2.rst", "API_specification/generated/array_api.logaddexp.rst", "API_specification/generated/array_api.logical_and.rst", "API_specification/generated/array_api.logical_not.rst", "API_specification/generated/array_api.logical_or.rst", "API_specification/generated/array_api.logical_xor.rst", "API_specification/generated/array_api.matmul.rst", "API_specification/generated/array_api.matrix_transpose.rst", "API_specification/generated/array_api.max.rst", "API_specification/generated/array_api.maximum.rst", "API_specification/generated/array_api.mean.rst", "API_specification/generated/array_api.meshgrid.rst", "API_specification/generated/array_api.min.rst", "API_specification/generated/array_api.minimum.rst", "API_specification/generated/array_api.moveaxis.rst", "API_specification/generated/array_api.multiply.rst", "API_specification/generated/array_api.negative.rst", "API_specification/generated/array_api.nonzero.rst", "API_specification/generated/array_api.not_equal.rst", "API_specification/generated/array_api.ones.rst", "API_specification/generated/array_api.ones_like.rst", "API_specification/generated/array_api.permute_dims.rst", "API_specification/generated/array_api.positive.rst", "API_specification/generated/array_api.pow.rst", "API_specification/generated/array_api.prod.rst", "API_specification/generated/array_api.real.rst", "API_specification/generated/array_api.remainder.rst", "API_specification/generated/array_api.reshape.rst", "API_specification/generated/array_api.result_type.rst", "API_specification/generated/array_api.roll.rst", "API_specification/generated/array_api.round.rst", "API_specification/generated/array_api.searchsorted.rst", "API_specification/generated/array_api.sign.rst", "API_specification/generated/array_api.signbit.rst", "API_specification/generated/array_api.sin.rst", "API_specification/generated/array_api.sinh.rst", "API_specification/generated/array_api.sort.rst", "API_specification/generated/array_api.sqrt.rst", "API_specification/generated/array_api.square.rst", "API_specification/generated/array_api.squeeze.rst", "API_specification/generated/array_api.stack.rst", "API_specification/generated/array_api.std.rst", "API_specification/generated/array_api.subtract.rst", "API_specification/generated/array_api.sum.rst", "API_specification/generated/array_api.take.rst", "API_specification/generated/array_api.tan.rst", "API_specification/generated/array_api.tanh.rst", "API_specification/generated/array_api.tensordot.rst", "API_specification/generated/array_api.tile.rst", "API_specification/generated/array_api.tril.rst", "API_specification/generated/array_api.triu.rst", "API_specification/generated/array_api.trunc.rst", "API_specification/generated/array_api.unique_all.rst", "API_specification/generated/array_api.unique_counts.rst", "API_specification/generated/array_api.unique_inverse.rst", "API_specification/generated/array_api.unique_values.rst", "API_specification/generated/array_api.unstack.rst", "API_specification/generated/array_api.var.rst", "API_specification/generated/array_api.vecdot.rst", "API_specification/generated/array_api.where.rst", "API_specification/generated/array_api.zeros.rst", "API_specification/generated/array_api.zeros_like.rst", "API_specification/index.rst", "API_specification/indexing.rst", "API_specification/indexing_functions.rst", "API_specification/linear_algebra_functions.rst", "API_specification/manipulation_functions.rst", "API_specification/searching_functions.rst", "API_specification/set_functions.rst", "API_specification/sorting_functions.rst", "API_specification/statistical_functions.rst", "API_specification/type_promotion.rst", "API_specification/utility_functions.rst", "API_specification/version.rst", "assumptions.md", "benchmark_suite.md", "changelog.rst", "design_topics/C_API.rst", "design_topics/accuracy.rst", "design_topics/complex_numbers.rst", "design_topics/copies_views_and_mutation.rst", "design_topics/data_dependent_output_shapes.rst", "design_topics/data_interchange.rst", "design_topics/device_support.rst", "design_topics/exceptions.rst", "design_topics/index.rst", "design_topics/lazy_eager.rst", "design_topics/parallelism.rst", "design_topics/static_typing.rst", "extensions/fourier_transform_functions.rst", "extensions/generated/array_api.fft.fft.rst", "extensions/generated/array_api.fft.fftfreq.rst", "extensions/generated/array_api.fft.fftn.rst", "extensions/generated/array_api.fft.fftshift.rst", "extensions/generated/array_api.fft.hfft.rst", "extensions/generated/array_api.fft.ifft.rst", "extensions/generated/array_api.fft.ifftn.rst", "extensions/generated/array_api.fft.ifftshift.rst", "extensions/generated/array_api.fft.ihfft.rst", "extensions/generated/array_api.fft.irfft.rst", "extensions/generated/array_api.fft.irfftn.rst", "extensions/generated/array_api.fft.rfft.rst", "extensions/generated/array_api.fft.rfftfreq.rst", "extensions/generated/array_api.fft.rfftn.rst", "extensions/generated/array_api.linalg.cholesky.rst", "extensions/generated/array_api.linalg.cross.rst", "extensions/generated/array_api.linalg.det.rst", "extensions/generated/array_api.linalg.diagonal.rst", "extensions/generated/array_api.linalg.eigh.rst", "extensions/generated/array_api.linalg.eigvalsh.rst", "extensions/generated/array_api.linalg.inv.rst", "extensions/generated/array_api.linalg.matmul.rst", "extensions/generated/array_api.linalg.matrix_norm.rst", "extensions/generated/array_api.linalg.matrix_power.rst", "extensions/generated/array_api.linalg.matrix_rank.rst", "extensions/generated/array_api.linalg.matrix_transpose.rst", "extensions/generated/array_api.linalg.outer.rst", "extensions/generated/array_api.linalg.pinv.rst", "extensions/generated/array_api.linalg.qr.rst", "extensions/generated/array_api.linalg.slogdet.rst", "extensions/generated/array_api.linalg.solve.rst", "extensions/generated/array_api.linalg.svd.rst", "extensions/generated/array_api.linalg.svdvals.rst", "extensions/generated/array_api.linalg.tensordot.rst", "extensions/generated/array_api.linalg.trace.rst", "extensions/generated/array_api.linalg.vecdot.rst", "extensions/generated/array_api.linalg.vector_norm.rst", "extensions/index.rst", "extensions/linear_algebra_functions.rst", "future_API_evolution.md", "index.rst", "license.rst", "purpose_and_scope.md", "usage_data.md", "use_cases.md", "verification_test_suite.md"], "titles": ["Array object", "Broadcasting", "Constants", "Creation Functions", "Data Type Functions", "Data Types", "Element-wise Functions", "Function and method signatures", "__array_api_version__", "abs", "acos", "acosh", "add", "all", "any", "arange", "argmax", "argmin", "argsort", "T", "__abs__", "__add__", "__and__", "__array_namespace__", "__bool__", "__complex__", "__dlpack__", "__dlpack_device__", "__eq__", "__float__", "__floordiv__", "__ge__", "__getitem__", "__gt__", "__index__", "__int__", "__invert__", "__le__", "__lshift__", "__lt__", "__matmul__", "__mod__", "__mul__", "__ne__", "__neg__", "__or__", "__pos__", "__pow__", "__rshift__", "__setitem__", "__sub__", "__truediv__", "__xor__", "device", "dtype", "mT", "ndim", "shape", "size", "to_device", "asarray", "asin", "asinh", "astype", "atan", "atan2", "atanh", "bitwise_and", "bitwise_invert", "bitwise_left_shift", "bitwise_or", "bitwise_right_shift", "bitwise_xor", "broadcast_arrays", "broadcast_to", "can_cast", "ceil", "clip", "concat", "conj", "e", "inf", "nan", "newaxis", "pi", "copysign", "cos", "cosh", "cumulative_sum", "__eq__", "divide", "empty", "empty_like", "equal", "exp", "expand_dims", "expm1", "eye", "finfo", "flip", "floor", "floor_divide", "from_dlpack", "full", "full_like", "greater", "greater_equal", "iinfo", "imag", "isdtype", "isfinite", "isinf", "isnan", "less", "less_equal", "linspace", "log", "log10", "log1p", "log2", "logaddexp", "logical_and", "logical_not", "logical_or", "logical_xor", "matmul", "matrix_transpose", "max", "maximum", "mean", "meshgrid", "min", "minimum", "moveaxis", "multiply", "negative", "nonzero", "not_equal", "ones", "ones_like", "permute_dims", "positive", "pow", "prod", "real", "remainder", "reshape", "result_type", "roll", "round", "searchsorted", "sign", "signbit", "sin", "sinh", "sort", "sqrt", "square", "squeeze", "stack", "std", "subtract", "sum", "take", "tan", "tanh", "tensordot", "tile", "tril", "triu", "trunc", "unique_all", "unique_counts", "unique_inverse", "unique_values", "unstack", "var", "vecdot", "where", "zeros", "zeros_like", "API specification", "Indexing", "Indexing Functions", "Linear Algebra Functions", "Manipulation Functions", "Searching Functions", "Set Functions", "Sorting Functions", "Statistical Functions", "Type Promotion Rules", "Utility Functions", "Version", "Assumptions", "Benchmark suite", "Changelog per API standard version", "C API", "Accuracy", "Complex Numbers", "Copy-view behaviour and mutability", "Data-dependent output shapes", "Data interchange mechanisms", "Device support", "Exceptions", "Design topics &amp; constraints", "Lazy vs. eager execution", "Parallelism", "Static typing", "Fourier transform Functions", "fft", "fftfreq", "fftn", "fftshift", "hfft", "ifft", "ifftn", "ifftshift", "ihfft", "irfft", "irfftn", "rfft", "rfftfreq", "rfftn", "cholesky", "cross", "det", "diagonal", "eigh", "eigvalsh", "inv", "matmul", "matrix_norm", "matrix_power", "matrix_rank", "matrix_transpose", "outer", "pinv", "qr", "slogdet", "solve", "svd", "svdvals", "tensordot", "trace", "vecdot", "vector_norm", "Extensions", "Linear Algebra Extension", "Future API standard evolution", "Python array API standard", "License", "Purpose and scope", "Usage Data", "Use cases", "Verification - test suite"], "terms": {"api": [0, 1, 5, 7, 8, 23, 26, 63, 109, 182, 190, 193, 197, 198, 199, 201, 202, 203, 204, 205, 206, 207, 246, 250, 252, 254], "specif": [0, 1, 2, 3, 4, 5, 6, 8, 19, 23, 26, 49, 51, 59, 63, 78, 90, 101, 109, 115, 121, 122, 123, 124, 127, 129, 131, 142, 147, 150, 159, 160, 163, 166, 176, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 195, 196, 197, 198, 199, 200, 201, 202, 203, 205, 207, 208, 227, 228, 246, 247, 248, 249, 251, 252, 253, 254], "A": [0, 1, 2, 3, 4, 5, 7, 13, 14, 57, 97, 109, 159, 175, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 196, 199, 201, 202, 205, 206, 207, 208, 236, 239, 247, 250, 251, 252, 253], "conform": [0, 2, 3, 4, 5, 8, 9, 16, 17, 18, 31, 33, 37, 39, 59, 60, 96, 105, 106, 109, 113, 114, 115, 118, 127, 128, 131, 132, 142, 150, 155, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 195, 197, 198, 201, 208, 247], "implement": [0, 2, 3, 4, 5, 8, 9, 10, 11, 16, 17, 18, 20, 23, 24, 25, 26, 29, 30, 31, 33, 34, 35, 37, 39, 40, 41, 44, 47, 49, 51, 59, 60, 61, 62, 63, 64, 65, 66, 77, 86, 87, 88, 90, 94, 96, 101, 103, 104, 105, 106, 109, 113, 114, 115, 116, 117, 118, 119, 125, 127, 128, 129, 131, 132, 134, 135, 136, 142, 143, 145, 147, 150, 153, 154, 155, 157, 160, 162, 164, 165, 171, 172, 173, 174, 176, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 195, 196, 197, 198, 199, 200, 201, 202, 203, 205, 207, 208, 223, 227, 228, 237, 239, 243, 246, 247, 248, 252, 253], "standard": [0, 2, 3, 4, 5, 7, 26, 98, 109, 117, 119, 160, 165, 176, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 197, 198, 199, 201, 202, 203, 205, 206, 207, 246, 247, 250, 252, 253], "must": [0, 1, 2, 3, 4, 5, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 76, 77, 78, 79, 85, 86, 87, 88, 90, 91, 92, 93, 94, 95, 96, 97, 99, 100, 101, 102, 103, 104, 105, 106, 108, 109, 110, 111, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 195, 197, 198, 199, 201, 203, 205, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231, 232, 233, 235, 236, 237, 238, 239, 240, 241, 243, 245, 246, 247, 248, 251, 252], "provid": [0, 2, 3, 4, 5, 13, 14, 26, 59, 88, 95, 99, 109, 130, 133, 147, 159, 160, 163, 175, 176, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 195, 196, 198, 199, 201, 202, 203, 206, 207, 208, 209, 211, 213, 214, 215, 217, 218, 219, 220, 222, 232, 246, 247, 248, 250, 251, 252, 253], "support": [0, 1, 2, 3, 4, 5, 7, 9, 10, 11, 12, 13, 14, 16, 17, 18, 20, 21, 24, 26, 29, 31, 33, 35, 37, 39, 40, 42, 43, 44, 46, 47, 50, 51, 53, 57, 59, 60, 61, 62, 63, 64, 66, 86, 87, 89, 90, 93, 94, 96, 97, 98, 101, 103, 104, 105, 106, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 121, 122, 123, 124, 125, 127, 128, 130, 131, 132, 134, 135, 136, 137, 138, 139, 141, 142, 143, 149, 151, 153, 154, 155, 156, 157, 161, 162, 163, 164, 165, 166, 171, 172, 173, 174, 177, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 193, 197, 198, 199, 204, 207, 208, 223, 224, 225, 227, 228, 229, 231, 232, 233, 235, 236, 237, 238, 239, 240, 241, 243, 245, 246, 247, 251, 252], "an": [0, 1, 5, 7, 9, 10, 11, 12, 13, 14, 15, 18, 19, 20, 21, 22, 23, 26, 28, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 76, 77, 78, 79, 83, 85, 86, 87, 88, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 182, 188, 190, 193, 195, 196, 197, 198, 199, 200, 202, 203, 205, 206, 207, 209, 210, 211, 213, 214, 215, 217, 218, 219, 220, 221, 222, 223, 224, 226, 227, 228, 229, 231, 232, 233, 236, 237, 238, 239, 240, 241, 243, 245, 246, 247, 248, 250, 252, 253], "have": [0, 1, 2, 5, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 55, 57, 58, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 76, 77, 78, 79, 85, 86, 87, 88, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 103, 104, 105, 106, 107, 108, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 182, 193, 195, 196, 198, 199, 202, 205, 207, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231, 232, 233, 235, 236, 237, 238, 239, 240, 241, 243, 245, 247, 248, 251, 252, 253], "follow": [0, 1, 2, 3, 4, 5, 7, 10, 11, 12, 44, 49, 61, 62, 64, 66, 88, 90, 98, 101, 103, 107, 109, 116, 118, 134, 135, 142, 145, 149, 156, 166, 171, 172, 173, 174, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 193, 195, 197, 198, 200, 201, 202, 203, 208, 209, 211, 213, 214, 215, 217, 218, 219, 220, 222, 231, 237, 245, 247, 248, 250, 251, 252, 253], "furthermor": [0, 251, 254], "minimum": [0, 9, 17, 20, 44, 127, 131, 135, 181, 197], "rank": [0, 1, 13, 14, 95, 130, 133, 136, 150, 159, 163, 166, 167, 175, 177, 182, 224, 231, 233, 237, 239, 243, 245, 251], "i": [0, 1, 2, 5, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 23, 24, 25, 26, 29, 30, 31, 33, 34, 35, 37, 39, 40, 41, 42, 43, 44, 47, 49, 51, 55, 57, 59, 60, 61, 62, 63, 64, 65, 66, 69, 71, 74, 76, 77, 78, 79, 83, 85, 86, 87, 88, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 103, 104, 105, 106, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 125, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 188, 190, 193, 194, 195, 197, 198, 199, 201, 202, 203, 205, 206, 207, 209, 210, 211, 212, 213, 214, 215, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231, 232, 233, 235, 236, 237, 238, 239, 240, 241, 243, 245, 246, 247, 248, 250, 251, 252, 253, 254], "e": [0, 1, 2, 5, 7, 9, 10, 11, 18, 19, 20, 26, 40, 43, 47, 49, 51, 55, 57, 62, 63, 65, 66, 69, 71, 76, 77, 78, 86, 87, 88, 90, 93, 94, 95, 100, 101, 102, 108, 109, 115, 116, 117, 118, 119, 125, 127, 129, 130, 131, 133, 134, 135, 136, 137, 138, 139, 141, 142, 143, 144, 145, 147, 149, 150, 152, 153, 154, 155, 156, 158, 159, 160, 162, 163, 164, 165, 166, 167, 171, 172, 173, 174, 176, 181, 182, 188, 190, 195, 196, 197, 198, 199, 200, 201, 202, 205, 209, 211, 213, 214, 215, 217, 218, 219, 220, 222, 224, 227, 228, 231, 233, 236, 238, 239, 240, 241, 243, 245, 246, 247, 248, 251, 252, 253], "number": [0, 1, 5, 9, 10, 11, 12, 13, 14, 16, 17, 18, 25, 26, 31, 33, 35, 37, 39, 44, 56, 58, 60, 61, 62, 63, 64, 65, 66, 73, 76, 79, 82, 87, 88, 90, 93, 94, 95, 96, 97, 98, 100, 101, 103, 105, 106, 107, 108, 110, 111, 113, 114, 115, 116, 118, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 142, 143, 144, 145, 147, 148, 149, 150, 151, 152, 154, 155, 156, 157, 159, 160, 162, 163, 165, 166, 167, 170, 171, 172, 175, 176, 177, 182, 188, 190, 201, 204, 219, 223, 224, 227, 228, 229, 233, 237, 238, 239, 240, 243, 247, 251, 252], "dimens": [0, 1, 13, 14, 16, 17, 19, 40, 55, 56, 57, 58, 78, 88, 95, 99, 125, 126, 127, 129, 131, 133, 136, 140, 143, 146, 148, 158, 159, 160, 162, 163, 166, 167, 168, 169, 171, 172, 173, 174, 175, 176, 177, 182, 190, 209, 211, 212, 213, 214, 215, 217, 218, 219, 220, 222, 223, 224, 225, 226, 227, 228, 229, 231, 232, 233, 236, 237, 238, 239, 240, 241, 243, 245, 251], "0": [0, 1, 5, 9, 10, 11, 12, 15, 24, 25, 26, 29, 35, 38, 48, 57, 61, 62, 63, 64, 65, 66, 69, 71, 76, 78, 85, 86, 87, 90, 93, 94, 95, 96, 97, 98, 100, 101, 116, 117, 118, 119, 129, 134, 140, 142, 143, 145, 149, 150, 151, 152, 153, 154, 156, 159, 160, 162, 164, 165, 166, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 182, 188, 190, 198, 199, 210, 212, 221, 226, 231, 238, 240, 241, 243, 245, 251, 253], "1": [0, 1, 7, 10, 11, 13, 14, 15, 18, 25, 26, 27, 29, 35, 40, 61, 62, 63, 64, 65, 66, 85, 86, 87, 88, 94, 95, 96, 97, 98, 101, 115, 116, 117, 118, 119, 125, 138, 139, 140, 142, 143, 146, 150, 151, 152, 155, 159, 160, 164, 165, 166, 167, 168, 169, 176, 177, 182, 198, 199, 206, 209, 210, 211, 213, 214, 215, 217, 218, 219, 220, 221, 222, 224, 227, 229, 231, 239, 240, 241, 245], "2": [0, 1, 5, 7, 9, 10, 11, 26, 27, 40, 61, 62, 64, 65, 66, 80, 86, 87, 90, 116, 118, 119, 125, 154, 157, 164, 165, 166, 167, 182, 198, 199, 207, 210, 213, 218, 219, 221, 231, 233, 236, 237, 238, 240, 241, 242, 243, 245], "3": [0, 1, 5, 7, 27, 84, 163, 167, 193, 198, 199, 202, 224], "4": [0, 1, 5, 10, 11, 27, 62, 65, 116, 118, 167, 182, 206, 252], "explicitli": [0, 26, 40, 63, 125, 166, 182, 193, 211, 215, 219, 222, 223, 227, 228, 237, 239, 247, 251, 253], "document": [0, 5, 7, 59, 101, 109, 188, 196, 198, 201, 203, 246, 248, 250, 252, 253, 254], "maximum": [0, 1, 16, 115, 127, 131, 181, 197, 231], "n": [0, 1, 13, 14, 40, 55, 86, 88, 95, 115, 125, 126, 129, 130, 133, 136, 140, 143, 150, 159, 160, 162, 164, 165, 166, 167, 168, 169, 175, 176, 177, 182, 209, 210, 211, 213, 214, 215, 217, 218, 219, 220, 221, 222, 223, 224, 226, 227, 228, 229, 231, 232, 233, 235, 236, 237, 240, 241, 243, 245, 251], "zero": [0, 5, 13, 14, 16, 17, 24, 25, 29, 30, 34, 35, 40, 41, 47, 63, 65, 69, 88, 90, 95, 96, 97, 101, 118, 121, 122, 123, 124, 125, 127, 129, 130, 131, 134, 136, 138, 139, 142, 143, 145, 150, 152, 160, 162, 168, 169, 170, 171, 172, 173, 174, 176, 177, 180, 181, 182, 188, 190, 195, 196, 198, 201, 209, 211, 212, 213, 214, 215, 217, 218, 219, 220, 222, 225, 232, 233, 236, 237, 238, 245, 253], "dimension": [0, 13, 14, 15, 16, 17, 19, 24, 25, 29, 34, 35, 40, 88, 97, 115, 125, 127, 129, 130, 131, 136, 143, 150, 160, 162, 163, 176, 177, 182, 190, 195, 207, 209, 211, 213, 214, 215, 217, 218, 219, 220, 222, 224, 225, 228, 229, 233, 235, 236, 245, 247, 251], "apart": 0, "from": [0, 13, 14, 15, 19, 44, 59, 60, 63, 75, 78, 88, 92, 99, 101, 102, 103, 104, 115, 116, 118, 130, 135, 139, 142, 143, 146, 147, 156, 158, 160, 162, 163, 165, 171, 173, 176, 177, 178, 180, 182, 190, 193, 196, 197, 198, 201, 202, 203, 205, 224, 227, 238, 240, 243, 247, 248, 250, 251, 252, 253, 254], "ndim": [0, 181, 237, 240, 241], "devic": [0, 5, 15, 26, 27, 59, 60, 63, 91, 92, 97, 103, 104, 115, 138, 139, 168, 169, 179, 180, 181, 182, 195, 201, 204, 210, 221, 237, 247, 251, 253], "dtype": [0, 5, 15, 26, 60, 63, 73, 75, 88, 89, 91, 92, 97, 98, 102, 103, 104, 107, 109, 115, 138, 139, 143, 147, 162, 179, 180, 181, 190, 193, 195, 201, 207, 243, 251, 252, 253], "all": [0, 5, 15, 19, 23, 26, 60, 63, 87, 90, 97, 99, 134, 148, 154, 165, 167, 168, 169, 175, 177, 181, 182, 193, 195, 196, 198, 199, 200, 201, 202, 203, 205, 211, 212, 215, 216, 219, 222, 224, 236, 238, 239, 245, 246, 247, 250, 251, 253, 254], "thi": [0, 1, 5, 7, 15, 19, 26, 34, 58, 59, 63, 71, 78, 96, 101, 102, 109, 115, 118, 121, 122, 123, 124, 129, 136, 142, 143, 145, 159, 160, 163, 171, 172, 173, 174, 176, 181, 182, 188, 190, 193, 195, 196, 197, 198, 199, 200, 201, 202, 203, 205, 206, 207, 208, 209, 211, 212, 214, 215, 218, 219, 220, 222, 237, 238, 239, 240, 246, 247, 248, 250, 252, 253, 254], "return": [0, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 188, 195, 196, 197, 199, 201, 202, 205, 207, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231, 232, 233, 235, 236, 237, 238, 239, 240, 241, 243, 245, 247, 251, 253], "tupl": [0, 1, 13, 14, 27, 32, 49, 57, 74, 78, 91, 99, 103, 109, 127, 129, 131, 133, 136, 138, 140, 143, 146, 148, 158, 159, 160, 162, 166, 167, 171, 172, 173, 175, 176, 179, 182, 193, 227, 237, 238, 240, 242, 245, 251], "includ": [0, 1, 7, 9, 13, 14, 15, 16, 17, 20, 21, 23, 28, 30, 40, 41, 42, 43, 47, 51, 88, 109, 111, 115, 125, 127, 129, 131, 143, 156, 160, 162, 176, 181, 182, 190, 195, 196, 197, 198, 199, 200, 201, 202, 206, 231, 245, 247, 248, 250, 252, 253], "those": [0, 5, 7, 15, 23, 90, 134, 136, 190, 195, 198, 199, 202, 203, 205, 237, 240, 241, 246, 247, 248, 251, 252, 253], "mean": [0, 26, 181, 193, 199, 201, 202, 207, 248, 251], "var": [0, 181], "std": [0, 181], "which": [0, 1, 5, 7, 8, 13, 14, 15, 16, 17, 18, 19, 26, 30, 40, 41, 44, 59, 60, 63, 75, 77, 78, 83, 88, 91, 92, 95, 97, 98, 99, 101, 103, 104, 107, 115, 125, 127, 129, 131, 135, 136, 138, 139, 143, 145, 148, 150, 155, 159, 160, 162, 163, 164, 168, 169, 171, 172, 173, 174, 175, 176, 177, 179, 180, 182, 195, 196, 197, 198, 199, 200, 201, 202, 203, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 224, 231, 239, 240, 241, 243, 245, 246, 247, 248, 251, 252, 253], "some": [0, 96, 101, 118, 182, 196, 197, 198, 199, 202, 207, 251, 253, 254], "common": [0, 182, 190, 193, 202, 205, 206, 247, 251, 252, 253], "librari": [0, 5, 7, 26, 51, 57, 58, 59, 60, 63, 90, 96, 101, 102, 109, 115, 118, 121, 122, 123, 124, 127, 129, 131, 136, 150, 160, 165, 171, 172, 173, 174, 176, 181, 182, 193, 196, 197, 198, 199, 200, 201, 202, 203, 205, 206, 207, 223, 227, 228, 237, 239, 246, 247, 248, 251, 252, 253, 254], "g": [0, 5, 9, 19, 20, 26, 47, 51, 57, 77, 88, 90, 102, 108, 109, 115, 127, 131, 134, 136, 143, 144, 147, 149, 162, 167, 171, 172, 173, 174, 182, 188, 190, 195, 196, 197, 198, 199, 200, 201, 202, 205, 227, 228, 231, 238, 240, 241, 243, 245, 246, 247, 248, 251, 252, 253], "numpi": [0, 19, 63, 182, 193, 198, 199, 201, 202, 247, 251, 252, 253, 254], "scalar": [0, 2, 49, 60, 181, 182, 195, 205, 245, 253], "valu": [0, 1, 2, 7, 9, 10, 11, 12, 15, 16, 17, 18, 20, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 37, 39, 41, 43, 49, 51, 57, 58, 60, 61, 62, 63, 64, 65, 66, 76, 77, 78, 85, 86, 87, 88, 89, 90, 91, 93, 94, 96, 97, 98, 100, 101, 103, 104, 105, 106, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 127, 128, 129, 131, 132, 134, 136, 137, 138, 142, 143, 145, 149, 150, 151, 152, 153, 154, 155, 156, 160, 162, 163, 164, 165, 170, 171, 172, 173, 174, 176, 177, 179, 181, 188, 190, 193, 195, 197, 199, 200, 201, 205, 207, 210, 213, 217, 218, 219, 220, 221, 222, 223, 227, 228, 229, 231, 232, 233, 236, 237, 238, 239, 240, 241, 243, 245, 247, 251, 253], "rational": [0, 7, 182, 201, 202, 246, 248, 251], "alwai": [0, 12, 42, 60, 63, 98, 134, 146, 182, 193, 198, 199, 202, 227], "necessari": [0, 26, 60, 90, 134, 146, 167, 182, 199, 251], "acceler": [0, 5, 193, 201], "where": [0, 1, 7, 13, 14, 15, 47, 57, 65, 86, 87, 90, 94, 96, 97, 101, 103, 104, 117, 118, 119, 130, 134, 136, 140, 142, 150, 151, 153, 154, 159, 160, 164, 165, 167, 175, 176, 177, 181, 182, 190, 196, 198, 201, 202, 205, 211, 213, 215, 218, 219, 222, 223, 224, 227, 228, 229, 231, 233, 236, 237, 238, 240, 241, 243, 247, 251, 252, 253], "non": [0, 1, 7, 13, 14, 16, 17, 63, 121, 122, 123, 124, 127, 129, 131, 136, 143, 160, 166, 176, 177, 182, 190, 195, 196, 202, 209, 211, 214, 215, 218, 219, 220, 222, 224, 225, 227, 231, 233, 240, 245, 253], "could": [0, 26, 171, 172, 173, 174, 193, 199, 206, 247, 251, 253], "forc": 0, "synchron": [0, 26, 59, 251], "delai": [0, 24, 25, 29, 34, 35, 193, 205, 251], "execut": [0, 190, 193, 202, 204, 206, 251, 253], "model": [0, 57, 58, 90, 134, 198, 205, 253], "repres": [0, 8, 11, 12, 23, 24, 25, 26, 29, 34, 35, 62, 66, 87, 90, 101, 130, 134, 154, 164, 165, 195, 197, 201, 202, 238, 252, 253], "futur": [0, 26, 194, 198, 199, 202, 206, 207, 227, 228, 249, 251, 253], "python": [0, 2, 5, 7, 24, 25, 26, 29, 34, 35, 49, 60, 101, 145, 181, 182, 193, 195, 198, 201, 203, 205, 206, 207, 248, 250, 251, 252], "x": [0, 1, 7, 9, 10, 11, 13, 14, 16, 17, 18, 20, 61, 62, 63, 64, 65, 66, 68, 74, 76, 77, 79, 85, 86, 87, 88, 92, 94, 95, 96, 99, 100, 102, 104, 108, 110, 111, 112, 116, 117, 118, 119, 122, 126, 127, 129, 131, 133, 135, 136, 139, 140, 141, 143, 144, 146, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 162, 163, 164, 165, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 180, 182, 198, 199, 207, 208, 209, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 222, 223, 225, 226, 227, 228, 229, 231, 232, 233, 234, 236, 237, 238, 239, 240, 241, 243, 245, 247, 251, 253], "__pos__": [0, 181, 195], "po": 0, "__neg__": [0, 181, 195], "neg": [0, 13, 14, 15, 44, 47, 65, 78, 88, 90, 95, 97, 99, 101, 111, 116, 118, 134, 142, 145, 148, 152, 156, 163, 177, 181, 182, 195, 198, 224, 245, 251], "x1": [0, 7, 12, 40, 65, 67, 69, 70, 71, 72, 77, 85, 90, 93, 101, 105, 106, 113, 114, 120, 121, 123, 124, 125, 128, 132, 134, 137, 142, 145, 150, 161, 166, 177, 178, 224, 230, 235, 239, 242, 244], "x2": [0, 7, 12, 40, 65, 67, 69, 70, 71, 72, 85, 90, 93, 101, 105, 106, 113, 114, 120, 121, 123, 124, 125, 128, 132, 134, 137, 142, 145, 150, 161, 166, 177, 178, 224, 230, 235, 239, 242, 244], "__add__": [0, 50, 181, 195], "add": [0, 5, 7, 21, 88, 161, 162, 181, 182, 195, 196, 197, 202, 243], "__sub__": [0, 181, 195], "sub": [0, 182], "__mul__": [0, 181, 195], "mul": 0, "__truediv__": [0, 181, 195], "truediv": 0, "__floordiv__": [0, 181], "floordiv": 0, "__mod__": [0, 181], "mod": 0, "__pow__": [0, 181, 195], "pow": [0, 47, 181, 195, 197], "should": [0, 1, 5, 7, 9, 10, 11, 12, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 29, 30, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 50, 51, 52, 55, 57, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 76, 77, 79, 85, 86, 87, 88, 90, 94, 95, 96, 98, 100, 101, 105, 106, 108, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 127, 128, 129, 130, 131, 132, 134, 135, 141, 142, 143, 144, 145, 146, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 161, 162, 164, 165, 166, 168, 169, 170, 171, 172, 173, 174, 176, 177, 182, 188, 195, 196, 197, 198, 201, 202, 203, 207, 209, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 222, 223, 225, 227, 228, 229, 231, 232, 233, 236, 237, 238, 239, 240, 241, 243, 245, 246, 247, 251, 253, 254], "defin": [0, 5, 12, 23, 30, 41, 49, 60, 65, 79, 90, 101, 103, 104, 115, 127, 129, 131, 133, 134, 145, 151, 156, 157, 160, 168, 169, 176, 177, 181, 188, 195, 197, 198, 207, 223, 227, 228, 229, 236, 237, 239, 247, 252, 253, 254], "real": [0, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 24, 25, 29, 30, 31, 33, 35, 37, 39, 41, 44, 51, 60, 61, 62, 63, 64, 65, 66, 76, 77, 85, 86, 87, 88, 90, 91, 93, 94, 96, 97, 98, 100, 101, 103, 105, 106, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 127, 128, 129, 131, 132, 134, 135, 136, 137, 138, 139, 142, 143, 145, 149, 150, 151, 152, 153, 154, 155, 156, 160, 162, 164, 165, 170, 176, 177, 179, 181, 190, 195, 198, 210, 213, 217, 218, 219, 220, 221, 222, 223, 227, 228, 229, 231, 233, 236, 237, 238, 239, 240, 241, 243, 245, 248], "data": [0, 1, 2, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76, 77, 78, 79, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 176, 177, 178, 179, 180, 181, 190, 193, 196, 198, 199, 202, 204, 205, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231, 232, 233, 235, 236, 237, 238, 239, 240, 241, 243, 245, 247, 248, 249, 250, 251, 254], "type": [0, 2, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 55, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76, 77, 78, 79, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 176, 177, 178, 179, 180, 181, 182, 193, 196, 198, 199, 201, 203, 204, 205, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231, 232, 233, 235, 236, 237, 238, 239, 240, 241, 243, 245, 247, 248, 251, 252], "__matmul__": [0, 181, 195], "matmul": [0, 40, 181, 190, 195, 247], "The": [0, 1, 5, 7, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 22, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 55, 57, 58, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 76, 77, 78, 79, 85, 86, 87, 88, 90, 93, 94, 96, 99, 100, 101, 102, 105, 106, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 137, 140, 141, 142, 143, 144, 145, 149, 150, 151, 152, 153, 154, 155, 156, 157, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 176, 177, 178, 182, 190, 193, 195, 196, 197, 199, 200, 201, 202, 205, 206, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231, 232, 233, 235, 236, 237, 238, 239, 240, 241, 243, 245, 246, 247, 248, 250, 251, 252, 253, 254], "__invert__": [0, 181], "inv": [0, 195, 247], "invert": [0, 68, 229, 232, 239], "__inv__": 0, "__and__": [0, 181], "__or__": [0, 181], "__xor__": [0, 181], "xor": [0, 72, 124], "__lshift__": [0, 181], "lshift": 0, "__rshift__": [0, 181], "rshift": 0, "integ": [0, 9, 13, 14, 15, 20, 22, 26, 29, 30, 34, 35, 36, 38, 41, 44, 45, 47, 48, 51, 52, 60, 67, 68, 69, 70, 71, 72, 76, 77, 88, 90, 100, 101, 103, 104, 107, 109, 115, 127, 129, 131, 135, 142, 143, 145, 147, 149, 150, 160, 162, 163, 170, 176, 177, 181, 182, 195, 197, 198, 224, 232, 233, 243, 245, 251], "boolean": [0, 22, 24, 25, 29, 35, 36, 43, 45, 52, 57, 60, 63, 67, 68, 70, 72, 88, 89, 103, 104, 109, 115, 121, 122, 123, 124, 136, 181, 190, 195], "__lt__": [0, 181], "lt": 0, "__le__": [0, 181], "le": 0, "__gt__": [0, 181], "gt": [0, 237, 240], "__ge__": [0, 181], "ge": 0, "__eq__": [0, 181, 195, 202], "eq": 0, "__ne__": [0, 181, 195], "ne": 0, "ani": [0, 1, 9, 10, 11, 23, 24, 25, 26, 28, 29, 34, 35, 43, 59, 61, 62, 66, 89, 93, 110, 111, 137, 156, 181, 182, 190, 195, 198, 199, 201, 207, 240, 248, 250, 251, 254], "chang": [0, 1, 9, 10, 11, 12, 13, 14, 20, 21, 24, 26, 29, 35, 40, 42, 43, 44, 46, 47, 50, 51, 60, 61, 62, 63, 64, 66, 86, 87, 90, 93, 94, 96, 97, 98, 103, 104, 110, 111, 112, 115, 116, 117, 118, 119, 125, 130, 134, 135, 136, 137, 138, 139, 141, 142, 143, 146, 149, 151, 153, 154, 156, 157, 161, 162, 164, 165, 166, 171, 172, 173, 174, 177, 193, 195, 223, 224, 225, 227, 228, 229, 231, 232, 233, 235, 236, 237, 238, 239, 240, 241, 243, 245, 248, 251, 253, 254], "shape": [0, 1, 18, 40, 55, 63, 73, 74, 78, 88, 91, 92, 95, 99, 103, 104, 125, 126, 130, 138, 139, 146, 148, 150, 155, 159, 163, 166, 167, 168, 169, 175, 177, 179, 180, 181, 195, 204, 205, 207, 223, 224, 225, 226, 227, 228, 229, 231, 232, 233, 235, 236, 237, 238, 239, 240, 241, 243, 251, 253], "result": [0, 1, 9, 10, 11, 12, 13, 14, 15, 16, 17, 20, 21, 22, 24, 25, 28, 29, 30, 31, 33, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 76, 77, 79, 85, 86, 87, 90, 93, 94, 96, 100, 101, 105, 106, 108, 110, 111, 112, 113, 114, 116, 117, 118, 119, 120, 121, 122, 123, 124, 127, 128, 129, 131, 132, 134, 135, 137, 141, 142, 143, 144, 145, 147, 149, 150, 151, 152, 153, 154, 156, 157, 159, 160, 161, 162, 164, 165, 166, 170, 171, 176, 182, 188, 190, 195, 197, 198, 199, 205, 223, 224, 226, 231, 232, 238, 245, 251, 252, 253, 254], "promot": [0, 1, 10, 11, 12, 21, 22, 30, 40, 41, 42, 44, 45, 47, 49, 50, 51, 52, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 75, 78, 85, 86, 87, 90, 94, 96, 101, 104, 115, 116, 117, 118, 119, 120, 125, 128, 129, 132, 134, 135, 142, 145, 147, 153, 154, 156, 157, 159, 160, 161, 164, 165, 166, 176, 177, 178, 181, 195, 209, 210, 211, 213, 214, 215, 217, 218, 219, 220, 221, 222, 223, 224, 229, 231, 232, 233, 235, 236, 237, 238, 239, 245, 247], "rule": [0, 7, 10, 11, 12, 21, 22, 30, 40, 41, 42, 44, 45, 47, 49, 50, 51, 52, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 75, 78, 85, 86, 87, 88, 90, 94, 96, 101, 103, 104, 115, 116, 117, 118, 119, 120, 125, 128, 132, 134, 135, 142, 145, 147, 151, 153, 154, 156, 157, 159, 161, 164, 165, 166, 177, 178, 181, 182, 195, 198, 201, 209, 210, 211, 213, 214, 215, 217, 218, 219, 220, 221, 222, 223, 224, 229, 231, 232, 233, 235, 236, 237, 238, 239, 245, 247, 251, 253], "broadcast": [0, 12, 13, 14, 16, 17, 21, 22, 28, 30, 31, 33, 37, 38, 39, 40, 41, 42, 43, 45, 47, 48, 49, 50, 51, 52, 65, 67, 69, 70, 71, 72, 73, 74, 77, 85, 90, 93, 101, 105, 106, 113, 114, 120, 121, 123, 124, 125, 127, 128, 129, 131, 132, 134, 137, 142, 143, 145, 160, 161, 162, 166, 176, 177, 178, 181, 195, 224, 231, 233, 236, 239, 245, 251], "same": [0, 5, 7, 9, 12, 15, 18, 19, 20, 32, 36, 38, 40, 41, 46, 48, 50, 55, 59, 63, 68, 73, 74, 76, 77, 78, 79, 88, 90, 92, 95, 98, 99, 100, 101, 104, 108, 125, 126, 127, 129, 130, 131, 133, 134, 139, 140, 141, 142, 143, 144, 145, 146, 148, 149, 150, 151, 155, 158, 159, 160, 161, 162, 163, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 180, 182, 190, 193, 198, 199, 201, 202, 207, 209, 211, 212, 214, 215, 216, 218, 219, 220, 222, 223, 224, 225, 226, 227, 229, 232, 236, 237, 238, 239, 240, 241, 243, 246, 247, 251, 253], "behavior": [0, 5, 47, 49, 60, 63, 77, 90, 101, 103, 104, 115, 134, 142, 145, 150, 163, 171, 172, 173, 174, 181, 182, 190, 193, 195, 197, 198, 205, 206, 247, 248, 251, 252, 253, 254], "special": [0, 9, 10, 11, 12, 20, 21, 24, 25, 28, 29, 30, 35, 41, 42, 43, 47, 51, 61, 62, 64, 65, 66, 76, 85, 86, 87, 88, 90, 93, 94, 96, 100, 101, 110, 111, 112, 116, 117, 118, 119, 120, 127, 128, 129, 131, 132, 134, 137, 142, 143, 145, 149, 151, 152, 153, 154, 156, 157, 160, 162, 164, 165, 170, 176, 195, 196, 198, 238, 243], "case": [0, 1, 5, 7, 9, 10, 11, 12, 15, 20, 21, 24, 25, 28, 29, 30, 35, 41, 42, 43, 47, 51, 60, 61, 62, 64, 65, 66, 76, 85, 86, 87, 88, 90, 93, 94, 96, 100, 101, 110, 111, 112, 116, 117, 118, 119, 120, 127, 128, 129, 130, 131, 132, 134, 137, 142, 143, 145, 149, 151, 152, 153, 154, 156, 157, 160, 162, 164, 165, 170, 176, 182, 193, 195, 196, 197, 198, 199, 202, 203, 205, 237, 238, 240, 243, 247, 249, 251, 254], "its": [0, 5, 26, 40, 73, 90, 98, 125, 134, 146, 148, 197, 198, 201, 202, 246, 251, 252, 253], "respect": [0, 9, 12, 20, 21, 22, 28, 30, 31, 33, 37, 38, 39, 41, 42, 43, 45, 48, 50, 51, 52, 65, 67, 69, 70, 71, 72, 77, 87, 90, 93, 101, 105, 106, 113, 114, 115, 120, 121, 123, 124, 128, 130, 132, 133, 134, 137, 145, 154, 161, 164, 165, 166, 177, 195, 197, 200, 202, 224, 227, 237, 240], "binari": [0, 5, 67, 70, 72, 164, 165, 196], "two": [0, 1, 15, 19, 40, 55, 65, 71, 97, 125, 126, 130, 149, 166, 168, 169, 171, 172, 173, 174, 177, 182, 190, 201, 202, 205, 206, 223, 225, 226, 227, 228, 229, 231, 232, 233, 235, 236, 237, 238, 239, 240, 241, 243, 247, 251, 252, 253, 254], "operand": [0, 1, 9, 10, 11, 12, 24, 25, 29, 35, 61, 62, 64, 65, 66, 76, 85, 86, 87, 88, 90, 93, 94, 96, 100, 101, 110, 111, 112, 116, 117, 118, 119, 120, 127, 128, 131, 132, 134, 137, 142, 143, 145, 149, 151, 152, 153, 154, 156, 157, 162, 164, 165, 170, 190, 195, 197, 238, 243], "assign": [0, 199], "For": [0, 1, 5, 7, 9, 10, 11, 12, 16, 17, 18, 20, 24, 25, 26, 29, 30, 31, 33, 35, 37, 39, 41, 44, 57, 58, 61, 62, 64, 65, 66, 76, 79, 85, 86, 87, 88, 90, 93, 94, 96, 100, 101, 105, 106, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 127, 128, 130, 131, 132, 134, 135, 137, 142, 143, 145, 149, 150, 151, 152, 153, 154, 155, 156, 157, 159, 162, 164, 165, 170, 171, 172, 173, 174, 182, 188, 193, 197, 198, 200, 202, 205, 210, 221, 238, 240, 241, 243, 251, 253, 254], "exampl": [0, 5, 12, 23, 109, 159, 181, 182, 193, 198, 199, 200, 202, 205, 206, 207, 243, 247, 251, 253, 254], "after": [0, 1, 40, 125, 156, 167], "addit": [0, 5, 7, 12, 50, 59, 88, 161, 181, 182, 190, 196, 198, 201, 247, 251, 252, 254], "modifi": [0, 199, 250], "equal": [0, 1, 9, 10, 11, 18, 20, 21, 22, 28, 30, 31, 33, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 58, 61, 62, 63, 64, 65, 66, 69, 71, 77, 87, 89, 94, 96, 97, 103, 104, 109, 111, 116, 117, 118, 119, 129, 136, 137, 138, 139, 142, 143, 149, 154, 155, 156, 160, 162, 163, 165, 166, 167, 171, 172, 173, 174, 176, 181, 182, 188, 195, 198, 202, 209, 211, 213, 214, 215, 217, 218, 219, 220, 222, 224, 226, 232, 233, 236, 237, 238, 239, 243, 251], "equival": [0, 20, 21, 22, 28, 30, 31, 33, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 71, 101, 121, 122, 123, 124, 145, 149, 163, 182, 190, 198, 199, 233, 236, 239, 245, 251], "discuss": [0, 93, 137, 201, 202, 206, 251, 252, 253], "copi": [0, 1, 59, 60, 63, 102, 146, 155, 196, 201, 202, 204, 250, 251], "view": [0, 102, 204], "behaviour": [0, 204, 251, 253], "mutabl": [0, 204], "mai": [0, 5, 7, 15, 16, 17, 18, 23, 26, 28, 31, 33, 37, 39, 43, 51, 57, 58, 59, 60, 89, 90, 93, 101, 102, 105, 106, 109, 113, 114, 115, 121, 122, 123, 124, 127, 128, 129, 131, 132, 134, 136, 137, 146, 150, 155, 160, 165, 171, 172, 173, 174, 176, 181, 182, 188, 190, 193, 196, 197, 198, 199, 200, 201, 202, 203, 205, 206, 207, 227, 237, 238, 240, 246, 247, 251, 252, 253], "via": [0, 26, 101, 163, 182, 196, 201, 202, 206, 208, 236, 246, 247, 248, 251], "__iadd__": 0, "__isub__": 0, "__imul__": 0, "__itruediv__": 0, "__ifloordiv__": 0, "__ipow__": 0, "__imod__": 0, "__imatmul__": 0, "__iand__": 0, "__ior__": 0, "__ixor__": 0, "__ilshift__": 0, "__irshift__": 0, "appli": [0, 12, 77, 78, 85, 90, 134, 147, 149, 159, 166, 182, 190, 193, 198, 209, 211, 214, 215, 218, 219, 220, 222, 233, 236, 247, 251, 253], "match": [0, 1, 5, 9, 20, 63, 101, 145, 166, 203, 227, 228, 231, 245, 253], "op": [0, 190], "__radd__": 0, "__rsub__": 0, "__rmul__": 0, "__rtruediv__": 0, "__rfloordiv__": 0, "__rpow__": 0, "__rmod__": 0, "__rmatmul__": 0, "__rand__": 0, "__ror__": 0, "__rxor__": 0, "__rlshift__": 0, "__rrshift__": 0, "arrai": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 83, 85, 86, 87, 88, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 183, 184, 185, 186, 187, 188, 189, 191, 192, 193, 195, 196, 197, 198, 199, 200, 201, 202, 203, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 252, 254], "refer": [1, 13, 14, 96, 97, 118, 160, 166, 167, 176, 177, 182, 198, 199, 207, 224], "automat": [1, 251], "implicit": [1, 201, 202, 205, 251], "expans": [1, 251], "size": [1, 13, 14, 88, 95, 115, 136, 148, 158, 163, 166, 177, 181, 182, 200, 206, 211, 215, 219, 222, 224, 226, 235, 237, 240, 251], "without": [1, 7, 26, 57, 136, 146, 171, 172, 173, 174, 193, 196, 197, 200, 250, 251, 253], "purpos": [1, 5, 96, 118, 193, 238, 247, 249, 250, 253], "make": [1, 7, 193, 196, 197, 199, 201, 205, 209, 211, 213, 214, 215, 217, 218, 219, 220, 222, 246, 248, 251], "differ": [1, 12, 49, 50, 77, 78, 88, 90, 98, 101, 134, 143, 159, 161, 162, 182, 193, 199, 202, 203, 205, 216, 227, 237, 238, 240, 243, 247, 251, 252, 253], "compat": [1, 12, 13, 14, 16, 17, 18, 21, 22, 28, 30, 31, 33, 37, 38, 39, 40, 41, 42, 43, 45, 47, 48, 49, 50, 51, 52, 65, 67, 69, 70, 71, 72, 74, 77, 85, 90, 93, 101, 105, 106, 113, 114, 115, 120, 121, 123, 124, 125, 127, 128, 129, 131, 132, 134, 137, 142, 143, 145, 146, 155, 160, 161, 162, 176, 177, 178, 190, 195, 198, 199, 203, 224, 231, 233, 236, 239, 245, 251, 253], "element": [1, 9, 10, 11, 12, 13, 14, 15, 20, 21, 22, 24, 25, 28, 29, 30, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 54, 58, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 76, 77, 79, 85, 86, 87, 88, 90, 93, 94, 96, 97, 99, 100, 101, 103, 104, 105, 106, 108, 110, 111, 112, 113, 114, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 127, 128, 129, 131, 132, 134, 135, 136, 137, 141, 142, 143, 144, 145, 146, 148, 149, 150, 151, 152, 153, 154, 156, 157, 158, 160, 161, 162, 163, 164, 165, 167, 168, 169, 170, 171, 172, 173, 174, 176, 178, 181, 182, 195, 197, 224, 227, 236, 237, 238, 240, 243, 251], "wise": [1, 9, 10, 12, 20, 21, 22, 28, 30, 31, 33, 36, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 61, 64, 65, 67, 68, 69, 70, 71, 72, 77, 79, 85, 90, 93, 101, 105, 106, 108, 113, 114, 120, 121, 122, 123, 124, 128, 132, 134, 137, 142, 144, 145, 161, 181, 195, 197, 251], "oper": [1, 12, 19, 24, 26, 34, 40, 57, 58, 59, 61, 64, 71, 86, 88, 90, 101, 117, 119, 125, 134, 142, 143, 145, 147, 153, 157, 162, 164, 166, 181, 182, 187, 190, 195, 198, 199, 200, 201, 202, 243, 247, 248, 251, 252, 253], "facilit": [1, 188, 193], "user": [1, 7, 165, 193, 196, 197, 199, 202, 206, 247, 251, 252, 253], "ergonom": 1, "encourag": [1, 251, 252], "avoid": [1, 9, 63, 90, 96, 101, 118, 134, 146, 196, 199, 202, 205, 247, 251, 253], "unnecessari": [1, 247], "can": [1, 7, 26, 60, 75, 109, 182, 190, 193, 196, 198, 199, 201, 202, 207, 236, 237, 240, 246, 247, 251, 252, 253, 254], "potenti": [1, 26, 96, 118, 199, 251], "enabl": [1, 202, 206, 207, 251], "more": [1, 7, 15, 19, 26, 40, 58, 60, 63, 73, 88, 96, 99, 101, 118, 125, 136, 142, 163, 171, 172, 173, 174, 182, 190, 193, 196, 197, 198, 199, 200, 201, 202, 203, 206, 207, 238, 247, 248, 251, 252, 254], "memori": [1, 26, 60, 102, 193, 199, 200, 202, 251, 253], "effici": [1, 193, 199], "through": [1, 60, 65, 246, 248, 252, 253], "vector": [1, 40, 125, 130, 177, 224, 235, 240, 241, 245, 247, 251], "reduc": [1, 13, 14, 16, 17, 127, 129, 131, 143, 160, 162, 176, 182, 237, 240, 247, 252, 253], "consumpt": [1, 26, 252], "cach": 1, "local": [1, 202], "given": [1, 23, 59, 99, 115, 148, 150, 175, 190, 198, 199, 202, 203, 207, 218, 219, 228, 238, 247, 248, 251, 253], "involv": [1, 12, 90, 101, 134, 142, 147, 190, 197, 198, 202, 206], "singleton": [1, 13, 14, 16, 17, 95, 127, 129, 131, 143, 158, 160, 162, 167, 176, 231, 245, 251], "whose": [1, 5, 9, 11, 19, 20, 47, 55, 62, 66, 85, 86, 87, 97, 99, 126, 142, 148, 152, 153, 154, 163, 164, 165, 166, 168, 169, 171, 172, 173, 182, 199, 223, 225, 226, 227, 228, 229, 231, 232, 233, 235, 236, 237, 238, 239, 240, 241, 243, 245, 251, 253], "one": [1, 15, 19, 26, 40, 51, 58, 60, 63, 73, 75, 88, 90, 95, 97, 99, 101, 109, 115, 125, 130, 134, 136, 138, 139, 150, 158, 163, 171, 172, 173, 174, 177, 182, 193, 196, 198, 199, 201, 202, 205, 206, 207, 209, 211, 213, 214, 215, 216, 217, 218, 219, 220, 222, 235, 236, 237, 245, 247, 248, 251, 253], "virtual": 1, "repeat": [1, 182, 253], "across": [1, 5, 90, 101, 134, 165, 195, 197, 198, 202, 246, 251], "correspond": [1, 16, 17, 23, 47, 65, 73, 77, 88, 142, 143, 146, 148, 150, 160, 162, 166, 171, 172, 173, 174, 176, 177, 182, 197, 211, 215, 219, 222, 224, 227, 231, 239, 243, 250, 251], "If": [1, 5, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 23, 24, 25, 26, 29, 34, 35, 40, 44, 47, 51, 55, 57, 59, 60, 61, 62, 63, 64, 65, 66, 74, 76, 77, 78, 85, 86, 87, 88, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 109, 110, 111, 112, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 142, 143, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 158, 159, 160, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 179, 180, 182, 196, 198, 202, 208, 209, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 222, 223, 224, 227, 228, 229, 231, 232, 233, 236, 237, 238, 239, 240, 243, 245, 246, 247, 251, 253], "ar": [1, 5, 7, 15, 16, 17, 19, 23, 24, 25, 26, 27, 29, 34, 35, 40, 49, 55, 58, 60, 77, 85, 86, 89, 90, 94, 97, 98, 99, 101, 102, 115, 121, 122, 123, 124, 125, 134, 136, 142, 148, 149, 153, 164, 165, 167, 171, 173, 177, 182, 190, 193, 195, 196, 197, 198, 199, 200, 201, 202, 203, 205, 206, 207, 209, 210, 211, 214, 215, 218, 219, 220, 221, 222, 224, 227, 228, 233, 236, 237, 240, 246, 247, 248, 251, 252, 253, 254], "unequ": 1, "lower": [1, 77, 97, 168, 223], "higher": [1, 182, 196, 247, 252], "prepend": [1, 40, 95, 125, 167], "until": [1, 167], "store": [1, 202, 243], "determin": [1, 10, 11, 12, 13, 14, 21, 22, 26, 30, 40, 41, 42, 44, 45, 47, 50, 51, 52, 61, 62, 64, 65, 66, 67, 69, 70, 71, 72, 75, 78, 85, 86, 87, 88, 90, 94, 96, 101, 110, 111, 112, 116, 117, 118, 119, 120, 125, 128, 132, 134, 135, 142, 145, 152, 153, 154, 156, 157, 161, 163, 164, 165, 166, 171, 172, 173, 174, 177, 178, 190, 198, 201, 202, 209, 210, 211, 213, 214, 215, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 229, 231, 232, 233, 235, 236, 237, 238, 239, 243, 245, 247, 251], "let": [1, 9, 10, 11, 12, 62, 66, 85, 87, 88, 93, 94, 96, 110, 111, 112, 115, 116, 118, 129, 137, 143, 150, 151, 154, 156, 160, 162, 165, 167, 176, 177, 182, 206, 223, 227, 228, 229, 237, 239, 240, 243], "b": [1, 9, 10, 11, 12, 57, 62, 66, 87, 90, 93, 94, 96, 101, 110, 111, 112, 115, 116, 118, 134, 137, 151, 154, 156, 159, 165, 177, 182, 195, 198, 199, 203, 236, 239, 253], "both": [1, 40, 44, 47, 51, 65, 77, 88, 90, 98, 101, 115, 125, 135, 142, 143, 162, 165, 166, 177, 182, 198, 199, 201, 205, 207, 224, 243, 247, 251, 252], "shape1": 1, "describ": [1, 5, 12, 88, 90, 93, 109, 134, 137, 142, 143, 162, 190, 198, 201, 205, 210, 221, 243, 251], "shape2": 1, "n1": [1, 130], "len": [1, 130, 167], "n2": [1, 130], "max": [1, 77, 98, 107, 167, 181, 182, 231, 233, 236], "temporari": 1, "list": [1, 73, 78, 130, 159, 182, 193, 195, 202, 251, 253], "length": [1, 15, 130, 146, 166, 182, 209, 210, 212, 213, 214, 216, 217, 218, 219, 220, 221, 240, 241], "while": [1, 101, 115, 121, 122, 123, 124, 129, 133, 150, 160, 171, 172, 176, 181, 182, 188, 193, 198, 199, 200, 202, 205, 236, 247, 252, 253, 254], "d1": 1, "els": [1, 193, 252], "d2": 1, "set": [1, 18, 49, 65, 152, 155, 160, 168, 169, 171, 173, 174, 176, 181, 182, 196, 197, 198, 199, 202, 203, 206, 207, 209, 213, 214, 217, 218, 220, 223, 227, 228, 229, 233, 236, 237, 239, 240, 246, 247, 251, 253, 254], "th": [1, 97, 167, 182], "throw": 1, "except": [1, 7, 13, 14, 74, 78, 88, 97, 102, 115, 136, 159, 163, 175, 182, 190, 193, 197, 199, 202, 204, 205, 219, 236, 248, 251, 252, 253], "demonstr": 1, "applic": [1, 88, 143, 162, 190, 243, 247, 251, 252], "4d": 1, "8": [1, 5, 7, 27, 167, 190, 193], "6": [1, 7, 167], "3d": 1, "7": [1, 7, 27, 207], "5": [1, 182, 251], "2d": 1, "1d": 1, "15": 1, "do": [1, 26, 90, 134, 145, 188, 193, 196, 198, 199, 201, 202, 203, 247, 248, 250, 251, 253, 254], "doe": [1, 15, 137, 163, 182, 190, 193, 196, 197, 198, 199, 200, 202, 203, 205, 207, 247, 251, 253, 254], "second": [1, 12, 65, 67, 69, 70, 71, 72, 93, 105, 106, 113, 114, 120, 121, 123, 124, 125, 128, 132, 134, 137, 142, 159, 161, 166, 171, 172, 173, 177, 178, 224, 227, 235, 237, 238, 240, 241, 251], "onli": [1, 5, 7, 16, 17, 23, 26, 40, 57, 58, 63, 99, 109, 115, 121, 122, 123, 124, 125, 129, 160, 176, 181, 182, 190, 193, 196, 198, 199, 201, 202, 203, 205, 207, 212, 229, 236, 237, 239, 247, 248, 251, 252, 253, 254], "append": [1, 40, 69, 95, 125, 226], "As": [1, 115, 142, 171, 172, 173, 174, 193, 201, 207, 253], "impli": [1, 171, 172, 173, 174, 250, 251], "__setitem__": [1, 163, 181, 195], "Such": [1, 197, 247], "right": [1, 69, 71, 150, 156, 196, 240, 250], "hand": [1, 190], "left": [1, 5, 60, 69, 101, 103, 150, 163, 182, 190, 227, 228, 240, 251], "index": [1, 5, 16, 17, 18, 32, 34, 49, 57, 83, 97, 130, 133, 136, 150, 159, 163, 166, 171, 172, 173, 181, 251, 253], "perform": [1, 5, 13, 14, 26, 40, 59, 60, 90, 125, 134, 166, 182, 196, 197, 198, 199, 200, 201, 209, 211, 214, 215, 216, 218, 219, 220, 222, 240, 241, 247, 251, 252, 253], "empti": [1, 13, 14, 15, 143, 162, 181, 182, 195, 243, 251], "ok": 1, "allow": [1, 26, 142, 146, 182, 195, 196, 197, 199, 202, 205, 206, 247, 253], "NOT": [1, 122, 250], "adher": [2, 7, 8, 181, 182, 193, 246, 251], "convent": [2, 7, 10, 11, 26, 40, 61, 62, 64, 65, 66, 88, 116, 118, 125, 142, 156, 181, 182, 188, 198, 202, 246, 247, 252], "each": [2, 9, 10, 11, 12, 20, 21, 22, 28, 30, 31, 33, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 76, 77, 79, 85, 86, 87, 90, 93, 94, 96, 100, 101, 105, 106, 108, 110, 111, 112, 113, 114, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 128, 130, 132, 133, 134, 135, 136, 137, 141, 142, 144, 145, 148, 149, 150, 151, 152, 153, 154, 156, 157, 159, 161, 164, 165, 166, 167, 170, 171, 172, 182, 193, 197, 201, 205, 207, 211, 215, 219, 222, 223, 224, 225, 229, 231, 232, 233, 236, 237, 238, 239, 240, 241, 246, 247, 251, 252, 253], "float": [2, 9, 10, 11, 12, 13, 14, 15, 20, 21, 24, 25, 28, 29, 30, 31, 33, 34, 35, 37, 39, 40, 41, 42, 43, 44, 47, 49, 50, 51, 60, 61, 62, 63, 64, 65, 66, 76, 77, 79, 80, 81, 82, 84, 85, 86, 87, 88, 90, 91, 93, 94, 96, 97, 98, 100, 101, 103, 104, 108, 109, 110, 111, 112, 115, 116, 117, 118, 119, 120, 125, 127, 128, 129, 131, 132, 134, 135, 136, 137, 138, 139, 142, 143, 144, 145, 147, 149, 150, 151, 152, 153, 154, 156, 157, 160, 161, 162, 164, 165, 166, 170, 171, 172, 173, 174, 176, 177, 179, 181, 188, 195, 197, 198, 205, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 225, 227, 228, 229, 231, 232, 233, 236, 237, 238, 239, 240, 241, 243, 245, 247, 251, 252], "point": [2, 9, 10, 11, 12, 13, 14, 15, 20, 24, 25, 29, 34, 35, 40, 41, 42, 44, 47, 50, 51, 60, 61, 62, 63, 64, 65, 66, 76, 77, 79, 80, 81, 82, 84, 85, 86, 87, 88, 90, 91, 93, 94, 96, 97, 98, 100, 101, 103, 104, 108, 109, 110, 111, 112, 115, 116, 117, 118, 119, 120, 125, 127, 128, 129, 131, 132, 134, 135, 136, 137, 138, 139, 142, 143, 144, 145, 147, 149, 150, 151, 152, 153, 154, 156, 157, 160, 161, 162, 164, 165, 166, 170, 171, 172, 173, 174, 176, 177, 179, 181, 188, 195, 197, 198, 202, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 225, 227, 228, 229, 231, 232, 233, 236, 237, 238, 239, 240, 241, 243, 245, 247, 251, 253], "creat": [3, 15, 60, 91, 92, 97, 103, 104, 115, 138, 139, 179, 180, 187, 193, 202, 210, 221, 247, 251], "true": [5, 13, 14, 16, 17, 18, 24, 25, 29, 35, 60, 63, 75, 88, 93, 98, 101, 110, 111, 112, 115, 121, 122, 123, 124, 127, 129, 131, 136, 137, 143, 146, 152, 155, 160, 162, 171, 172, 173, 174, 176, 178, 182, 195, 223, 231, 240, 245, 247], "fals": [5, 13, 14, 16, 17, 18, 24, 25, 29, 35, 60, 63, 75, 88, 93, 110, 111, 112, 115, 121, 122, 123, 124, 127, 129, 131, 137, 143, 146, 152, 155, 160, 162, 171, 172, 173, 174, 176, 182, 223, 231, 240, 245], "bit": [5, 68, 69, 71, 85, 88, 98, 107, 143, 152, 162, 190, 197, 243], "sign": [5, 9, 10, 11, 12, 15, 20, 41, 44, 62, 65, 66, 71, 85, 87, 88, 90, 94, 96, 101, 109, 116, 118, 134, 135, 142, 143, 145, 150, 152, 154, 156, 162, 165, 171, 172, 173, 174, 181, 188, 195, 198, 237, 238, 243], "exist": [5, 7, 60, 78, 193, 195, 198, 201, 202, 203, 229, 248, 251, 252], "interv": [5, 10, 11, 13, 14, 15, 61, 62, 64, 66, 95, 115, 116, 118, 133, 159, 166, 168, 169, 175, 177, 182, 224, 248], "128": 5, "127": 5, "16": [5, 190], "32": [5, 190], "767": 5, "147": 5, "483": 5, "647": 5, "64": [5, 190], "9": [5, 27], "223": 5, "372": 5, "036": 5, "854": 5, "775": 5, "807": 5, "unsign": [5, 88, 109, 143, 162, 181, 243], "255": 5, "65": 5, "535": [5, 195], "294": 5, "967": 5, "295": 5, "18": 5, "446": [5, 195], "744": 5, "073": 5, "709": 5, "551": [5, 195], "615": 5, "ieee": [5, 12, 65, 80, 81, 82, 84, 90, 96, 98, 118, 134, 145, 156, 164, 165, 181, 188, 197, 198, 251], "754": [5, 12, 65, 80, 81, 82, 84, 90, 96, 98, 118, 134, 145, 156, 164, 165, 181, 188, 197, 198, 251], "singl": [5, 7, 24, 25, 29, 34, 35, 171, 172, 181, 190, 195, 196, 198, 201, 202, 207, 247, 251, 252, 253], "precis": [5, 9, 20, 42, 60, 98, 103, 104, 108, 134, 144, 156, 190, 195, 197, 227, 228, 231, 238, 240, 241, 245, 251], "see": [5, 10, 11, 12, 13, 14, 16, 17, 18, 21, 22, 26, 28, 30, 31, 33, 34, 37, 38, 39, 40, 41, 42, 43, 45, 47, 48, 49, 50, 51, 52, 53, 59, 61, 62, 64, 65, 66, 67, 69, 70, 71, 72, 74, 77, 85, 90, 93, 96, 101, 102, 104, 105, 106, 113, 114, 116, 118, 120, 121, 123, 124, 125, 127, 128, 129, 131, 132, 134, 136, 137, 142, 143, 145, 147, 151, 155, 156, 157, 160, 161, 162, 171, 172, 173, 174, 176, 177, 178, 181, 182, 190, 192, 193, 196, 198, 200, 201, 202, 207, 224, 231, 233, 236, 239, 245, 246, 251, 252, 253, 254], "2019": [5, 12, 90, 96, 118, 134, 181, 197, 251, 253], "doubl": [5, 166, 190, 195], "imaginari": [5, 10, 11, 12, 13, 14, 44, 61, 62, 63, 64, 66, 79, 87, 90, 93, 94, 96, 98, 108, 116, 118, 134, 135, 136, 137, 138, 139, 142, 149, 154, 156, 165, 195, 198], "compon": [5, 10, 11, 12, 13, 14, 44, 62, 63, 66, 79, 87, 90, 93, 94, 96, 98, 108, 116, 118, 134, 135, 136, 137, 138, 139, 142, 144, 149, 154, 156, 164, 165, 171, 172, 173, 174, 195, 198, 212, 221], "requir": [5, 10, 11, 24, 25, 29, 34, 35, 59, 61, 62, 63, 64, 66, 88, 109, 156, 159, 163, 165, 175, 181, 182, 188, 190, 193, 195, 196, 197, 198, 199, 200, 201, 202, 205, 207, 246, 247, 251, 252, 253], "subnorm": 5, "k": [5, 40, 97, 125, 136, 168, 169, 182, 223, 227, 228, 229, 237, 239, 240, 241, 243, 251], "denorm": 5, "us": [5, 7, 19, 26, 27, 59, 60, 83, 98, 115, 117, 119, 148, 171, 173, 182, 190, 195, 197, 198, 199, 200, 202, 203, 206, 207, 208, 209, 211, 213, 214, 215, 217, 218, 219, 220, 222, 246, 247, 248, 249, 250, 251, 254], "gradual": [5, 251], "underflow": [5, 9, 90, 101, 238], "howev": [5, 16, 17, 18, 31, 33, 37, 39, 57, 88, 101, 105, 106, 109, 113, 114, 115, 127, 128, 131, 132, 150, 155, 163, 164, 165, 193, 196, 197, 198, 199, 200, 202, 247, 248, 251, 253], "hardwar": [5, 53, 197, 201, 202, 227, 240, 247, 251], "univers": [5, 196, 202, 247, 251], "mani": [5, 167, 251, 253], "platform": 5, "compil": [5, 165, 193, 196, 200, 251], "toggl": 5, "daz": 5, "flush": 5, "ftz": 5, "increas": [5, 197, 252], "guard": 5, "against": [5, 40, 73, 125, 165, 182, 233, 236, 254], "time": [5, 7, 16, 17, 171, 172, 193, 200, 201, 206, 223, 227, 228, 229, 237, 239, 240, 247, 251, 253], "attack": 5, "accordingli": [5, 10, 11, 13, 14, 16, 17, 59, 61, 62, 64, 66, 90, 96, 101, 115, 116, 118, 127, 129, 130, 131, 134, 136, 143, 150, 156, 160, 162, 171, 172, 173, 174, 176, 182, 190, 197, 198, 199, 200, 202, 231, 237, 245, 247], "unspecifi": [5, 10, 11, 16, 17, 18, 30, 31, 33, 37, 39, 41, 47, 51, 60, 62, 66, 77, 78, 87, 90, 94, 96, 101, 103, 104, 105, 106, 113, 114, 115, 127, 128, 131, 132, 142, 145, 150, 154, 155, 156, 159, 163, 165, 182, 188, 190, 227, 228, 251], "thu": [5, 16, 17, 18, 30, 31, 33, 37, 39, 41, 47, 57, 60, 71, 77, 101, 103, 104, 105, 106, 113, 114, 115, 127, 128, 131, 132, 142, 145, 150, 155, 164, 165, 182, 188, 197, 198, 227, 228, 240, 247], "vari": [5, 150, 165, 171, 172, 173, 174, 190, 197], "beyond": [5, 148, 190, 251], "specifi": [5, 13, 14, 15, 16, 17, 18, 26, 29, 59, 60, 63, 74, 78, 88, 91, 95, 98, 99, 103, 109, 115, 138, 143, 145, 148, 158, 159, 162, 163, 167, 168, 169, 171, 172, 173, 174, 177, 179, 182, 190, 195, 197, 198, 199, 201, 202, 203, 207, 209, 211, 212, 213, 214, 215, 217, 218, 219, 220, 222, 224, 226, 243, 245, 247, 248, 251, 253, 254], "function": [5, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 28, 29, 30, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 60, 61, 62, 64, 65, 66, 74, 78, 86, 87, 88, 94, 96, 99, 109, 115, 116, 118, 121, 122, 123, 124, 125, 129, 136, 142, 145, 146, 151, 153, 154, 155, 156, 159, 160, 163, 164, 165, 166, 167, 171, 172, 173, 174, 175, 176, 177, 181, 193, 196, 198, 199, 200, 201, 202, 205, 206, 207, 209, 211, 212, 214, 215, 216, 218, 219, 220, 222, 223, 224, 227, 228, 229, 233, 236, 237, 238, 239, 240, 241, 246, 247, 248, 251, 252, 253], "attribut": [5, 23, 98, 107, 181, 192, 248, 251, 252, 253], "other": [5, 21, 22, 23, 26, 28, 30, 31, 33, 37, 38, 39, 40, 41, 42, 43, 45, 47, 48, 50, 51, 52, 63, 89, 90, 96, 101, 102, 118, 133, 134, 160, 176, 182, 193, 195, 197, 198, 199, 200, 201, 202, 203, 207, 219, 236, 246, 247, 250, 251, 253], "wai": [5, 63, 193, 196, 202, 203, 248, 251, 252, 253, 254], "f4": [5, 190], "order": [5, 7, 16, 17, 18, 19, 26, 31, 33, 37, 39, 55, 60, 63, 65, 89, 99, 101, 105, 106, 113, 114, 127, 128, 131, 132, 136, 150, 155, 164, 165, 166, 171, 172, 173, 174, 182, 188, 190, 195, 197, 200, 201, 203, 227, 228, 231, 240, 241, 245, 247, 248, 251, 252], "ensur": [5, 26, 150, 193, 197, 247, 251, 252, 253], "portabl": [5, 59, 115, 197, 199, 202, 203, 251], "consum": [5, 26, 63, 193, 198, 199, 207, 246, 251, 252], "recommend": [5, 7, 19, 23, 26, 115, 121, 122, 123, 124, 129, 145, 160, 176, 188, 197, 201, 202, 251], "either": [5, 9, 10, 11, 12, 24, 26, 35, 40, 65, 77, 87, 88, 90, 93, 94, 96, 98, 101, 102, 109, 110, 111, 115, 116, 117, 118, 119, 120, 125, 128, 132, 134, 143, 145, 151, 152, 153, 156, 162, 164, 165, 166, 182, 197, 198, 199, 203, 207, 211, 215, 219, 222, 238, 243, 251, 252, 254], "depend": [5, 9, 10, 11, 16, 17, 18, 20, 26, 29, 31, 33, 37, 39, 44, 47, 51, 57, 58, 59, 61, 62, 63, 64, 65, 66, 77, 86, 87, 90, 94, 96, 105, 106, 113, 114, 115, 116, 117, 118, 119, 127, 128, 131, 132, 134, 135, 142, 150, 153, 154, 155, 164, 165, 178, 188, 190, 197, 198, 201, 204, 205, 207, 227, 228, 237, 238, 239, 240, 247, 251, 253, 254], "whether": [5, 13, 14, 59, 60, 63, 88, 89, 109, 112, 115, 146, 152, 195, 202, 223, 227, 228, 237, 239, 246, 250, 251, 253], "otherwis": [5, 13, 14, 15, 16, 17, 59, 60, 63, 75, 127, 129, 131, 143, 146, 150, 151, 160, 162, 176, 177, 178, 181, 182, 193, 202, 218, 219, 223, 225, 231, 238, 245, 250], "note": [5, 7, 9, 10, 11, 12, 13, 14, 20, 21, 24, 25, 26, 29, 34, 35, 40, 42, 43, 44, 46, 47, 50, 51, 61, 62, 63, 64, 65, 66, 76, 77, 79, 85, 86, 87, 88, 90, 93, 94, 96, 97, 98, 100, 101, 103, 104, 108, 109, 110, 111, 112, 116, 117, 118, 119, 120, 125, 127, 128, 129, 130, 131, 132, 134, 135, 136, 137, 138, 139, 141, 142, 143, 144, 145, 149, 150, 151, 152, 153, 154, 156, 157, 160, 161, 162, 163, 164, 165, 166, 170, 171, 172, 173, 174, 176, 177, 181, 182, 195, 201, 205, 207, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 227, 228, 229, 231, 232, 233, 235, 236, 237, 238, 239, 240, 241, 243, 245, 251, 252, 253, 254], "possibl": [5, 60, 101, 127, 131, 146, 164, 165, 193, 196, 197, 198, 199, 201, 202, 203, 205, 207, 247, 251, 252, 253, 254], "multipl": [5, 7, 13, 14, 16, 17, 40, 42, 44, 125, 127, 129, 131, 134, 135, 143, 160, 162, 176, 182, 193, 196, 198, 201, 202, 206, 207, 228, 229, 247, 248, 251, 253], "In": [5, 12, 19, 59, 90, 93, 101, 109, 111, 112, 134, 137, 145, 151, 181, 182, 190, 197, 198, 201, 202, 203, 237, 238, 240, 247, 248, 252, 253, 254], "clearli": [5, 59, 109, 188, 198, 247, 248], "warn": [5, 203], "about": [5, 7, 26, 98, 107, 199, 247, 251, 253, 254], "": [5, 29, 32, 49, 58, 59, 60, 80, 101, 130, 145, 160, 167, 168, 169, 176, 182, 188, 193, 196, 197, 198, 199, 201, 202, 205, 207, 211, 215, 219, 222, 236, 240, 241, 247, 248, 251, 253], "organ": [5, 195, 247, 252, 253], "within": [5, 15, 27, 182, 190, 193, 195, 198, 202, 209, 211, 214, 215, 218, 219, 220, 222, 251], "accord": [5, 12, 60, 71, 75, 88, 90, 98, 101, 103, 115, 134, 142, 150, 151, 160, 176, 177, 182, 197, 198, 224], "These": [5, 199, 227, 252], "intend": [5, 88, 143, 162, 193, 243], "posit": [7, 9, 10, 11, 13, 14, 20, 26, 46, 62, 65, 66, 81, 90, 95, 97, 98, 101, 111, 116, 118, 133, 134, 136, 145, 148, 152, 154, 156, 165, 181, 182, 193, 195, 197, 207, 221, 223, 237, 252], "paramet": [7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 193, 195, 207, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231, 232, 233, 235, 236, 237, 238, 239, 240, 241, 243, 245, 247], "extern": [7, 253], "usabl": 7, "name": [7, 23, 101, 171, 172, 173, 182, 198, 227, 236, 237, 238, 240, 246, 251, 252], "when": [7, 12, 16, 17, 26, 47, 49, 63, 90, 96, 101, 102, 115, 118, 127, 131, 134, 142, 146, 150, 160, 165, 176, 178, 181, 182, 190, 195, 196, 198, 199, 200, 201, 203, 205, 206, 207, 223, 227, 229, 233, 236, 237, 238, 239, 240, 241, 247, 251, 252, 253], "accept": [7, 26, 121, 122, 123, 124, 129, 145, 160, 176, 193, 248], "call": [7, 34, 201, 202, 205, 238, 251, 252, 253], "argument": [7, 10, 11, 26, 40, 61, 62, 64, 65, 66, 86, 88, 116, 118, 125, 143, 147, 150, 153, 156, 162, 164, 165, 166, 181, 190, 197, 199, 201, 202, 209, 211, 215, 218, 219, 220, 222, 243, 247, 251, 252, 253], "map": [7, 198, 199], "base": [7, 47, 57, 58, 94, 95, 116, 117, 118, 119, 142, 171, 172, 173, 174, 182, 195, 199, 205, 207, 247, 248, 251, 252, 253], "sole": [7, 182, 188, 247], "incompat": [7, 26, 74, 102, 193, 248, 251], "normal": [7, 78, 159, 209, 211, 213, 214, 215, 217, 218, 219, 220, 222], "practic": [7, 19, 182, 247, 252], "avail": [7, 102, 193, 201, 246, 248, 252], "still": [7, 207, 247, 252, 253, 254], "consid": [7, 63, 121, 122, 123, 124, 171, 172, 173, 174, 198, 202, 221, 236, 247, 251, 253, 254], "compliant": [7, 51, 90, 96, 115, 118, 121, 122, 123, 124, 127, 129, 131, 160, 176, 197, 200, 202, 248, 251], "namespac": [7, 23, 193, 208, 246, 247, 248, 251, 254], "altern": [7, 199, 201, 254], "thei": [7, 26, 190, 196, 201, 202, 206, 207, 246, 247, 248, 251, 253, 254], "guidanc": [7, 49, 195, 196, 203, 251], "were": [7, 101, 150, 195, 251], "option": [7, 13, 14, 15, 16, 17, 23, 26, 57, 58, 59, 60, 63, 77, 78, 88, 91, 92, 97, 99, 103, 104, 115, 127, 129, 131, 138, 139, 143, 146, 148, 150, 160, 162, 163, 176, 179, 180, 181, 195, 206, 210, 221, 231, 233, 236, 243, 245, 247, 252, 253], "keyword": [7, 88, 130, 143, 162, 181, 199, 202, 206, 207, 243, 247, 248, 251, 252, 253], "lead": [7, 101, 198, 237, 240, 251], "readabl": [7, 190, 247, 252], "code": [7, 59, 190, 199, 200, 202, 205, 207, 247, 251, 252, 253], "easier": [7, 193, 199, 247], "evolv": [7, 193, 247], "over": [7, 13, 14, 115, 127, 129, 131, 143, 160, 162, 163, 166, 176, 177, 197, 198, 199, 201, 202, 206, 209, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 222, 224, 243, 245, 247, 251], "ad": [7, 9, 10, 11, 12, 13, 14, 20, 21, 24, 26, 29, 35, 40, 42, 43, 44, 46, 47, 50, 51, 60, 61, 62, 63, 64, 66, 86, 87, 90, 93, 94, 96, 97, 98, 103, 104, 110, 111, 112, 115, 116, 117, 118, 119, 125, 130, 134, 135, 136, 137, 138, 139, 141, 142, 143, 149, 151, 153, 154, 156, 157, 161, 162, 164, 165, 166, 171, 172, 173, 174, 177, 182, 194, 195, 196, 202, 223, 224, 225, 227, 228, 229, 231, 232, 233, 235, 236, 237, 238, 239, 240, 241, 243, 245, 248], "worri": 7, "xi": [7, 130], "annot": [7, 195, 207, 251], "also": [7, 34, 102, 151, 190, 193, 198, 199, 200, 201, 207, 219, 240, 246, 253], "individu": [7, 150, 202, 205, 206, 207, 210, 221, 251, 252], "descript": [7, 195, 197, 231, 245], "aim": [7, 196, 207, 246, 247, 248, 251, 252, 253, 254], "strongli": [7, 199, 253], "look": [7, 253], "like": [7, 193, 196, 198, 199, 205, 207, 248, 251, 252, 253], "funcnam": 7, "key1": 7, "key2": 7, "none": [7, 13, 14, 15, 16, 17, 23, 26, 32, 49, 57, 58, 59, 60, 63, 77, 78, 83, 88, 91, 92, 97, 99, 103, 104, 115, 127, 129, 131, 138, 139, 143, 146, 148, 150, 160, 162, 163, 176, 179, 180, 182, 202, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 231, 233, 236, 243, 244, 245, 251, 252, 254], "out": [7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 182, 196, 199, 201, 205, 206, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231, 232, 233, 235, 236, 237, 238, 239, 240, 241, 243, 245, 250, 253], "int": [7, 13, 14, 15, 16, 17, 18, 21, 22, 26, 27, 28, 30, 31, 32, 33, 34, 35, 37, 38, 39, 41, 42, 43, 45, 47, 48, 49, 50, 51, 52, 56, 57, 58, 59, 60, 74, 77, 78, 88, 91, 95, 97, 98, 99, 101, 103, 104, 107, 115, 127, 129, 131, 133, 138, 140, 143, 146, 148, 155, 158, 159, 160, 162, 163, 166, 167, 168, 169, 175, 176, 177, 179, 182, 190, 205, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 224, 226, 231, 232, 242, 243, 244, 245, 252], "str": [7, 8, 23, 109, 130, 252], "modulo": 7, "self": [7, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 59, 89, 195, 253], "few": [7, 197, 205, 251, 253], "enhanc": 7, "default": [7, 13, 14, 15, 16, 17, 18, 23, 26, 59, 60, 63, 77, 78, 88, 91, 92, 97, 99, 103, 104, 115, 127, 129, 130, 131, 136, 138, 139, 143, 146, 148, 150, 155, 159, 160, 162, 166, 168, 169, 171, 172, 173, 175, 176, 177, 179, 180, 181, 182, 195, 197, 202, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 226, 231, 233, 236, 237, 240, 243, 245], "form": [7, 23, 40, 79, 125, 126, 168, 169, 199, 223, 225, 226, 227, 228, 229, 231, 232, 233, 236, 237, 238, 239, 240, 241, 243, 248, 252], "question": [7, 196, 251], "commonli": [7, 160, 176, 196, 198, 200, 246, 247, 251, 252], "written": [7, 193, 251, 253], "yyyi": [8, 23, 248], "mm": [8, 23, 248], "string": [8, 23, 109, 195, 248, 251], "version": [8, 9, 10, 11, 12, 13, 14, 20, 21, 23, 24, 25, 26, 29, 35, 40, 42, 43, 44, 46, 47, 50, 51, 60, 61, 62, 63, 64, 66, 79, 86, 87, 90, 93, 94, 96, 97, 98, 103, 104, 107, 108, 109, 110, 111, 112, 115, 116, 117, 118, 119, 125, 130, 134, 135, 136, 137, 138, 139, 141, 142, 143, 144, 149, 151, 153, 154, 156, 157, 161, 162, 163, 164, 165, 166, 171, 172, 173, 174, 177, 181, 193, 196, 202, 206, 207, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 227, 228, 229, 231, 232, 233, 235, 236, 237, 238, 239, 240, 241, 243, 245, 249, 251, 253], "calcul": [9, 10, 11, 12, 20, 21, 42, 47, 50, 61, 62, 64, 65, 66, 86, 87, 88, 90, 94, 96, 116, 117, 118, 119, 120, 127, 129, 131, 134, 142, 143, 153, 154, 156, 160, 161, 162, 164, 165, 176, 238], "absolut": [9, 20, 85, 151, 197, 199, 231, 232, 238, 247], "x_i": [9, 10, 11, 61, 62, 64, 66, 68, 76, 77, 79, 86, 87, 94, 96, 100, 108, 110, 111, 112, 116, 117, 118, 119, 122, 127, 129, 131, 135, 141, 144, 149, 151, 152, 153, 154, 156, 157, 160, 164, 165, 170, 176], "input": [9, 10, 11, 12, 13, 14, 16, 17, 18, 20, 30, 41, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 75, 76, 77, 78, 79, 85, 86, 87, 88, 90, 92, 93, 94, 95, 96, 99, 100, 101, 102, 104, 105, 106, 108, 109, 110, 111, 112, 113, 114, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 180, 181, 188, 193, 195, 198, 200, 202, 203, 207, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231, 232, 233, 235, 236, 237, 238, 240, 241, 243, 245, 247, 251, 253], "ha": [9, 13, 14, 20, 23, 29, 34, 35, 40, 44, 47, 55, 86, 87, 88, 90, 94, 95, 96, 101, 104, 125, 129, 130, 133, 134, 135, 136, 142, 143, 153, 154, 158, 160, 162, 163, 164, 165, 166, 167, 171, 172, 173, 174, 176, 182, 190, 193, 198, 201, 202, 205, 206, 224, 231, 239, 240, 243, 245, 247, 248, 251, 253, 254], "magnitud": [9, 12, 20, 85, 90, 101, 134, 240, 241], "represent": [9, 12, 20, 29, 44, 67, 70, 72, 80, 81, 82, 84, 90, 98, 101, 107, 134, 135, 164, 165, 197, 201, 252], "complex": [9, 10, 11, 12, 13, 14, 16, 17, 18, 20, 21, 24, 25, 29, 31, 33, 35, 37, 39, 40, 42, 43, 44, 46, 47, 50, 51, 60, 61, 62, 63, 64, 66, 79, 86, 87, 88, 90, 93, 94, 96, 97, 98, 103, 104, 105, 106, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 125, 127, 128, 130, 131, 132, 134, 135, 136, 137, 138, 139, 141, 142, 143, 144, 149, 151, 153, 154, 155, 156, 157, 161, 162, 164, 165, 166, 171, 172, 173, 174, 177, 181, 190, 197, 201, 202, 204, 205, 209, 211, 214, 215, 217, 218, 219, 220, 222, 223, 224, 225, 227, 228, 229, 231, 232, 233, 235, 236, 237, 238, 239, 240, 241, 243, 245, 247, 251, 252], "known": [9, 151, 197, 200, 201], "norm": [9, 209, 211, 213, 214, 215, 217, 218, 219, 220, 222, 231, 245, 247], "modulu": [9, 145], "z": [9, 10, 11, 61, 62, 64, 66, 116, 198], "bj": [9, 12, 79, 90, 134], "comput": [9, 12, 28, 31, 33, 37, 39, 40, 43, 57, 58, 67, 70, 72, 79, 88, 89, 90, 93, 95, 101, 105, 106, 113, 114, 121, 122, 123, 124, 125, 127, 128, 129, 131, 132, 134, 135, 136, 137, 141, 143, 160, 162, 166, 171, 172, 173, 174, 176, 177, 182, 197, 200, 205, 209, 211, 213, 214, 215, 217, 218, 219, 220, 222, 223, 224, 227, 228, 229, 231, 233, 236, 237, 238, 239, 240, 241, 243, 245, 247, 251], "operatornam": [9, 10, 11, 61, 62, 64, 66, 86, 87, 151, 153, 154, 164, 165, 198, 227, 228, 238, 240], "sqrt": [9, 10, 11, 61, 62, 181, 195, 198, 209, 211, 213, 214, 215, 217, 218, 219, 220, 222, 245], "take": [9, 116, 118, 142, 156, 181, 195, 202, 207, 251], "care": [9, 199, 247], "undu": [9, 200], "overflow": [9, 12, 88, 90, 101, 115, 143, 162, 190, 238, 243, 247], "dure": [9, 40, 59, 125, 160, 176, 190, 193, 236, 251, 252], "intermedi": 9, "stage": [9, 248], "numer": [9, 12, 20, 21, 40, 42, 44, 46, 47, 50, 51, 88, 90, 101, 109, 110, 111, 112, 125, 130, 134, 135, 141, 142, 143, 149, 151, 157, 161, 162, 166, 181, 190, 197, 209, 211, 214, 215, 218, 219, 220, 222, 224, 235, 236, 238, 243, 247, 251, 253], "contain": [9, 10, 11, 12, 13, 14, 15, 16, 17, 20, 21, 22, 23, 26, 28, 30, 31, 32, 33, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 76, 77, 78, 79, 85, 86, 87, 88, 90, 91, 92, 93, 94, 96, 100, 101, 102, 105, 106, 108, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 149, 150, 151, 152, 153, 154, 156, 157, 160, 161, 162, 164, 165, 166, 168, 169, 170, 171, 172, 173, 174, 176, 177, 179, 182, 197, 198, 199, 201, 205, 206, 210, 221, 223, 224, 225, 226, 227, 228, 229, 231, 232, 233, 235, 236, 237, 238, 239, 240, 241, 243, 245, 251, 253], "complex128": [9, 20, 109, 181, 190, 195, 227, 228, 231, 245], "float64": [9, 20, 109, 181, 190, 227, 228, 231, 245], "nan": [9, 10, 11, 12, 13, 14, 24, 25, 35, 61, 62, 63, 64, 65, 66, 76, 85, 86, 87, 90, 93, 94, 96, 100, 101, 110, 111, 112, 116, 117, 118, 119, 120, 127, 128, 129, 131, 132, 134, 137, 142, 145, 149, 150, 151, 152, 153, 154, 156, 160, 164, 165, 170, 171, 172, 173, 174, 176, 181, 188, 198, 251], "infin": [9, 10, 11, 12, 13, 14, 24, 25, 35, 62, 63, 64, 65, 66, 76, 81, 86, 87, 90, 93, 94, 96, 100, 101, 110, 111, 116, 117, 118, 119, 120, 127, 131, 134, 137, 142, 145, 149, 152, 153, 154, 156, 164, 165, 170, 198, 238, 245], "imag": [9, 10, 11, 12, 24, 62, 63, 66, 87, 93, 94, 96, 110, 111, 112, 115, 116, 118, 137, 149, 151, 154, 156, 165, 181, 195, 196, 251, 252, 253], "finit": [9, 10, 11, 12, 25, 35, 42, 62, 65, 66, 87, 90, 93, 94, 96, 101, 110, 111, 116, 118, 134, 137, 142, 145, 152, 154, 156, 165, 197], "2022": [9, 10, 11, 12, 13, 14, 20, 21, 24, 25, 26, 29, 35, 40, 42, 43, 44, 46, 47, 50, 51, 60, 61, 62, 63, 64, 66, 79, 86, 87, 90, 93, 94, 96, 97, 98, 103, 104, 107, 108, 109, 110, 111, 112, 115, 116, 117, 118, 119, 125, 130, 134, 135, 136, 137, 138, 139, 141, 142, 143, 144, 149, 151, 153, 154, 156, 157, 161, 162, 163, 164, 165, 166, 171, 172, 173, 174, 177, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 227, 228, 229, 231, 232, 233, 235, 236, 237, 238, 239, 240, 241, 243, 245, 250], "12": [9, 10, 11, 12, 13, 14, 20, 21, 24, 25, 26, 29, 35, 40, 42, 43, 44, 46, 47, 50, 51, 60, 61, 62, 63, 64, 66, 79, 86, 87, 90, 93, 94, 96, 97, 98, 103, 104, 107, 108, 109, 110, 111, 112, 115, 116, 117, 118, 119, 125, 130, 134, 135, 136, 137, 138, 139, 141, 142, 143, 144, 149, 151, 153, 154, 156, 157, 161, 162, 163, 164, 165, 166, 171, 172, 173, 174, 177, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 227, 228, 229, 231, 232, 233, 235, 236, 237, 238, 239, 240, 241, 243, 245, 248], "approxim": [10, 11, 47, 61, 62, 64, 65, 66, 86, 87, 94, 96, 101, 116, 117, 118, 119, 142, 153, 154, 164, 165, 197, 233, 236], "princip": [10, 11, 61, 62, 64, 66, 116, 156, 198, 247], "invers": [10, 11, 61, 62, 64, 65, 66, 198, 209, 211, 214, 215, 216, 217, 218, 219, 220, 222, 229, 232, 236, 247], "cosin": [10, 11, 86, 87, 165], "express": [10, 61, 63, 64, 65, 86, 153, 164, 182, 190, 199, 247, 250], "radian": [10, 61, 64, 65, 86, 153, 164], "arc": [10, 61, 64], "frac": [10, 11, 61, 62, 64, 66, 86, 87, 90, 115, 117, 119, 151, 153, 154, 164, 165, 198, 238], "pi": [10, 11, 61, 62, 64, 66, 87, 116, 118, 154, 164, 165, 181], "j": [10, 11, 12, 25, 61, 62, 64, 66, 87, 90, 94, 96, 115, 116, 118, 134, 150, 151, 153, 154, 156, 164, 165, 182, 198, 227, 240, 243], "ln": [10, 11, 61, 62, 64, 66, 116], "zj": [10, 61, 62, 64, 66], "conj": [10, 11, 61, 62, 64, 66, 87, 94, 96, 116, 117, 118, 119, 154, 156, 165, 181, 195], "multi": [10, 11, 61, 62, 64, 66, 181, 198, 201, 202, 224, 253], "branch": [10, 11, 61, 62, 64, 65, 66, 86, 87, 90, 94, 96, 116, 118, 134, 142, 153, 154, 156, 164, 165, 251], "cut": [10, 11, 61, 62, 64, 66, 86, 87, 94, 96, 116, 118, 142, 153, 154, 156, 164, 165, 251], "plane": [10, 11, 61, 62, 64, 66, 86, 87, 90, 94, 96, 134, 153, 154, 156, 164, 165, 251], "By": [10, 11, 13, 14, 61, 62, 64, 65, 66, 88, 116, 118, 127, 129, 131, 142, 143, 156, 160, 162, 176, 177, 197, 198, 224, 247, 252], "place": [10, 11, 15, 60, 61, 62, 63, 64, 66, 91, 92, 97, 103, 104, 115, 138, 139, 148, 179, 180, 181, 188, 190, 195, 199, 202, 210, 221, 236], "line": [10, 11, 61, 62, 64, 66, 164, 165, 190, 198, 251, 252, 253, 254], "segment": [10, 11, 61, 62, 64, 66, 198], "infti": [10, 11, 61, 62, 64, 66, 86, 116, 118, 142, 156, 198], "axi": [10, 11, 13, 14, 16, 17, 18, 61, 62, 64, 66, 78, 88, 95, 99, 116, 118, 127, 129, 131, 133, 142, 143, 148, 155, 156, 158, 159, 160, 162, 163, 166, 167, 175, 176, 177, 181, 195, 209, 211, 213, 214, 215, 217, 218, 219, 220, 222, 224, 231, 244, 245, 251], "rang": [10, 61, 62, 64, 66, 77, 88, 116, 118, 143, 156, 162, 182, 201, 243, 251], "strip": [10, 61, 62, 64, 66, 116, 118], "unbound": [10, 61, 62, 64, 66, 116, 118], "along": [10, 11, 13, 14, 16, 17, 18, 61, 62, 64, 66, 78, 88, 97, 99, 116, 118, 127, 129, 131, 143, 148, 155, 156, 159, 160, 162, 163, 164, 165, 167, 175, 176, 177, 182, 195, 209, 211, 213, 214, 215, 217, 218, 219, 220, 222, 224, 243, 245, 247], "c99": [10, 11, 61, 62, 64, 66, 90, 116, 118, 134, 142, 156, 198, 248], "provision": [10, 11, 61, 62, 64, 66, 116, 118, 142, 156, 198], "statu": [10, 11, 61, 62, 64, 66, 116, 118, 142, 156, 198], "greater": [10, 11, 33, 38, 48, 61, 62, 65, 66, 69, 71, 77, 85, 90, 100, 101, 116, 118, 142, 145, 151, 152, 154, 156, 158, 165, 181, 182, 209, 211, 213, 214, 215, 217, 218, 219, 220, 222, 224, 232], "than": [10, 11, 19, 26, 38, 40, 47, 48, 49, 55, 61, 62, 63, 65, 66, 69, 71, 76, 77, 85, 88, 90, 98, 99, 100, 101, 116, 117, 118, 119, 125, 134, 142, 143, 145, 151, 152, 154, 156, 158, 160, 162, 163, 165, 170, 171, 172, 173, 174, 176, 182, 190, 193, 196, 199, 202, 203, 206, 209, 211, 213, 214, 215, 217, 218, 219, 220, 222, 224, 231, 232, 233, 236, 243, 245, 247, 248, 251, 253], "less": [10, 11, 39, 47, 61, 65, 66, 76, 85, 90, 101, 116, 117, 118, 119, 142, 145, 151, 152, 156, 160, 176, 181, 182, 199, 209, 211, 213, 214, 215, 217, 218, 219, 220, 222, 231, 232, 233, 236, 245, 251], "\u03c0": [10, 64, 65, 84], "0j": [10, 11, 12, 25, 62, 63, 66, 87, 94, 96, 97, 116, 118, 138, 139, 151, 154, 156, 165, 198, 238], "nonzero": [10, 11, 12, 62, 66, 87, 90, 94, 96, 101, 134, 154, 165, 181, 182, 195, 236], "3\u03c0": [10, 65], "hyperbol": [11, 62, 66, 86, 87, 153, 154, 164, 165, 198], "aco": [11, 61, 181, 195, 197], "simpli": [11, 96, 118, 196, 207, 251, 253], "upper": [11, 77, 97, 169, 223, 237], "half": [11, 15, 66, 115, 133, 156, 166, 182, 212], "area": [11, 62, 66], "sector": [11, 62, 66], "\u03c0j": [11, 62, 66, 116, 118], "3\u03c0j": [11, 116, 118], "sum": [12, 21, 88, 120, 181, 195, 231, 243, 245, 247], "x1_i": [12, 65, 67, 69, 70, 71, 72, 85, 90, 93, 101, 105, 106, 113, 114, 120, 121, 123, 124, 128, 132, 134, 137, 142, 145, 161, 178], "x2_i": [12, 65, 67, 69, 70, 71, 72, 85, 90, 93, 101, 105, 106, 113, 114, 120, 121, 123, 124, 128, 132, 134, 137, 142, 145, 161, 178], "first": [12, 16, 17, 19, 65, 67, 69, 70, 71, 72, 88, 93, 105, 106, 113, 114, 120, 121, 123, 124, 125, 128, 132, 134, 137, 142, 148, 159, 161, 164, 165, 166, 171, 172, 173, 177, 178, 182, 198, 224, 227, 235, 237, 238, 240, 241, 247, 251, 252, 253, 254], "remain": [12, 90, 93, 101, 109, 111, 112, 134, 137, 145, 146, 151, 182, 199], "neither": [12, 40, 90, 101, 125, 134, 166, 240, 252], "nor": [12, 90, 101, 134, 240, 252], "mathemat": [12, 19, 65, 84, 86, 87, 90, 96, 101, 116, 118, 134, 153, 154, 164, 165, 181, 198, 231, 245], "round": [12, 15, 76, 90, 100, 101, 134, 156, 170, 181, 195, 197], "nearest": [12, 90, 134, 149, 170, 197], "mode": [12, 90, 134, 197, 209, 211, 213, 214, 215, 217, 218, 219, 220, 222, 237], "too": [12, 90, 101, 134, 211, 215, 219, 222, 247, 251], "larg": [12, 90, 101, 134, 201, 207, 238, 251], "appropri": [12, 26, 90, 101, 134, 198, 203], "commut": 12, "associ": [12, 42, 134, 190, 233, 236, 239, 247, 250, 252], "tabl": [12, 90, 134, 181], "c": [12, 90, 93, 115, 134, 136, 137, 159, 160, 165, 176, 182, 195, 198, 201, 204, 223, 227, 228, 229, 237, 239, 240, 248, 250, 251, 253], "d": [12, 90, 93, 115, 134, 137, 190, 210, 221], "dj": [12, 90, 134], "independ": [12, 90, 134, 149, 182, 193, 201, 224, 237, 239, 247, 248, 251], "abov": [12, 88, 90, 93, 116, 118, 134, 137, 142, 143, 156, 162, 168, 169, 182, 190, 198, 199, 201, 202, 205, 226, 227, 243, 247, 250, 253], "similarli": [12, 57, 109, 130, 190, 223, 240], "henc": [12, 79, 95, 136, 171, 172, 173, 174, 182, 196, 198, 199, 200, 201, 205, 206, 207, 251, 253], "z1": 12, "z2": 12, "keepdim": [13, 14, 16, 17, 127, 129, 131, 143, 160, 162, 176, 231, 245], "bool": [13, 14, 16, 17, 18, 22, 24, 28, 31, 33, 37, 39, 43, 45, 49, 52, 60, 63, 75, 88, 89, 93, 103, 104, 105, 106, 109, 110, 111, 112, 113, 114, 115, 121, 122, 123, 124, 127, 129, 131, 137, 143, 146, 152, 155, 160, 162, 176, 181, 190, 195, 205, 223, 231, 240, 245], "test": [13, 14, 89, 110, 111, 112, 195, 197, 249, 251, 252, 253], "evalu": [13, 14, 22, 30, 36, 38, 41, 44, 45, 46, 48, 51, 52, 94, 96, 116, 117, 118, 119, 135, 141, 151, 152, 157, 193, 251], "union": [13, 14, 15, 21, 22, 26, 28, 30, 31, 32, 33, 37, 38, 39, 41, 42, 43, 45, 47, 48, 49, 50, 51, 52, 59, 60, 75, 77, 78, 91, 98, 99, 103, 104, 107, 109, 115, 127, 129, 131, 133, 138, 143, 147, 148, 158, 159, 160, 162, 166, 176, 179, 212, 216, 231, 233, 236, 245, 252], "ax": [13, 14, 16, 17, 19, 55, 56, 99, 127, 129, 131, 133, 140, 143, 148, 158, 160, 162, 166, 167, 176, 177, 182, 211, 212, 215, 216, 219, 222, 224, 231, 236, 239, 242, 245], "logic": [13, 14, 24, 90, 93, 121, 122, 123, 124, 134, 137, 202, 205, 211, 215, 219, 222], "AND": [13, 24, 67, 93, 121, 250], "reduct": [13, 14], "entir": [13, 14, 86, 87, 94, 96, 127, 129, 131, 143, 153, 154, 160, 162, 176], "valid": [13, 14, 27, 95, 133, 159, 166, 175, 182, 197, 205, 227, 237, 240, 252], "count": [13, 14, 78, 88, 99, 163, 171, 172, 177, 182, 224, 228], "backward": [13, 14, 16, 17, 18, 31, 33, 37, 39, 105, 106, 113, 114, 115, 127, 128, 131, 132, 145, 155, 177, 182, 195, 198, 199, 203, 209, 211, 213, 214, 215, 217, 218, 219, 220, 222, 224, 251], "last": [13, 14, 18, 19, 55, 78, 88, 99, 148, 155, 159, 163, 166, 177, 182, 209, 213, 214, 217, 218, 219, 220, 224, 226, 231, 237, 240, 243], "invalid": [13, 14, 23, 95, 203, 251], "rais": [13, 14, 19, 23, 24, 25, 26, 29, 34, 35, 40, 47, 51, 55, 60, 74, 90, 94, 95, 102, 115, 125, 127, 131, 136, 142, 146, 158, 159, 175, 177, 182, 190, 193, 195, 201, 202, 203, 205, 224, 232, 251], "wa": [13, 14, 19, 101, 127, 129, 131, 143, 160, 162, 176, 190, 202, 207, 251, 253], "OR": [14, 70, 123, 137, 250], "start": [15, 115, 182, 195, 207, 251, 253], "stop": [15, 115, 182, 195, 252], "step": [15, 115, 182, 252], "evenli": [15, 115], "space": [15, 115, 210, 212, 221], "open": [15, 115, 133, 166, 182], "inclus": [15, 182, 251], "end": [15, 65, 86, 115, 151, 153, 164, 165, 188, 199, 238, 251, 252, 253], "exclus": [15, 182], "distanc": 15, "between": [15, 26, 47, 51, 65, 78, 90, 93, 98, 115, 137, 142, 159, 171, 172, 173, 174, 190, 198, 199, 202, 210, 221, 247, 251, 253], "adjac": 15, "output": [15, 60, 63, 78, 88, 91, 92, 95, 97, 99, 103, 104, 115, 130, 138, 139, 146, 148, 150, 158, 159, 163, 167, 179, 180, 193, 195, 198, 199, 202, 204, 205, 207, 209, 211, 213, 214, 215, 217, 218, 219, 220, 222, 243, 251], "infer": [15, 60, 63, 92, 103, 104, 139, 146, 180, 200, 247, 252], "cannot": [15, 26, 57, 102, 164, 165, 195, 198, 200, 251], "guarante": [15, 59, 171, 173, 193, 198, 202, 251, 253], "error": [15, 19, 23, 26, 51, 55, 90, 102, 127, 131, 164, 165, 190, 197, 238, 251], "affect": [15, 49, 199, 202], "ceil": [15, 181], "indic": [16, 17, 18, 60, 88, 89, 109, 115, 133, 136, 148, 150, 151, 163, 166, 168, 169, 171, 173, 182, 190, 209, 211, 213, 214, 215, 217, 218, 219, 220, 222, 245, 251], "occur": [16, 17, 75, 164, 165, 171, 172, 173, 174, 198, 252], "occurr": [16, 17, 171], "inequ": [16, 17, 18, 31, 33, 37, 39, 105, 106, 113, 114, 127, 128, 131, 132, 155], "comparison": [16, 17, 18, 31, 33, 37, 39, 93, 105, 106, 113, 114, 127, 128, 131, 132, 137, 155, 181, 198, 248, 252], "search": [16, 17, 150, 181], "flatten": [16, 17, 78, 148, 171, 172, 173, 174, 245, 247], "descend": [18, 155, 240, 241], "stabl": [18, 155, 201], "sort": [18, 150, 181, 227, 228, 240, 241], "ascend": [18, 150, 155], "stabil": [18, 155], "maintain": [18, 155, 196, 251, 253], "rel": [18, 19, 55, 99, 128, 132, 148, 155, 226, 233, 236, 243], "compar": [18, 155, 171, 172, 173, 174, 197, 202, 252, 254], "properti": [19, 53, 54, 55, 56, 57, 58, 195, 198, 202, 207, 251], "transpos": [19, 40, 55, 125, 126, 166, 223, 227, 236, 240, 247], "instanc": [19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 55, 59, 89, 190, 193, 202], "permut": [19, 55, 140], "revers": [19, 55, 65, 99], "origin": [19, 55, 65, 133, 146, 148, 199, 209, 211, 214, 215, 218, 219, 220, 222, 251, 252], "limit": [19, 98, 107, 109, 197, 247, 250], "matric": [19, 40, 55, 125, 126, 130, 168, 169, 223, 225, 226, 227, 228, 229, 231, 232, 233, 236, 237, 238, 239, 240, 241, 243, 247], "deviat": [19, 160, 197, 203, 251, 253], "et": [19, 240, 241], "al": 19, "intent": [19, 65], "found": [19, 198, 201, 253, 254], "problemat": [19, 63, 196, 199], "conflict": 19, "definit": [19, 86, 87, 153, 154, 164, 165, 223, 252], "batch": [19, 245, 247], "cetera": [19, 240, 241], "permute_dim": [19, 181], "interfac": [19, 201, 247, 251, 253], "ab": [20, 142, 181, 195, 231, 245], "augend": 21, "addend": 21, "self_i": [22, 28, 30, 31, 33, 36, 37, 38, 39, 41, 43, 44, 45, 46, 48, 50, 51, 52], "other_i": [22, 28, 30, 31, 33, 37, 38, 39, 41, 43, 45, 47, 48, 50, 51, 52], "bitwise_and": [22, 181], "api_vers": [23, 251], "object": [23, 24, 25, 26, 29, 34, 35, 53, 57, 59, 60, 89, 98, 102, 107, 181, 182, 190, 193, 195, 199, 201, 202, 205, 207, 246, 248, 252, 253], "2020": [23, 207, 248, 250, 251], "10": [23, 27, 117, 182, 251], "latest": [23, 201], "modul": [23, 193, 248, 252, 253, 254], "It": [23, 26, 102, 193, 199, 201, 251, 253, 254], "everi": [23, 103, 104, 237, 251], "top": [23, 193, 251, 253], "level": [23, 190, 196, 201, 202, 246, 247, 251, 252], "public": [23, 246, 252, 253], "well": [23, 196, 198, 201, 202, 237, 253, 254], "part": [23, 35, 168, 169, 190, 195, 201, 206, 248, 251, 253], "convert": [24, 25, 29, 34, 35, 60, 190, 195, 196, 198, 201, 251, 253], "handl": [24, 26, 61, 64, 86, 88, 117, 119, 142, 143, 151, 153, 157, 162, 164, 196, 198, 199, 202, 203, 243, 251], "lazi": [24, 25, 29, 34, 35, 193, 204, 253], "languag": [24, 25, 29, 34, 35, 199, 203, 205, 247, 251, 253], "therefor": [24, 25, 29, 34, 35, 193, 201, 202, 203, 205, 207, 248, 251, 253], "abl": [24, 25, 29, 34, 35, 102, 199, 201, 202, 251, 253], "kind": [24, 25, 29, 34, 35, 47, 51, 77, 88, 90, 98, 104, 107, 109, 142, 143, 162, 190, 195, 205, 243, 247, 250], "here": [24, 25, 29, 34, 35, 182, 190, 199, 201, 206, 207, 253], "valueerror": [24, 25, 29, 34, 35, 60, 146, 158, 253], "instead": [24, 25, 29, 34, 35, 63, 198, 201, 205, 252, 253], "new": [25, 79, 95, 98, 102, 103, 104, 107, 108, 109, 133, 138, 139, 144, 146, 159, 163, 179, 180, 193, 195, 196, 199, 201, 202, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 248, 251, 252, 253], "stream": [26, 59, 202], "pycapsul": 26, "export": [26, 102, 195, 201, 252], "from_dlpack": [26, 27, 181, 201], "dlpack": [26, 27, 102, 195], "capsul": 26, "pointer": 26, "produc": [26, 227, 237, 240, 253], "instruct": 26, "safe": [26, 115], "insert": [26, 95, 150], "wait": 26, "event": [26, 250], "signal": [26, 213, 217, 253], "ownership": 26, "stai": 26, "On": 26, "cpu": [26, 27, 193, 196, 201, 202, 247, 251, 253], "queue": [26, 59, 202], "similar": [26, 145, 182, 196, 198, 200, 251, 252, 253], "mechan": [26, 102, 193, 195, 196, 204, 246, 251], "most": [26, 193, 202, 227, 247, 251, 253], "yet": [26, 207, 251], "sycl": 26, "want": [26, 90, 134, 196, 200, 201, 251, 253, 254], "cl": 26, "agre": 26, "assum": [26, 86, 153, 164, 193, 198, 202, 246, 251], "legaci": 26, "per": [26, 196, 201, 249], "thread": [26, 251, 253], "disallow": 26, "due": [26, 42, 57, 58, 115, 134, 163, 197, 198, 247, 251], "ambigu": [26, 63, 101, 199], "prefer": [26, 101, 193, 247, 253], "develop": [26, 197, 251, 252, 253, 254], "who": [26, 197, 251, 252], "think": 26, "cost": 26, "interchang": [26, 102, 193, 196, 204, 251], "detail": [26, 102, 136, 171, 172, 173, 174, 181, 182, 192, 193, 200, 202, 206, 247, 251, 253], "buffererror": [26, 102, 195, 201], "stride": [26, 102, 199, 201], "fail": [26, 102, 251], "reason": [26, 102, 145, 165, 199, 201, 203, 247, 251, 252], "incorrect": 26, "pass": [26, 65, 193, 197, 202], "enum": 27, "id": 27, "format": [27, 248], "meant": 27, "device_typ": 27, "device_id": 27, "member": 27, "cuda": [27, 196, 201, 253], "cpu_pin": 27, "opencl": 27, "vulkan": 27, "metal": 27, "vpi": 27, "rocm": [27, 196], "truth": [28, 31, 33, 37, 39, 43, 89, 93, 105, 106, 113, 114, 137, 254], "cast": [29, 49, 60, 63, 75, 88, 143, 162, 190, 198, 243, 251, 253], "outsid": [29, 159, 175, 182, 190, 195, 201], "bound": [29, 77, 163, 182, 190, 207], "typeerror": [29, 34, 35, 251, 253], "divis": [30, 41, 71, 90, 101, 145, 151, 198], "floor_divid": [30, 181], "greater_equ": [31, 181], "kei": [32, 49, 251], "slice": [32, 49, 175, 181, 199], "ellipsi": [32, 49, 182], "access": [32, 182, 195, 201, 246, 248, 251], "method": [34, 102, 181, 193, 199, 201, 202, 205, 206, 207, 251, 252, 253], "pep": [34, 40, 101, 125, 201, 248], "357": 34, "overflowerror": 35, "bitwise_invert": [36, 181], "less_equ": [37, 181], "bitwise_left_shift": [38, 181], "matrix": [40, 55, 125, 126, 130, 166, 168, 169, 223, 225, 226, 227, 228, 229, 231, 232, 233, 236, 237, 238, 239, 240, 241, 243, 247, 251], "product": [40, 42, 58, 125, 134, 143, 166, 177, 224, 235, 247], "semant": [40, 101, 125, 145, 163, 181, 182, 193, 199, 201, 203, 205, 206, 247, 251, 252, 253], "built": [40, 125, 182, 190, 251], "465": [40, 125], "least": [40, 90, 109, 125, 134, 136, 171, 172, 173, 174, 196, 197, 236], "m": [40, 55, 125, 126, 130, 150, 166, 167, 168, 169, 182, 213, 218, 219, 223, 225, 226, 227, 228, 229, 231, 232, 233, 235, 236, 237, 238, 239, 240, 241, 243], "remov": [40, 125, 158, 182, 198, 226, 243], "innermost": [40, 125, 126, 168, 169, 223, 225, 226, 227, 228, 229, 231, 232, 233, 236, 237, 238, 239, 240, 241, 243], "conjug": [40, 79, 125, 166, 177, 195, 223, 227, 240, 247], "transposit": [40, 125, 166], "desir": [40, 63, 75, 125, 133, 166, 197, 198, 201, 207], "prior": [40, 125, 166], "inner": [40, 125, 227, 247], "stack": [40, 55, 125, 126, 168, 169, 181, 206, 223, 225, 226, 227, 228, 229, 231, 232, 233, 236, 237, 238, 239, 240, 241, 243, 247], "l": [40, 125, 223, 243], "remaind": [41, 181, 182], "multipli": [42, 143, 157, 181, 195, 197, 227, 240], "not_equ": [43, 181, 195], "negat": [44, 79, 135], "bitwise_or": [45, 181], "exponenti": [47, 94, 96, 120, 142, 198], "power": [47, 71, 94, 142, 198, 232, 253], "expon": [47, 142, 232], "versu": [47, 51, 63, 77, 90, 134, 142], "bitwise_right_shift": [48, 181], "mix": [49, 115, 129, 147, 160, 176, 181, 195, 199, 202, 247, 251], "how": [49, 90, 134, 193, 197, 202, 206, 252, 253, 254], "govern": [50, 161, 190, 247, 248], "minuend": 50, "subtrahend": 50, "subtract": [50, 181, 195, 197], "choos": [51, 57, 59, 90, 101, 115, 121, 122, 123, 124, 127, 129, 131, 134, 136, 160, 171, 172, 173, 174, 176, 181, 182, 188, 198, 199, 200, 202, 205, 251, 253], "divid": [51, 101, 151, 181, 182, 195, 197], "bitwise_xor": [52, 181], "resid": [53, 59, 95, 133, 166, 182, 201, 251], "fewer": 55, "unknown": [57, 58], "graph": [57, 58, 136, 171, 172, 173, 174, 182, 200, 205, 251], "static": [57, 200, 204], "resolv": [57, 60, 88, 95, 101, 103, 104, 143, 162, 243, 251], "know": [57, 136, 171, 172, 173, 174, 193, 196, 197, 200, 251, 253], "content": [57, 200, 250], "warrant": 57, "custom": [57, 196, 203], "immut": 57, "retriev": [57, 182, 193, 208, 247, 253], "behav": [57, 198], "current": [59, 163, 188, 199, 202, 207, 251, 252, 253], "__dlpack__": [59, 102, 181, 195, 201], "caveat": 59, "would": [59, 60, 146, 150, 182, 199, 205, 247, 251, 253], "locat": [59, 199], "enqueu": 59, "asynchron": 59, "safeti": 59, "explain": [59, 196], "obj": 60, "nestedsequ": 60, "supportsbufferprotocol": 60, "possibli": [60, 206, 251], "nest": [60, 206], "sequenc": [60, 78, 115, 159, 166, 175, 182, 211, 212, 215, 216, 219, 222, 242], "buffer": [60, 199, 201], "protocol": [60, 193, 201, 207, 251, 253], "turn": [60, 193, 246], "memoryview": 60, "preced": [60, 198, 201, 202], "mixtur": 60, "convers": [60, 115, 195, 196, 251], "obei": [60, 115], "permit": [60, 63, 115, 200, 250], "To": [60, 101, 182, 195, 197, 198, 207, 251, 252, 254], "explicit": [60, 163, 166, 202, 253], "array_api": [60, 251], "astyp": [60, 181, 195], "exce": [60, 103, 104, 115], "never": [60, 102, 146, 201, 251], "reus": [60, 199, 251], "sine": [61, 62, 153, 154, 165], "1j": [61, 64, 86, 87, 94, 96, 153, 154, 164], "asinh": [61, 181, 195, 197], "asin": [62, 181, 195, 197], "irrespect": [63, 198], "integr": [63, 109], "histor": [63, 165, 247], "discard": 63, "choic": [63, 160, 176, 193, 197, 198, 202, 203, 205, 206, 247, 248, 251, 253], "arbitrari": [63, 73, 130, 147, 197], "introduc": [63, 101, 148, 207, 252], "achiev": [63, 182, 197], "outcom": 63, "clariti": 63, "newli": [63, 202], "alloc": [63, 168, 169, 200, 202], "tangent": [64, 65, 66, 164, 165], "atanh": [64, 181, 195, 197], "quotient": [65, 90, 101, 182], "domain": [65, 195, 197, 198, 251, 253], "notat": 65, "denot": [65, 177, 236], "pair": [65, 101, 224, 240], "codomain": 65, "quadrant": 65, "chosen": [65, 178, 201], "angl": [65, 87, 154, 165], "rai": 65, "role": 65, "y": [65, 198, 199, 253], "coordin": [65, 116, 130, 164, 165, 206, 251], "tradit": 65, "atan": [66, 181, 195, 197], "bitwis": [67, 70, 72, 181], "underli": [67, 70, 72, 197, 238, 247], "flip": [68, 181], "shift": [69, 71, 148, 212, 216], "arithmet": [71, 90, 129, 134, 181, 190, 198, 251], "propag": [71, 102, 127, 129, 131, 160, 176, 197], "floor": [71, 101, 181], "anoth": [73, 75, 102, 182, 193, 196, 198, 199, 201, 202, 205, 227, 240, 251, 253], "from_": 75, "smallest": [76, 98, 107, 231], "closest": [76, 100, 101, 149], "alreadi": [76, 100, 134, 149, 170, 201, 203, 248, 253], "min": [77, 98, 107, 168, 169, 181, 231, 237, 240, 241, 245], "clamp": 77, "join": [78, 159, 190], "befor": [78, 88, 143, 150, 162, 171, 172, 173, 174, 177, 198, 224, 243, 251], "concaten": 78, "leav": [78, 133, 159, 182, 188, 197, 199, 236], "famili": [78, 159], "intxx": [78, 159, 190], "floatxx": [78, 159, 190], "718281828459045": 80, "euler": 80, "constant": [80, 84, 181, 182], "71828182845904523536028747135266249775724709369995": 80, "Not": 82, "alia": [83, 182, 230, 234, 242, 244], "141592653589793": 84, "1415926535897932384626433": 84, "compos": [85, 190], "begin": [86, 151, 153, 164, 165, 182, 188, 238, 253], "align": [86, 153, 164, 165, 195, 197, 252], "sum_": [86, 177], "2n": [86, 116], "jx": [86, 153, 164], "cosh": [86, 165, 181, 195, 197], "period": [87, 154, 164, 165], "ci": [87, 94, 96, 154, 253], "v": [87, 94, 96, 150, 154, 204, 236, 240, 251], "co": [87, 94, 96, 154, 181, 195, 197], "sin": [87, 94, 96, 154, 181, 195, 197, 199, 207], "include_initi": 88, "cumul": 88, "smaller": [88, 143, 148, 162, 243, 253], "int64": [88, 109, 143, 162, 181, 190, 243], "int32": [88, 109, 143, 162, 181, 190, 243], "uint64": [88, 109, 143, 162, 181, 190, 243], "larger": [88, 98, 143, 148, 160, 162, 176, 236, 243], "int16": [88, 109, 143, 162, 181, 190, 243], "uint16": [88, 109, 143, 162, 181, 190, 243], "uint32": [88, 109, 143, 162, 181, 190, 243], "help": [88, 143, 162, 196, 197, 206, 243], "prevent": [88, 143, 162, 243], "initi": [88, 199, 251], "ident": [88, 177, 198, 216, 228, 229, 232, 251], "success": [88, 143, 162, 243], "dividend": [90, 101, 145], "divisor": [90, 101, 145, 160, 176], "small": [90, 101, 134, 197, 233, 236, 238, 251, 253], "gener": [90, 115, 134, 145, 166, 193, 196, 198, 203, 247, 251, 252], "textbook": [90, 134], "formula": [90, 117, 119, 134], "ac": [90, 134, 198], "bd": [90, 134], "bc": [90, 134, 198], "riemann": [90, 134, 198], "sphere": [90, 134, 198], "infinit": [90, 134, 156, 197, 198], "even": [90, 134, 142, 149, 197, 198, 199, 210, 212, 216, 221, 237, 247, 251, 253], "usual": [90, 134, 251], "interest": [90, 134, 197], "unlik": [90, 134, 248, 251], "consist": [90, 101, 109, 115, 134, 150, 166, 182, 188, 198, 202, 207, 218, 219, 220, 222, 227, 236, 247, 251], "uniniti": [91, 92], "deriv": [92, 104, 139, 180, 182, 203, 252], "natur": [94, 116, 117, 118, 119, 142, 238, 247], "logarithm": [94, 116, 117, 118, 119, 120, 142, 238, 247], "expand": [95, 182, 253], "close": [95, 96, 115, 118, 149, 182, 251, 253], "indexerror": [95, 182], "exp": [96, 120, 142, 181, 195, 197, 238], "accur": [96, 118, 197, 238], "fdlibm": [96, 118, 197], "n_row": 97, "n_col": 97, "ones": [97, 139, 167, 181, 195, 199, 203, 251], "diagon": [97, 168, 169, 227, 236, 237, 243, 247], "elsewher": [97, 178, 198], "row": [97, 136, 182, 231, 237, 239, 240], "column": [97, 227, 231, 237, 239, 240, 251], "main": [97, 168, 169, 196, 201, 226, 243, 246, 253], "finfo_object": 98, "machin": [98, 107, 233, 236, 251], "get": [98, 107, 196, 199, 201, 202], "inform": [98, 107, 251, 252, 253, 254], "so": [98, 182, 188, 201, 247, 250, 251, 254], "occupi": [98, 107], "ep": [98, 233, 236, 251], "next": [98, 251], "largest": [98, 107, 231, 240, 241], "smallest_norm": 98, "full": [98, 181, 195, 199, 237, 239, 240, 253], "preserv": [99, 150, 182, 198, 202], "reorder": [99, 133], "greatest": [100, 101], "238": 101, "goal": [101, 196, 199, 247, 253], "disambigu": 101, "toward": [101, 148, 197, 247, 252], "former": [101, 182, 198, 252], "latter": [101, 182, 193, 198, 201, 252], "overload": [101, 247], "led": 101, "subtl": 101, "bug": [101, 253, 254], "expect": [101, 165, 190, 197, 198, 200, 201, 202, 203, 207, 251], "design": [101, 197, 249, 251, 253, 254], "ill": [101, 247], "below": [101, 168, 169, 201, 202, 226, 243], "diverg": [101, 254], "strictli": 101, "relat": [101, 182, 198, 202, 206, 247, 251, 253], "surpris": [101, 198], "unexpect": [101, 198, 203, 251], "__dlpack_device__": [102, 181, 201], "enough": [102, 193, 196, 207, 246, 248, 251], "materi": [102, 201], "attributeerror": [102, 201], "present": [102, 199, 200, 202, 246, 247, 248, 251], "happen": [102, 199, 202, 205, 247], "fill_valu": [103, 104], "fill": [103, 104, 138, 139, 179, 180, 195], "iinfo_object": 107, "complex64": [108, 109, 144, 181, 190, 195, 238, 240, 241], "float32": [108, 109, 144, 181, 190, 238, 240, 241], "int8": [109, 181, 190], "uint8": [109, 181, 190], "shorthand": [109, 182], "belong": [109, 199], "float16": 109, "bfloat16": [109, 251], "int128": 109, "short": [109, 198, 251, 252], "extend": [109, 182, 198, 251], "extens": [109, 249, 253], "num": 115, "endpoint": 115, "delta_": 115, "textrm": [115, 151, 238], "exclud": [115, 182, 190], "sampl": [115, 160, 176, 210, 216, 221, 252], "nonneg": [115, 166, 182], "concern": [115, 163, 202, 206, 251], "polar": 116, "r": [116, 167, 182, 223, 227, 228, 229, 237, 239, 240, 251, 253], "theta": 116, "continu": [116, 118, 142, 156, 198, 227, 240, 251], "account": [116, 118, 142, 156, 251], "log_": [117, 119], "log": [117, 118, 119, 120, 142, 181, 195, 197], "mxn": [126, 168, 169, 226, 231, 233, 236, 237, 243], "sentinel": [127, 131], "xy": 130, "grid": 130, "cartesian": 130, "ij": 130, "effect": [130, 160, 176, 202, 254], "ignor": [130, 247], "ni": 130, "n3": 130, "nn": 130, "three": [130, 202], "p": [130, 228, 231, 245], "sourc": [133, 252, 254], "destin": 133, "move": [133, 202, 253], "uniqu": [133, 166, 171, 172, 173, 174, 198, 227, 229, 237, 239, 240, 247], "unless": [134, 181], "state": [134, 181, 182, 251], "cdot": [134, 153, 157, 164, 177], "y_i": [135, 141], "build": [136, 171, 172, 173, 174, 182, 193, 200, 206, 251], "jax": [136, 171, 172, 173, 174, 182, 199, 200, 251, 252, 253], "dask": [136, 171, 172, 173, 174, 182, 199, 200, 206, 251, 252, 253], "etc": [136, 171, 172, 173, 174, 182, 200, 248], "find": [136, 150, 171, 172, 173, 174, 182, 200, 251, 252], "difficult": [136, 171, 172, 173, 174, 182, 197, 200, 251], "omit": [136, 171, 172, 173, 174, 182, 200, 201, 205], "section": [136, 171, 172, 173, 174, 182, 195, 196, 200, 201, 202, 203, 207, 251, 253], "typl": 136, "total": [136, 160, 176, 198], "major": [136, 182, 248], "style": [136, 182], "odd": [142, 210, 216, 221], "treat": [142, 167], "carefulli": 142, "That": [145, 182, 193, 203, 207, 251], "primarili": 145, "One": [146, 205, 251, 254], "arrays_and_dtyp": 147, "re": [148, 196, 199, 207, 253], "restor": 148, "counterpart": 149, "side": [150, 182, 201], "liter": [150, 209, 211, 213, 214, 215, 217, 218, 219, 220, 222, 231, 237, 245], "sorter": 150, "control": [150, 202, 205, 206], "land": 150, "exactli": [150, 164, 165], "edg": 150, "satisfi": [150, 167, 181, 182, 197, 198, 252], "condit": [150, 178, 205, 250], "what": [150, 193, 201, 203, 207, 247, 251, 252, 253, 254], "constitut": [150, 160, 176], "among": [150, 197, 198, 247], "argsort": [150, 181], "invok": [150, 252], "signum": 151, "whenev": [152, 253], "2j": 153, "sinh": [153, 165, 181, 195, 197], "squar": [156, 181, 195, 198, 223, 225, 227, 228, 229, 232, 236, 238, 239, 247], "root": [156, 198, 228], "indistinguish": [156, 182, 197], "correct": [160, 176, 199], "degre": [160, 176, 228, 247], "freedom": [160, 176], "adjust": [160, 176, 251], "popul": [160, 176], "bessel": [160, 176, 196], "conceptu": 163, "regard": [163, 195, 203, 247, 253], "mutat": 163, "check": [163, 182, 197, 223, 227, 228, 237, 239, 246, 253, 254], "select": [163, 182, 251], "analyt": [164, 165, 198], "pole": [164, 165], "tanh": [164, 181, 195, 197], "stem": [165, 227, 240], "older": [165, 201, 248, 251], "patch": 165, "advis": [165, 199, 247], "tensor": [166, 247, 251, 253], "contract": [166, 177, 247, 250], "outer": [166, 195], "dot": [166, 177, 247], "x1_ax": 166, "x2_ax": 166, "repetit": 167, "construct": [167, 193, 196, 205, 251], "triangular": [168, 169, 223, 237], "closer": 170, "reconstruct": [171, 173], "distinct": [171, 172, 173, 174, 198, 247], "inverse_indic": [171, 173], "exact": [171, 173, 207], "aggreg": [171, 172], "namedtupl": [171, 172, 173, 227, 237, 238, 240, 247], "field": [171, 172, 173, 198, 227, 237, 238, 240, 251], "third": [171, 240], "fourth": 171, "split": 175, "varianc": 176, "unbias": 176, "mathbf": 177, "overlin": [177, 236], "a_i": 177, "b_i": 177, "yield": [178, 198], "signatur": [181, 193, 207, 251, 252], "subset": [181, 197, 252, 253], "categori": 181, "accuraci": [181, 204, 209, 211, 214, 215, 218, 219, 220, 222], "reflect": 181, "mt": 181, "t": [181, 196, 199, 202, 206, 207, 251, 253], "__abs__": [181, 195], "__array_namespace__": [181, 208, 247, 251], "__bool__": [181, 195, 205], "__complex__": [181, 195, 205], "__float__": [181, 195, 205], "__getitem__": [181, 182], "__index__": [181, 205], "__int__": [181, 195, 205], "to_devic": [181, 202], "overview": 181, "algorithm": [181, 197, 238, 253], "inf": [181, 231, 245, 251], "newaxi": [181, 182], "creation": [181, 193, 202, 251], "arang": [181, 252], "asarrai": [181, 195, 201, 253], "empty_lik": 181, "ey": [181, 195], "full_lik": [181, 195], "linspac": [181, 195], "meshgrid": [181, 195], "ones_lik": [181, 195], "tril": 181, "triu": 181, "zeros_lik": 181, "can_cast": 181, "finfo": [181, 195], "iinfo": [181, 195], "isdtyp": [181, 195], "result_typ": 181, "acosh": [181, 195, 197], "atan2": [181, 197], "clip": [181, 182], "copysign": 181, "expm1": [181, 195, 197], "isfinit": [181, 195], "isinf": [181, 195], "isnan": [181, 195], "log1p": [181, 195, 197], "log2": [181, 195, 197], "log10": [181, 195, 197], "logaddexp": 181, "logical_and": 181, "logical_not": 181, "logical_or": 181, "logical_xor": 181, "signbit": 181, "tan": [181, 195, 197], "trunc": [181, 195], "syntax": [181, 199, 201, 203, 251], "linear": [181, 198, 239, 246], "algebra": [181, 198, 236, 246], "matrix_transpos": [181, 247], "tensordot": [181, 195, 247], "vecdot": [181, 195, 247], "manipul": 181, "broadcast_arrai": 181, "broadcast_to": 181, "concat": 181, "expand_dim": [181, 182], "moveaxi": 181, "reshap": [181, 182], "roll": 181, "squeez": 181, "tile": 181, "unstack": 181, "argmax": 181, "argmin": 181, "searchsort": 181, "unique_al": [181, 195], "unique_count": [181, 195], "unique_invers": [181, 195], "unique_valu": [181, 195], "statist": 181, "cumulative_sum": 181, "prod": [181, 195, 211, 215, 219, 222], "util": [181, 248, 251, 252], "__array_api_version__": [181, 192, 195, 248], "syntact": 182, "sugar": 182, "need": [182, 196, 197, 199, 201, 203, 207, 247, 248, 251, 252, 253, 254], "term": [182, 202, 247, 252], "colon": 182, "contrast": [182, 198, 205, 247], "combin": [182, 199, 206, 247], "basic": 182, "noth": 182, "perspect": 182, "item": [182, 199, 251], "2k": 182, "3k": 182, "q": [182, 227, 237], "obtain": [182, 202, 250], "qk": 182, "being": [182, 201, 202, 247, 251, 254], "100": [182, 205, 248], "junk": 182, "consider": [182, 199, 247], "concept": [182, 199, 251], "comma": 182, "separ": [182, 195, 201, 246], "exp1": 182, "exp2": 182, "expn": 182, "And": [182, 202], "forth": 182, "decreas": [182, 247], "particular": [182, 196, 198, 201, 202, 207, 247, 250, 251, 253, 254], "entri": [182, 251], "retain": 182, "invoc": 182, "manner": [182, 201, 203], "sympi": 182, "flat": 182, "attempt": [182, 197, 198, 199, 202, 203, 251, 253], "dynam": 182, "mask": [182, 251], "filter": 182, "s1": 182, "sm": 182, "s2": 182, "sn": 182, "prohibit": [182, 199], "replac": [182, 205, 236, 254], "iter": 182, "reli": [188, 196, 198, 200, 207, 253], "them": [188, 196, 199, 203, 251, 253], "reproduc": [188, 197], "understood": 190, "high": [190, 201, 202, 247, 251], "diagram": [190, 251], "lattic": 190, "particip": [190, 198], "matter": [190, 196, 198], "dash": 190, "undefin": [190, 247], "connect": [190, 250], "keep": [190, 196, 251], "rather": [190, 193, 196, 202, 203, 206, 247, 251], "i2": 190, "i1": 190, "i4": 190, "i8": 190, "u1": 190, "u2": 190, "u4": 190, "u8": 190, "f8": 190, "c8": 190, "c16": 190, "regardless": 190, "subject": [190, 238, 250], "becaus": [190, 196, 199, 202, 203, 205, 207, 227, 240, 251, 253, 254], "togeth": [190, 201], "met": 190, "give": [190, 198, 201, 202], "No": [193, 248], "made": [193, 198, 246, 248, 251, 253], "run": [193, 252, 253], "varieti": 193, "architectur": 193, "gpu": [193, 201, 202, 253], "distribut": [193, 197, 201, 202, 206, 250], "system": [193, 239, 251], "tpu": [193, 201], "emerg": [193, 201, 251], "instal": [193, 251, 254], "emploi": [193, 200, 202], "parallel": [193, 204, 251, 253], "jit": [193, 196, 251], "put": [193, 251, 253], "constraint": [193, 198, 249], "predict": 193, "itself": [193, 201, 205, 253], "motiv": 193, "importantli": 193, "awar": [193, 207, 253], "layer": [193, 206, 251, 253], "coupl": 193, "downstream": [193, 246, 251, 252], "import": [193, 196, 202, 205, 246, 247, 251, 253, 254], "structur": [193, 207, 251, 252], "interoper": [193, 201], "own": [193, 199, 251], "share": [193, 251], "done": 193, "though": [193, 207, 251, 253], "soft": 193, "arraylib_nam": 193, "constrain": [193, 197], "unwil": 193, "signific": [193, 197, 199, 251], "adopt": [193, 198, 201, 253], "primari": [193, 201], "write": [193, 199, 251, 253], "consequ": [193, 207, 251], "easi": [193, 246], "unambigu": [193, 199, 201, 252], "clear": [193, 199, 201, 251, 253], "significantli": 193, "detract": 193, "experi": [193, 248], "strict": [193, 199], "typic": [193, 199, 201, 203, 248, 251, 253, 254], "good": [193, 196, 199, 202, 207, 251], "anyth": [193, 251], "thin": 193, "conveni": 193, "plan": [194, 251], "previou": [195, 253], "gh": [195, 253], "497": 195, "498": 195, "546": 195, "525": 195, "528": 195, "557": 195, "529": 195, "448": 195, "447": 195, "537": 195, "526": 195, "554": 195, "517": 195, "520": 195, "521": 195, "522": 195, "523": 195, "524": 195, "442": 195, "434": 195, "445": 195, "454": 195, "453": 195, "436": 195, "451": 195, "452": 195, "484": 195, "435": 195, "531": 195, "530": 195, "532": 195, "568": 195, "514": 195, "534": 195, "536": 195, "437": 195, "441": 195, "438": 195, "553": 195, "440": [195, 248], "556": 195, "457": 195, "456": 195, "552": 195, "461": 195, "538": 195, "459": 195, "458": 195, "558": 195, "540": 195, "512": 195, "470": 195, "linalg": [195, 246, 247], "cross": [195, 202, 247, 251], "417": 195, "trace": [195, 199, 247, 252], "502": 195, "choleski": [195, 247], "443": 195, "559": 195, "det": [195, 228, 238], "542": 195, "eigh": [195, 247], "543": 195, "eigvalsh": 195, "547": 195, "matrix_norm": 195, "565": 195, "matrix_pow": 195, "549": 195, "matrix_rank": 195, "563": 195, "560": 195, "pinv": 195, "564": 195, "qr": 195, "548": 195, "slogdet": [195, 247], "567": 195, "solv": [195, 207, 236], "566": 195, "svd": [195, 236], "561": 195, "svdval": 195, "562": 195, "541": 195, "vector_norm": 195, "550": [195, 253], "418": 195, "491": 195, "513": 195, "variabl": [195, 206, 239, 254], "515": 195, "527": 195, "573": 195, "480": 195, "485": 195, "496": 195, "503": 195, "427": 195, "416": 195, "fft": [195, 208, 211, 213, 214, 215, 217, 218, 219, 220, 222], "fast": 195, "fourier": [195, 209, 210, 211, 213, 214, 215, 217, 218, 219, 220, 221, 222, 246], "transform": [195, 209, 210, 211, 213, 214, 215, 217, 218, 219, 220, 221, 222, 246, 252], "189": 195, "ifft": [195, 209], "fftn": [195, 215], "ifftn": [195, 211], "rfft": [195, 218, 221], "rfftn": [195, 219], "irfft": [195, 220, 221], "irfttn": 195, "fftfreq": 195, "rfftfreq": 195, "fftshift": [195, 216], "ifftshift": 195, "fix": [195, 202, 251, 253], "clarif": 195, "miss": [195, 251], "464": 195, "clarifi": 195, "429": 195, "typo": 195, "439": 195, "572": 195, "510": 195, "511": 195, "473": 195, "scope": [196, 205, 206, 249, 252], "mention": [196, 203, 253], "There": [196, 199, 201, 202, 207, 251, 253, 254], "direct": [196, 251, 252], "deal": [196, 206, 207, 248, 250], "issu": [196, 198, 199, 201, 202, 206, 251, 253], "assumpt": [196, 201, 248, 249, 251], "rest": [196, 251, 253], "work": [196, 199, 201, 207, 251, 253, 254], "ndarrai": [196, 201, 251, 253], "visual": 196, "often": [196, 198, 203, 247, 251, 252, 253], "difficulti": [196, 200], "relev": [196, 202, 207, 251], "certainti": 196, "inde": 196, "project": [196, 198, 201, 253], "statsmodel": 196, "scikit": [196, 206, 251, 252, 253], "bio": [196, 253], "qutip": 196, "strategi": [196, 202], "learn": [196, 206, 251, 252, 253], "submodul": [196, 246], "manag": [196, 202], "doesn": [196, 202, 251], "cupi": [196, 199, 251, 252, 253], "elementwisekernel": 196, "scipi": [196, 206, 251, 252], "astropi": [196, 253], "seem": [196, 201, 253], "almost": [196, 253], "inevit": 196, "someth": [196, 199, 251], "numba": [196, 201, 251, 253], "sens": [196, 205, 251, 253], "tend": [196, 199, 253], "reimplement": 196, "gamma": 196, "drop": [196, 207, 237, 240], "arraylib": 196, "abi": [196, 201], "cpython": 196, "offer": [196, 201, 202, 206, 251, 253], "backend": [196, 206, 251], "target": [196, 202], "better": [196, 253], "pypi": [196, 252, 253], "isn": 196, "quit": [196, 251, 253], "readi": 196, "mainstream": 196, "todai": [196, 199, 247], "onc": [196, 248], "feasibl": [196, 251], "roundtiestoeven": 197, "ti": [197, 247, 251], "certain": [197, 198, 247], "boundari": 197, "reader": 197, "identifi": [197, 202, 252], "lack": 197, "phrase": [197, 203], "recogn": [197, 202], "seek": [197, 247, 252], "optim": [197, 199, 247, 253], "latitud": 197, "although": [197, 216, 238], "freeli": 197, "sun": 197, "microsystem": 197, "With": [197, 252, 253], "correctli": 197, "imposs": [197, 199, 200, 254], "suit": [197, 249, 251, 252], "span": 197, "report": 197, "averag": 197, "aid": [197, 254], "best": [197, 201, 247, 251], "effort": [197, 252], "theoret": 197, "sound": 197, "robust": 197, "bare": 197, "summat": [197, 247], "unfortun": 197, "impos": [197, 200], "rigor": 197, "sever": [197, 199, 248, 251], "curtail": 197, "unduli": 197, "topologi": 198, "continuum": 198, "onto": [198, 199], "surfac": [198, 251], "stereograph": 198, "coalesc": 198, "3j": 198, "4j": 198, "convei": 198, "niceti": 198, "translat": [198, 253], "neq": 198, "we": [198, 240, 251], "interpret": [198, 199, 254], "context": [198, 202, 252], "arriv": [198, 251], "opposit": 198, "subtleti": 198, "interact": 198, "craft": 198, "intuit": 198, "julia": [198, 253], "minim": [198, 202], "imperfect": 198, "balanc": 198, "appear": [198, 248, 251, 254], "embrac": 198, "transcendent": 198, "wholli": 198, "analysi": [198, 199, 200, 251, 252, 253], "curv": [198, 251], "discontinu": [198, 253], "taken": [198, 251], "pm": 198, "whole": [198, 211, 215, 219, 222], "simpl": [198, 199, 248], "aris": [198, 247, 250, 251], "trigonometr": 198, "domin": 198, "revis": [198, 202], "a_1": 198, "ldot": 198, "a_n": 198, "reflex": 198, "leq": 198, "transit": 198, "antisymmetr": 198, "partial": 198, "establish": [198, 252], "six": 198, "lexicograph": 198, "principl": [198, 252], "situat": [198, 199, 201, 202, 203, 251, 253], "unit": [198, 210, 221], "despit": [198, 201], "admonit": [199, 200], "becom": [199, 201, 251, 253], "trigger": [199, 205], "confid": 199, "pytorch": [199, 202, 251, 252, 253], "mxnet": [199, 251, 252, 253], "save": 199, "faster": 199, "illustr": [199, 207], "tensorflow": [199, 251, 252, 253], "fundament": [199, 251], "inplac": 199, "update_index": 199, "idx": 199, "solut": [199, 236, 239, 253], "read": 199, "hard": [199, 201, 202, 205, 251], "go": [199, 248], "down": 199, "rout": 199, "val": [199, 205], "veri": [199, 238, 253], "wide": [199, 201, 237, 240, 251], "slightli": 199, "heavili": [199, 253], "you": [199, 254], "_must_": 199, "abstract": [199, 247, 252], "donat": 199, "lapack": [199, 247], "_may_": 199, "overwrit": 199, "whatev": 199, "fastest": 199, "aren": [199, 251], "longer": [199, 247], "problem": [199, 207, 236, 252, 253], "upon": [200, 251], "ahead": 200, "burden": [200, 251], "omiss": 200, "demarc": 200, "nativ": 201, "layout": 201, "exchang": 201, "packag": [201, 207, 248, 251, 252, 253], "live": [201, 251], "figur": 201, "contigu": 201, "promin": [201, 251], "releas": [201, 248, 252], "candid": [201, 251], "__cuda_array_interface__": 201, "moment": 201, "tri": [201, 253], "growth": 201, "amd": 201, "undesir": 201, "pattern": [201, 202, 206, 252, 253], "widest": 201, "lot": 201, "3118": 201, "hardli": 201, "mostli": [201, 205, 206, 251], "dealt": [201, 207], "__array__": [201, 253], "attach": 201, "hold": [201, 247], "rfc": [201, 251], "http": [201, 248, 254], "dmlc": 201, "github": [201, 248, 250, 254], "io": 201, "page": [201, 253], "standalon": [201, 254], "outlin": [201, 251], "cover": [201, 251, 254], "usag": [201, 246, 251], "node": 201, "spars": [201, 251], "why": [201, 251], "complet": [201, 206, 237, 248, 251, 253], "fulli": 202, "scale": 202, "exert": 202, "placement": 202, "global": 202, "switchabl": 202, "transfer": 202, "granular": 202, "downsid": 202, "verbos": 202, "much": [202, 251, 254], "kept": 202, "instanti": 202, "physic": 202, "revisit": 202, "themselv": 202, "free": [202, 250], "expos": [202, 247], "bewar": 202, "framework": [202, 251], "elabor": 202, "polici": 202, "highest": 202, "prioriti": 202, "topic": [202, 206, 249, 251, 253], "pin": 202, "tricki": 202, "sinc": 202, "emit": 203, "misbehav": 203, "forese": 203, "extent": 203, "builtin": 203, "author": [203, 250, 251, 252, 253], "worth": 203, "break": 203, "compli": 203, "eager": [204, 251], "aspect": [205, 254], "impact": [205, 251], "prescrib": 205, "show": 205, "up": [205, 237, 246, 253], "five": 205, "dunder": [205, 248], "serial": 205, "compute_someth": 205, "statement": 205, "do_something_els": 205, "flow": 205, "now": [205, 251, 253], "cond": 205, "runtim": [206, 207, 248, 251, 253], "won": 206, "further": 206, "exercis": 206, "environ": [206, 247, 251, 254], "bla": [206, 247], "openmp": 206, "n_job": [206, 253], "worker": [206, 253], "chunk": 206, "approach": [206, 251, 252], "auto": [206, 253], "thing": 206, "improv": [206, 251, 253], "fit": [206, 250, 251, 253], "becam": [207, 251], "progress": [207, 254], "try": [207, 251], "superclass": 207, "long": 207, "class": [207, 251, 252], "def": [207, 251, 252, 253], "_basearrai": 207, "subclass": [207, 251], "insid": [207, 246], "typevar": 207, "fine": [207, 251], "variat": [207, 252], "don": [207, 253], "said": 207, "subtyp": 207, "xp": [208, 246, 247, 251], "hasattr": [208, 246, 247, 251], "ortho": [209, 211, 213, 214, 215, 217, 218, 219, 220, 222], "forward": [209, 211, 213, 214, 215, 217, 218, 219, 220, 222, 251], "discret": [209, 210, 211, 213, 214, 215, 217, 218, 219, 220, 221, 222], "pad": [209, 211, 213, 214, 215, 217, 218, 219, 220, 222], "trim": [209, 211, 213, 214, 215, 217, 218, 219, 220, 222], "orthonorm": [209, 211, 213, 214, 215, 217, 218, 219, 220, 222, 237, 240], "frequenc": [210, 212, 221, 248, 252], "f": [210, 221], "window": [210, 221], "center": 212, "spectrum": 212, "swap": 212, "nyquist": [212, 221], "hermitian": [213, 217, 223, 227, 228], "symmetri": [213, 217], "irfftn": 222, "decomposit": [223, 227, 236, 237, 240, 241, 247], "symmetr": [223, 227, 228], "mathbb": [223, 227, 228, 229, 237, 239, 240], "ll": 223, "h": [223, 227, 236, 240], "qquad": 223, "text": 223, "u": [223, 236, 240], "factor": [223, 240], "offset": [226, 243], "off": [226, 243], "eigenvalu": [227, 228, 247], "lambda": [227, 228], "orthogon": [227, 236, 237, 240, 247], "unitari": [227, 237, 240], "eigenvector": 227, "softwar": [227, 240, 250, 251, 253], "fact": [227, 240], "phi": [227, 240], "eig": [227, 247], "diag": [227, 240], "polynomi": [228, 251], "i_n": [228, 229], "eigval": [228, 247], "xx": 229, "ord": [231, 245], "fro": 231, "nuc": 231, "frobeniu": 231, "nuclear": 231, "singular": [231, 233, 236, 240, 241], "induc": 231, "rtol": [233, 236], "toler": [233, 236], "largest_singular_valu": [233, 236], "epsilon": [233, 236], "moor": 236, "penros": 236, "pseudo": 236, "understand": [236, 251, 252], "sigma": [236, 240], "reciproc": 236, "tall": [237, 240], "geq": 237, "necessarili": [237, 254], "linearli": [237, 239, 251], "logabsdet": 238, "again": 238, "equat": 239, "coeffici": 239, "ordin": 239, "full_matric": 240, "u_k": 240, "v_k": 240, "vh": 240, "adjoint": 240, "l1": 245, "manhattan": 245, "l2": 245, "euclidean": 245, "coher": 246, "implementor": 246, "extension_nam": 246, "regular": [246, 248, 251], "under": [246, 250, 251], "__getattr__": 246, "endeavor": 247, "strai": 247, "far": 247, "restraint": 247, "address": [247, 251, 252, 253], "decis": [247, 251], "accid": 247, "especi": 247, "arisen": 247, "been": [247, 251], "process": [247, 248, 252], "afford": 247, "opportun": 247, "subsequ": [247, 252], "codifi": [247, 252], "theme": 247, "abil": 247, "decim": 247, "restrict": [247, 250], "overli": 247, "compel": 247, "compris": 247, "prudent": 247, "lastli": 247, "polymorph": 247, "dedic": 247, "eignvector": 247, "agnostic": 247, "eschew": 247, "parameter": 247, "bias": 247, "underpin": 247, "cater": 247, "low": 247, "verbatim": 247, "poor": 247, "uplo": 247, "dai": 247, "monopoli": 247, "prolifer": 247, "conserv": [247, 253], "conservat": 247, "delin": 247, "ideal": 247, "overlap": 247, "confus": [247, 251], "parsimoni": 247, "einsum": 247, "einstein": 247, "vdot": 247, "multi_dot": 247, "chain": 247, "exhibit": 247, "consolid": 247, "propos": [248, 252, 253], "com": [248, 254], "blob": 248, "master": 248, "process_docu": 248, "md": 248, "summari": [248, 252], "matur": 248, "reach": [248, 253], "final": 248, "world": 248, "highli": 248, "strong": 248, "updat": 248, "scheme": 248, "date": 248, "shall": [248, 250], "alpha": 248, "beta": 248, "rc": 248, "post": 248, "dev": 248, "minor": 248, "bugfix": 248, "__version__": 248, "resembl": 248, "14": 248, "year": [248, 251], "evolut": [249, 251], "verif": [249, 251], "benchmark": 249, "changelog": 249, "licens": 249, "websit": 250, "repositori": [250, 252], "mit": 250, "copyright": 250, "consortium": [250, 251], "contributor": 250, "permiss": 250, "herebi": 250, "grant": 250, "charg": 250, "person": 250, "file": [250, 252, 253, 254], "merg": [250, 251], "publish": [250, 252], "sublicens": 250, "sell": 250, "whom": 250, "furnish": 250, "notic": 250, "substanti": 250, "portion": 250, "THE": 250, "AS": 250, "warranti": 250, "OF": 250, "BUT": 250, "TO": 250, "merchant": 250, "FOR": 250, "noninfring": 250, "IN": 250, "NO": 250, "holder": 250, "BE": 250, "liabl": 250, "claim": 250, "damag": 250, "liabil": 250, "action": 250, "tort": 250, "WITH": 250, "wealth": 251, "scienc": 251, "deep": 251, "push": 251, "art": 251, "unintend": 251, "activ": 251, "creativ": 251, "fragment": 251, "multidimension": 251, "xarrai": [251, 252], "pick": 251, "bless": 251, "inconsist": 251, "obviou": 251, "mind": 251, "sure": 251, "rare": [251, 252], "unimport": 251, "scientif": 251, "mid": 251, "1990": 251, "earli": 251, "2000": 251, "numarrai": 251, "2005": 251, "superced": 251, "roughli": 251, "decad": 251, "past": 251, "mainli": 251, "rise": 251, "newer": 251, "inspir": [251, 253], "idea": 251, "seriou": 251, "grew": 251, "quickli": 251, "infeas": 251, "speed": 251, "innov": [251, 252], "group": 251, "assembl": 251, "draft": 251, "presenc": 251, "meta": 251, "concret": 251, "shown": 251, "core": [251, 253], "decid": 251, "borrow": 251, "steep": 251, "switch": [251, 253], "accompani": 251, "verifi": 251, "actual": 251, "task": [251, 253], "schedul": 251, "characterist": 251, "grain": 251, "obstacl": 251, "cython": [251, 253], "datetim": 251, "void": 251, "uniformli": 251, "o": 251, "routin": 251, "bind": [251, 253], "cffi": 251, "ctype": 251, "ufunc": 251, "gufunc": 251, "just": [251, 253], "extra": 251, "huge": 251, "amount": [251, 252, 253], "strength": 251, "advantag": 251, "foreign": 251, "indirect": 251, "program": 251, "pydata": 251, "weld": 251, "bohrium": 251, "arkouda": 251, "legat": 251, "grow": 251, "panda": [251, 252], "matplotlib": [251, 252], "networkx": 251, "xtensor": 251, "xnd": [251, 253], "stdlib": 251, "javascript": 251, "rust": 251, "rrai": 251, "nd4j": 251, "jvm": 251, "numsharp": 251, "dispatch": [251, 253], "pythran": 251, "transon": 251, "onnx": 251, "apach": 251, "tvm": 251, "mlir": 251, "taco": 251, "unumpi": [251, 253], "einop": 251, "arrow": 251, "consult": 251, "simplest": 251, "directli": [251, 253], "package_nam": 251, "uniform": 251, "request": 251, "hinder": 251, "inter": 251, "distinguish": 251, "is_array_api_obj": 251, "peopl": 251, "abc": 251, "inherit": 251, "isinst": 251, "prove": 251, "discov": 251, "assist": 251, "mandat": 251, "importlib": 251, "metadata": 251, "entry_point": 251, "dict": 251, "deprec": 251, "py3": 251, "supplant": 251, "load": 251, "path": 251, "haven": 251, "measur": 251, "isol": 251, "referenc": 251, "indispens": 251, "institut": 251, "electr": 251, "electron": 251, "engin": [251, 253], "york": 251, "scott": 251, "bradner": 251, "1997": 251, "word": 251, "2119": 251, "doi": 251, "17487": 251, "rfc2119": 251, "technic": 252, "vacuum": 252, "sometim": 252, "compet": 252, "friction": 252, "focu": 252, "accommod": [252, 253], "foo": 252, "bar": 252, "aspir": 252, "experiment": 252, "around": 252, "channel": 252, "resourc": [252, 253], "novel": 252, "thwart": 252, "reinvent": 252, "proverbi": 252, "wheel": 252, "foundat": 252, "articul": 252, "quantifi": 252, "analyz": 252, "ground": [252, 254], "empir": 252, "acquir": 252, "scrape": 252, "unifi": [252, 253], "extract": 252, "intersect": 252, "complement": 252, "suitabl": 252, "preval": 252, "eas": 252, "leverag": 252, "summar": 252, "tool": [252, 253], "explor": 252, "instrument": 252, "record": 252, "collect": 252, "json": 252, "human": 252, "docstr": 252, "_0": 252, "_arg": 252, "347": 252, "359": 252, "894": 252, "1173": 252, "skimag": 252, "174": 252, "sklearn": 252, "373": 252, "666": 252, "publicli": 252, "stori": 252, "broad": 252, "wider": 253, "wrap": 253, "familiar": 253, "survei": 253, "advanc": 253, "research": 253, "nsf": 253, "pain": 253, "brought": 253, "wish": 253, "multiprocess": 253, "shorten": 253, "fortran": 253, "easili": [253, 254], "pure": 253, "manual": 253, "Then": 253, "hoc": 253, "critic": 253, "corner": 253, "tractabl": 253, "spectral": 253, "periodogram": 253, "spectrogram": 253, "csd": 253, "welch": 253, "stft": 253, "istft": 253, "lombscargl": 253, "40": 253, "sai": [253, 254], "ineffici": 253, "x_np": 253, "asnumpi": 253, "freq": 253, "pxx": 253, "back": 253, "torch": 253, "littl": 253, "flexibl": 253, "py": [253, 254], "rearrang": 253, "_backend": 253, "glue": 253, "loc": 253, "some_func": 253, "get_backend": 253, "disappear": 253, "serv": 253, "50": 253, "tensorli": 253, "kera": 253, "eagerpi": 253, "notabl": 253, "suboptim": 253, "readili": 253, "cpyext": 253, "unsuccess": 253, "intern": 253, "xla": 253, "vta": 253, "jump": 253, "hoop": 253, "attain": 253, "suggest": 253, "got": 253, "cfunc": 253, "np": 253, "assert_array_almost_equ": 253, "pyfunc": 253, "pyarray_cancastarrayto": 253, "assertequ": 253, "spec": 254, "clone": 254, "repo": 254, "pip": 254, "pytest": 254, "hypothesi": 254, "conda": 254, "array_api_tests_modul": 254, "edit": 254, "array_api_test": 254, "_array_modul": 254, "array_modul": 254, "command": 254, "asid": 254, "vendor": 254, "readm": 254}, "objects": {"array_api": [[8, 0, 1, "", "__array_api_version__"], [9, 1, 1, "", "abs"], [10, 1, 1, "", "acos"], [11, 1, 1, "", "acosh"], [12, 1, 1, "", "add"], [13, 1, 1, "", "all"], [14, 1, 1, "", "any"], [15, 1, 1, "", "arange"], [16, 1, 1, "", "argmax"], [17, 1, 1, "", "argmin"], [18, 1, 1, "", "argsort"], [60, 1, 1, "", "asarray"], [61, 1, 1, "", "asin"], [62, 1, 1, "", "asinh"], [63, 1, 1, "", "astype"], [64, 1, 1, "", "atan"], [65, 1, 1, "", "atan2"], [66, 1, 1, "", "atanh"], [67, 1, 1, "", "bitwise_and"], [68, 1, 1, "", "bitwise_invert"], [69, 1, 1, "", "bitwise_left_shift"], [70, 1, 1, "", "bitwise_or"], [71, 1, 1, "", "bitwise_right_shift"], [72, 1, 1, "", "bitwise_xor"], [73, 1, 1, "", "broadcast_arrays"], [74, 1, 1, "", "broadcast_to"], [75, 1, 1, "", "can_cast"], [76, 1, 1, "", "ceil"], [77, 1, 1, "", "clip"], [78, 1, 1, "", "concat"], [79, 1, 1, "", "conj"], [85, 1, 1, "", "copysign"], [86, 1, 1, "", "cos"], [87, 1, 1, "", "cosh"], [88, 1, 1, "", "cumulative_sum"], [90, 1, 1, "", "divide"], [91, 1, 1, "", "empty"], [92, 1, 1, "", "empty_like"], [93, 1, 1, "", "equal"], [94, 1, 1, "", "exp"], [95, 1, 1, "", "expand_dims"], [96, 1, 1, "", "expm1"], [97, 1, 1, "", "eye"], [98, 1, 1, "", "finfo"], [99, 1, 1, "", "flip"], [100, 1, 1, "", "floor"], [101, 1, 1, "", "floor_divide"], [102, 1, 1, "", "from_dlpack"], [103, 1, 1, "", "full"], [104, 1, 1, "", "full_like"], [105, 1, 1, "", "greater"], [106, 1, 1, "", "greater_equal"], [107, 1, 1, "", "iinfo"], [108, 1, 1, "", "imag"], [109, 1, 1, "", "isdtype"], [110, 1, 1, "", "isfinite"], [111, 1, 1, "", "isinf"], [112, 1, 1, "", "isnan"], [113, 1, 1, "", "less"], [114, 1, 1, "", "less_equal"], [115, 1, 1, "", "linspace"], [116, 1, 1, "", "log"], [117, 1, 1, "", "log10"], [118, 1, 1, "", "log1p"], [119, 1, 1, "", "log2"], [120, 1, 1, "", "logaddexp"], [121, 1, 1, "", "logical_and"], [122, 1, 1, "", "logical_not"], [123, 1, 1, "", "logical_or"], [124, 1, 1, "", "logical_xor"], [125, 1, 1, "", "matmul"], [126, 1, 1, "", "matrix_transpose"], [127, 1, 1, "", "max"], [128, 1, 1, "", "maximum"], [129, 1, 1, "", "mean"], [130, 1, 1, "", "meshgrid"], [131, 1, 1, "", "min"], [132, 1, 1, "", "minimum"], [133, 1, 1, "", "moveaxis"], [134, 1, 1, "", "multiply"], [135, 1, 1, "", "negative"], [136, 1, 1, "", "nonzero"], [137, 1, 1, "", "not_equal"], [138, 1, 1, "", "ones"], [139, 1, 1, "", "ones_like"], [140, 1, 1, "", "permute_dims"], [141, 1, 1, "", "positive"], [142, 1, 1, "", "pow"], [143, 1, 1, "", "prod"], [144, 1, 1, "", "real"], [145, 1, 1, "", "remainder"], [146, 1, 1, "", "reshape"], [147, 1, 1, "", "result_type"], [148, 1, 1, "", "roll"], [149, 1, 1, "", "round"], [150, 1, 1, "", "searchsorted"], [151, 1, 1, "", "sign"], [152, 1, 1, "", "signbit"], [153, 1, 1, "", "sin"], [154, 1, 1, "", "sinh"], [155, 1, 1, "", "sort"], [156, 1, 1, "", "sqrt"], [157, 1, 1, "", "square"], [158, 1, 1, "", "squeeze"], [159, 1, 1, "", "stack"], [160, 1, 1, "", "std"], [161, 1, 1, "", "subtract"], [162, 1, 1, "", "sum"], [163, 1, 1, "", "take"], [164, 1, 1, "", "tan"], [165, 1, 1, "", "tanh"], [166, 1, 1, "", "tensordot"], [167, 1, 1, "", "tile"], [168, 1, 1, "", "tril"], [169, 1, 1, "", "triu"], [170, 1, 1, "", "trunc"], [171, 1, 1, "", "unique_all"], [172, 1, 1, "", "unique_counts"], [173, 1, 1, "", "unique_inverse"], [174, 1, 1, "", "unique_values"], [175, 1, 1, "", "unstack"], [176, 1, 1, "", "var"], [177, 1, 1, "", "vecdot"], [178, 1, 1, "", "where"], [179, 1, 1, "", "zeros"], [180, 1, 1, "", "zeros_like"]], "array_api.array": [[19, 2, 1, "", "T"], [20, 3, 1, "", "__abs__"], [21, 3, 1, "", "__add__"], [22, 3, 1, "", "__and__"], [23, 3, 1, "", "__array_namespace__"], [24, 3, 1, "", "__bool__"], [25, 3, 1, "", "__complex__"], [26, 3, 1, "", "__dlpack__"], [27, 3, 1, "", "__dlpack_device__"], [28, 3, 1, "", "__eq__"], [29, 3, 1, "", "__float__"], [30, 3, 1, "", "__floordiv__"], [31, 3, 1, "", "__ge__"], [32, 3, 1, "", "__getitem__"], [33, 3, 1, "", "__gt__"], [34, 3, 1, "", "__index__"], [35, 3, 1, "", "__int__"], [36, 3, 1, "", "__invert__"], [37, 3, 1, "", "__le__"], [38, 3, 1, "", "__lshift__"], [39, 3, 1, "", "__lt__"], [40, 3, 1, "", "__matmul__"], [41, 3, 1, "", "__mod__"], [42, 3, 1, "", "__mul__"], [43, 3, 1, "", "__ne__"], [44, 3, 1, "", "__neg__"], [45, 3, 1, "", "__or__"], [46, 3, 1, "", "__pos__"], [47, 3, 1, "", "__pow__"], [48, 3, 1, "", "__rshift__"], [49, 3, 1, "", "__setitem__"], [50, 3, 1, "", "__sub__"], [51, 3, 1, "", "__truediv__"], [52, 3, 1, "", "__xor__"], [53, 2, 1, "", "device"], [54, 2, 1, "", "dtype"], [55, 2, 1, "", "mT"], [56, 2, 1, "", "ndim"], [57, 2, 1, "", "shape"], [58, 2, 1, "", "size"], [59, 3, 1, "", "to_device"]], "array_api.constants": [[80, 0, 1, "", "e"], [81, 0, 1, "", "inf"], [82, 0, 1, "", "nan"], [83, 0, 1, "", "newaxis"], [84, 0, 1, "", "pi"]], "array_api.data_types": [[89, 1, 1, "", "__eq__"]], "array_api.fft": [[209, 1, 1, "", "fft"], [210, 1, 1, "", "fftfreq"], [211, 1, 1, "", "fftn"], [212, 1, 1, "", "fftshift"], [213, 1, 1, "", "hfft"], [214, 1, 1, "", "ifft"], [215, 1, 1, "", "ifftn"], [216, 1, 1, "", "ifftshift"], [217, 1, 1, "", "ihfft"], [218, 1, 1, "", "irfft"], [219, 1, 1, "", "irfftn"], [220, 1, 1, "", "rfft"], [221, 1, 1, "", "rfftfreq"], [222, 1, 1, "", "rfftn"]], "array_api.linalg": [[223, 1, 1, "", "cholesky"], [224, 1, 1, "", "cross"], [225, 1, 1, "", "det"], [226, 1, 1, "", "diagonal"], [227, 1, 1, "", "eigh"], [228, 1, 1, "", "eigvalsh"], [229, 1, 1, "", "inv"], [230, 1, 1, "", "matmul"], [231, 1, 1, "", "matrix_norm"], [232, 1, 1, "", "matrix_power"], [233, 1, 1, "", "matrix_rank"], [234, 1, 1, "", "matrix_transpose"], [235, 1, 1, "", "outer"], [236, 1, 1, "", "pinv"], [237, 1, 1, "", "qr"], [238, 1, 1, "", "slogdet"], [239, 1, 1, "", "solve"], [240, 1, 1, "", "svd"], [241, 1, 1, "", "svdvals"], [242, 1, 1, "", "tensordot"], [243, 1, 1, "", "trace"], [244, 1, 1, "", "vecdot"], [245, 1, 1, "", "vector_norm"]]}, "objtypes": {"0": "py:data", "1": "py:function", "2": "py:property", "3": "py:method"}, "objnames": {"0": ["py", "data", "Python data"], "1": ["py", "function", "Python function"], "2": ["py", "property", "Python property"], "3": ["py", "method", "Python method"]}, "titleterms": {"arrai": [0, 182, 190, 249, 251, 253], "object": [0, 2, 3, 4, 5, 6, 183, 184, 185, 186, 187, 188, 189, 191, 192, 208, 247, 251], "oper": [0, 197], "arithmet": [0, 197], "bitwis": 0, "comparison": 0, "In": [0, 1, 251], "place": [0, 1], "reflect": 0, "attribut": 0, "method": [0, 5, 7], "broadcast": 1, "overview": 1, "algorithm": 1, "exampl": [1, 196], "semant": [1, 202], "constant": 2, "api": [2, 3, 4, 6, 181, 183, 184, 185, 186, 187, 188, 189, 191, 192, 195, 196, 208, 247, 248, 249, 251, 253], "creation": 3, "function": [3, 4, 6, 7, 183, 184, 185, 186, 187, 188, 189, 191, 197, 208], "data": [4, 5, 136, 171, 172, 173, 174, 182, 195, 200, 201, 252], "type": [4, 5, 190, 195, 207, 253], "bool": 5, "int8": 5, "int16": 5, "int32": 5, "int64": 5, "uint8": 5, "uint16": 5, "uint32": 5, "uint64": 5, "float32": 5, "float64": 5, "complex64": 5, "complex128": 5, "default": 5, "categori": 5, "numer": 5, "real": [5, 144], "valu": [5, 182, 198], "integ": [5, 190], "float": [5, 190], "point": [5, 190], "complex": [5, 195, 198], "boolean": [5, 182], "element": 6, "wise": 6, "signatur": 7, "__array_api_version__": 8, "ab": 9, "aco": 10, "acosh": 11, "add": [12, 253], "all": 13, "ani": 14, "arang": 15, "argmax": 16, "argmin": 17, "argsort": 18, "t": 19, "__abs__": 20, "__add__": 21, "__and__": 22, "__array_namespace__": 23, "__bool__": 24, "__complex__": 25, "__dlpack__": 26, "cuda": 26, "rocm": 26, "tip": [26, 60], "__dlpack_device__": 27, "__eq__": [28, 89], "__float__": 29, "__floordiv__": 30, "__ge__": 31, "__getitem__": 32, "__gt__": 33, "__index__": 34, "__int__": 35, "__invert__": 36, "__le__": 37, "__lshift__": 38, "__lt__": 39, "__matmul__": 40, "__mod__": 41, "__mul__": 42, "__ne__": 43, "__neg__": 44, "__or__": 45, "__pos__": 46, "__pow__": 47, "__rshift__": 48, "__setitem__": 49, "__sub__": 50, "__truediv__": 51, "__xor__": 52, "devic": [53, 196, 202], "dtype": 54, "mt": 55, "ndim": 56, "shape": [57, 136, 171, 172, 173, 174, 182, 200], "size": 58, "to_devic": 59, "asarrai": 60, "note": [60, 102, 115, 190], "asin": 61, "asinh": 62, "astyp": 63, "atan": 64, "atan2": 65, "atanh": 66, "bitwise_and": 67, "bitwise_invert": 68, "bitwise_left_shift": 69, "bitwise_or": 70, "bitwise_right_shift": 71, "bitwise_xor": 72, "broadcast_arrai": 73, "broadcast_to": 74, "can_cast": 75, "ceil": 76, "clip": 77, "concat": 78, "conj": 79, "e": 80, "inf": 81, "nan": 82, "newaxi": 83, "pi": 84, "copysign": 85, "co": 86, "cosh": 87, "cumulative_sum": 88, "divid": 90, "empti": 91, "empty_lik": 92, "equal": 93, "exp": 94, "expand_dim": 95, "expm1": 96, "ey": 97, "finfo": 98, "flip": 99, "floor": 100, "floor_divid": 101, "from_dlpack": 102, "full": 103, "full_lik": 104, "greater": 105, "greater_equ": 106, "iinfo": 107, "imag": 108, "isdtyp": 109, "isfinit": 110, "isinf": 111, "isnan": 112, "less": 113, "less_equ": 114, "linspac": 115, "log": 116, "log10": 117, "log1p": 118, "log2": 119, "logaddexp": 120, "logical_and": 121, "logical_not": 122, "logical_or": 123, "logical_xor": 124, "matmul": [125, 230], "matrix_transpos": [126, 234], "max": 127, "maximum": 128, "mean": 129, "meshgrid": 130, "min": 131, "minimum": 132, "moveaxi": 133, "multipli": 134, "neg": 135, "nonzero": 136, "depend": [136, 171, 172, 173, 174, 182, 193, 200], "output": [136, 171, 172, 173, 174, 182, 200], "not_equ": 137, "ones": 138, "ones_lik": 139, "permute_dim": 140, "posit": 141, "pow": 142, "prod": 143, "remaind": 145, "reshap": 146, "result_typ": 147, "roll": 148, "round": 149, "searchsort": 150, "sign": [151, 190], "signbit": 152, "sin": 153, "sinh": 154, "sort": [155, 188], "sqrt": 156, "squar": 157, "squeez": 158, "stack": 159, "std": 160, "subtract": 161, "sum": 162, "take": 163, "tan": 164, "tanh": 165, "tensordot": [166, 242], "tile": 167, "tril": 168, "triu": 169, "trunc": 170, "unique_al": 171, "unique_count": 172, "unique_invers": 173, "unique_valu": 174, "unstack": 175, "var": 176, "vecdot": [177, 244], "where": 178, "zero": 179, "zeros_lik": 180, "specif": 181, "index": [182, 183], "singl": 182, "axi": 182, "slice": 182, "syntax": [182, 202], "multi": 182, "return": 182, "linear": [184, 197, 247], "algebra": [184, 197, 247], "manipul": 185, "search": 186, "set": 187, "statist": [189, 197], "promot": [190, 198], "rule": 190, "tabl": 190, "unsign": 190, "mix": 190, "python": [190, 196, 249, 253], "scalar": 190, "util": 191, "version": [192, 195, 248], "assumpt": 193, "hardwar": [193, 253], "softwar": 193, "environ": 193, "backward": [193, 248], "compat": [193, 248], "product": 193, "code": [193, 196], "interact": 193, "us": [193, 196, 201, 252, 253], "benchmark": 194, "suit": [194, 254], "changelog": 195, "per": 195, "standard": [195, 196, 248, 249, 251], "v2022": 195, "12": 195, "updat": 195, "number": [195, 196, 198], "support": [195, 196, 201, 202, 253], "extens": [195, 196, 208, 246, 247, 248], "addit": 195, "errata": 195, "c": 196, "situat": 196, "cython": 196, "usag": [196, 202, 208, 247, 249, 252], "1": [196, 253], "packag": 196, "i": 196, "mostli": 196, "pure": 196, "limit": 196, "2": [196, 253], "contain": 196, "lot": 196, "3": [196, 253], "numpi": 196, "directli": 196, "other": [196, 249], "longer": 196, "term": [196, 251], "approach": 196, "further": 196, "hpy": 196, "accuraci": 197, "mathemat": 197, "The": 198, "plane": 198, "branch": 198, "cut": 198, "order": 198, "base": 198, "copi": 199, "view": 199, "behaviour": 199, "mutabl": 199, "mutat": 199, "interchang": 201, "mechan": 201, "dlpack": 201, "an": [201, 251], "memori": 201, "tensor": 201, "structur": 201, "non": [201, 251], "case": [201, 253], "intend": 202, "assign": 202, "out": [202, 251], "scope": [202, 248, 251], "except": 203, "design": [204, 247, 252], "topic": 204, "constraint": 204, "lazi": 205, "v": 205, "eager": 205, "execut": 205, "parallel": 206, "static": 207, "fourier": 208, "transform": 208, "name": [208, 247], "fft": 209, "fftfreq": 210, "fftn": 211, "fftshift": 212, "hfft": 213, "ifft": 214, "ifftn": 215, "ifftshift": 216, "ihfft": 217, "irfft": 218, "irfftn": 219, "rfft": 220, "rfftfreq": 221, "rfftn": 222, "choleski": 223, "cross": 224, "det": 225, "diagon": 226, "eigh": 227, "eigvalsh": 228, "inv": 229, "matrix_norm": 231, "matrix_pow": 232, "matrix_rank": 233, "outer": 235, "pinv": 236, "qr": 237, "slogdet": 238, "solv": 239, "svd": 240, "svdval": 241, "trace": 243, "vector_norm": 245, "modul": 246, "principl": 247, "futur": 248, "evolut": 248, "content": 249, "context": 249, "methodologi": 249, "licens": 250, "purpos": 251, "introduct": [251, 252], "thi": 251, "histori": 251, "includ": 251, "goal": 251, "implic": 251, "stakehold": 251, "how": 251, "read": 251, "document": 251, "adopt": 251, "check": 251, "complianc": 251, "discover": 251, "conform": [251, 254], "implement": 251, "option": 251, "featur": 251, "definit": 251, "norm": 251, "refer": 251, "decis": 252, "make": [252, 253], "concret": 253, "acceler": 253, "distribut": 253, "scipi": 253, "simplifi": 253, "einop": 253, "remov": 253, "backend": 253, "system": 253, "ad": 253, "xtensor": 253, "4": 253, "jit": 253, "compil": 253, "comput": 253, "easier": 253, "more": 253, "robust": 253, "verif": 254, "test": 254, "measur": 254, "run": 254}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.todo": 2, "sphinx": 57}, "alltitles": {"Array object": [[0, "array-object"]], "Operators": [[0, "operators"]], "Arithmetic Operators": [[0, "arithmetic-operators"], [0, "id26"], [0, "id29"]], "Array Operators": [[0, "array-operators"], [0, "id27"], [0, "id30"]], "Bitwise Operators": [[0, "bitwise-operators"], [0, "id28"], [0, "id31"]], "Comparison Operators": [[0, "comparison-operators"]], "In-place Operators": [[0, "in-place-operators"]], "Reflected Operators": [[0, "reflected-operators"]], "Attributes": [[0, "attributes"]], "Methods": [[0, "methods"], [5, "methods"]], "Broadcasting": [[1, "broadcasting"]], "Overview": [[1, "overview"]], "Algorithm": [[1, "algorithm"]], "Examples": [[1, "examples"]], "In-place Semantics": [[1, "in-place-semantics"]], "Constants": [[2, "constants"]], "Objects in API": [[2, "objects-in-api"], [3, "objects-in-api"], [4, "objects-in-api"], [6, "objects-in-api"], [183, "objects-in-api"], [184, "objects-in-api"], [185, "objects-in-api"], [186, "objects-in-api"], [187, "objects-in-api"], [188, "objects-in-api"], [189, "objects-in-api"], [191, "objects-in-api"], [192, "objects-in-api"], [208, "objects-in-api"], [247, "objects-in-api"]], "Creation Functions": [[3, "creation-functions"]], "Data Type Functions": [[4, "data-type-functions"]], "Data Types": [[5, "data-types"], [195, "data-types"]], "bool": [[5, "bool"]], "int8": [[5, "int8"]], "int16": [[5, "int16"]], "int32": [[5, "int32"]], "int64": [[5, "int64"]], "uint8": [[5, "uint8"]], "uint16": [[5, "uint16"]], "uint32": [[5, "uint32"]], "uint64": [[5, "uint64"]], "float32": [[5, "float32"]], "float64": [[5, "float64"]], "complex64": [[5, "complex64"]], "complex128": [[5, "complex128"]], "Data Type Objects": [[5, "data-type-objects"]], "Default Data Types": [[5, "default-data-types"]], "Data Type Categories": [[5, "data-type-categories"]], "Numeric Data Types": [[5, "numeric-data-types"]], "Real-valued Data Types": [[5, "real-valued-data-types"]], "Integer Data Types": [[5, "integer-data-types"]], "Floating-point Data Types": [[5, "floating-point-data-types"]], "Real-valued Floating-point Data Types": [[5, "real-valued-floating-point-data-types"]], "Complex Floating-point Data Types": [[5, "complex-floating-point-data-types"]], "Boolean Data Types": [[5, "boolean-data-types"]], "Element-wise Functions": [[6, "element-wise-functions"]], "Function and method signatures": [[7, "function-and-method-signatures"]], "__array_api_version__": [[8, "array-api-version"]], "abs": [[9, "abs"]], "acos": [[10, "acos"]], "acosh": [[11, "acosh"]], "add": [[12, "add"]], "all": [[13, "all"]], "any": [[14, "any"]], "arange": [[15, "arange"]], "argmax": [[16, "argmax"]], "argmin": [[17, "argmin"]], "argsort": [[18, "argsort"]], "T": [[19, "t"]], "__abs__": [[20, "abs"]], "__add__": [[21, "add"]], "__and__": [[22, "and"]], "__array_namespace__": [[23, "array-namespace"]], "__bool__": [[24, "bool"]], "__complex__": [[25, "complex"]], "__dlpack__": [[26, "dlpack"]], "CUDA": [[26, null]], "ROCm": [[26, null]], "Tip": [[26, null], [60, null]], "__dlpack_device__": [[27, "dlpack-device"]], "__eq__": [[28, "eq"], [89, "eq"]], "__float__": [[29, "float"]], "__floordiv__": [[30, "floordiv"]], "__ge__": [[31, "ge"]], "__getitem__": [[32, "getitem"]], "__gt__": [[33, "gt"]], "__index__": [[34, "index"]], "__int__": [[35, "int"]], "__invert__": [[36, "invert"]], "__le__": [[37, "le"]], "__lshift__": [[38, "lshift"]], "__lt__": [[39, "lt"]], "__matmul__": [[40, "matmul"]], "__mod__": [[41, "mod"]], "__mul__": [[42, "mul"]], "__ne__": [[43, "ne"]], "__neg__": [[44, "neg"]], "__or__": [[45, "or"]], "__pos__": [[46, "pos"]], "__pow__": [[47, "pow"]], "__rshift__": [[48, "rshift"]], "__setitem__": [[49, "setitem"]], "__sub__": [[50, "sub"]], "__truediv__": [[51, "truediv"]], "__xor__": [[52, "xor"]], "device": [[53, "device"]], "dtype": [[54, "dtype"]], "mT": [[55, "mt"]], "ndim": [[56, "ndim"]], "shape": [[57, "shape"]], "size": [[58, "size"]], "to_device": [[59, "to-device"]], "asarray": [[60, "asarray"]], "Note": [[60, null], [102, null], [115, null]], "asin": [[61, "asin"]], "asinh": [[62, "asinh"]], "astype": [[63, "astype"]], "atan": [[64, "atan"]], "atan2": [[65, "atan2"]], "atanh": [[66, "atanh"]], "bitwise_and": [[67, "bitwise-and"]], "bitwise_invert": [[68, "bitwise-invert"]], "bitwise_left_shift": [[69, "bitwise-left-shift"]], "bitwise_or": [[70, "bitwise-or"]], "bitwise_right_shift": [[71, "bitwise-right-shift"]], "bitwise_xor": [[72, "bitwise-xor"]], "broadcast_arrays": [[73, "broadcast-arrays"]], "broadcast_to": [[74, "broadcast-to"]], "can_cast": [[75, "can-cast"]], "ceil": [[76, "ceil"]], "clip": [[77, "clip"]], "concat": [[78, "concat"]], "conj": [[79, "conj"]], "e": [[80, "e"]], "inf": [[81, "inf"]], "nan": [[82, "nan"]], "newaxis": [[83, "newaxis"]], "pi": [[84, "pi"]], "copysign": [[85, "copysign"]], "cos": [[86, "cos"]], "cosh": [[87, "cosh"]], "cumulative_sum": [[88, "cumulative-sum"]], "divide": [[90, "divide"]], "empty": [[91, "empty"]], "empty_like": [[92, "empty-like"]], "equal": [[93, "equal"]], "exp": [[94, "exp"]], "expand_dims": [[95, "expand-dims"]], "expm1": [[96, "expm1"]], "eye": [[97, "eye"]], "finfo": [[98, "finfo"]], "flip": [[99, "flip"]], "floor": [[100, "floor"]], "floor_divide": [[101, "floor-divide"]], "from_dlpack": [[102, "from-dlpack"]], "full": [[103, "full"]], "full_like": [[104, "full-like"]], "greater": [[105, "greater"]], "greater_equal": [[106, "greater-equal"]], "iinfo": [[107, "iinfo"]], "imag": [[108, "imag"]], "isdtype": [[109, "isdtype"]], "isfinite": [[110, "isfinite"]], "isinf": [[111, "isinf"]], "isnan": [[112, "isnan"]], "less": [[113, "less"]], "less_equal": [[114, "less-equal"]], "linspace": [[115, "linspace"]], "log": [[116, "log"]], "log10": [[117, "log10"]], "log1p": [[118, "log1p"]], "log2": [[119, "log2"]], "logaddexp": [[120, "logaddexp"]], "logical_and": [[121, "logical-and"]], "logical_not": [[122, "logical-not"]], "logical_or": [[123, "logical-or"]], "logical_xor": [[124, "logical-xor"]], "matmul": [[125, "matmul"], [230, "matmul"]], "matrix_transpose": [[126, "matrix-transpose"], [234, "matrix-transpose"]], "max": [[127, "max"]], "maximum": [[128, "maximum"]], "mean": [[129, "mean"]], "meshgrid": [[130, "meshgrid"]], "min": [[131, "min"]], "minimum": [[132, "minimum"]], "moveaxis": [[133, "moveaxis"]], "multiply": [[134, "multiply"]], "negative": [[135, "negative"]], "nonzero": [[136, "nonzero"]], "Data-dependent output shape": [[136, null], [171, null], [172, null], [173, null], [174, null], [182, null], [200, null]], "not_equal": [[137, "not-equal"]], "ones": [[138, "ones"]], "ones_like": [[139, "ones-like"]], "permute_dims": [[140, "permute-dims"]], "positive": [[141, "positive"]], "pow": [[142, "pow"]], "prod": [[143, "prod"]], "real": [[144, "real"]], "remainder": [[145, "remainder"]], "reshape": [[146, "reshape"]], "result_type": [[147, "result-type"]], "roll": [[148, "roll"]], "round": [[149, "round"]], "searchsorted": [[150, "searchsorted"]], "sign": [[151, "sign"]], "signbit": [[152, "signbit"]], "sin": [[153, "sin"]], "sinh": [[154, "sinh"]], "sort": [[155, "sort"]], "sqrt": [[156, "sqrt"]], "square": [[157, "square"]], "squeeze": [[158, "squeeze"]], "stack": [[159, "stack"]], "std": [[160, "std"]], "subtract": [[161, "subtract"]], "sum": [[162, "sum"]], "take": [[163, "take"]], "tan": [[164, "tan"]], "tanh": [[165, "tanh"]], "tensordot": [[166, "tensordot"], [242, "tensordot"]], "tile": [[167, "tile"]], "tril": [[168, "tril"]], "triu": [[169, "triu"]], "trunc": [[170, "trunc"]], "unique_all": [[171, "unique-all"]], "unique_counts": [[172, "unique-counts"]], "unique_inverse": [[173, "unique-inverse"]], "unique_values": [[174, "unique-values"]], "unstack": [[175, "unstack"]], "var": [[176, "var"]], "vecdot": [[177, "vecdot"], [244, "vecdot"]], "where": [[178, "where"]], "zeros": [[179, "zeros"]], "zeros_like": [[180, "zeros-like"]], "API specification": [[181, "api-specification"], [181, null]], "Indexing": [[182, "indexing"]], "Single-axis Indexing": [[182, "single-axis-indexing"]], "Slice Syntax": [[182, "slice-syntax"]], "Multi-axis Indexing": [[182, "multi-axis-indexing"]], "Boolean Array Indexing": [[182, "boolean-array-indexing"]], "Return Values": [[182, "return-values"]], "Indexing Functions": [[183, "indexing-functions"]], "Linear Algebra Functions": [[184, "linear-algebra-functions"]], "Manipulation Functions": [[185, "manipulation-functions"]], "Searching Functions": [[186, "searching-functions"]], "Set Functions": [[187, "set-functions"]], "Sorting Functions": [[188, "sorting-functions"]], "Statistical Functions": [[189, "statistical-functions"], [197, "statistical-functions"]], "Type Promotion Rules": [[190, "type-promotion-rules"]], "Rules": [[190, "rules"]], "Signed integer type promotion table": [[190, "signed-integer-type-promotion-table"]], "Unsigned integer type promotion table": [[190, "unsigned-integer-type-promotion-table"]], "Mixed unsigned and signed integer type promotion table": [[190, "mixed-unsigned-and-signed-integer-type-promotion-table"]], "Floating-point type promotion table": [[190, "floating-point-type-promotion-table"]], "Notes": [[190, "notes"]], "Mixing arrays with Python scalars": [[190, "mixing-arrays-with-python-scalars"]], "Utility Functions": [[191, "utility-functions"]], "Version": [[192, "version"]], "Assumptions": [[193, "assumptions"]], "Hardware and software environments": [[193, "hardware-and-software-environments"]], "Dependencies": [[193, "dependencies"]], "Backwards compatibility": [[193, "backwards-compatibility"], [248, "backwards-compatibility"]], "Production code & interactive use": [[193, "production-code-interactive-use"]], "Benchmark suite": [[194, "benchmark-suite"]], "Changelog per API standard version": [[195, "changelog-per-api-standard-version"]], "Changelog": [[195, "changelog"]], "v2022.12": [[195, "v2022-12"]], "Updates": [[195, "updates"]], "APIs": [[195, "apis"], [195, "id2"]], "Complex Number Support": [[195, "complex-number-support"], [195, "id1"]], "Extensions": [[195, "extensions"], [195, "id3"], [246, "extensions"]], "Additions": [[195, "additions"]], "Errata": [[195, "errata"]], "C API": [[196, "c-api"]], "Example situations for C/Cython usage": [[196, "example-situations-for-c-cython-usage"]], "Situation 1: a Python package that is mostly pure Python, with a limited number of Cython extensions": [[196, "situation-1-a-python-package-that-is-mostly-pure-python-with-a-limited-number-of-cython-extensions"]], "Situation 2: a Python package that contains a lot of Cython code": [[196, "situation-2-a-python-package-that-contains-a-lot-of-cython-code"]], "Situation 3: a Python package that uses the NumPy or Python C API directly": [[196, "situation-3-a-python-package-that-uses-the-numpy-or-python-c-api-directly"]], "Device support": [[196, "device-support"], [202, "device-support"]], "Other longer-term approaches": [[196, "other-longer-term-approaches"]], "Further Python API standardization": [[196, "further-python-api-standardization"]], "HPy": [[196, "hpy"]], "Accuracy": [[197, "accuracy"]], "Arithmetic Operations": [[197, "arithmetic-operations"]], "Mathematical Functions": [[197, "mathematical-functions"]], "Linear Algebra": [[197, "linear-algebra"]], "Complex Numbers": [[198, "complex-numbers"]], "The Complex Plane": [[198, "the-complex-plane"]], "Branch Cuts": [[198, "branch-cuts"]], "Complex Number Ordering": [[198, "complex-number-ordering"]], "Valued-based Promotion": [[198, "valued-based-promotion"]], "Copy-view behaviour and mutability": [[199, "copy-view-behaviour-and-mutability"]], "Mutating views": [[199, null]], "Data-dependent output shapes": [[200, "data-dependent-output-shapes"]], "Data interchange mechanisms": [[201, "data-interchange-mechanisms"]], "DLPack: An in-memory tensor structure": [[201, "dlpack-an-in-memory-tensor-structure"]], "Non-supported use cases": [[201, "non-supported-use-cases"]], "Intended usage": [[202, "intended-usage"]], "Syntax for device assignment": [[202, "syntax-for-device-assignment"]], "Semantics": [[202, "semantics"]], "Out of scope for device support": [[202, "out-of-scope-for-device-support"]], "Exceptions": [[203, "exceptions"]], "Design topics & constraints": [[204, "design-topics-constraints"], [204, null]], "Lazy vs. eager execution": [[205, "lazy-vs-eager-execution"]], "Parallelism": [[206, "parallelism"]], "Static typing": [[207, "static-typing"]], "Fourier transform Functions": [[208, "fourier-transform-functions"]], "Extension name and usage": [[208, "extension-name-and-usage"], [247, "extension-name-and-usage"]], "fft": [[209, "fft"]], "fftfreq": [[210, "fftfreq"]], "fftn": [[211, "fftn"]], "fftshift": [[212, "fftshift"]], "hfft": [[213, "hfft"]], "ifft": [[214, "ifft"]], "ifftn": [[215, "ifftn"]], "ifftshift": [[216, "ifftshift"]], "ihfft": [[217, "ihfft"]], "irfft": [[218, "irfft"]], "irfftn": [[219, "irfftn"]], "rfft": [[220, "rfft"]], "rfftfreq": [[221, "rfftfreq"]], "rfftn": [[222, "rfftn"]], "cholesky": [[223, "cholesky"]], "cross": [[224, "cross"]], "det": [[225, "det"]], "diagonal": [[226, "diagonal"]], "eigh": [[227, "eigh"]], "eigvalsh": [[228, "eigvalsh"]], "inv": [[229, "inv"]], "matrix_norm": [[231, "matrix-norm"]], "matrix_power": [[232, "matrix-power"]], "matrix_rank": [[233, "matrix-rank"]], "outer": [[235, "outer"]], "pinv": [[236, "pinv"]], "qr": [[237, "qr"]], "slogdet": [[238, "slogdet"]], "solve": [[239, "solve"]], "svd": [[240, "svd"]], "svdvals": [[241, "svdvals"]], "trace": [[243, "trace"]], "vector_norm": [[245, "vector-norm"]], "Extension modules:": [[246, null]], "Linear Algebra Extension": [[247, "linear-algebra-extension"]], "Design Principles": [[247, "design-principles"]], "Future API standard evolution": [[248, "future-api-standard-evolution"]], "Scope extensions": [[248, "scope-extensions"]], "Versioning": [[248, "versioning"]], "Python array API standard": [[249, "python-array-api-standard"]], "Contents": [[249, "contents"]], "Context": [[249, null]], "API": [[249, null]], "Methodology and Usage": [[249, null]], "Other": [[249, null]], "License": [[250, "license"]], "Purpose and scope": [[251, "purpose-and-scope"]], "Introduction": [[251, "introduction"], [252, "introduction"]], "This API standard": [[251, "this-api-standard"]], "History": [[251, "history"]], "Scope (includes out-of-scope / non-goals)": [[251, "scope-includes-out-of-scope-non-goals"]], "In scope": [[251, "in-scope"]], "Out of scope": [[251, "out-of-scope"]], "Implications of in/out of scope": [[251, "implications-of-in-out-of-scope"]], "Stakeholders": [[251, "stakeholders"]], "How to read this document": [[251, "how-to-read-this-document"]], "How to adopt this API": [[251, "how-to-adopt-this-api"]], "Checking an array object for Compliance": [[251, "checking-an-array-object-for-compliance"]], "Discoverability of conforming implementations": [[251, "discoverability-of-conforming-implementations"]], "Optional feature": [[251, null]], "Conformance": [[251, "conformance"]], "Terms and Definitions": [[251, "terms-and-definitions"]], "Normative References": [[251, "normative-references"]], "Usage Data": [[252, "usage-data"]], "Design": [[252, "design"]], "Usage": [[252, "usage"]], "Use in Decision-Making": [[252, "use-in-decision-making"]], "Use cases": [[253, "use-cases"]], "Types of use cases": [[253, "types-of-use-cases"]], "Concrete use cases": [[253, "concrete-use-cases"]], "Use case 1: add hardware accelerator and distributed support to SciPy": [[253, "use-case-1-add-hardware-accelerator-and-distributed-support-to-scipy"]], "Use case 2: simplify einops by removing the backend system": [[253, "use-case-2-simplify-einops-by-removing-the-backend-system"]], "Use case 3: adding a Python API to xtensor": [[253, "use-case-3-adding-a-python-api-to-xtensor"]], "Use case 4: make JIT compilation of array computations easier and more robust": [[253, "use-case-4-make-jit-compilation-of-array-computations-easier-and-more-robust"]], "Verification - test suite": [[254, "verification-test-suite"]], "Measuring conformance": [[254, "measuring-conformance"]], "Running the tests": [[254, "running-the-tests"]]}, "indexentries": {"__array_api_version__ (in module array_api)": [[8, "array_api.__array_api_version__"]], "abs() (in module array_api)": [[9, "array_api.abs"]], "acos() (in module array_api)": [[10, "array_api.acos"]], "acosh() (in module array_api)": [[11, "array_api.acosh"]], "add() (in module array_api)": [[12, "array_api.add"]], "all() (in module array_api)": [[13, "array_api.all"]], "any() (in module array_api)": [[14, "array_api.any"]], "arange() (in module array_api)": [[15, "array_api.arange"]], "argmax() (in module array_api)": [[16, "array_api.argmax"]], "argmin() (in module array_api)": [[17, "array_api.argmin"]], "argsort() (in module array_api)": [[18, "array_api.argsort"]], "t (array property)": [[19, "array_api.array.T"]], "__abs__() (array method)": [[20, "array_api.array.__abs__"]], "__add__() (array method)": [[21, "array_api.array.__add__"]], "__and__() (array method)": [[22, "array_api.array.__and__"]], "__array_namespace__() (array method)": [[23, "array_api.array.__array_namespace__"]], "__bool__() (array method)": [[24, "array_api.array.__bool__"]], "__complex__() (array method)": [[25, "array_api.array.__complex__"]], "__dlpack__() (array method)": [[26, "array_api.array.__dlpack__"]], "__dlpack_device__() (array method)": [[27, "array_api.array.__dlpack_device__"]], "__eq__() (array method)": [[28, "array_api.array.__eq__"]], "__float__() (array method)": [[29, "array_api.array.__float__"]], "__floordiv__() (array method)": [[30, "array_api.array.__floordiv__"]], "__ge__() (array method)": [[31, "array_api.array.__ge__"]], "__getitem__() (array method)": [[32, "array_api.array.__getitem__"]], "__gt__() (array method)": [[33, "array_api.array.__gt__"]], "__index__() (array method)": [[34, "array_api.array.__index__"]], "__int__() (array method)": [[35, "array_api.array.__int__"]], "__invert__() (array method)": [[36, "array_api.array.__invert__"]], "__le__() (array method)": [[37, "array_api.array.__le__"]], "__lshift__() (array method)": [[38, "array_api.array.__lshift__"]], "__lt__() (array method)": [[39, "array_api.array.__lt__"]], "__matmul__() (array method)": [[40, "array_api.array.__matmul__"]], "__mod__() (array method)": [[41, "array_api.array.__mod__"]], "__mul__() (array method)": [[42, "array_api.array.__mul__"]], "__ne__() (array method)": [[43, "array_api.array.__ne__"]], "__neg__() (array method)": [[44, "array_api.array.__neg__"]], "__or__() (array method)": [[45, "array_api.array.__or__"]], "__pos__() (array method)": [[46, "array_api.array.__pos__"]], "__pow__() (array method)": [[47, "array_api.array.__pow__"]], "__rshift__() (array method)": [[48, "array_api.array.__rshift__"]], "__setitem__() (array method)": [[49, "array_api.array.__setitem__"]], "__sub__() (array method)": [[50, "array_api.array.__sub__"]], "__truediv__() (array method)": [[51, "array_api.array.__truediv__"]], "__xor__() (array method)": [[52, "array_api.array.__xor__"]], "device (array property)": [[53, "array_api.array.device"]], "dtype (array property)": [[54, "array_api.array.dtype"]], "mt (array property)": [[55, "array_api.array.mT"]], "ndim (array property)": [[56, "array_api.array.ndim"]], "shape (array property)": [[57, "array_api.array.shape"]], "size (array property)": [[58, "array_api.array.size"]], "to_device() (array method)": [[59, "array_api.array.to_device"]], "asarray() (in module array_api)": [[60, "array_api.asarray"]], "asin() (in module array_api)": [[61, "array_api.asin"]], "asinh() (in module array_api)": [[62, "array_api.asinh"]], "astype() (in module array_api)": [[63, "array_api.astype"]], "atan() (in module array_api)": [[64, "array_api.atan"]], "atan2() (in module array_api)": [[65, "array_api.atan2"]], "atanh() (in module array_api)": [[66, "array_api.atanh"]], "bitwise_and() (in module array_api)": [[67, "array_api.bitwise_and"]], "bitwise_invert() (in module array_api)": [[68, "array_api.bitwise_invert"]], "bitwise_left_shift() (in module array_api)": [[69, "array_api.bitwise_left_shift"]], "bitwise_or() (in module array_api)": [[70, "array_api.bitwise_or"]], "bitwise_right_shift() (in module array_api)": [[71, "array_api.bitwise_right_shift"]], "bitwise_xor() (in module array_api)": [[72, "array_api.bitwise_xor"]], "broadcast_arrays() (in module array_api)": [[73, "array_api.broadcast_arrays"]], "broadcast_to() (in module array_api)": [[74, "array_api.broadcast_to"]], "can_cast() (in module array_api)": [[75, "array_api.can_cast"]], "ceil() (in module array_api)": [[76, "array_api.ceil"]], "clip() (in module array_api)": [[77, "array_api.clip"]], "concat() (in module array_api)": [[78, "array_api.concat"]], "conj() (in module array_api)": [[79, "array_api.conj"]], "e (in module array_api.constants)": [[80, "array_api.constants.e"]], "inf (in module array_api.constants)": [[81, "array_api.constants.inf"]], "nan (in module array_api.constants)": [[82, "array_api.constants.nan"]], "newaxis (in module array_api.constants)": [[83, "array_api.constants.newaxis"]], "pi (in module array_api.constants)": [[84, "array_api.constants.pi"]], "copysign() (in module array_api)": [[85, "array_api.copysign"]], "cos() (in module array_api)": [[86, "array_api.cos"]], "cosh() (in module array_api)": [[87, "array_api.cosh"]], "cumulative_sum() (in module array_api)": [[88, "array_api.cumulative_sum"]], "__eq__() (in module array_api.data_types)": [[89, "array_api.data_types.__eq__"]], "divide() (in module array_api)": [[90, "array_api.divide"]], "empty() (in module array_api)": [[91, "array_api.empty"]], "empty_like() (in module array_api)": [[92, "array_api.empty_like"]], "equal() (in module array_api)": [[93, "array_api.equal"]], "exp() (in module array_api)": [[94, "array_api.exp"]], "expand_dims() (in module array_api)": [[95, "array_api.expand_dims"]], "expm1() (in module array_api)": [[96, "array_api.expm1"]], "eye() (in module array_api)": [[97, "array_api.eye"]], "finfo() (in module array_api)": [[98, "array_api.finfo"]], "flip() (in module array_api)": [[99, "array_api.flip"]], "floor() (in module array_api)": [[100, "array_api.floor"]], "floor_divide() (in module array_api)": [[101, "array_api.floor_divide"]], "from_dlpack() (in module array_api)": [[102, "array_api.from_dlpack"]], "full() (in module array_api)": [[103, "array_api.full"]], "full_like() (in module array_api)": [[104, "array_api.full_like"]], "greater() (in module array_api)": [[105, "array_api.greater"]], "greater_equal() (in module array_api)": [[106, "array_api.greater_equal"]], "iinfo() (in module array_api)": [[107, "array_api.iinfo"]], "imag() (in module array_api)": [[108, "array_api.imag"]], "isdtype() (in module array_api)": [[109, "array_api.isdtype"]], "isfinite() (in module array_api)": [[110, "array_api.isfinite"]], "isinf() (in module array_api)": [[111, "array_api.isinf"]], "isnan() (in module array_api)": [[112, "array_api.isnan"]], "less() (in module array_api)": [[113, "array_api.less"]], "less_equal() (in module array_api)": [[114, "array_api.less_equal"]], "linspace() (in module array_api)": [[115, "array_api.linspace"]], "log() (in module array_api)": [[116, "array_api.log"]], "log10() (in module array_api)": [[117, "array_api.log10"]], "log1p() (in module array_api)": [[118, "array_api.log1p"]], "log2() (in module array_api)": [[119, "array_api.log2"]], "logaddexp() (in module array_api)": [[120, "array_api.logaddexp"]], "logical_and() (in module array_api)": [[121, "array_api.logical_and"]], "logical_not() (in module array_api)": [[122, "array_api.logical_not"]], "logical_or() (in module array_api)": [[123, "array_api.logical_or"]], "logical_xor() (in module array_api)": [[124, "array_api.logical_xor"]], "matmul() (in module array_api)": [[125, "array_api.matmul"]], "matrix_transpose() (in module array_api)": [[126, "array_api.matrix_transpose"]], "max() (in module array_api)": [[127, "array_api.max"]], "maximum() (in module array_api)": [[128, "array_api.maximum"]], "mean() (in module array_api)": [[129, "array_api.mean"]], "meshgrid() (in module array_api)": [[130, "array_api.meshgrid"]], "min() (in module array_api)": [[131, "array_api.min"]], "minimum() (in module array_api)": [[132, "array_api.minimum"]], "moveaxis() (in module array_api)": [[133, "array_api.moveaxis"]], "multiply() (in module array_api)": [[134, "array_api.multiply"]], "negative() (in module array_api)": [[135, "array_api.negative"]], "nonzero() (in module array_api)": [[136, "array_api.nonzero"]], "not_equal() (in module array_api)": [[137, "array_api.not_equal"]], "ones() (in module array_api)": [[138, "array_api.ones"]], "ones_like() (in module array_api)": [[139, "array_api.ones_like"]], "permute_dims() (in module array_api)": [[140, "array_api.permute_dims"]], "positive() (in module array_api)": [[141, "array_api.positive"]], "pow() (in module array_api)": [[142, "array_api.pow"]], "prod() (in module array_api)": [[143, "array_api.prod"]], "real() (in module array_api)": [[144, "array_api.real"]], "remainder() (in module array_api)": [[145, "array_api.remainder"]], "reshape() (in module array_api)": [[146, "array_api.reshape"]], "result_type() (in module array_api)": [[147, "array_api.result_type"]], "roll() (in module array_api)": [[148, "array_api.roll"]], "round() (in module array_api)": [[149, "array_api.round"]], "searchsorted() (in module array_api)": [[150, "array_api.searchsorted"]], "sign() (in module array_api)": [[151, "array_api.sign"]], "signbit() (in module array_api)": [[152, "array_api.signbit"]], "sin() (in module array_api)": [[153, "array_api.sin"]], "sinh() (in module array_api)": [[154, "array_api.sinh"]], "sort() (in module array_api)": [[155, "array_api.sort"]], "sqrt() (in module array_api)": [[156, "array_api.sqrt"]], "square() (in module array_api)": [[157, "array_api.square"]], "squeeze() (in module array_api)": [[158, "array_api.squeeze"]], "stack() (in module array_api)": [[159, "array_api.stack"]], "std() (in module array_api)": [[160, "array_api.std"]], "subtract() (in module array_api)": [[161, "array_api.subtract"]], "sum() (in module array_api)": [[162, "array_api.sum"]], "take() (in module array_api)": [[163, "array_api.take"]], "tan() (in module array_api)": [[164, "array_api.tan"]], "tanh() (in module array_api)": [[165, "array_api.tanh"]], "tensordot() (in module array_api)": [[166, "array_api.tensordot"]], "tile() (in module array_api)": [[167, "array_api.tile"]], "tril() (in module array_api)": [[168, "array_api.tril"]], "triu() (in module array_api)": [[169, "array_api.triu"]], "trunc() (in module array_api)": [[170, "array_api.trunc"]], "unique_all() (in module array_api)": [[171, "array_api.unique_all"]], "unique_counts() (in module array_api)": [[172, "array_api.unique_counts"]], "unique_inverse() (in module array_api)": [[173, "array_api.unique_inverse"]], "unique_values() (in module array_api)": [[174, "array_api.unique_values"]], "unstack() (in module array_api)": [[175, "array_api.unstack"]], "var() (in module array_api)": [[176, "array_api.var"]], "vecdot() (in module array_api)": [[177, "array_api.vecdot"]], "where() (in module array_api)": [[178, "array_api.where"]], "zeros() (in module array_api)": [[179, "array_api.zeros"]], "zeros_like() (in module array_api)": [[180, "array_api.zeros_like"]], "fft() (in module array_api.fft)": [[209, "array_api.fft.fft"]], "fftfreq() (in module array_api.fft)": [[210, "array_api.fft.fftfreq"]], "fftn() (in module array_api.fft)": [[211, "array_api.fft.fftn"]], "fftshift() (in module array_api.fft)": [[212, "array_api.fft.fftshift"]], "hfft() (in module array_api.fft)": [[213, "array_api.fft.hfft"]], "ifft() (in module array_api.fft)": [[214, "array_api.fft.ifft"]], "ifftn() (in module array_api.fft)": [[215, "array_api.fft.ifftn"]], "ifftshift() (in module array_api.fft)": [[216, "array_api.fft.ifftshift"]], "ihfft() (in module array_api.fft)": [[217, "array_api.fft.ihfft"]], "irfft() (in module array_api.fft)": [[218, "array_api.fft.irfft"]], "irfftn() (in module array_api.fft)": [[219, "array_api.fft.irfftn"]], "rfft() (in module array_api.fft)": [[220, "array_api.fft.rfft"]], "rfftfreq() (in module array_api.fft)": [[221, "array_api.fft.rfftfreq"]], "rfftn() (in module array_api.fft)": [[222, "array_api.fft.rfftn"]], "cholesky() (in module array_api.linalg)": [[223, "array_api.linalg.cholesky"]], "cross() (in module array_api.linalg)": [[224, "array_api.linalg.cross"]], "det() (in module array_api.linalg)": [[225, "array_api.linalg.det"]], "diagonal() (in module array_api.linalg)": [[226, "array_api.linalg.diagonal"]], "eigh() (in module array_api.linalg)": [[227, "array_api.linalg.eigh"]], "eigvalsh() (in module array_api.linalg)": [[228, "array_api.linalg.eigvalsh"]], "inv() (in module array_api.linalg)": [[229, "array_api.linalg.inv"]], "matmul() (in module array_api.linalg)": [[230, "array_api.linalg.matmul"]], "matrix_norm() (in module array_api.linalg)": [[231, "array_api.linalg.matrix_norm"]], "matrix_power() (in module array_api.linalg)": [[232, "array_api.linalg.matrix_power"]], "matrix_rank() (in module array_api.linalg)": [[233, "array_api.linalg.matrix_rank"]], "matrix_transpose() (in module array_api.linalg)": [[234, "array_api.linalg.matrix_transpose"]], "outer() (in module array_api.linalg)": [[235, "array_api.linalg.outer"]], "pinv() (in module array_api.linalg)": [[236, "array_api.linalg.pinv"]], "qr() (in module array_api.linalg)": [[237, "array_api.linalg.qr"]], "slogdet() (in module array_api.linalg)": [[238, "array_api.linalg.slogdet"]], "solve() (in module array_api.linalg)": [[239, "array_api.linalg.solve"]], "svd() (in module array_api.linalg)": [[240, "array_api.linalg.svd"]], "svdvals() (in module array_api.linalg)": [[241, "array_api.linalg.svdvals"]], "tensordot() (in module array_api.linalg)": [[242, "array_api.linalg.tensordot"]], "trace() (in module array_api.linalg)": [[243, "array_api.linalg.trace"]], "vecdot() (in module array_api.linalg)": [[244, "array_api.linalg.vecdot"]], "vector_norm() (in module array_api.linalg)": [[245, "array_api.linalg.vector_norm"]]}})