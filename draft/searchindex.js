Search.setIndex({"docnames": ["API_specification/array_object", "API_specification/broadcasting", "API_specification/constants", "API_specification/creation_functions", "API_specification/data_type_functions", "API_specification/data_types", "API_specification/elementwise_functions", "API_specification/function_and_method_signatures", "API_specification/generated/array_api.__array_api_version__", "API_specification/generated/array_api.abs", "API_specification/generated/array_api.acos", "API_specification/generated/array_api.acosh", "API_specification/generated/array_api.add", "API_specification/generated/array_api.all", "API_specification/generated/array_api.any", "API_specification/generated/array_api.arange", "API_specification/generated/array_api.argmax", "API_specification/generated/array_api.argmin", "API_specification/generated/array_api.argsort", "API_specification/generated/array_api.array.T", "API_specification/generated/array_api.array.__abs__", "API_specification/generated/array_api.array.__add__", "API_specification/generated/array_api.array.__and__", "API_specification/generated/array_api.array.__array_namespace__", "API_specification/generated/array_api.array.__bool__", "API_specification/generated/array_api.array.__complex__", "API_specification/generated/array_api.array.__dlpack__", "API_specification/generated/array_api.array.__dlpack_device__", "API_specification/generated/array_api.array.__eq__", "API_specification/generated/array_api.array.__float__", "API_specification/generated/array_api.array.__floordiv__", "API_specification/generated/array_api.array.__ge__", "API_specification/generated/array_api.array.__getitem__", "API_specification/generated/array_api.array.__gt__", "API_specification/generated/array_api.array.__index__", "API_specification/generated/array_api.array.__int__", "API_specification/generated/array_api.array.__invert__", "API_specification/generated/array_api.array.__le__", "API_specification/generated/array_api.array.__lshift__", "API_specification/generated/array_api.array.__lt__", "API_specification/generated/array_api.array.__matmul__", "API_specification/generated/array_api.array.__mod__", "API_specification/generated/array_api.array.__mul__", "API_specification/generated/array_api.array.__ne__", "API_specification/generated/array_api.array.__neg__", "API_specification/generated/array_api.array.__or__", "API_specification/generated/array_api.array.__pos__", "API_specification/generated/array_api.array.__pow__", "API_specification/generated/array_api.array.__rshift__", "API_specification/generated/array_api.array.__setitem__", "API_specification/generated/array_api.array.__sub__", "API_specification/generated/array_api.array.__truediv__", "API_specification/generated/array_api.array.__xor__", "API_specification/generated/array_api.array.device", "API_specification/generated/array_api.array.dtype", "API_specification/generated/array_api.array.mT", "API_specification/generated/array_api.array.ndim", "API_specification/generated/array_api.array.shape", "API_specification/generated/array_api.array.size", "API_specification/generated/array_api.array.to_device", "API_specification/generated/array_api.asarray", "API_specification/generated/array_api.asin", "API_specification/generated/array_api.asinh", "API_specification/generated/array_api.astype", "API_specification/generated/array_api.atan", "API_specification/generated/array_api.atan2", "API_specification/generated/array_api.atanh", "API_specification/generated/array_api.bitwise_and", "API_specification/generated/array_api.bitwise_invert", "API_specification/generated/array_api.bitwise_left_shift", "API_specification/generated/array_api.bitwise_or", "API_specification/generated/array_api.bitwise_right_shift", "API_specification/generated/array_api.bitwise_xor", "API_specification/generated/array_api.broadcast_arrays", "API_specification/generated/array_api.broadcast_to", "API_specification/generated/array_api.can_cast", "API_specification/generated/array_api.ceil", "API_specification/generated/array_api.clip", "API_specification/generated/array_api.concat", "API_specification/generated/array_api.conj", "API_specification/generated/array_api.constants.e", "API_specification/generated/array_api.constants.inf", "API_specification/generated/array_api.constants.nan", "API_specification/generated/array_api.constants.newaxis", "API_specification/generated/array_api.constants.pi", "API_specification/generated/array_api.copysign", "API_specification/generated/array_api.cos", "API_specification/generated/array_api.cosh", "API_specification/generated/array_api.count_nonzero", "API_specification/generated/array_api.cumulative_sum", "API_specification/generated/array_api.data_types.__eq__", "API_specification/generated/array_api.diff", "API_specification/generated/array_api.divide", "API_specification/generated/array_api.empty", "API_specification/generated/array_api.empty_like", "API_specification/generated/array_api.equal", "API_specification/generated/array_api.exp", "API_specification/generated/array_api.expand_dims", "API_specification/generated/array_api.expm1", "API_specification/generated/array_api.eye", "API_specification/generated/array_api.finfo", "API_specification/generated/array_api.flip", "API_specification/generated/array_api.floor", "API_specification/generated/array_api.floor_divide", "API_specification/generated/array_api.from_dlpack", "API_specification/generated/array_api.full", "API_specification/generated/array_api.full_like", "API_specification/generated/array_api.greater", "API_specification/generated/array_api.greater_equal", "API_specification/generated/array_api.hypot", "API_specification/generated/array_api.iinfo", "API_specification/generated/array_api.imag", "API_specification/generated/array_api.info.__array_namespace_info__", "API_specification/generated/array_api.info.capabilities", "API_specification/generated/array_api.info.default_device", "API_specification/generated/array_api.info.default_dtypes", "API_specification/generated/array_api.info.devices", "API_specification/generated/array_api.info.dtypes", "API_specification/generated/array_api.isdtype", "API_specification/generated/array_api.isfinite", "API_specification/generated/array_api.isinf", "API_specification/generated/array_api.isnan", "API_specification/generated/array_api.less", "API_specification/generated/array_api.less_equal", "API_specification/generated/array_api.linspace", "API_specification/generated/array_api.log", "API_specification/generated/array_api.log10", "API_specification/generated/array_api.log1p", "API_specification/generated/array_api.log2", "API_specification/generated/array_api.logaddexp", "API_specification/generated/array_api.logical_and", "API_specification/generated/array_api.logical_not", "API_specification/generated/array_api.logical_or", "API_specification/generated/array_api.logical_xor", "API_specification/generated/array_api.matmul", "API_specification/generated/array_api.matrix_transpose", "API_specification/generated/array_api.max", "API_specification/generated/array_api.maximum", "API_specification/generated/array_api.mean", "API_specification/generated/array_api.meshgrid", "API_specification/generated/array_api.min", "API_specification/generated/array_api.minimum", "API_specification/generated/array_api.moveaxis", "API_specification/generated/array_api.multiply", "API_specification/generated/array_api.negative", "API_specification/generated/array_api.nextafter", "API_specification/generated/array_api.nonzero", "API_specification/generated/array_api.not_equal", "API_specification/generated/array_api.ones", "API_specification/generated/array_api.ones_like", "API_specification/generated/array_api.permute_dims", "API_specification/generated/array_api.positive", "API_specification/generated/array_api.pow", "API_specification/generated/array_api.prod", "API_specification/generated/array_api.real", "API_specification/generated/array_api.reciprocal", "API_specification/generated/array_api.remainder", "API_specification/generated/array_api.repeat", "API_specification/generated/array_api.reshape", "API_specification/generated/array_api.result_type", "API_specification/generated/array_api.roll", "API_specification/generated/array_api.round", "API_specification/generated/array_api.searchsorted", "API_specification/generated/array_api.sign", "API_specification/generated/array_api.signbit", "API_specification/generated/array_api.sin", "API_specification/generated/array_api.sinh", "API_specification/generated/array_api.sort", "API_specification/generated/array_api.sqrt", "API_specification/generated/array_api.square", "API_specification/generated/array_api.squeeze", "API_specification/generated/array_api.stack", "API_specification/generated/array_api.std", "API_specification/generated/array_api.subtract", "API_specification/generated/array_api.sum", "API_specification/generated/array_api.take", "API_specification/generated/array_api.take_along_axis", "API_specification/generated/array_api.tan", "API_specification/generated/array_api.tanh", "API_specification/generated/array_api.tensordot", "API_specification/generated/array_api.tile", "API_specification/generated/array_api.tril", "API_specification/generated/array_api.triu", "API_specification/generated/array_api.trunc", "API_specification/generated/array_api.unique_all", "API_specification/generated/array_api.unique_counts", "API_specification/generated/array_api.unique_inverse", "API_specification/generated/array_api.unique_values", "API_specification/generated/array_api.unstack", "API_specification/generated/array_api.var", "API_specification/generated/array_api.vecdot", "API_specification/generated/array_api.where", "API_specification/generated/array_api.zeros", "API_specification/generated/array_api.zeros_like", "API_specification/index", "API_specification/indexing", "API_specification/indexing_functions", "API_specification/inspection", "API_specification/linear_algebra_functions", "API_specification/manipulation_functions", "API_specification/searching_functions", "API_specification/set_functions", "API_specification/sorting_functions", "API_specification/statistical_functions", "API_specification/type_promotion", "API_specification/utility_functions", "API_specification/version", "assumptions", "benchmark_suite", "changelog", "design_topics/C_API", "design_topics/accuracy", "design_topics/complex_numbers", "design_topics/copies_views_and_mutation", "design_topics/data_dependent_output_shapes", "design_topics/data_interchange", "design_topics/device_support", "design_topics/exceptions", "design_topics/index", "design_topics/lazy_eager", "design_topics/parallelism", "design_topics/static_typing", "extensions/fourier_transform_functions", "extensions/generated/array_api.fft.fft", "extensions/generated/array_api.fft.fftfreq", "extensions/generated/array_api.fft.fftn", "extensions/generated/array_api.fft.fftshift", "extensions/generated/array_api.fft.hfft", "extensions/generated/array_api.fft.ifft", "extensions/generated/array_api.fft.ifftn", "extensions/generated/array_api.fft.ifftshift", "extensions/generated/array_api.fft.ihfft", "extensions/generated/array_api.fft.irfft", "extensions/generated/array_api.fft.irfftn", "extensions/generated/array_api.fft.rfft", "extensions/generated/array_api.fft.rfftfreq", "extensions/generated/array_api.fft.rfftn", "extensions/generated/array_api.linalg.cholesky", "extensions/generated/array_api.linalg.cross", "extensions/generated/array_api.linalg.det", "extensions/generated/array_api.linalg.diagonal", "extensions/generated/array_api.linalg.eigh", "extensions/generated/array_api.linalg.eigvalsh", "extensions/generated/array_api.linalg.inv", "extensions/generated/array_api.linalg.matmul", "extensions/generated/array_api.linalg.matrix_norm", "extensions/generated/array_api.linalg.matrix_power", "extensions/generated/array_api.linalg.matrix_rank", "extensions/generated/array_api.linalg.matrix_transpose", "extensions/generated/array_api.linalg.outer", "extensions/generated/array_api.linalg.pinv", "extensions/generated/array_api.linalg.qr", "extensions/generated/array_api.linalg.slogdet", "extensions/generated/array_api.linalg.solve", "extensions/generated/array_api.linalg.svd", "extensions/generated/array_api.linalg.svdvals", "extensions/generated/array_api.linalg.tensordot", "extensions/generated/array_api.linalg.trace", "extensions/generated/array_api.linalg.vecdot", "extensions/generated/array_api.linalg.vector_norm", "extensions/index", "extensions/linear_algebra_functions", "future_API_evolution", "index", "license", "purpose_and_scope", "usage_data", "use_cases", "verification_test_suite"], "filenames": ["API_specification/array_object.rst", "API_specification/broadcasting.rst", "API_specification/constants.rst", "API_specification/creation_functions.rst", "API_specification/data_type_functions.rst", "API_specification/data_types.rst", "API_specification/elementwise_functions.rst", "API_specification/function_and_method_signatures.rst", "API_specification/generated/array_api.__array_api_version__.rst", "API_specification/generated/array_api.abs.rst", "API_specification/generated/array_api.acos.rst", "API_specification/generated/array_api.acosh.rst", "API_specification/generated/array_api.add.rst", "API_specification/generated/array_api.all.rst", "API_specification/generated/array_api.any.rst", "API_specification/generated/array_api.arange.rst", "API_specification/generated/array_api.argmax.rst", "API_specification/generated/array_api.argmin.rst", "API_specification/generated/array_api.argsort.rst", "API_specification/generated/array_api.array.T.rst", "API_specification/generated/array_api.array.__abs__.rst", "API_specification/generated/array_api.array.__add__.rst", "API_specification/generated/array_api.array.__and__.rst", "API_specification/generated/array_api.array.__array_namespace__.rst", "API_specification/generated/array_api.array.__bool__.rst", "API_specification/generated/array_api.array.__complex__.rst", "API_specification/generated/array_api.array.__dlpack__.rst", "API_specification/generated/array_api.array.__dlpack_device__.rst", "API_specification/generated/array_api.array.__eq__.rst", "API_specification/generated/array_api.array.__float__.rst", "API_specification/generated/array_api.array.__floordiv__.rst", "API_specification/generated/array_api.array.__ge__.rst", "API_specification/generated/array_api.array.__getitem__.rst", "API_specification/generated/array_api.array.__gt__.rst", "API_specification/generated/array_api.array.__index__.rst", "API_specification/generated/array_api.array.__int__.rst", "API_specification/generated/array_api.array.__invert__.rst", "API_specification/generated/array_api.array.__le__.rst", "API_specification/generated/array_api.array.__lshift__.rst", "API_specification/generated/array_api.array.__lt__.rst", "API_specification/generated/array_api.array.__matmul__.rst", "API_specification/generated/array_api.array.__mod__.rst", "API_specification/generated/array_api.array.__mul__.rst", "API_specification/generated/array_api.array.__ne__.rst", "API_specification/generated/array_api.array.__neg__.rst", "API_specification/generated/array_api.array.__or__.rst", "API_specification/generated/array_api.array.__pos__.rst", "API_specification/generated/array_api.array.__pow__.rst", "API_specification/generated/array_api.array.__rshift__.rst", "API_specification/generated/array_api.array.__setitem__.rst", "API_specification/generated/array_api.array.__sub__.rst", "API_specification/generated/array_api.array.__truediv__.rst", "API_specification/generated/array_api.array.__xor__.rst", "API_specification/generated/array_api.array.device.rst", "API_specification/generated/array_api.array.dtype.rst", "API_specification/generated/array_api.array.mT.rst", "API_specification/generated/array_api.array.ndim.rst", "API_specification/generated/array_api.array.shape.rst", "API_specification/generated/array_api.array.size.rst", "API_specification/generated/array_api.array.to_device.rst", "API_specification/generated/array_api.asarray.rst", "API_specification/generated/array_api.asin.rst", "API_specification/generated/array_api.asinh.rst", "API_specification/generated/array_api.astype.rst", "API_specification/generated/array_api.atan.rst", "API_specification/generated/array_api.atan2.rst", "API_specification/generated/array_api.atanh.rst", "API_specification/generated/array_api.bitwise_and.rst", "API_specification/generated/array_api.bitwise_invert.rst", "API_specification/generated/array_api.bitwise_left_shift.rst", "API_specification/generated/array_api.bitwise_or.rst", "API_specification/generated/array_api.bitwise_right_shift.rst", "API_specification/generated/array_api.bitwise_xor.rst", "API_specification/generated/array_api.broadcast_arrays.rst", "API_specification/generated/array_api.broadcast_to.rst", "API_specification/generated/array_api.can_cast.rst", "API_specification/generated/array_api.ceil.rst", "API_specification/generated/array_api.clip.rst", "API_specification/generated/array_api.concat.rst", "API_specification/generated/array_api.conj.rst", "API_specification/generated/array_api.constants.e.rst", "API_specification/generated/array_api.constants.inf.rst", "API_specification/generated/array_api.constants.nan.rst", "API_specification/generated/array_api.constants.newaxis.rst", "API_specification/generated/array_api.constants.pi.rst", "API_specification/generated/array_api.copysign.rst", "API_specification/generated/array_api.cos.rst", "API_specification/generated/array_api.cosh.rst", "API_specification/generated/array_api.count_nonzero.rst", "API_specification/generated/array_api.cumulative_sum.rst", "API_specification/generated/array_api.data_types.__eq__.rst", "API_specification/generated/array_api.diff.rst", "API_specification/generated/array_api.divide.rst", "API_specification/generated/array_api.empty.rst", "API_specification/generated/array_api.empty_like.rst", "API_specification/generated/array_api.equal.rst", "API_specification/generated/array_api.exp.rst", "API_specification/generated/array_api.expand_dims.rst", "API_specification/generated/array_api.expm1.rst", "API_specification/generated/array_api.eye.rst", "API_specification/generated/array_api.finfo.rst", "API_specification/generated/array_api.flip.rst", "API_specification/generated/array_api.floor.rst", "API_specification/generated/array_api.floor_divide.rst", "API_specification/generated/array_api.from_dlpack.rst", "API_specification/generated/array_api.full.rst", "API_specification/generated/array_api.full_like.rst", "API_specification/generated/array_api.greater.rst", "API_specification/generated/array_api.greater_equal.rst", "API_specification/generated/array_api.hypot.rst", "API_specification/generated/array_api.iinfo.rst", "API_specification/generated/array_api.imag.rst", "API_specification/generated/array_api.info.__array_namespace_info__.rst", "API_specification/generated/array_api.info.capabilities.rst", "API_specification/generated/array_api.info.default_device.rst", "API_specification/generated/array_api.info.default_dtypes.rst", "API_specification/generated/array_api.info.devices.rst", "API_specification/generated/array_api.info.dtypes.rst", "API_specification/generated/array_api.isdtype.rst", "API_specification/generated/array_api.isfinite.rst", "API_specification/generated/array_api.isinf.rst", "API_specification/generated/array_api.isnan.rst", "API_specification/generated/array_api.less.rst", "API_specification/generated/array_api.less_equal.rst", "API_specification/generated/array_api.linspace.rst", "API_specification/generated/array_api.log.rst", "API_specification/generated/array_api.log10.rst", "API_specification/generated/array_api.log1p.rst", "API_specification/generated/array_api.log2.rst", "API_specification/generated/array_api.logaddexp.rst", "API_specification/generated/array_api.logical_and.rst", "API_specification/generated/array_api.logical_not.rst", "API_specification/generated/array_api.logical_or.rst", "API_specification/generated/array_api.logical_xor.rst", "API_specification/generated/array_api.matmul.rst", "API_specification/generated/array_api.matrix_transpose.rst", "API_specification/generated/array_api.max.rst", "API_specification/generated/array_api.maximum.rst", "API_specification/generated/array_api.mean.rst", "API_specification/generated/array_api.meshgrid.rst", "API_specification/generated/array_api.min.rst", "API_specification/generated/array_api.minimum.rst", "API_specification/generated/array_api.moveaxis.rst", "API_specification/generated/array_api.multiply.rst", "API_specification/generated/array_api.negative.rst", "API_specification/generated/array_api.nextafter.rst", "API_specification/generated/array_api.nonzero.rst", "API_specification/generated/array_api.not_equal.rst", "API_specification/generated/array_api.ones.rst", "API_specification/generated/array_api.ones_like.rst", "API_specification/generated/array_api.permute_dims.rst", "API_specification/generated/array_api.positive.rst", "API_specification/generated/array_api.pow.rst", "API_specification/generated/array_api.prod.rst", "API_specification/generated/array_api.real.rst", "API_specification/generated/array_api.reciprocal.rst", "API_specification/generated/array_api.remainder.rst", "API_specification/generated/array_api.repeat.rst", "API_specification/generated/array_api.reshape.rst", "API_specification/generated/array_api.result_type.rst", "API_specification/generated/array_api.roll.rst", "API_specification/generated/array_api.round.rst", "API_specification/generated/array_api.searchsorted.rst", "API_specification/generated/array_api.sign.rst", "API_specification/generated/array_api.signbit.rst", "API_specification/generated/array_api.sin.rst", "API_specification/generated/array_api.sinh.rst", "API_specification/generated/array_api.sort.rst", "API_specification/generated/array_api.sqrt.rst", "API_specification/generated/array_api.square.rst", "API_specification/generated/array_api.squeeze.rst", "API_specification/generated/array_api.stack.rst", "API_specification/generated/array_api.std.rst", "API_specification/generated/array_api.subtract.rst", "API_specification/generated/array_api.sum.rst", "API_specification/generated/array_api.take.rst", "API_specification/generated/array_api.take_along_axis.rst", "API_specification/generated/array_api.tan.rst", "API_specification/generated/array_api.tanh.rst", "API_specification/generated/array_api.tensordot.rst", "API_specification/generated/array_api.tile.rst", "API_specification/generated/array_api.tril.rst", "API_specification/generated/array_api.triu.rst", "API_specification/generated/array_api.trunc.rst", "API_specification/generated/array_api.unique_all.rst", "API_specification/generated/array_api.unique_counts.rst", "API_specification/generated/array_api.unique_inverse.rst", "API_specification/generated/array_api.unique_values.rst", "API_specification/generated/array_api.unstack.rst", "API_specification/generated/array_api.var.rst", "API_specification/generated/array_api.vecdot.rst", "API_specification/generated/array_api.where.rst", "API_specification/generated/array_api.zeros.rst", "API_specification/generated/array_api.zeros_like.rst", "API_specification/index.rst", "API_specification/indexing.rst", "API_specification/indexing_functions.rst", "API_specification/inspection.rst", "API_specification/linear_algebra_functions.rst", "API_specification/manipulation_functions.rst", "API_specification/searching_functions.rst", "API_specification/set_functions.rst", "API_specification/sorting_functions.rst", "API_specification/statistical_functions.rst", "API_specification/type_promotion.rst", "API_specification/utility_functions.rst", "API_specification/version.rst", "assumptions.md", "benchmark_suite.md", "changelog.rst", "design_topics/C_API.rst", "design_topics/accuracy.rst", "design_topics/complex_numbers.rst", "design_topics/copies_views_and_mutation.rst", "design_topics/data_dependent_output_shapes.rst", "design_topics/data_interchange.rst", "design_topics/device_support.rst", "design_topics/exceptions.rst", "design_topics/index.rst", "design_topics/lazy_eager.rst", "design_topics/parallelism.rst", "design_topics/static_typing.rst", "extensions/fourier_transform_functions.rst", "extensions/generated/array_api.fft.fft.rst", "extensions/generated/array_api.fft.fftfreq.rst", "extensions/generated/array_api.fft.fftn.rst", "extensions/generated/array_api.fft.fftshift.rst", "extensions/generated/array_api.fft.hfft.rst", "extensions/generated/array_api.fft.ifft.rst", "extensions/generated/array_api.fft.ifftn.rst", "extensions/generated/array_api.fft.ifftshift.rst", "extensions/generated/array_api.fft.ihfft.rst", "extensions/generated/array_api.fft.irfft.rst", "extensions/generated/array_api.fft.irfftn.rst", "extensions/generated/array_api.fft.rfft.rst", "extensions/generated/array_api.fft.rfftfreq.rst", "extensions/generated/array_api.fft.rfftn.rst", "extensions/generated/array_api.linalg.cholesky.rst", "extensions/generated/array_api.linalg.cross.rst", "extensions/generated/array_api.linalg.det.rst", "extensions/generated/array_api.linalg.diagonal.rst", "extensions/generated/array_api.linalg.eigh.rst", "extensions/generated/array_api.linalg.eigvalsh.rst", "extensions/generated/array_api.linalg.inv.rst", "extensions/generated/array_api.linalg.matmul.rst", "extensions/generated/array_api.linalg.matrix_norm.rst", "extensions/generated/array_api.linalg.matrix_power.rst", "extensions/generated/array_api.linalg.matrix_rank.rst", "extensions/generated/array_api.linalg.matrix_transpose.rst", "extensions/generated/array_api.linalg.outer.rst", "extensions/generated/array_api.linalg.pinv.rst", "extensions/generated/array_api.linalg.qr.rst", "extensions/generated/array_api.linalg.slogdet.rst", "extensions/generated/array_api.linalg.solve.rst", "extensions/generated/array_api.linalg.svd.rst", "extensions/generated/array_api.linalg.svdvals.rst", "extensions/generated/array_api.linalg.tensordot.rst", "extensions/generated/array_api.linalg.trace.rst", "extensions/generated/array_api.linalg.vecdot.rst", "extensions/generated/array_api.linalg.vector_norm.rst", "extensions/index.rst", "extensions/linear_algebra_functions.rst", "future_API_evolution.md", "index.rst", "license.rst", "purpose_and_scope.md", "usage_data.md", "use_cases.md", "verification_test_suite.md"], "titles": ["Array object", "Broadcasting", "Constants", "Creation Functions", "Data Type Functions", "Data Types", "Element-wise Functions", "Function and method signatures", "__array_api_version__", "abs", "acos", "acosh", "add", "all", "any", "arange", "argmax", "argmin", "argsort", "T", "__abs__", "__add__", "__and__", "__array_namespace__", "__bool__", "__complex__", "__dlpack__", "__dlpack_device__", "__eq__", "__float__", "__floordiv__", "__ge__", "__getitem__", "__gt__", "__index__", "__int__", "__invert__", "__le__", "__lshift__", "__lt__", "__matmul__", "__mod__", "__mul__", "__ne__", "__neg__", "__or__", "__pos__", "__pow__", "__rshift__", "__setitem__", "__sub__", "__truediv__", "__xor__", "device", "dtype", "mT", "ndim", "shape", "size", "to_device", "asarray", "asin", "asinh", "astype", "atan", "atan2", "atanh", "bitwise_and", "bitwise_invert", "bitwise_left_shift", "bitwise_or", "bitwise_right_shift", "bitwise_xor", "broadcast_arrays", "broadcast_to", "can_cast", "ceil", "clip", "concat", "conj", "e", "inf", "nan", "newaxis", "pi", "copysign", "cos", "cosh", "count_nonzero", "cumulative_sum", "__eq__", "diff", "divide", "empty", "empty_like", "equal", "exp", "expand_dims", "expm1", "eye", "finfo", "flip", "floor", "floor_divide", "from_dlpack", "full", "full_like", "greater", "greater_equal", "hypot", "iinfo", "imag", "__array_namespace_info__", "capabilities", "default_device", "default_dtypes", "devices", "dtypes", "isdtype", "isfinite", "isinf", "isnan", "less", "less_equal", "linspace", "log", "log10", "log1p", "log2", "logaddexp", "logical_and", "logical_not", "logical_or", "logical_xor", "matmul", "matrix_transpose", "max", "maximum", "mean", "meshgrid", "min", "minimum", "moveaxis", "multiply", "negative", "nextafter", "nonzero", "not_equal", "ones", "ones_like", "permute_dims", "positive", "pow", "prod", "real", "reciprocal", "remainder", "repeat", "reshape", "result_type", "roll", "round", "searchsorted", "sign", "signbit", "sin", "sinh", "sort", "sqrt", "square", "squeeze", "stack", "std", "subtract", "sum", "take", "take_along_axis", "tan", "tanh", "tensordot", "tile", "tril", "triu", "trunc", "unique_all", "unique_counts", "unique_inverse", "unique_values", "unstack", "var", "vecdot", "where", "zeros", "zeros_like", "API specification", "Indexing", "Indexing Functions", "Inspection", "Linear Algebra Functions", "Manipulation Functions", "Searching Functions", "Set Functions", "Sorting Functions", "Statistical Functions", "Type Promotion Rules", "Utility Functions", "Version", "Assumptions", "Benchmark suite", "Changelog per API standard version", "C API", "Accuracy", "Complex Numbers", "Copy-view behaviour and mutability", "Data-dependent output shapes", "Data interchange mechanisms", "Device support", "Exceptions", "Design topics &amp; constraints", "Lazy vs. eager execution", "Parallelism", "Static typing", "Fourier transform Functions", "fft", "fftfreq", "fftn", "fftshift", "hfft", "ifft", "ifftn", "ifftshift", "ihfft", "irfft", "irfftn", "rfft", "rfftfreq", "rfftn", "cholesky", "cross", "det", "diagonal", "eigh", "eigvalsh", "inv", "matmul", "matrix_norm", "matrix_power", "matrix_rank", "matrix_transpose", "outer", "pinv", "qr", "slogdet", "solve", "svd", "svdvals", "tensordot", "trace", "vecdot", "vector_norm", "Extensions", "Linear Algebra Extension", "Future API standard evolution", "Python array API standard", "License", "Purpose and scope", "Usage Data", "Use cases", "Verification - test suite"], "terms": {"api": [0, 1, 5, 7, 8, 23, 26, 63, 104, 112, 113, 117, 118, 195, 204, 207, 211, 212, 213, 215, 216, 217, 218, 219, 220, 221, 260, 264, 266, 268], "specif": [0, 1, 2, 3, 4, 5, 6, 8, 19, 23, 26, 49, 51, 59, 63, 78, 92, 103, 113, 115, 117, 118, 124, 130, 131, 132, 133, 136, 137, 138, 140, 141, 152, 157, 159, 162, 171, 172, 175, 176, 179, 184, 185, 189, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 209, 210, 211, 212, 213, 214, 215, 216, 217, 219, 221, 222, 241, 242, 260, 261, 262, 263, 265, 266, 267, 268], "A": [0, 1, 2, 3, 4, 5, 7, 13, 14, 26, 57, 91, 99, 104, 118, 157, 171, 188, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 210, 213, 215, 216, 219, 220, 221, 222, 223, 225, 227, 228, 229, 231, 232, 233, 234, 236, 250, 253, 261, 264, 265, 266, 267], "conform": [0, 2, 3, 4, 5, 8, 9, 16, 17, 18, 31, 33, 37, 39, 59, 60, 98, 107, 108, 109, 113, 117, 118, 122, 123, 124, 127, 136, 137, 140, 141, 152, 157, 162, 167, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 209, 211, 212, 215, 222, 261], "implement": [0, 2, 3, 4, 5, 8, 9, 10, 11, 16, 17, 18, 20, 23, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 37, 39, 40, 41, 43, 44, 47, 49, 51, 59, 60, 61, 62, 63, 64, 65, 66, 77, 86, 87, 89, 92, 95, 96, 98, 103, 104, 105, 106, 107, 108, 109, 113, 118, 122, 123, 124, 125, 126, 127, 128, 134, 136, 137, 138, 140, 141, 143, 144, 146, 147, 152, 153, 155, 156, 157, 159, 162, 165, 166, 167, 169, 172, 174, 177, 178, 184, 185, 186, 187, 189, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 209, 210, 211, 212, 213, 214, 215, 216, 217, 219, 221, 222, 225, 226, 229, 230, 233, 236, 237, 241, 242, 251, 253, 257, 260, 261, 262, 266, 267], "standard": [0, 2, 3, 4, 5, 7, 26, 100, 104, 118, 126, 128, 172, 178, 189, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 211, 212, 213, 215, 216, 217, 219, 220, 221, 260, 261, 264, 266, 267], "must": [0, 1, 2, 3, 4, 5, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 76, 77, 78, 79, 85, 86, 87, 88, 89, 91, 92, 93, 94, 95, 96, 97, 98, 99, 101, 102, 103, 104, 105, 106, 107, 108, 109, 111, 113, 115, 116, 117, 118, 119, 120, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 209, 211, 212, 213, 215, 217, 219, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 245, 246, 247, 249, 250, 251, 252, 253, 254, 255, 257, 259, 260, 261, 262, 265, 266], "provid": [0, 2, 3, 4, 5, 13, 14, 26, 59, 89, 91, 97, 101, 104, 116, 118, 139, 142, 153, 157, 159, 171, 172, 174, 175, 176, 188, 189, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 209, 210, 212, 213, 215, 216, 217, 220, 221, 222, 223, 225, 228, 229, 232, 233, 234, 236, 246, 257, 260, 261, 262, 264, 265, 266, 267], "support": [0, 1, 2, 3, 4, 5, 7, 9, 10, 11, 12, 13, 14, 16, 17, 18, 20, 21, 24, 26, 29, 31, 32, 33, 35, 37, 39, 40, 42, 43, 44, 46, 47, 49, 50, 51, 53, 57, 59, 60, 61, 62, 63, 64, 66, 86, 87, 89, 90, 92, 95, 96, 98, 99, 100, 103, 104, 105, 106, 107, 108, 109, 113, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 130, 131, 132, 133, 134, 136, 137, 139, 140, 141, 143, 144, 146, 147, 148, 149, 151, 152, 153, 157, 161, 163, 165, 166, 167, 168, 169, 173, 174, 175, 177, 178, 179, 184, 185, 186, 187, 190, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 207, 211, 212, 213, 218, 221, 222, 237, 238, 239, 241, 242, 243, 245, 246, 247, 249, 250, 251, 252, 253, 254, 255, 257, 259, 260, 261, 265, 266], "an": [0, 1, 5, 7, 9, 10, 11, 12, 13, 14, 15, 18, 19, 20, 21, 22, 23, 26, 28, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 76, 77, 78, 79, 83, 85, 86, 87, 89, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 116, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 195, 202, 204, 207, 209, 210, 211, 212, 213, 214, 216, 217, 219, 220, 221, 223, 224, 225, 227, 228, 229, 231, 232, 233, 234, 235, 236, 237, 238, 240, 241, 242, 243, 245, 246, 247, 250, 251, 252, 253, 254, 255, 257, 259, 260, 261, 262, 264, 266, 267], "have": [0, 1, 2, 5, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 55, 57, 58, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 76, 77, 78, 79, 85, 86, 87, 88, 89, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 105, 106, 107, 108, 109, 110, 111, 113, 115, 117, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 195, 207, 209, 210, 212, 213, 216, 219, 221, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 245, 246, 247, 249, 250, 251, 252, 253, 254, 255, 257, 259, 261, 262, 265, 266, 267], "follow": [0, 1, 2, 3, 4, 5, 7, 10, 11, 12, 26, 44, 49, 61, 62, 64, 66, 89, 91, 92, 100, 103, 105, 110, 112, 113, 115, 117, 118, 125, 127, 143, 144, 152, 156, 161, 168, 179, 184, 185, 186, 187, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 207, 209, 211, 212, 214, 215, 216, 217, 222, 223, 225, 227, 228, 229, 231, 232, 233, 234, 236, 245, 251, 259, 261, 262, 264, 265, 266, 267], "furthermor": [0, 265, 268], "minimum": [0, 9, 17, 20, 44, 136, 140, 144, 194, 209, 211], "rank": [0, 1, 13, 14, 91, 97, 139, 142, 146, 162, 171, 175, 176, 179, 180, 188, 190, 195, 209, 223, 225, 227, 228, 229, 231, 232, 233, 234, 236, 238, 245, 247, 251, 253, 257, 259, 265], "i": [0, 1, 2, 5, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 23, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 37, 39, 40, 41, 42, 43, 44, 47, 49, 51, 55, 57, 59, 60, 61, 62, 63, 64, 65, 66, 69, 71, 74, 76, 77, 78, 79, 83, 85, 86, 87, 88, 89, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 111, 115, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 134, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 202, 204, 207, 208, 209, 211, 212, 213, 215, 216, 217, 219, 220, 221, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 245, 246, 247, 249, 250, 251, 252, 253, 254, 255, 257, 259, 260, 261, 262, 264, 265, 266, 267, 268], "e": [0, 1, 2, 5, 7, 9, 10, 11, 18, 19, 20, 26, 32, 40, 43, 47, 49, 51, 55, 57, 62, 63, 65, 66, 69, 71, 76, 77, 78, 86, 87, 89, 91, 92, 95, 96, 97, 102, 103, 104, 109, 111, 117, 118, 124, 125, 126, 127, 128, 134, 136, 138, 139, 140, 142, 143, 144, 146, 147, 148, 149, 151, 152, 153, 154, 156, 157, 159, 161, 162, 164, 165, 166, 167, 168, 170, 171, 172, 174, 175, 176, 177, 178, 179, 180, 184, 185, 186, 187, 189, 194, 195, 202, 204, 209, 210, 211, 212, 213, 214, 215, 216, 219, 223, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 236, 238, 241, 242, 245, 247, 250, 252, 253, 254, 255, 257, 259, 260, 261, 262, 265, 266, 267], "number": [0, 1, 5, 9, 10, 11, 12, 13, 14, 16, 17, 18, 25, 26, 31, 32, 33, 35, 37, 39, 44, 56, 58, 60, 61, 62, 63, 64, 65, 66, 73, 76, 79, 82, 87, 88, 89, 91, 92, 95, 96, 97, 98, 99, 100, 102, 103, 105, 107, 108, 109, 110, 111, 113, 119, 120, 122, 123, 124, 125, 127, 136, 137, 138, 139, 140, 141, 142, 143, 144, 146, 147, 148, 149, 150, 152, 153, 154, 156, 157, 159, 160, 161, 162, 163, 164, 166, 167, 168, 169, 171, 172, 174, 175, 176, 178, 179, 180, 183, 184, 185, 188, 189, 190, 195, 202, 204, 215, 218, 223, 225, 227, 228, 229, 231, 232, 233, 234, 236, 237, 241, 242, 243, 247, 251, 252, 253, 254, 257, 261, 265, 266], "dimens": [0, 1, 13, 14, 16, 17, 19, 32, 40, 55, 56, 57, 58, 78, 88, 89, 91, 97, 101, 113, 134, 135, 136, 138, 140, 142, 146, 150, 153, 157, 158, 160, 170, 171, 172, 174, 175, 176, 179, 180, 181, 182, 184, 185, 186, 187, 188, 189, 190, 195, 204, 223, 225, 226, 227, 228, 229, 231, 232, 233, 234, 236, 237, 238, 239, 240, 241, 242, 243, 245, 246, 247, 250, 251, 252, 253, 254, 255, 257, 259, 265], "0": [0, 1, 5, 9, 10, 11, 12, 15, 24, 25, 26, 29, 32, 35, 38, 48, 57, 61, 62, 63, 64, 65, 66, 69, 71, 76, 78, 85, 86, 87, 92, 95, 96, 97, 98, 99, 100, 102, 103, 109, 125, 126, 127, 128, 136, 137, 138, 140, 141, 143, 145, 150, 152, 153, 155, 156, 161, 162, 163, 164, 165, 166, 168, 171, 172, 174, 177, 178, 179, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 195, 202, 204, 212, 213, 224, 226, 235, 240, 245, 252, 254, 255, 257, 259, 265, 267], "1": [0, 1, 7, 10, 11, 13, 14, 15, 18, 25, 26, 27, 29, 32, 35, 40, 61, 62, 63, 64, 65, 66, 85, 86, 87, 89, 91, 96, 97, 98, 99, 100, 103, 124, 125, 126, 127, 128, 134, 148, 149, 150, 152, 153, 155, 157, 158, 162, 163, 164, 167, 171, 172, 176, 177, 178, 179, 180, 181, 182, 189, 190, 195, 212, 213, 220, 223, 224, 225, 227, 228, 229, 231, 232, 233, 234, 235, 236, 238, 241, 243, 245, 253, 254, 255, 259], "2": [0, 1, 5, 7, 9, 10, 11, 26, 27, 40, 61, 62, 64, 65, 66, 80, 86, 87, 92, 125, 127, 128, 134, 166, 169, 177, 178, 179, 180, 195, 212, 213, 221, 224, 227, 231, 232, 233, 234, 235, 236, 245, 247, 250, 251, 252, 253, 254, 255, 256, 257, 259], "3": [0, 1, 5, 7, 27, 84, 175, 180, 207, 212, 213, 216, 238], "4": [0, 1, 5, 10, 11, 27, 62, 65, 125, 127, 180, 195, 220, 266], "explicitli": [0, 26, 40, 63, 113, 134, 175, 179, 195, 207, 209, 237, 241, 242, 251, 253, 261, 265, 267], "document": [0, 5, 7, 59, 103, 118, 157, 197, 202, 210, 212, 215, 217, 260, 262, 264, 266, 267, 268], "maximum": [0, 1, 16, 26, 113, 124, 136, 140, 194, 209, 211, 245], "n": [0, 1, 13, 14, 32, 40, 55, 86, 89, 91, 97, 124, 134, 135, 138, 139, 142, 146, 150, 153, 157, 162, 171, 172, 174, 177, 178, 179, 180, 181, 182, 188, 189, 190, 195, 209, 223, 224, 225, 227, 228, 229, 231, 232, 233, 234, 235, 236, 237, 238, 240, 241, 242, 243, 245, 246, 247, 249, 250, 251, 254, 255, 257, 259, 265], "zero": [0, 5, 13, 14, 16, 17, 24, 25, 29, 30, 32, 34, 35, 40, 41, 47, 63, 65, 69, 88, 89, 92, 97, 98, 99, 103, 109, 127, 130, 131, 132, 133, 134, 136, 137, 138, 139, 140, 141, 143, 146, 148, 149, 152, 153, 156, 162, 164, 172, 174, 181, 182, 183, 184, 185, 186, 187, 189, 190, 193, 194, 195, 202, 204, 209, 210, 212, 215, 223, 225, 226, 227, 228, 229, 231, 232, 233, 234, 236, 239, 246, 247, 250, 251, 252, 259, 267], "dimension": [0, 13, 14, 15, 16, 17, 19, 24, 25, 29, 32, 34, 35, 40, 88, 89, 99, 124, 134, 136, 138, 139, 140, 146, 153, 157, 162, 172, 174, 175, 176, 184, 185, 186, 187, 189, 190, 195, 204, 209, 221, 223, 225, 227, 228, 229, 231, 232, 233, 234, 236, 238, 239, 242, 243, 247, 249, 250, 259, 261, 265], "apart": 0, "from": [0, 5, 13, 14, 15, 19, 26, 32, 44, 59, 60, 63, 75, 78, 89, 91, 94, 101, 103, 104, 105, 106, 109, 124, 125, 127, 139, 144, 149, 152, 153, 158, 159, 168, 170, 172, 174, 175, 176, 178, 184, 186, 189, 190, 191, 193, 195, 204, 207, 209, 210, 211, 212, 215, 216, 217, 219, 223, 225, 227, 228, 229, 231, 232, 233, 234, 236, 238, 241, 252, 254, 257, 261, 262, 264, 265, 266, 267, 268], "ndim": [0, 190, 194, 238, 251, 254, 255], "devic": [0, 5, 15, 26, 27, 59, 60, 63, 93, 94, 99, 104, 105, 106, 112, 114, 115, 117, 124, 148, 149, 157, 181, 182, 192, 193, 194, 195, 197, 209, 215, 218, 224, 235, 251, 261, 265, 267], "dtype": [0, 5, 15, 26, 60, 63, 73, 75, 89, 90, 93, 94, 99, 100, 104, 105, 106, 110, 112, 118, 124, 148, 149, 153, 159, 174, 192, 193, 194, 204, 207, 209, 215, 221, 257, 265, 266, 267], "all": [0, 5, 15, 19, 23, 26, 60, 63, 87, 92, 99, 101, 104, 113, 117, 143, 160, 166, 178, 180, 181, 182, 188, 190, 194, 195, 207, 209, 210, 212, 213, 214, 215, 216, 217, 219, 223, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 236, 238, 250, 252, 253, 259, 260, 261, 264, 265, 267, 268], "thi": [0, 1, 5, 7, 15, 19, 26, 32, 34, 58, 59, 63, 71, 78, 98, 103, 104, 109, 113, 117, 118, 124, 127, 130, 131, 132, 133, 138, 146, 152, 156, 157, 171, 172, 175, 176, 184, 185, 186, 187, 189, 194, 195, 202, 204, 207, 209, 210, 211, 212, 213, 214, 215, 216, 217, 219, 220, 221, 222, 223, 225, 226, 228, 229, 232, 233, 234, 236, 251, 252, 253, 254, 260, 261, 262, 264, 266, 267, 268], "return": [0, 5, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 197, 202, 209, 210, 211, 213, 215, 216, 219, 221, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 245, 246, 247, 249, 250, 251, 252, 253, 254, 255, 257, 259, 261, 265, 267], "tupl": [0, 1, 13, 14, 26, 27, 32, 49, 57, 74, 78, 88, 93, 101, 105, 117, 118, 136, 138, 140, 142, 146, 148, 150, 153, 158, 160, 170, 171, 172, 174, 179, 180, 184, 185, 186, 188, 189, 192, 195, 207, 241, 251, 252, 254, 256, 259, 265], "includ": [0, 1, 7, 9, 13, 14, 15, 16, 17, 20, 21, 23, 28, 30, 40, 41, 42, 43, 47, 51, 88, 89, 109, 113, 117, 118, 120, 124, 134, 136, 138, 140, 153, 157, 168, 172, 174, 189, 194, 195, 204, 209, 210, 211, 212, 213, 214, 215, 216, 220, 245, 259, 261, 262, 264, 266, 267], "those": [0, 5, 7, 15, 23, 88, 89, 92, 115, 117, 143, 146, 153, 157, 174, 204, 209, 212, 213, 216, 217, 219, 251, 254, 255, 257, 260, 261, 262, 265, 266, 267], "mean": [0, 26, 194, 207, 213, 215, 216, 221, 262, 265], "var": [0, 194], "std": [0, 194], "which": [0, 1, 5, 7, 8, 13, 14, 15, 16, 17, 18, 19, 26, 30, 40, 41, 44, 59, 60, 63, 75, 77, 78, 83, 88, 89, 91, 93, 94, 97, 99, 100, 101, 103, 104, 105, 106, 109, 110, 113, 115, 116, 117, 124, 134, 136, 138, 140, 144, 146, 148, 149, 153, 156, 157, 160, 162, 167, 171, 172, 174, 175, 176, 177, 181, 182, 184, 185, 186, 187, 188, 189, 190, 192, 193, 195, 209, 210, 211, 212, 213, 214, 215, 216, 217, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 238, 245, 253, 254, 255, 257, 259, 260, 261, 262, 265, 266, 267], "some": [0, 98, 103, 115, 117, 127, 195, 210, 211, 212, 213, 216, 221, 265, 267, 268], "common": [0, 195, 204, 207, 216, 219, 220, 261, 265, 266, 267], "librari": [0, 5, 7, 26, 51, 57, 58, 59, 60, 63, 92, 98, 103, 104, 113, 115, 117, 118, 124, 127, 130, 131, 132, 133, 136, 137, 138, 140, 141, 146, 157, 162, 172, 178, 184, 185, 186, 187, 189, 194, 195, 207, 209, 210, 211, 212, 213, 214, 215, 216, 217, 219, 220, 221, 237, 241, 242, 251, 253, 260, 261, 262, 265, 266, 267, 268], "g": [0, 5, 9, 19, 20, 26, 47, 51, 57, 77, 89, 91, 92, 104, 109, 111, 117, 118, 124, 136, 140, 143, 146, 153, 154, 157, 159, 161, 174, 180, 184, 185, 186, 187, 195, 202, 204, 209, 210, 211, 212, 213, 214, 215, 216, 219, 227, 231, 232, 233, 234, 236, 241, 242, 245, 252, 254, 255, 257, 259, 260, 261, 262, 265, 266, 267], "numpi": [0, 19, 63, 195, 207, 212, 213, 215, 216, 261, 265, 266, 267, 268], "scalar": [0, 2, 49, 60, 194, 195, 209, 219, 259, 267], "valu": [0, 1, 2, 5, 7, 9, 10, 11, 12, 15, 16, 17, 18, 20, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 37, 39, 41, 43, 49, 51, 57, 58, 60, 61, 62, 63, 64, 65, 66, 76, 77, 78, 85, 86, 87, 88, 89, 90, 91, 92, 93, 95, 96, 98, 99, 100, 102, 103, 105, 106, 107, 108, 109, 113, 115, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 136, 137, 138, 140, 141, 143, 145, 146, 147, 148, 152, 153, 156, 157, 161, 162, 163, 164, 165, 166, 167, 168, 172, 174, 175, 176, 177, 178, 183, 184, 185, 186, 187, 189, 190, 192, 194, 202, 204, 207, 209, 211, 213, 214, 215, 219, 221, 224, 227, 231, 232, 233, 234, 235, 236, 237, 241, 242, 243, 245, 246, 247, 250, 251, 252, 253, 254, 255, 257, 259, 261, 265, 267], "rational": [0, 7, 89, 153, 174, 195, 215, 216, 257, 260, 262, 265], "alwai": [0, 12, 26, 42, 60, 63, 100, 104, 143, 158, 195, 207, 212, 213, 216, 241], "necessari": [0, 26, 60, 92, 104, 143, 158, 180, 195, 213, 265], "acceler": [0, 5, 109, 157, 207, 215], "where": [0, 1, 7, 13, 14, 15, 26, 32, 47, 57, 65, 86, 87, 91, 92, 96, 98, 99, 103, 105, 106, 126, 127, 128, 139, 143, 146, 150, 152, 157, 162, 163, 165, 166, 171, 172, 177, 178, 180, 188, 189, 190, 194, 195, 204, 210, 212, 215, 216, 219, 223, 225, 227, 228, 229, 231, 232, 233, 234, 236, 237, 238, 241, 242, 243, 245, 247, 250, 251, 252, 253, 254, 255, 257, 261, 265, 266, 267], "non": [0, 1, 7, 13, 14, 16, 17, 63, 88, 130, 131, 132, 133, 136, 138, 140, 146, 153, 172, 179, 189, 190, 195, 204, 209, 210, 216, 223, 225, 228, 229, 232, 233, 234, 236, 238, 239, 241, 245, 247, 254, 259, 267], "could": [0, 26, 184, 185, 186, 187, 207, 213, 220, 261, 265, 267], "forc": 0, "synchron": [0, 26, 59, 157, 265], "delai": [0, 24, 25, 29, 34, 35, 207, 219, 265], "execut": [0, 204, 207, 216, 218, 220, 265, 267], "model": [0, 57, 58, 92, 143, 212, 219, 267], "repres": [0, 8, 11, 12, 23, 24, 25, 26, 29, 34, 35, 62, 66, 87, 92, 103, 139, 143, 166, 177, 178, 209, 211, 215, 216, 252, 266, 267], "futur": [0, 26, 104, 208, 212, 213, 216, 220, 221, 241, 242, 263, 265, 267], "python": [0, 2, 5, 7, 24, 25, 26, 29, 32, 34, 35, 49, 60, 103, 104, 156, 194, 195, 207, 209, 212, 215, 217, 219, 220, 221, 262, 264, 265, 266], "x": [0, 1, 5, 7, 9, 10, 11, 13, 14, 16, 17, 18, 20, 26, 32, 61, 62, 63, 64, 65, 66, 68, 74, 76, 77, 79, 85, 86, 87, 88, 89, 91, 94, 96, 97, 98, 101, 102, 104, 106, 111, 119, 120, 121, 125, 126, 127, 128, 131, 135, 136, 138, 140, 142, 144, 146, 149, 150, 151, 153, 154, 155, 157, 158, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 174, 175, 176, 177, 178, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 193, 195, 212, 213, 221, 222, 223, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 236, 237, 239, 240, 241, 242, 243, 245, 246, 247, 248, 250, 251, 252, 253, 254, 255, 257, 259, 261, 265, 267], "__pos__": [0, 194, 209], "po": 0, "__neg__": [0, 194, 209], "neg": [0, 13, 14, 15, 44, 47, 65, 78, 89, 91, 92, 97, 99, 101, 103, 120, 125, 127, 143, 152, 156, 160, 164, 168, 175, 176, 179, 190, 194, 195, 209, 212, 223, 225, 227, 228, 229, 231, 232, 233, 234, 236, 238, 259, 265], "x1": [0, 7, 12, 40, 65, 67, 69, 70, 71, 72, 77, 85, 92, 95, 103, 107, 108, 109, 122, 123, 129, 130, 132, 133, 134, 137, 141, 143, 145, 147, 152, 156, 162, 173, 179, 190, 191, 209, 238, 244, 249, 253, 256, 258], "x2": [0, 7, 12, 40, 65, 67, 69, 70, 71, 72, 85, 92, 95, 103, 107, 108, 109, 122, 123, 129, 130, 132, 133, 134, 137, 141, 143, 145, 147, 152, 156, 162, 173, 179, 190, 191, 209, 238, 244, 249, 253, 256, 258], "__add__": [0, 50, 194, 209], "add": [0, 7, 21, 89, 173, 174, 194, 195, 209, 210, 211, 216, 257], "__sub__": [0, 194, 209], "sub": [0, 195], "__mul__": [0, 194, 209], "mul": 0, "__truediv__": [0, 194, 209], "truediv": 0, "__floordiv__": [0, 194], "floordiv": 0, "__mod__": [0, 194], "mod": 0, "__pow__": [0, 194, 209], "pow": [0, 47, 194, 209, 211], "should": [0, 1, 5, 7, 9, 10, 11, 12, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 50, 51, 52, 55, 57, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 76, 77, 79, 85, 86, 87, 89, 91, 92, 96, 97, 98, 100, 102, 103, 104, 107, 108, 109, 111, 115, 117, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 136, 137, 138, 139, 140, 141, 143, 144, 145, 151, 152, 153, 154, 155, 156, 158, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 172, 173, 174, 177, 178, 179, 181, 182, 183, 184, 185, 186, 187, 189, 190, 195, 202, 209, 210, 211, 212, 215, 216, 217, 221, 223, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 236, 237, 238, 239, 241, 242, 243, 245, 246, 247, 250, 251, 252, 253, 254, 255, 257, 259, 260, 261, 265, 267, 268], "defin": [0, 5, 12, 23, 30, 32, 41, 49, 60, 65, 79, 89, 92, 103, 105, 106, 117, 124, 136, 137, 138, 140, 141, 142, 143, 156, 163, 168, 169, 172, 181, 182, 189, 190, 194, 197, 202, 209, 211, 212, 221, 225, 226, 229, 230, 233, 236, 237, 241, 242, 243, 250, 251, 253, 261, 266, 267, 268], "real": [0, 5, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 24, 25, 29, 30, 31, 33, 35, 37, 39, 41, 44, 51, 60, 61, 62, 63, 64, 65, 66, 76, 77, 85, 86, 87, 88, 89, 92, 93, 95, 96, 98, 99, 100, 102, 103, 105, 107, 108, 109, 115, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 136, 137, 138, 140, 141, 143, 144, 145, 146, 147, 148, 149, 152, 153, 156, 161, 162, 163, 164, 165, 166, 167, 168, 172, 174, 177, 178, 183, 189, 190, 192, 194, 204, 209, 212, 224, 227, 231, 232, 233, 234, 235, 236, 237, 241, 242, 243, 245, 247, 250, 251, 252, 253, 254, 255, 257, 259, 262], "data": [0, 1, 2, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76, 77, 78, 79, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 113, 115, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 158, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 189, 190, 191, 192, 193, 194, 197, 204, 207, 210, 212, 213, 216, 218, 219, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 245, 246, 247, 249, 250, 251, 252, 253, 254, 255, 257, 259, 261, 262, 263, 264, 265, 268], "type": [0, 2, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 55, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76, 77, 78, 79, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 115, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 189, 190, 191, 192, 193, 194, 195, 197, 207, 210, 212, 213, 215, 217, 218, 219, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 245, 246, 247, 249, 250, 251, 252, 253, 254, 255, 257, 259, 261, 262, 265, 266], "__matmul__": [0, 194, 209], "matmul": [0, 40, 194, 204, 209, 261], "The": [0, 1, 5, 7, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 22, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 55, 57, 58, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 76, 77, 78, 79, 85, 86, 87, 88, 89, 91, 92, 95, 96, 98, 101, 102, 103, 104, 107, 108, 109, 111, 112, 113, 115, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 140, 141, 142, 143, 144, 145, 146, 147, 150, 151, 152, 153, 154, 155, 156, 157, 161, 162, 163, 164, 165, 166, 167, 168, 169, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 189, 190, 191, 195, 204, 207, 209, 210, 211, 213, 214, 215, 216, 219, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 245, 246, 247, 249, 250, 251, 252, 253, 254, 255, 257, 259, 260, 261, 262, 264, 265, 266, 267, 268], "__invert__": [0, 194], "inv": [0, 209, 261], "invert": [0, 68, 243, 246, 253], "__inv__": 0, "__and__": [0, 194], "__or__": [0, 194], "__xor__": [0, 194], "xor": [0, 72, 133], "__lshift__": [0, 194], "lshift": 0, "__rshift__": [0, 194], "rshift": 0, "integ": [0, 5, 9, 13, 14, 15, 20, 22, 26, 29, 30, 34, 35, 36, 38, 41, 44, 45, 47, 48, 51, 52, 60, 67, 68, 69, 70, 71, 72, 76, 77, 88, 89, 91, 92, 102, 103, 105, 106, 110, 113, 117, 118, 124, 136, 138, 140, 144, 152, 153, 156, 157, 159, 161, 162, 172, 174, 175, 183, 189, 190, 194, 195, 209, 211, 212, 223, 225, 227, 228, 229, 231, 232, 233, 234, 236, 238, 246, 247, 257, 259, 265], "boolean": [0, 5, 22, 24, 25, 26, 29, 35, 36, 43, 45, 52, 57, 60, 63, 67, 68, 70, 72, 88, 89, 90, 104, 105, 106, 113, 117, 118, 124, 130, 131, 132, 133, 146, 194, 204, 209], "__lt__": [0, 194, 209], "lt": 0, "__le__": [0, 194, 209], "le": 0, "__gt__": [0, 194, 209], "gt": [0, 251, 254], "__ge__": [0, 194, 209], "ge": 0, "__eq__": [0, 194, 209, 216], "eq": 0, "__ne__": [0, 194, 209], "ne": 0, "ar": [0, 1, 5, 7, 15, 16, 17, 19, 23, 24, 25, 26, 27, 29, 34, 35, 40, 49, 55, 58, 60, 77, 85, 86, 88, 90, 91, 92, 96, 99, 100, 101, 103, 104, 109, 116, 117, 124, 130, 131, 132, 133, 134, 143, 146, 152, 157, 160, 161, 165, 177, 178, 180, 184, 186, 190, 195, 204, 207, 209, 210, 211, 212, 213, 214, 215, 216, 217, 219, 220, 221, 223, 224, 225, 226, 228, 229, 230, 232, 233, 234, 235, 236, 238, 241, 242, 247, 250, 251, 254, 260, 261, 262, 265, 266, 267, 268], "onli": [0, 1, 5, 7, 16, 17, 23, 26, 40, 57, 58, 63, 101, 104, 109, 115, 117, 118, 124, 130, 131, 132, 133, 134, 138, 172, 189, 190, 194, 195, 204, 207, 209, 210, 212, 213, 215, 216, 217, 219, 221, 226, 238, 243, 250, 251, 253, 261, 262, 265, 266, 267, 268], "other": [0, 5, 21, 22, 23, 26, 28, 30, 31, 33, 37, 38, 39, 40, 41, 42, 43, 45, 47, 48, 50, 51, 52, 63, 90, 92, 98, 103, 104, 127, 142, 143, 172, 189, 195, 197, 207, 209, 211, 212, 213, 214, 215, 216, 217, 221, 238, 250, 260, 261, 264, 265, 267], "ani": [0, 1, 9, 10, 11, 23, 24, 25, 26, 28, 29, 34, 35, 43, 59, 61, 62, 66, 90, 91, 95, 109, 119, 120, 147, 168, 194, 195, 204, 209, 212, 213, 215, 221, 254, 262, 264, 265, 268], "For": [0, 1, 5, 7, 9, 10, 11, 12, 16, 17, 18, 20, 24, 25, 26, 29, 30, 31, 33, 35, 37, 39, 41, 44, 57, 58, 61, 62, 64, 65, 66, 76, 79, 85, 86, 87, 89, 92, 95, 96, 98, 102, 103, 107, 108, 109, 115, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 136, 137, 139, 140, 141, 143, 144, 145, 147, 152, 153, 155, 156, 157, 161, 162, 163, 164, 165, 166, 167, 168, 169, 171, 174, 177, 178, 183, 184, 185, 186, 187, 195, 202, 207, 211, 212, 214, 216, 219, 224, 233, 235, 252, 254, 255, 257, 265, 267, 268], "backward": [0, 13, 14, 16, 17, 18, 31, 33, 37, 39, 91, 107, 108, 122, 123, 124, 136, 137, 140, 141, 156, 167, 190, 195, 209, 212, 213, 217, 223, 225, 227, 228, 229, 231, 232, 233, 234, 236, 238, 265], "compat": [0, 1, 12, 13, 14, 16, 17, 18, 21, 22, 26, 28, 30, 31, 33, 37, 38, 39, 40, 41, 42, 43, 45, 47, 48, 49, 50, 51, 52, 65, 67, 69, 70, 71, 72, 74, 77, 85, 88, 92, 95, 103, 107, 108, 109, 122, 123, 124, 129, 130, 132, 133, 134, 136, 137, 138, 140, 141, 143, 145, 147, 152, 153, 156, 157, 158, 167, 172, 173, 174, 176, 189, 190, 191, 204, 209, 212, 213, 217, 238, 245, 247, 250, 253, 259, 265, 267], "mai": [0, 5, 7, 15, 16, 17, 18, 23, 26, 28, 31, 33, 37, 39, 43, 51, 57, 58, 59, 60, 90, 91, 92, 95, 103, 104, 107, 108, 109, 112, 117, 118, 122, 123, 124, 130, 131, 132, 133, 136, 137, 138, 140, 141, 143, 146, 147, 157, 158, 162, 167, 172, 178, 184, 185, 186, 187, 189, 194, 195, 202, 204, 207, 210, 211, 212, 213, 214, 215, 216, 217, 219, 220, 221, 241, 251, 252, 254, 260, 261, 265, 266, 267], "complex": [0, 5, 9, 10, 11, 12, 13, 14, 16, 17, 18, 20, 21, 24, 25, 29, 31, 33, 35, 37, 39, 40, 42, 43, 44, 46, 47, 50, 51, 60, 61, 62, 63, 64, 66, 79, 86, 87, 88, 89, 92, 95, 96, 98, 99, 100, 105, 106, 107, 108, 109, 111, 115, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 134, 136, 137, 139, 140, 141, 143, 144, 146, 147, 148, 149, 151, 152, 153, 154, 161, 163, 165, 166, 167, 168, 169, 173, 174, 177, 178, 179, 184, 185, 186, 187, 190, 204, 211, 215, 216, 218, 219, 223, 225, 227, 228, 229, 231, 232, 233, 234, 236, 237, 238, 239, 241, 242, 243, 245, 246, 247, 249, 250, 251, 252, 253, 254, 255, 257, 259, 261, 265, 266], "howev": [0, 5, 16, 17, 18, 31, 33, 37, 39, 57, 89, 103, 107, 108, 109, 118, 122, 123, 124, 136, 137, 140, 141, 157, 162, 167, 175, 177, 178, 207, 210, 211, 212, 213, 214, 216, 261, 262, 265, 267], "inequ": [0, 16, 17, 18, 31, 33, 37, 39, 107, 108, 122, 123, 136, 137, 140, 141, 167], "unspecifi": [0, 5, 10, 11, 16, 17, 18, 30, 31, 32, 33, 37, 39, 41, 47, 51, 60, 62, 66, 77, 78, 87, 89, 92, 96, 98, 103, 105, 106, 107, 108, 122, 123, 124, 136, 137, 140, 141, 152, 156, 162, 166, 167, 168, 171, 175, 176, 178, 195, 202, 204, 209, 225, 226, 229, 230, 233, 236, 241, 242, 265], "thu": [0, 5, 16, 17, 18, 28, 30, 31, 32, 33, 37, 39, 41, 43, 47, 57, 60, 71, 77, 89, 95, 103, 105, 106, 107, 108, 122, 123, 124, 136, 137, 140, 141, 147, 152, 156, 162, 167, 177, 178, 195, 202, 211, 212, 225, 226, 229, 230, 233, 236, 241, 242, 254, 261], "depend": [0, 5, 9, 10, 11, 16, 17, 18, 20, 26, 28, 29, 31, 33, 37, 39, 43, 44, 47, 51, 57, 58, 59, 61, 62, 63, 64, 65, 66, 77, 86, 87, 92, 95, 96, 98, 107, 108, 113, 122, 123, 124, 125, 126, 127, 128, 143, 144, 147, 152, 162, 165, 166, 167, 177, 178, 191, 202, 204, 211, 212, 215, 218, 219, 221, 241, 242, 251, 252, 253, 254, 261, 265, 267, 268], "see": [0, 5, 10, 11, 12, 13, 14, 16, 17, 18, 21, 22, 26, 28, 30, 31, 32, 33, 34, 37, 38, 39, 40, 41, 42, 43, 45, 47, 48, 49, 50, 51, 52, 53, 59, 61, 62, 64, 65, 66, 67, 69, 70, 71, 72, 74, 77, 85, 88, 92, 95, 98, 103, 104, 106, 107, 108, 109, 112, 113, 116, 122, 123, 125, 127, 129, 130, 132, 133, 134, 136, 137, 138, 140, 141, 143, 145, 146, 147, 152, 153, 155, 156, 157, 159, 163, 167, 168, 169, 172, 173, 174, 176, 184, 185, 186, 187, 189, 190, 191, 194, 195, 204, 206, 207, 210, 212, 214, 215, 216, 221, 238, 245, 247, 250, 253, 259, 260, 265, 266, 267, 268], "order": [0, 5, 7, 16, 17, 18, 19, 26, 31, 33, 37, 39, 55, 60, 63, 65, 90, 91, 101, 103, 104, 107, 108, 122, 123, 136, 137, 140, 141, 146, 157, 162, 167, 177, 178, 179, 184, 185, 186, 187, 195, 202, 204, 209, 211, 214, 215, 217, 232, 233, 241, 242, 245, 254, 255, 259, 261, 262, 265, 266], "chang": [0, 1, 9, 10, 11, 12, 13, 14, 20, 21, 24, 25, 26, 29, 34, 35, 40, 42, 43, 44, 46, 47, 50, 51, 59, 60, 61, 62, 63, 64, 66, 86, 87, 92, 95, 96, 98, 99, 100, 104, 105, 106, 119, 120, 121, 124, 125, 126, 127, 128, 134, 136, 139, 140, 143, 144, 146, 147, 148, 149, 151, 152, 153, 158, 161, 163, 165, 166, 168, 169, 173, 174, 175, 177, 178, 179, 184, 185, 186, 187, 190, 207, 223, 224, 225, 227, 228, 229, 232, 233, 235, 237, 238, 239, 241, 242, 243, 245, 246, 247, 249, 250, 251, 252, 253, 254, 255, 257, 259, 262, 265, 267, 268], "shape": [0, 1, 18, 40, 55, 63, 73, 74, 78, 89, 91, 93, 94, 97, 101, 105, 106, 113, 134, 135, 139, 148, 149, 158, 160, 162, 167, 171, 175, 176, 179, 180, 181, 182, 188, 190, 192, 193, 194, 209, 218, 219, 221, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 239, 240, 241, 242, 243, 245, 246, 247, 249, 250, 251, 252, 253, 254, 255, 257, 265, 267], "result": [0, 1, 5, 9, 10, 11, 12, 13, 14, 15, 16, 17, 20, 21, 22, 24, 25, 28, 29, 30, 31, 33, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 76, 77, 79, 85, 86, 87, 88, 92, 95, 96, 98, 102, 103, 107, 108, 109, 111, 119, 120, 121, 122, 123, 125, 126, 127, 128, 129, 130, 131, 132, 133, 136, 137, 138, 140, 141, 143, 144, 145, 147, 151, 152, 153, 154, 155, 156, 157, 159, 161, 162, 163, 164, 165, 166, 168, 169, 171, 172, 173, 174, 177, 178, 179, 183, 184, 189, 195, 202, 204, 209, 211, 212, 213, 219, 237, 238, 240, 245, 246, 252, 253, 259, 265, 266, 267, 268], "promot": [0, 1, 5, 10, 11, 12, 21, 22, 28, 30, 31, 33, 37, 39, 40, 41, 42, 43, 44, 45, 47, 49, 50, 51, 52, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 75, 78, 85, 86, 87, 92, 95, 96, 98, 103, 106, 107, 108, 109, 122, 123, 124, 125, 126, 127, 128, 129, 134, 137, 138, 141, 143, 144, 147, 152, 155, 156, 159, 165, 166, 168, 169, 171, 172, 173, 177, 178, 179, 189, 190, 191, 194, 209, 237, 238, 243, 245, 246, 247, 249, 250, 251, 252, 253, 259, 261], "rule": [0, 5, 7, 10, 11, 12, 21, 22, 28, 30, 31, 33, 37, 39, 40, 41, 42, 43, 44, 45, 47, 49, 50, 51, 52, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 75, 78, 85, 86, 87, 89, 92, 95, 96, 98, 103, 105, 106, 107, 108, 109, 122, 123, 124, 125, 126, 127, 128, 129, 134, 137, 141, 143, 144, 147, 152, 155, 156, 159, 163, 165, 166, 168, 169, 171, 173, 177, 178, 179, 190, 191, 194, 195, 209, 212, 215, 237, 238, 243, 245, 246, 247, 249, 250, 251, 252, 253, 259, 261, 265, 267], "broadcast": [0, 12, 13, 14, 16, 17, 21, 22, 28, 30, 31, 33, 37, 38, 39, 40, 41, 42, 43, 45, 47, 48, 49, 50, 51, 52, 65, 67, 69, 70, 71, 72, 73, 74, 77, 85, 88, 92, 95, 103, 107, 108, 109, 122, 123, 129, 130, 132, 133, 134, 136, 137, 138, 140, 141, 143, 145, 147, 152, 153, 156, 157, 172, 173, 174, 176, 179, 189, 190, 191, 194, 209, 238, 245, 247, 250, 253, 259, 265], "same": [0, 5, 7, 9, 12, 15, 18, 19, 20, 26, 32, 36, 38, 40, 41, 46, 48, 50, 55, 59, 63, 68, 73, 74, 76, 77, 78, 79, 89, 91, 92, 94, 97, 100, 101, 102, 103, 104, 106, 111, 134, 135, 136, 138, 139, 140, 142, 143, 145, 149, 150, 151, 152, 153, 154, 156, 157, 158, 160, 161, 162, 163, 167, 170, 171, 172, 173, 174, 175, 176, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 193, 195, 204, 207, 209, 212, 213, 215, 216, 221, 223, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 236, 237, 239, 240, 241, 243, 246, 250, 251, 252, 254, 255, 257, 260, 261, 265, 267], "behavior": [0, 5, 32, 47, 49, 59, 60, 63, 77, 89, 92, 103, 105, 106, 109, 124, 143, 152, 156, 162, 175, 176, 184, 185, 186, 187, 194, 195, 197, 204, 207, 209, 211, 212, 219, 220, 225, 226, 229, 230, 233, 236, 261, 262, 265, 266, 267, 268], "special": [0, 9, 10, 11, 12, 20, 21, 24, 25, 28, 29, 30, 35, 41, 42, 43, 47, 51, 61, 62, 64, 65, 66, 76, 77, 85, 86, 87, 89, 92, 95, 96, 98, 102, 103, 109, 119, 120, 121, 125, 126, 127, 128, 129, 136, 137, 138, 140, 141, 143, 145, 147, 152, 153, 155, 156, 161, 163, 164, 165, 166, 168, 169, 172, 174, 177, 178, 183, 189, 209, 210, 212, 252, 257], "case": [0, 1, 5, 7, 9, 10, 11, 12, 15, 20, 21, 24, 25, 26, 28, 29, 30, 35, 41, 42, 43, 47, 51, 60, 61, 62, 64, 65, 66, 76, 77, 85, 86, 87, 89, 92, 95, 96, 98, 102, 103, 104, 109, 119, 120, 121, 125, 126, 127, 128, 129, 136, 137, 138, 139, 140, 141, 143, 145, 147, 152, 153, 155, 156, 161, 163, 164, 165, 166, 168, 169, 172, 174, 177, 178, 183, 189, 195, 207, 209, 210, 211, 212, 213, 216, 217, 219, 251, 252, 254, 257, 261, 263, 265, 268], "its": [0, 5, 26, 40, 73, 92, 100, 134, 143, 158, 160, 211, 212, 215, 216, 260, 265, 266, 267], "respect": [0, 9, 12, 20, 21, 22, 28, 30, 31, 33, 37, 38, 39, 41, 42, 43, 45, 48, 50, 51, 52, 65, 67, 69, 70, 71, 72, 77, 87, 92, 95, 103, 107, 108, 109, 115, 122, 123, 124, 129, 130, 132, 133, 137, 139, 141, 142, 143, 145, 147, 156, 166, 173, 177, 178, 179, 184, 185, 190, 209, 211, 214, 216, 241, 251, 254], "binari": [0, 5, 67, 70, 72, 177, 178, 210], "two": [0, 1, 5, 15, 19, 40, 55, 65, 71, 99, 104, 134, 135, 139, 161, 179, 181, 182, 184, 185, 186, 187, 190, 195, 204, 215, 216, 219, 220, 225, 226, 229, 230, 233, 236, 237, 239, 240, 241, 242, 243, 245, 246, 247, 249, 250, 251, 252, 253, 254, 255, 257, 261, 265, 266, 267, 268], "operand": [0, 1, 9, 10, 11, 12, 24, 25, 29, 35, 61, 62, 64, 65, 66, 76, 85, 86, 87, 89, 92, 95, 96, 98, 102, 103, 109, 119, 120, 121, 125, 126, 127, 128, 129, 136, 137, 140, 141, 143, 145, 147, 152, 153, 155, 156, 161, 163, 164, 165, 166, 168, 169, 174, 177, 178, 183, 204, 209, 211, 252, 257], "assign": [0, 213], "exampl": [0, 5, 12, 23, 26, 117, 118, 171, 194, 195, 207, 212, 213, 214, 216, 219, 220, 221, 257, 261, 265, 267, 268], "after": [0, 1, 26, 40, 134, 168, 180], "addit": [0, 5, 7, 12, 26, 50, 59, 89, 117, 173, 194, 195, 204, 210, 212, 215, 261, 265, 266, 268], "modifi": [0, 26, 213, 264], "equal": [0, 1, 9, 10, 11, 18, 20, 21, 22, 26, 28, 30, 31, 33, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 58, 61, 62, 63, 64, 65, 66, 69, 71, 77, 87, 88, 90, 96, 98, 99, 105, 106, 109, 118, 120, 125, 126, 127, 128, 138, 146, 147, 148, 149, 152, 153, 161, 166, 167, 168, 172, 174, 175, 176, 178, 179, 180, 184, 185, 186, 187, 189, 194, 195, 202, 209, 212, 216, 223, 225, 227, 228, 229, 231, 232, 233, 234, 236, 238, 240, 246, 247, 250, 251, 252, 253, 257, 265], "equival": [0, 20, 21, 22, 28, 30, 31, 33, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 71, 103, 109, 130, 131, 132, 133, 156, 161, 175, 195, 204, 212, 213, 247, 250, 253, 259, 265], "discuss": [0, 95, 147, 209, 215, 216, 220, 265, 266, 267], "copi": [0, 1, 26, 59, 60, 63, 104, 158, 167, 209, 210, 215, 216, 218, 264, 265], "view": [0, 104, 218], "behaviour": [0, 218, 265, 267], "mutabl": [0, 218], "via": [0, 26, 103, 104, 175, 195, 210, 215, 216, 220, 222, 250, 260, 261, 262, 265], "__iadd__": 0, "__isub__": 0, "__imul__": 0, "__itruediv__": 0, "__ifloordiv__": 0, "__ipow__": 0, "__imod__": 0, "__imatmul__": 0, "__iand__": 0, "__ior__": 0, "__ixor__": 0, "__ilshift__": 0, "__irshift__": 0, "appli": [0, 12, 77, 78, 85, 92, 143, 159, 161, 171, 179, 195, 204, 207, 212, 223, 225, 228, 229, 232, 233, 234, 236, 247, 250, 261, 265, 267], "match": [0, 1, 5, 9, 20, 26, 63, 103, 156, 179, 184, 185, 217, 227, 231, 232, 233, 234, 236, 241, 242, 245, 259, 267], "op": [0, 204], "__radd__": 0, "__rsub__": 0, "__rmul__": 0, "__rtruediv__": 0, "__rfloordiv__": 0, "__rpow__": 0, "__rmod__": 0, "__rmatmul__": 0, "__rand__": 0, "__ror__": 0, "__rxor__": 0, "__rlshift__": 0, "__rrshift__": 0, "arrai": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 83, 85, 86, 87, 88, 89, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 196, 197, 198, 199, 200, 201, 202, 203, 205, 206, 207, 209, 210, 211, 212, 213, 214, 215, 216, 217, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 266, 268], "refer": [1, 13, 14, 91, 98, 99, 127, 172, 179, 180, 189, 190, 195, 212, 213, 221, 223, 225, 227, 228, 229, 231, 232, 233, 234, 236, 238, 253], "automat": [1, 32, 265], "implicit": [1, 215, 216, 219, 265], "expans": [1, 265], "size": [1, 13, 14, 89, 91, 97, 124, 146, 160, 170, 175, 176, 179, 190, 194, 195, 214, 220, 223, 225, 227, 228, 229, 231, 232, 233, 234, 236, 238, 240, 249, 251, 254, 265], "without": [1, 7, 26, 28, 31, 33, 37, 39, 43, 57, 95, 104, 107, 108, 115, 117, 122, 123, 146, 147, 157, 158, 184, 185, 186, 187, 207, 210, 211, 214, 264, 265, 267], "purpos": [1, 5, 98, 109, 127, 207, 252, 261, 263, 264, 267], "make": [1, 7, 207, 210, 211, 213, 215, 219, 223, 225, 227, 228, 229, 231, 232, 233, 234, 236, 260, 262, 265], "differ": [1, 12, 26, 49, 50, 77, 78, 89, 91, 92, 100, 103, 104, 143, 153, 171, 173, 174, 195, 207, 213, 216, 217, 219, 230, 241, 251, 252, 254, 257, 261, 265, 266, 267], "element": [1, 9, 10, 11, 12, 13, 14, 15, 20, 21, 22, 24, 25, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 54, 58, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 76, 77, 79, 85, 86, 87, 88, 89, 91, 92, 95, 96, 98, 99, 101, 102, 103, 105, 106, 107, 108, 109, 111, 119, 120, 121, 122, 123, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 136, 137, 138, 140, 141, 143, 144, 145, 146, 147, 151, 152, 153, 154, 155, 156, 157, 158, 160, 161, 162, 163, 164, 165, 166, 168, 169, 170, 172, 173, 174, 175, 176, 177, 178, 180, 181, 182, 183, 184, 185, 186, 187, 189, 191, 194, 195, 209, 211, 223, 225, 227, 228, 229, 231, 232, 233, 234, 236, 238, 241, 250, 251, 252, 254, 257, 265], "wise": [1, 9, 10, 12, 20, 21, 22, 28, 30, 31, 33, 36, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 61, 64, 65, 67, 68, 69, 70, 71, 72, 77, 79, 85, 92, 95, 103, 107, 108, 109, 111, 122, 123, 129, 130, 131, 132, 133, 137, 141, 143, 145, 147, 152, 154, 155, 156, 173, 194, 209, 211, 265], "oper": [1, 12, 19, 24, 26, 34, 40, 57, 58, 59, 61, 64, 71, 86, 89, 92, 103, 126, 128, 134, 143, 152, 153, 155, 156, 159, 165, 169, 174, 177, 179, 194, 195, 201, 204, 209, 212, 213, 214, 215, 216, 257, 261, 262, 265, 266, 267], "facilit": [1, 202, 207], "user": [1, 7, 26, 112, 178, 207, 210, 211, 213, 216, 220, 261, 265, 266, 267], "ergonom": 1, "encourag": [1, 265, 266], "avoid": [1, 9, 63, 92, 98, 103, 109, 127, 143, 158, 210, 213, 216, 219, 261, 265, 267], "unnecessari": [1, 261], "can": [1, 7, 26, 32, 60, 75, 112, 116, 118, 195, 204, 207, 210, 212, 213, 215, 216, 221, 250, 251, 254, 260, 261, 265, 266, 267, 268], "potenti": [1, 26, 98, 113, 127, 157, 213, 265], "enabl": [1, 26, 104, 216, 220, 221, 265], "more": [1, 5, 7, 15, 19, 26, 32, 40, 58, 60, 63, 73, 89, 98, 101, 103, 127, 134, 146, 152, 157, 175, 184, 185, 186, 187, 195, 204, 207, 210, 211, 212, 213, 214, 215, 216, 217, 220, 221, 225, 226, 229, 230, 233, 236, 252, 261, 262, 265, 266, 268], "memori": [1, 26, 60, 104, 207, 213, 214, 216, 265, 267], "effici": [1, 207, 213], "through": [1, 60, 65, 260, 262, 266, 267], "vector": [1, 40, 134, 139, 190, 238, 249, 254, 255, 259, 261, 265], "reduc": [1, 13, 14, 16, 17, 88, 136, 138, 140, 153, 172, 174, 189, 195, 251, 254, 261, 266, 267], "consumpt": [1, 26, 266], "cach": 1, "local": [1, 216], "given": [1, 23, 91, 101, 124, 160, 162, 188, 204, 209, 212, 213, 216, 217, 221, 242, 252, 261, 262, 265, 267], "involv": [1, 12, 92, 103, 143, 152, 159, 204, 211, 212, 216, 220], "singleton": [1, 13, 14, 16, 17, 88, 97, 136, 138, 140, 153, 170, 172, 174, 180, 189, 245, 259, 265], "whose": [1, 5, 9, 11, 19, 20, 26, 47, 55, 62, 66, 85, 86, 87, 99, 101, 104, 135, 152, 160, 164, 165, 166, 175, 176, 177, 178, 179, 181, 182, 184, 185, 186, 195, 213, 227, 231, 232, 233, 234, 236, 237, 239, 240, 241, 242, 243, 245, 246, 247, 249, 250, 251, 252, 253, 254, 255, 257, 259, 265, 267], "one": [1, 15, 19, 26, 32, 40, 51, 58, 60, 63, 73, 75, 88, 89, 92, 97, 99, 101, 103, 104, 117, 118, 124, 134, 139, 143, 146, 148, 149, 157, 162, 170, 175, 176, 184, 185, 186, 187, 190, 195, 207, 210, 212, 213, 215, 216, 219, 220, 221, 223, 225, 227, 228, 229, 230, 231, 232, 233, 234, 236, 249, 250, 251, 259, 261, 262, 265, 267], "virtual": 1, "repeat": [1, 194, 195, 209, 267], "across": [1, 5, 92, 103, 143, 178, 209, 211, 212, 216, 260, 265], "correspond": [1, 16, 17, 23, 28, 31, 33, 37, 39, 43, 47, 59, 65, 73, 77, 95, 104, 107, 108, 113, 114, 115, 122, 123, 147, 152, 158, 160, 162, 172, 176, 179, 184, 185, 186, 187, 189, 190, 195, 209, 211, 225, 229, 233, 236, 238, 241, 245, 264, 265], "If": [1, 5, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 23, 24, 25, 26, 29, 34, 35, 40, 44, 47, 51, 55, 57, 59, 60, 61, 62, 63, 64, 65, 66, 74, 76, 77, 78, 85, 86, 87, 88, 89, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 109, 113, 115, 117, 118, 119, 120, 121, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 152, 153, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 170, 171, 172, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 192, 193, 195, 210, 212, 216, 222, 223, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 236, 237, 238, 241, 242, 243, 245, 246, 247, 250, 251, 252, 253, 254, 257, 259, 260, 261, 265, 267], "unequ": 1, "lower": [1, 77, 99, 181, 237], "higher": [1, 5, 26, 91, 195, 210, 261, 266], "prepend": [1, 40, 91, 97, 134, 180], "until": [1, 26, 180], "store": [1, 26, 216, 257], "determin": [1, 10, 11, 12, 13, 14, 21, 22, 26, 30, 40, 41, 42, 44, 45, 47, 50, 51, 52, 61, 62, 64, 65, 66, 67, 69, 70, 71, 72, 75, 78, 85, 86, 87, 89, 91, 92, 96, 98, 103, 109, 119, 120, 121, 125, 126, 127, 128, 129, 134, 137, 141, 143, 144, 152, 155, 156, 164, 165, 166, 168, 169, 173, 175, 176, 177, 178, 179, 184, 185, 186, 187, 190, 191, 204, 209, 212, 215, 216, 223, 225, 227, 228, 229, 231, 232, 233, 234, 236, 237, 238, 239, 240, 243, 245, 246, 247, 249, 250, 251, 252, 253, 257, 259, 261, 265], "let": [1, 9, 10, 11, 12, 62, 66, 85, 87, 89, 91, 95, 96, 98, 104, 119, 120, 121, 124, 125, 127, 138, 147, 153, 157, 162, 163, 166, 168, 172, 174, 178, 180, 189, 190, 195, 220, 223, 225, 227, 228, 229, 231, 232, 233, 234, 236, 237, 241, 242, 243, 251, 253, 254, 257], "b": [1, 9, 10, 11, 12, 57, 62, 66, 87, 92, 95, 96, 98, 103, 119, 120, 121, 124, 125, 127, 143, 147, 163, 166, 168, 171, 178, 190, 195, 209, 212, 213, 217, 250, 253, 267], "both": [1, 40, 44, 47, 51, 65, 77, 89, 92, 100, 103, 104, 109, 124, 134, 144, 152, 153, 174, 178, 179, 190, 195, 212, 213, 215, 219, 221, 238, 257, 261, 265, 266], "shape1": 1, "describ": [1, 5, 12, 89, 92, 95, 117, 118, 143, 147, 152, 153, 174, 197, 204, 212, 215, 219, 224, 235, 257, 265], "shape2": 1, "n1": [1, 91, 139], "len": [1, 139, 180], "n2": [1, 91, 139], "max": [1, 26, 77, 100, 110, 113, 180, 194, 195, 209, 245, 247, 250], "temporari": 1, "list": [1, 73, 78, 112, 116, 139, 171, 195, 207, 209, 216, 265, 267], "length": [1, 15, 109, 139, 158, 179, 195, 224, 226, 227, 230, 235, 254, 255], "while": [1, 103, 117, 124, 130, 131, 132, 133, 138, 142, 162, 172, 184, 185, 189, 194, 195, 202, 207, 209, 212, 213, 214, 216, 219, 250, 261, 266, 267, 268], "d1": 1, "els": [1, 26, 207, 266], "d2": 1, "set": [1, 18, 26, 49, 65, 104, 164, 167, 172, 181, 182, 184, 186, 187, 189, 194, 195, 209, 210, 211, 212, 213, 216, 217, 220, 221, 223, 225, 227, 228, 229, 231, 232, 233, 234, 236, 237, 241, 242, 243, 247, 250, 251, 253, 254, 260, 261, 265, 267, 268], "th": [1, 91, 99, 180, 195, 225, 229, 233, 236], "throw": 1, "except": [1, 7, 13, 14, 26, 74, 78, 89, 91, 99, 104, 124, 146, 157, 171, 175, 176, 188, 195, 204, 207, 209, 211, 213, 216, 218, 219, 223, 225, 227, 228, 229, 231, 232, 233, 234, 236, 250, 262, 265, 266, 267], "demonstr": 1, "applic": [1, 26, 89, 153, 157, 174, 204, 257, 261, 265, 266], "4d": 1, "8": [1, 5, 7, 27, 180, 204, 207], "6": [1, 7, 180], "3d": 1, "7": [1, 7, 27, 221], "5": [1, 195, 265], "2d": 1, "1d": 1, "15": 1, "do": [1, 26, 92, 143, 156, 202, 207, 210, 212, 213, 215, 216, 217, 261, 262, 264, 265, 267, 268], "doe": [1, 15, 26, 104, 147, 175, 176, 195, 204, 207, 210, 211, 212, 213, 214, 216, 217, 219, 221, 261, 265, 267, 268], "second": [1, 12, 65, 67, 69, 70, 71, 72, 95, 107, 108, 109, 122, 123, 129, 130, 132, 133, 134, 137, 141, 143, 145, 147, 152, 171, 173, 179, 184, 185, 186, 190, 191, 238, 241, 249, 251, 252, 254, 255, 265], "append": [1, 40, 69, 91, 97, 134, 240], "As": [1, 124, 152, 184, 185, 186, 187, 207, 215, 221, 267], "impli": [1, 184, 185, 186, 187, 264, 265], "__setitem__": [1, 175, 194, 209], "Such": [1, 211, 261], "right": [1, 69, 71, 109, 162, 168, 210, 254, 264], "hand": [1, 204], "left": [1, 5, 60, 69, 103, 105, 162, 175, 176, 195, 204, 241, 242, 254, 265], "index": [1, 5, 16, 17, 18, 32, 34, 49, 57, 83, 88, 99, 113, 115, 139, 142, 146, 162, 171, 175, 179, 184, 185, 186, 194, 209, 225, 229, 233, 236, 265, 267], "perform": [1, 5, 13, 14, 26, 40, 59, 60, 92, 109, 134, 143, 157, 179, 195, 210, 211, 212, 213, 214, 215, 223, 225, 228, 229, 230, 232, 233, 234, 236, 254, 255, 261, 265, 266, 267], "empti": [1, 13, 14, 15, 153, 174, 194, 195, 209, 257, 265], "ok": 1, "allow": [1, 24, 25, 26, 29, 34, 35, 115, 117, 152, 158, 179, 195, 209, 210, 211, 213, 216, 219, 220, 261, 267], "NOT": [1, 131, 264], "adher": [2, 7, 8, 194, 195, 207, 260, 265], "convent": [2, 7, 10, 11, 26, 40, 61, 62, 64, 65, 66, 89, 125, 127, 134, 152, 168, 194, 195, 202, 212, 216, 260, 261, 266], "each": [2, 9, 10, 11, 12, 20, 21, 22, 26, 28, 30, 31, 33, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 76, 77, 79, 85, 86, 87, 92, 95, 96, 98, 102, 103, 107, 108, 109, 111, 116, 119, 120, 121, 122, 123, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 137, 139, 141, 142, 143, 144, 145, 146, 147, 151, 152, 154, 155, 156, 157, 160, 161, 162, 163, 164, 165, 166, 168, 169, 171, 173, 177, 178, 179, 180, 183, 184, 185, 195, 207, 209, 211, 215, 219, 221, 233, 237, 238, 239, 243, 245, 246, 247, 250, 251, 252, 253, 254, 255, 260, 261, 265, 266, 267], "float": [2, 5, 9, 10, 11, 12, 13, 14, 15, 20, 21, 24, 25, 28, 29, 30, 31, 33, 34, 35, 37, 39, 40, 41, 42, 43, 44, 47, 49, 50, 51, 60, 61, 62, 63, 64, 65, 66, 76, 77, 79, 80, 81, 82, 84, 85, 86, 87, 88, 89, 92, 93, 95, 96, 98, 99, 100, 102, 103, 105, 106, 109, 111, 115, 117, 118, 119, 120, 121, 124, 125, 126, 127, 128, 129, 134, 136, 137, 138, 140, 141, 143, 144, 145, 146, 147, 148, 149, 152, 153, 154, 155, 156, 159, 161, 162, 163, 164, 165, 166, 168, 169, 172, 173, 174, 177, 178, 179, 183, 184, 185, 186, 187, 189, 190, 192, 194, 202, 209, 211, 212, 219, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 239, 241, 242, 243, 245, 246, 247, 250, 251, 252, 253, 254, 255, 257, 259, 261, 265, 266], "point": [2, 5, 9, 10, 11, 12, 13, 14, 15, 20, 24, 25, 26, 29, 34, 35, 40, 41, 42, 44, 47, 50, 51, 60, 61, 62, 63, 64, 65, 66, 76, 77, 79, 80, 81, 82, 84, 85, 86, 87, 88, 89, 92, 93, 95, 96, 98, 99, 100, 102, 103, 105, 106, 109, 111, 115, 117, 118, 119, 120, 121, 124, 125, 126, 127, 128, 129, 134, 136, 137, 138, 140, 141, 143, 144, 145, 146, 147, 148, 149, 152, 153, 154, 155, 156, 159, 161, 162, 163, 164, 165, 166, 168, 169, 172, 173, 174, 177, 178, 179, 183, 184, 185, 186, 187, 189, 190, 192, 194, 202, 209, 211, 212, 216, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 239, 241, 242, 243, 245, 246, 247, 250, 251, 252, 253, 254, 255, 257, 259, 261, 265, 267], "creat": [3, 15, 60, 93, 94, 99, 104, 105, 106, 124, 148, 149, 192, 193, 201, 207, 216, 224, 235, 261, 265], "main": [5, 99, 181, 182, 210, 215, 240, 257, 260, 267], "namespac": [5, 7, 23, 112, 197, 207, 209, 222, 260, 261, 262, 265, 268], "under": [5, 260, 264, 265], "specifi": [5, 13, 14, 15, 16, 17, 18, 26, 29, 59, 60, 63, 74, 78, 88, 89, 91, 93, 97, 100, 101, 105, 115, 117, 118, 124, 148, 153, 156, 157, 160, 170, 171, 174, 175, 176, 180, 181, 182, 184, 185, 186, 187, 190, 192, 195, 204, 209, 211, 212, 213, 215, 216, 217, 221, 223, 225, 226, 227, 228, 229, 231, 232, 233, 234, 236, 240, 257, 259, 261, 262, 265, 267, 268], "name": [5, 7, 23, 26, 103, 117, 184, 185, 186, 195, 212, 241, 250, 251, 252, 254, 260, 265, 266], "descript": [5, 7, 209, 211, 245, 259], "bool": [5, 13, 14, 16, 17, 18, 22, 24, 26, 28, 31, 33, 37, 39, 43, 45, 49, 52, 60, 63, 75, 88, 89, 90, 95, 104, 105, 106, 107, 108, 117, 118, 119, 120, 121, 122, 123, 124, 130, 131, 132, 133, 136, 138, 140, 147, 153, 158, 164, 167, 172, 174, 189, 204, 209, 219, 237, 245, 254, 259], "true": [5, 13, 14, 16, 17, 18, 24, 25, 26, 29, 35, 60, 63, 75, 88, 89, 95, 100, 103, 104, 113, 119, 120, 121, 124, 130, 131, 132, 133, 136, 138, 140, 146, 147, 153, 158, 164, 167, 172, 174, 184, 185, 186, 187, 189, 191, 195, 209, 237, 245, 254, 259, 261], "fals": [5, 13, 14, 16, 17, 18, 24, 25, 26, 29, 35, 60, 63, 75, 88, 89, 95, 104, 113, 119, 120, 121, 124, 130, 131, 132, 133, 136, 138, 140, 147, 153, 158, 164, 167, 172, 174, 184, 185, 186, 187, 189, 195, 237, 245, 254, 259], "int8": [5, 117, 118, 204], "bit": [5, 68, 69, 71, 85, 89, 100, 110, 153, 164, 174, 204, 209, 211, 257], "sign": [5, 9, 10, 11, 12, 15, 20, 41, 44, 62, 65, 66, 71, 85, 87, 89, 92, 96, 98, 103, 117, 118, 125, 127, 136, 137, 140, 141, 143, 144, 152, 153, 156, 162, 164, 166, 168, 174, 178, 184, 185, 186, 187, 194, 202, 209, 212, 251, 252, 257], "exist": [5, 7, 26, 60, 78, 104, 207, 209, 212, 215, 216, 217, 243, 262, 265, 266], "interv": [5, 10, 11, 13, 14, 15, 61, 62, 64, 66, 91, 97, 124, 125, 127, 142, 171, 179, 181, 182, 188, 190, 195, 223, 225, 227, 228, 229, 231, 232, 233, 234, 236, 238, 262], "128": 5, "127": 5, "int16": [5, 89, 117, 118, 153, 174, 204, 257], "16": [5, 204], "32": [5, 204], "767": 5, "int32": [5, 89, 117, 118, 153, 174, 204, 257], "147": 5, "483": 5, "647": 5, "int64": [5, 89, 117, 118, 153, 174, 204, 257], "64": [5, 204], "9": [5, 27], "223": 5, "372": 5, "036": 5, "854": 5, "775": 5, "807": 5, "uint8": [5, 117, 118, 204], "unsign": [5, 89, 117, 118, 153, 174, 194, 257], "255": 5, "uint16": [5, 89, 117, 118, 153, 174, 204, 257], "65": 5, "535": [5, 209], "uint32": [5, 89, 117, 118, 153, 174, 204, 257], "294": 5, "967": 5, "295": 5, "uint64": [5, 117, 118, 204], "18": 5, "446": [5, 209], "744": [5, 209], "073": 5, "709": [5, 209], "551": [5, 209], "615": 5, "float32": [5, 111, 117, 118, 154, 204, 252, 254, 255], "ieee": [5, 12, 65, 80, 81, 82, 84, 92, 98, 100, 109, 127, 143, 156, 168, 177, 178, 194, 202, 211, 212, 265], "754": [5, 12, 65, 80, 81, 82, 84, 92, 98, 100, 109, 127, 143, 156, 168, 177, 178, 194, 202, 211, 212, 265], "singl": [5, 7, 24, 25, 29, 34, 35, 115, 117, 184, 185, 194, 204, 209, 210, 212, 215, 216, 221, 261, 265, 266, 267], "precis": [5, 9, 20, 42, 60, 100, 105, 106, 111, 143, 154, 168, 204, 209, 211, 227, 231, 232, 233, 234, 236, 241, 242, 245, 252, 254, 255, 259, 265], "2019": [5, 12, 92, 98, 109, 127, 143, 194, 211, 265, 267], "float64": [5, 9, 20, 117, 118, 204, 227, 231, 232, 233, 234, 236, 241, 242, 245, 259], "doubl": [5, 179, 204, 209], "complex64": [5, 111, 117, 118, 154, 204, 209, 252, 254, 255], "imaginari": [5, 10, 11, 12, 13, 14, 44, 61, 62, 63, 64, 66, 79, 87, 88, 92, 95, 96, 98, 100, 111, 125, 127, 143, 144, 146, 147, 148, 149, 152, 161, 166, 168, 178, 209, 212], "compon": [5, 10, 11, 12, 13, 14, 44, 62, 63, 66, 79, 87, 88, 92, 95, 96, 98, 100, 111, 125, 127, 143, 144, 146, 147, 148, 149, 152, 154, 161, 166, 168, 177, 178, 184, 185, 186, 187, 209, 212, 226, 235], "complex128": [5, 9, 20, 117, 118, 204, 209, 227, 231, 232, 233, 234, 236, 241, 242, 245, 259], "method": [5, 26, 34, 104, 194, 197, 207, 213, 215, 216, 219, 220, 221, 265, 266, 267], "attribut": [5, 23, 100, 110, 194, 206, 209, 262, 265, 266, 267], "requir": [5, 10, 11, 24, 25, 29, 34, 35, 59, 61, 62, 63, 64, 66, 89, 104, 109, 118, 153, 168, 171, 174, 175, 176, 178, 184, 185, 187, 188, 194, 195, 202, 204, 207, 209, 210, 211, 212, 213, 214, 215, 216, 219, 221, 223, 224, 225, 227, 228, 229, 232, 233, 235, 238, 257, 260, 261, 265, 266, 267], "beyond": [5, 160, 204, 265], "It": [5, 23, 26, 104, 207, 213, 215, 265, 267, 268], "also": [5, 7, 26, 32, 34, 104, 109, 163, 204, 207, 212, 213, 214, 215, 221, 225, 229, 233, 236, 254, 260, 267], "subnorm": [5, 109], "k": [5, 40, 99, 109, 134, 146, 181, 182, 195, 237, 241, 242, 243, 251, 253, 254, 255, 257, 265], "denorm": [5, 109], "gradual": [5, 109, 265], "underflow": [5, 9, 92, 103, 109, 252], "hardwar": [5, 53, 109, 157, 211, 215, 216, 241, 254, 261, 265], "univers": [5, 109, 210, 216, 261, 265], "mani": [5, 109, 180, 265, 267], "platform": [5, 26, 109], "compil": [5, 109, 178, 207, 210, 214, 265], "toggl": [5, 109], "daz": [5, 109], "flush": [5, 109], "ftz": [5, 109], "increas": [5, 109, 211, 266], "guard": [5, 109], "against": [5, 40, 73, 109, 134, 178, 195, 247, 250, 268], "time": [5, 7, 16, 17, 26, 91, 109, 157, 184, 185, 207, 209, 214, 215, 220, 237, 241, 242, 243, 251, 253, 254, 261, 265, 267], "attack": [5, 109], "accordingli": [5, 10, 11, 13, 14, 16, 17, 59, 61, 62, 64, 66, 88, 92, 98, 103, 109, 124, 125, 127, 136, 138, 139, 140, 143, 146, 153, 157, 162, 168, 172, 174, 184, 185, 186, 187, 189, 195, 204, 211, 212, 213, 214, 216, 245, 251, 259, 261], "vari": [5, 109, 162, 178, 184, 185, 186, 187, 204, 211], "function": [5, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 26, 28, 29, 30, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 60, 61, 62, 64, 65, 66, 74, 78, 86, 87, 89, 91, 96, 98, 101, 104, 109, 116, 117, 118, 124, 125, 127, 130, 131, 132, 133, 134, 138, 146, 152, 153, 156, 157, 158, 163, 165, 166, 167, 168, 171, 172, 174, 175, 176, 177, 178, 179, 180, 184, 185, 186, 187, 188, 189, 190, 194, 197, 207, 209, 210, 212, 213, 214, 215, 216, 219, 220, 221, 223, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 236, 237, 238, 241, 242, 243, 247, 250, 251, 252, 253, 254, 255, 257, 260, 261, 262, 265, 266, 267], "access": [5, 26, 32, 104, 112, 195, 209, 215, 260, 262, 265], "variou": [5, 209], "cast": [5, 29, 49, 60, 63, 75, 89, 153, 174, 204, 212, 257, 265, 267], "introspect": 5, "isdtyp": [5, 194, 209], "integr": [5, 63, 115, 117, 118], "keyword": [5, 7, 26, 63, 89, 116, 139, 153, 174, 194, 209, 213, 216, 220, 221, 257, 261, 262, 265, 266, 267], "affect": [5, 15, 49, 213, 216], "intermedi": [5, 9, 109], "calcul": [5, 9, 10, 11, 12, 20, 21, 42, 47, 50, 61, 62, 64, 65, 66, 86, 87, 89, 91, 92, 96, 98, 125, 126, 127, 128, 129, 136, 138, 140, 143, 152, 153, 165, 166, 168, 172, 173, 174, 177, 178, 189, 209, 252], "implementor": [5, 260], "free": [5, 216, 264], "when": [5, 7, 12, 16, 17, 26, 32, 47, 49, 59, 63, 89, 92, 98, 103, 104, 109, 115, 117, 124, 127, 136, 137, 140, 141, 143, 152, 153, 157, 158, 162, 172, 174, 178, 189, 191, 194, 195, 204, 209, 210, 212, 213, 214, 215, 217, 219, 220, 221, 223, 225, 227, 228, 229, 231, 232, 233, 234, 236, 237, 241, 243, 247, 250, 251, 252, 253, 254, 255, 257, 261, 265, 266, 267], "accumul": 5, "reduct": [5, 13, 14], "long": [5, 112, 221], "ha": [5, 9, 13, 14, 20, 23, 29, 34, 35, 40, 44, 47, 55, 86, 87, 88, 89, 92, 96, 97, 98, 103, 106, 134, 138, 139, 142, 143, 144, 146, 152, 153, 165, 166, 170, 172, 174, 175, 177, 178, 179, 180, 184, 185, 186, 187, 189, 195, 204, 207, 212, 215, 216, 219, 220, 238, 245, 253, 254, 257, 259, 261, 262, 265, 267, 268], "wai": [5, 26, 63, 104, 207, 210, 216, 217, 262, 265, 266, 267, 268], "f4": [5, 204], "ensur": [5, 26, 162, 207, 211, 261, 265, 266, 267], "portabl": [5, 59, 124, 211, 213, 216, 217, 265], "consum": [5, 26, 63, 115, 117, 207, 212, 213, 221, 260, 265, 266], "recommend": [5, 7, 19, 23, 26, 124, 130, 131, 132, 133, 138, 156, 172, 189, 202, 209, 211, 215, 216, 265], "guidanc": [5, 7, 49, 209, 210, 217, 265], "govern": [5, 50, 173, 204, 261, 262], "interact": [5, 212], "either": [5, 9, 10, 11, 12, 24, 26, 35, 40, 65, 77, 87, 89, 92, 95, 96, 98, 100, 103, 104, 109, 112, 118, 119, 120, 124, 125, 126, 127, 128, 129, 134, 136, 137, 140, 141, 143, 145, 153, 156, 163, 164, 165, 168, 174, 177, 178, 179, 195, 211, 212, 213, 217, 221, 252, 257, 265, 266, 268], "whether": [5, 13, 14, 26, 59, 60, 63, 89, 90, 104, 113, 118, 121, 124, 158, 164, 209, 216, 237, 241, 242, 251, 253, 260, 264, 265, 267], "otherwis": [5, 13, 14, 15, 16, 17, 26, 59, 60, 63, 75, 88, 104, 113, 115, 117, 136, 138, 140, 153, 157, 158, 162, 163, 172, 174, 189, 190, 191, 194, 195, 207, 216, 237, 239, 245, 252, 253, 259, 264], "note": [5, 7, 9, 10, 11, 12, 13, 14, 20, 21, 24, 25, 26, 29, 32, 34, 35, 40, 42, 43, 44, 46, 47, 50, 51, 59, 61, 62, 63, 64, 65, 66, 76, 77, 79, 85, 86, 87, 88, 89, 91, 92, 95, 96, 98, 99, 100, 102, 103, 105, 106, 107, 108, 109, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 125, 126, 127, 128, 129, 134, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 151, 152, 153, 154, 155, 156, 157, 161, 162, 163, 164, 165, 166, 168, 169, 172, 173, 174, 175, 177, 178, 179, 180, 183, 184, 185, 186, 187, 188, 189, 190, 194, 195, 209, 215, 219, 221, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 241, 242, 243, 245, 246, 247, 249, 250, 251, 252, 253, 254, 255, 257, 259, 265, 266, 267, 268], "possibl": [5, 26, 60, 103, 104, 136, 140, 158, 177, 178, 207, 210, 211, 212, 213, 215, 216, 217, 219, 221, 261, 265, 266, 267, 268], "multipl": [5, 7, 13, 14, 16, 17, 40, 42, 44, 88, 134, 136, 138, 140, 143, 144, 153, 172, 174, 189, 195, 207, 210, 212, 215, 216, 220, 221, 242, 243, 261, 262, 265, 267], "In": [5, 12, 19, 26, 59, 89, 92, 95, 103, 118, 120, 121, 143, 147, 153, 156, 163, 174, 194, 195, 197, 204, 211, 212, 215, 217, 232, 233, 251, 252, 254, 257, 261, 262, 266, 267, 268], "clearli": [5, 59, 118, 202, 212, 261, 262], "warn": [5, 157, 217], "about": [5, 7, 26, 100, 110, 213, 261, 265, 267, 268], "": [5, 26, 29, 32, 49, 58, 59, 60, 80, 103, 104, 139, 156, 172, 180, 181, 182, 189, 195, 202, 207, 209, 210, 211, 212, 213, 215, 216, 219, 221, 225, 229, 233, 236, 250, 254, 255, 261, 262, 265, 267], "organ": [5, 209, 261, 266, 267], "within": [5, 15, 27, 195, 204, 207, 209, 212, 216, 223, 225, 228, 229, 232, 233, 234, 236, 265], "numer": [5, 9, 12, 20, 21, 40, 42, 44, 46, 47, 50, 51, 89, 91, 92, 103, 117, 118, 119, 120, 121, 134, 139, 143, 144, 151, 152, 153, 161, 163, 169, 173, 174, 179, 204, 211, 223, 225, 228, 229, 232, 233, 234, 236, 238, 249, 250, 252, 257, 261, 265, 267], "accord": [5, 12, 60, 71, 75, 89, 92, 100, 103, 105, 124, 143, 152, 162, 163, 172, 176, 189, 190, 195, 211, 212], "These": [5, 213, 241, 266], "intend": [5, 89, 153, 174, 207, 257], "posit": [7, 9, 10, 11, 13, 14, 20, 46, 62, 65, 66, 81, 92, 97, 99, 100, 103, 120, 125, 127, 142, 143, 146, 156, 160, 164, 166, 168, 178, 194, 195, 207, 209, 211, 221, 235, 237, 251, 266], "paramet": [7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 115, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 207, 209, 221, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 245, 246, 247, 249, 250, 251, 252, 253, 254, 255, 257, 259, 261], "extern": [7, 267], "usabl": 7, "accept": [7, 26, 130, 131, 132, 133, 138, 156, 172, 189, 207, 262], "call": [7, 34, 91, 215, 216, 219, 252, 265, 266, 267], "argument": [7, 10, 11, 26, 40, 61, 62, 63, 64, 65, 66, 86, 89, 109, 116, 125, 127, 134, 153, 159, 162, 165, 168, 174, 177, 178, 179, 194, 204, 209, 211, 213, 215, 216, 223, 225, 228, 229, 232, 233, 234, 236, 257, 261, 265, 266, 267], "map": [7, 212, 213], "base": [7, 47, 57, 58, 96, 97, 125, 126, 127, 128, 152, 184, 185, 186, 187, 195, 209, 213, 219, 221, 261, 262, 265, 266, 267], "sole": [7, 195, 202, 261], "incompat": [7, 26, 74, 104, 207, 262, 265], "us": [7, 19, 26, 27, 59, 60, 83, 100, 104, 109, 124, 126, 128, 160, 184, 186, 194, 195, 204, 209, 211, 212, 213, 214, 216, 217, 220, 221, 222, 223, 225, 227, 228, 229, 231, 232, 233, 234, 236, 260, 261, 262, 263, 264, 265, 268], "normal": [7, 78, 171, 223, 225, 227, 228, 229, 231, 232, 233, 234, 236], "practic": [7, 19, 195, 261, 266], "avail": [7, 104, 116, 207, 215, 260, 262, 266], "still": [7, 26, 221, 261, 266, 267, 268], "consid": [7, 26, 63, 104, 130, 131, 132, 133, 184, 185, 186, 187, 212, 216, 235, 250, 261, 265, 267, 268], "compliant": [7, 26, 51, 92, 98, 104, 124, 127, 130, 131, 132, 133, 136, 137, 138, 140, 141, 172, 189, 211, 214, 216, 262, 265], "altern": [7, 213, 215, 268], "thei": [7, 26, 204, 210, 215, 216, 220, 221, 260, 261, 262, 265, 267, 268], "were": [7, 103, 157, 162, 209, 265], "option": [7, 13, 14, 15, 16, 17, 23, 26, 57, 58, 59, 60, 63, 77, 78, 88, 89, 91, 93, 94, 99, 101, 104, 105, 106, 115, 117, 124, 136, 138, 140, 148, 149, 153, 157, 158, 160, 162, 172, 174, 175, 189, 192, 193, 194, 209, 220, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 245, 247, 250, 257, 259, 261, 266, 267], "lead": [7, 103, 212, 251, 254, 265], "readabl": [7, 204, 261, 266], "code": [7, 59, 204, 213, 214, 216, 219, 221, 261, 265, 266, 267], "easier": [7, 207, 213, 261], "evolv": [7, 207, 261], "over": [7, 13, 14, 26, 88, 124, 136, 138, 140, 153, 172, 174, 175, 179, 189, 190, 211, 212, 213, 215, 216, 220, 223, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 236, 238, 257, 259, 261, 265], "ad": [7, 9, 10, 11, 12, 13, 14, 20, 21, 24, 26, 29, 35, 40, 42, 43, 44, 46, 47, 50, 51, 60, 61, 62, 63, 64, 66, 86, 87, 92, 95, 96, 98, 99, 100, 104, 105, 106, 119, 120, 121, 124, 125, 126, 127, 128, 134, 139, 143, 144, 146, 147, 148, 149, 151, 152, 153, 161, 163, 165, 166, 168, 169, 173, 174, 177, 178, 179, 184, 185, 186, 187, 190, 195, 208, 209, 210, 216, 237, 238, 239, 241, 242, 243, 245, 246, 247, 249, 250, 251, 252, 253, 254, 255, 257, 259, 262], "worri": 7, "xi": [7, 139], "annot": [7, 209, 221, 265], "individu": [7, 162, 216, 219, 220, 221, 224, 235, 265, 266], "aim": [7, 210, 221, 260, 261, 262, 265, 266, 267, 268], "strongli": [7, 213, 267], "look": [7, 267], "like": [7, 207, 210, 212, 213, 219, 221, 262, 265, 266, 267], "funcnam": 7, "key1": 7, "key2": 7, "none": [7, 13, 14, 15, 16, 17, 23, 26, 32, 49, 57, 58, 59, 60, 63, 77, 78, 83, 88, 89, 91, 93, 94, 99, 101, 104, 105, 106, 113, 115, 117, 124, 136, 138, 140, 148, 149, 153, 157, 158, 160, 162, 172, 174, 175, 189, 192, 193, 195, 209, 216, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 245, 247, 250, 257, 258, 259, 265, 266, 268], "out": [7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 195, 209, 210, 213, 215, 219, 220, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 245, 246, 247, 249, 250, 251, 252, 253, 254, 255, 257, 259, 264, 267], "int": [7, 13, 14, 15, 16, 17, 18, 21, 22, 26, 27, 28, 30, 31, 32, 33, 34, 35, 37, 38, 39, 41, 42, 43, 45, 47, 48, 49, 50, 51, 52, 56, 57, 58, 59, 60, 74, 77, 78, 88, 89, 91, 93, 97, 99, 100, 101, 103, 105, 106, 110, 124, 136, 138, 140, 142, 148, 150, 153, 157, 158, 160, 167, 170, 171, 172, 174, 175, 176, 179, 180, 181, 182, 188, 189, 190, 192, 195, 204, 219, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 238, 240, 245, 246, 256, 257, 258, 259, 266], "str": [7, 8, 23, 117, 118, 139, 266], "modulo": 7, "self": [7, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 59, 90, 209, 267], "few": [7, 211, 219, 265, 267], "enhanc": 7, "default": [7, 13, 14, 15, 16, 17, 18, 23, 26, 59, 60, 63, 77, 78, 88, 89, 91, 93, 94, 99, 101, 104, 105, 106, 114, 115, 117, 124, 136, 138, 139, 140, 146, 148, 149, 153, 157, 158, 160, 162, 167, 171, 172, 174, 176, 179, 181, 182, 184, 185, 186, 188, 189, 190, 192, 193, 194, 195, 209, 211, 216, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 240, 245, 247, 250, 251, 254, 257, 259], "form": [7, 23, 26, 40, 79, 134, 135, 181, 182, 213, 237, 239, 240, 241, 242, 243, 245, 246, 247, 250, 251, 252, 253, 254, 255, 257, 262, 266], "question": [7, 210, 265], "commonli": [7, 172, 189, 210, 212, 214, 260, 261, 265, 266], "written": [7, 207, 265, 267], "yyyi": [8, 23, 262], "mm": [8, 23, 262], "string": [8, 23, 117, 118, 209, 262, 265], "version": [8, 9, 10, 11, 12, 13, 14, 20, 21, 23, 24, 25, 26, 29, 34, 35, 40, 42, 43, 44, 46, 47, 50, 51, 59, 60, 61, 62, 63, 64, 66, 77, 79, 85, 86, 87, 89, 92, 95, 96, 98, 99, 100, 104, 105, 106, 109, 110, 111, 118, 119, 120, 121, 124, 125, 126, 127, 128, 134, 136, 137, 139, 140, 141, 142, 143, 144, 146, 147, 148, 149, 151, 152, 153, 154, 157, 161, 162, 163, 164, 165, 166, 168, 169, 173, 174, 175, 177, 178, 179, 180, 184, 185, 186, 187, 188, 190, 194, 207, 210, 216, 220, 221, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 241, 242, 243, 245, 246, 247, 249, 250, 251, 252, 253, 254, 255, 257, 259, 263, 265, 267], "absolut": [9, 20, 85, 163, 211, 213, 245, 246, 252, 261], "x_i": [9, 10, 11, 61, 62, 64, 66, 68, 76, 77, 79, 86, 87, 96, 98, 102, 111, 119, 120, 121, 125, 126, 127, 128, 131, 136, 138, 140, 144, 151, 154, 155, 161, 163, 164, 165, 166, 168, 169, 172, 177, 178, 183, 189], "input": [9, 10, 11, 12, 13, 14, 16, 17, 18, 20, 26, 30, 41, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 75, 76, 77, 78, 79, 85, 86, 87, 88, 89, 91, 92, 94, 95, 96, 97, 98, 101, 102, 103, 104, 106, 107, 108, 109, 111, 118, 119, 120, 121, 122, 123, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 193, 194, 202, 207, 209, 212, 214, 216, 217, 221, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 245, 246, 247, 249, 250, 251, 252, 254, 255, 257, 259, 261, 265, 267], "magnitud": [9, 12, 20, 85, 92, 103, 109, 143, 209, 254, 255], "represent": [9, 12, 20, 29, 44, 67, 70, 72, 80, 81, 82, 84, 92, 100, 103, 110, 143, 144, 145, 177, 178, 211, 215, 266], "known": [9, 163, 211, 214, 215], "norm": [9, 223, 225, 227, 228, 229, 231, 232, 233, 234, 236, 245, 259, 261], "modulu": [9, 156], "z": [9, 10, 11, 61, 62, 64, 66, 125, 212], "bj": [9, 12, 79, 92, 143], "comput": [9, 12, 28, 31, 33, 37, 39, 40, 43, 57, 58, 67, 70, 72, 79, 88, 89, 90, 91, 92, 95, 97, 103, 107, 108, 109, 122, 123, 130, 131, 132, 133, 134, 136, 137, 138, 140, 141, 143, 144, 146, 147, 151, 153, 157, 172, 174, 179, 184, 185, 186, 187, 189, 190, 195, 209, 211, 214, 219, 223, 224, 225, 227, 228, 229, 231, 232, 233, 234, 235, 236, 237, 238, 241, 242, 243, 245, 247, 250, 251, 252, 253, 254, 255, 257, 259, 261, 265], "operatornam": [9, 10, 11, 61, 62, 64, 66, 86, 87, 163, 165, 166, 177, 178, 212, 241, 242, 252, 254], "sqrt": [9, 10, 11, 61, 62, 194, 209, 212, 223, 225, 227, 228, 229, 231, 232, 233, 234, 236, 259], "take": [9, 125, 127, 152, 168, 194, 209, 216, 221, 265], "care": [9, 213, 261], "undu": [9, 214], "overflow": [9, 12, 89, 92, 103, 109, 124, 153, 174, 204, 252, 257, 261], "dure": [9, 40, 59, 109, 134, 172, 189, 204, 207, 250, 265, 266], "stage": [9, 109, 262], "contain": [9, 10, 11, 12, 13, 14, 15, 16, 17, 20, 21, 22, 23, 26, 28, 30, 31, 32, 33, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 76, 77, 78, 79, 85, 86, 87, 88, 89, 91, 92, 93, 94, 95, 96, 98, 102, 103, 104, 107, 108, 109, 111, 112, 113, 115, 117, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 161, 162, 163, 164, 165, 166, 168, 169, 172, 173, 174, 177, 178, 179, 181, 182, 183, 184, 185, 186, 187, 189, 190, 192, 195, 209, 211, 212, 213, 215, 219, 220, 224, 225, 226, 229, 230, 233, 235, 236, 237, 238, 239, 240, 241, 242, 243, 245, 246, 247, 249, 250, 251, 252, 253, 254, 255, 257, 259, 265, 267], "nan": [9, 10, 11, 12, 13, 14, 24, 25, 35, 61, 62, 63, 64, 65, 66, 76, 77, 85, 86, 87, 92, 95, 96, 98, 102, 103, 109, 119, 120, 121, 125, 126, 127, 128, 129, 136, 137, 138, 140, 141, 143, 145, 147, 152, 156, 161, 162, 163, 164, 165, 166, 168, 172, 177, 178, 183, 184, 185, 186, 187, 189, 194, 202, 212, 265], "infin": [9, 10, 11, 12, 13, 14, 24, 25, 35, 62, 63, 64, 65, 66, 76, 81, 86, 87, 92, 95, 96, 98, 102, 103, 109, 119, 120, 125, 126, 127, 128, 129, 136, 140, 143, 147, 152, 156, 161, 164, 165, 166, 168, 177, 178, 183, 212, 252, 259], "imag": [9, 10, 11, 12, 24, 62, 63, 66, 87, 95, 96, 98, 119, 120, 121, 124, 125, 127, 147, 161, 163, 166, 168, 178, 194, 209, 210, 265, 266, 267], "finit": [9, 10, 11, 12, 25, 35, 42, 62, 65, 66, 87, 92, 95, 96, 98, 103, 109, 113, 119, 120, 125, 127, 143, 147, 152, 156, 164, 166, 168, 178, 211], "2022": [9, 10, 11, 12, 13, 14, 20, 21, 24, 25, 26, 29, 35, 40, 42, 43, 44, 46, 47, 50, 51, 60, 61, 62, 63, 64, 66, 79, 86, 87, 92, 95, 96, 98, 99, 100, 105, 106, 110, 111, 118, 119, 120, 121, 124, 125, 126, 127, 128, 134, 139, 143, 144, 146, 147, 148, 149, 151, 152, 153, 154, 161, 163, 165, 166, 168, 169, 173, 174, 175, 177, 178, 179, 184, 185, 186, 187, 190, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 241, 242, 243, 245, 246, 247, 249, 250, 251, 252, 253, 254, 255, 257, 259], "12": [9, 10, 11, 12, 13, 14, 20, 21, 24, 25, 26, 29, 34, 35, 40, 42, 43, 44, 46, 47, 50, 51, 59, 60, 61, 62, 63, 64, 66, 77, 79, 85, 86, 87, 89, 92, 95, 96, 98, 99, 100, 104, 105, 106, 109, 110, 111, 118, 119, 120, 121, 124, 125, 126, 127, 128, 134, 136, 137, 139, 140, 141, 142, 143, 144, 146, 147, 148, 149, 151, 152, 153, 154, 157, 161, 162, 163, 164, 165, 166, 168, 169, 173, 174, 175, 177, 178, 179, 180, 184, 185, 186, 187, 188, 190, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 241, 242, 243, 245, 246, 247, 249, 250, 251, 252, 253, 254, 255, 257, 259, 262], "approxim": [10, 11, 47, 61, 62, 64, 65, 66, 86, 87, 96, 98, 103, 125, 126, 127, 128, 152, 165, 166, 177, 178, 211, 247, 250], "princip": [10, 11, 61, 62, 64, 66, 125, 168, 212, 261], "invers": [10, 11, 61, 62, 64, 65, 66, 212, 223, 225, 228, 229, 230, 231, 232, 233, 234, 236, 243, 246, 250, 261], "cosin": [10, 11, 86, 87, 178], "express": [10, 61, 63, 64, 65, 86, 165, 177, 195, 204, 213, 261, 264], "radian": [10, 61, 64, 65, 86, 165, 177], "arc": [10, 61, 64], "frac": [10, 11, 61, 62, 64, 66, 86, 87, 92, 124, 126, 128, 163, 165, 166, 177, 178, 212, 252], "pi": [10, 11, 61, 62, 64, 66, 87, 125, 127, 166, 177, 178, 194], "j": [10, 11, 12, 25, 61, 62, 64, 66, 87, 92, 96, 98, 124, 125, 127, 143, 162, 163, 165, 166, 168, 177, 178, 195, 212, 241, 254, 257], "ln": [10, 11, 61, 62, 64, 66, 125], "zj": [10, 61, 62, 64, 66], "conj": [10, 11, 61, 62, 64, 66, 87, 96, 98, 125, 126, 127, 128, 166, 168, 178, 194, 209], "multi": [10, 11, 61, 62, 64, 66, 194, 212, 215, 216, 238, 267], "branch": [10, 11, 61, 62, 64, 65, 66, 86, 87, 92, 96, 98, 125, 127, 143, 152, 165, 166, 168, 177, 178, 265], "cut": [10, 11, 61, 62, 64, 66, 86, 87, 96, 98, 125, 127, 152, 165, 166, 168, 177, 178, 265], "plane": [10, 11, 61, 62, 64, 66, 86, 87, 92, 96, 98, 143, 165, 166, 168, 177, 178, 265], "By": [10, 11, 13, 14, 61, 62, 64, 65, 66, 88, 89, 125, 127, 136, 138, 140, 152, 153, 168, 172, 174, 189, 190, 211, 212, 238, 261, 266], "place": [10, 11, 15, 60, 61, 62, 63, 64, 66, 93, 94, 99, 104, 105, 106, 124, 148, 149, 160, 192, 193, 194, 202, 204, 209, 213, 216, 224, 235, 250], "line": [10, 11, 61, 62, 64, 66, 177, 178, 204, 212, 265, 266, 267, 268], "segment": [10, 11, 61, 62, 64, 66, 212], "infti": [10, 11, 61, 62, 64, 66, 86, 125, 127, 152, 168, 212], "axi": [10, 11, 13, 14, 16, 17, 18, 61, 62, 64, 66, 78, 88, 89, 91, 97, 101, 125, 127, 136, 138, 140, 142, 152, 153, 157, 160, 167, 168, 170, 171, 172, 174, 175, 176, 179, 180, 188, 189, 190, 194, 209, 223, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 236, 238, 245, 258, 259, 265], "rang": [10, 61, 62, 64, 66, 77, 89, 125, 127, 153, 168, 174, 195, 209, 215, 257, 265], "strip": [10, 61, 62, 64, 66, 125, 127], "unbound": [10, 61, 62, 64, 66, 125, 127], "along": [10, 11, 13, 14, 16, 17, 18, 61, 62, 64, 66, 78, 88, 89, 91, 99, 101, 125, 127, 136, 138, 140, 153, 157, 160, 167, 168, 171, 172, 174, 175, 176, 177, 178, 180, 188, 189, 190, 195, 209, 223, 225, 227, 228, 229, 231, 232, 233, 234, 236, 238, 257, 259, 261], "c99": [10, 11, 61, 62, 64, 66, 92, 125, 127, 143, 152, 168, 212, 262], "provision": [10, 11, 61, 62, 64, 66, 125, 127, 152, 168, 212], "statu": [10, 11, 61, 62, 64, 66, 125, 127, 152, 168, 212], "greater": [10, 11, 33, 38, 48, 61, 62, 65, 66, 69, 71, 77, 85, 92, 102, 103, 125, 127, 152, 156, 163, 164, 166, 168, 170, 178, 194, 195, 223, 225, 227, 228, 229, 231, 232, 233, 234, 236, 238, 246], "than": [10, 11, 19, 26, 32, 38, 40, 47, 48, 49, 55, 61, 62, 63, 65, 66, 69, 71, 76, 77, 85, 89, 92, 100, 101, 102, 103, 104, 125, 126, 127, 128, 134, 143, 152, 153, 156, 163, 164, 166, 168, 170, 172, 174, 175, 178, 183, 184, 185, 186, 187, 189, 195, 204, 207, 210, 213, 216, 217, 220, 223, 225, 227, 228, 229, 231, 232, 233, 234, 236, 238, 245, 246, 247, 250, 257, 259, 261, 262, 265, 267], "less": [10, 11, 39, 47, 61, 65, 66, 76, 85, 92, 103, 125, 126, 127, 128, 152, 156, 163, 164, 168, 172, 189, 194, 195, 213, 223, 225, 227, 228, 229, 231, 232, 233, 234, 236, 245, 246, 247, 250, 259, 265], "\u03c0": [10, 64, 65, 84], "0j": [10, 11, 12, 25, 62, 63, 66, 87, 96, 98, 99, 125, 127, 148, 149, 163, 166, 168, 178, 212, 252], "nonzero": [10, 11, 12, 62, 66, 87, 92, 96, 98, 103, 143, 166, 178, 194, 195, 209, 250], "3\u03c0": [10, 65], "hyperbol": [11, 62, 66, 86, 87, 165, 166, 177, 178, 212], "aco": [11, 61, 194, 209, 211], "simpli": [11, 98, 127, 210, 221, 265, 267], "upper": [11, 77, 99, 182, 209, 237, 251], "half": [11, 15, 66, 124, 142, 168, 179, 195, 226], "area": [11, 62, 66], "sector": [11, 62, 66], "\u03c0j": [11, 62, 66, 125, 127], "3\u03c0j": [11, 125, 127], "sum": [12, 21, 89, 109, 129, 153, 194, 209, 245, 257, 259, 261], "x1_i": [12, 65, 67, 69, 70, 71, 72, 85, 92, 95, 103, 107, 108, 109, 122, 123, 129, 130, 132, 133, 137, 141, 143, 145, 147, 152, 156, 173, 191, 209], "x2_i": [12, 65, 67, 69, 70, 71, 72, 85, 92, 95, 103, 107, 108, 109, 122, 123, 129, 130, 132, 133, 137, 141, 143, 145, 147, 152, 156, 173, 191, 209], "first": [12, 16, 17, 19, 65, 67, 69, 70, 71, 72, 89, 91, 95, 107, 108, 109, 122, 123, 129, 130, 132, 133, 134, 137, 141, 143, 145, 147, 152, 160, 171, 173, 177, 178, 179, 184, 185, 186, 190, 191, 195, 212, 238, 241, 249, 251, 252, 254, 255, 261, 265, 266, 267, 268], "remain": [12, 92, 95, 103, 118, 120, 121, 143, 147, 156, 158, 163, 195, 213, 236], "neither": [12, 40, 92, 103, 134, 143, 179, 254, 266], "nor": [12, 92, 103, 143, 254, 266], "mathemat": [12, 19, 65, 84, 86, 87, 92, 98, 103, 125, 127, 143, 165, 166, 177, 178, 194, 212, 245, 259], "round": [12, 15, 76, 92, 102, 103, 143, 168, 183, 194, 209, 211], "nearest": [12, 92, 143, 161, 183, 211], "mode": [12, 92, 143, 211, 223, 225, 227, 228, 229, 231, 232, 233, 234, 236, 251], "too": [12, 26, 92, 103, 143, 261, 265], "larg": [12, 92, 103, 143, 215, 221, 252, 265], "appropri": [12, 26, 92, 103, 143, 212, 217], "commut": 12, "associ": [12, 42, 143, 197, 204, 247, 250, 253, 261, 264, 266], "tabl": [12, 92, 143, 194], "c": [12, 92, 95, 124, 143, 146, 147, 157, 171, 172, 178, 189, 195, 209, 212, 215, 218, 237, 241, 242, 243, 251, 253, 254, 262, 264, 265, 267], "d": [12, 92, 95, 124, 143, 147, 204, 224, 235], "dj": [12, 92, 143], "independ": [12, 92, 143, 161, 195, 207, 215, 238, 251, 253, 261, 262, 265], "abov": [12, 89, 92, 95, 125, 127, 143, 147, 152, 153, 168, 174, 181, 182, 195, 204, 212, 213, 215, 216, 219, 240, 241, 257, 261, 264, 267], "similarli": [12, 57, 118, 139, 204, 237, 254], "henc": [12, 79, 97, 146, 157, 184, 185, 186, 187, 195, 210, 212, 213, 214, 215, 219, 220, 221, 265, 267], "z1": 12, "z2": 12, "keepdim": [13, 14, 16, 17, 88, 136, 138, 140, 153, 172, 174, 189, 245, 259], "test": [13, 14, 90, 119, 120, 121, 209, 211, 263, 265, 266, 267], "evalu": [13, 14, 22, 30, 36, 38, 41, 44, 45, 46, 48, 51, 52, 96, 98, 125, 126, 127, 128, 144, 151, 163, 164, 169, 207, 265], "union": [13, 14, 15, 21, 22, 26, 28, 30, 31, 32, 33, 37, 38, 39, 41, 42, 43, 45, 47, 48, 49, 50, 51, 52, 59, 60, 75, 77, 78, 88, 93, 100, 101, 105, 106, 110, 117, 118, 124, 136, 138, 140, 142, 148, 153, 157, 159, 160, 170, 171, 172, 174, 179, 189, 192, 226, 230, 245, 247, 250, 259, 266], "ax": [13, 14, 16, 17, 19, 55, 56, 88, 89, 101, 136, 138, 140, 142, 150, 153, 160, 170, 172, 174, 179, 180, 189, 190, 195, 209, 225, 226, 229, 230, 233, 236, 238, 245, 250, 253, 256, 259], "logic": [13, 14, 24, 26, 92, 95, 130, 131, 132, 133, 143, 147, 216, 219, 225, 229, 233, 236], "AND": [13, 67, 95, 130, 264], "entir": [13, 14, 86, 87, 88, 96, 98, 136, 138, 140, 153, 165, 166, 172, 174, 189], "valid": [13, 14, 26, 27, 91, 97, 116, 142, 171, 179, 188, 195, 211, 219, 223, 225, 227, 228, 229, 231, 232, 233, 234, 236, 241, 251, 254, 266], "count": [13, 14, 78, 88, 89, 91, 101, 175, 176, 184, 185, 190, 195, 209, 223, 225, 227, 228, 229, 231, 232, 233, 234, 236, 238, 242], "last": [13, 14, 18, 19, 55, 78, 89, 91, 101, 160, 167, 171, 175, 176, 179, 190, 195, 223, 225, 227, 228, 229, 231, 232, 233, 234, 236, 238, 240, 245, 251, 254, 257], "invalid": [13, 14, 23, 91, 97, 217, 265], "rais": [13, 14, 19, 23, 24, 25, 26, 29, 34, 35, 40, 47, 51, 55, 60, 74, 91, 92, 96, 97, 104, 124, 134, 136, 140, 146, 152, 158, 170, 171, 188, 190, 195, 204, 207, 209, 215, 216, 217, 219, 238, 246, 265], "wa": [13, 14, 19, 26, 88, 103, 136, 138, 140, 153, 172, 174, 189, 204, 216, 221, 265, 267], "OR": [14, 24, 70, 132, 147, 264], "start": [15, 124, 195, 209, 221, 265, 267], "stop": [15, 124, 195, 209, 266], "step": [15, 124, 195, 266], "evenli": [15, 124], "space": [15, 124, 224, 226, 235], "open": [15, 124, 142, 179, 195], "inclus": [15, 195, 265], "end": [15, 65, 86, 124, 163, 165, 177, 178, 202, 213, 252, 265, 266, 267], "exclus": [15, 195], "distanc": [15, 109], "between": [15, 26, 47, 51, 65, 78, 92, 95, 100, 124, 136, 137, 140, 141, 147, 152, 171, 184, 185, 186, 187, 204, 212, 213, 216, 224, 235, 261, 265, 267], "adjac": 15, "output": [15, 60, 63, 78, 89, 93, 94, 97, 99, 101, 104, 105, 106, 113, 124, 139, 148, 149, 158, 160, 162, 170, 171, 175, 180, 192, 193, 207, 209, 212, 213, 216, 218, 219, 221, 223, 224, 225, 227, 228, 229, 232, 233, 234, 235, 236, 257, 265], "infer": [15, 60, 63, 94, 105, 106, 149, 158, 193, 214, 261, 266], "cannot": [15, 26, 57, 104, 177, 178, 209, 212, 214, 265], "guarante": [15, 59, 184, 186, 207, 212, 216, 265, 267], "error": [15, 19, 23, 24, 25, 26, 29, 34, 35, 51, 55, 92, 104, 136, 140, 177, 178, 204, 211, 252, 265], "ceil": [15, 194], "indic": [16, 17, 18, 26, 60, 89, 90, 104, 113, 118, 124, 142, 146, 160, 162, 163, 175, 176, 179, 181, 182, 184, 186, 195, 204, 209, 259, 265], "occur": [16, 17, 75, 109, 177, 178, 184, 185, 186, 187, 212, 266], "occurr": [16, 17, 184], "comparison": [16, 17, 18, 28, 31, 33, 37, 39, 43, 95, 107, 108, 122, 123, 136, 137, 140, 141, 147, 167, 194, 212, 262, 266], "search": [16, 17, 162, 194], "flatten": [16, 17, 78, 157, 160, 184, 185, 186, 187, 259, 261], "descend": [18, 167, 254, 255], "stabl": [18, 167, 215], "sort": [18, 162, 194, 209, 241, 242, 254, 255], "ascend": [18, 162, 167, 209], "stabil": [18, 167], "maintain": [18, 167, 210, 265, 267], "rel": [18, 19, 55, 101, 137, 141, 160, 167, 209, 240, 247, 250, 257], "compar": [18, 167, 184, 185, 186, 187, 211, 216, 266, 268], "properti": [19, 53, 54, 55, 56, 57, 58, 117, 209, 212, 216, 221, 265], "transpos": [19, 40, 55, 134, 135, 179, 237, 241, 250, 254, 261], "instanc": [19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 55, 59, 90, 204, 207, 209, 216], "permut": [19, 55, 150], "revers": [19, 55, 65, 101], "origin": [19, 55, 65, 109, 142, 158, 160, 209, 213, 223, 225, 228, 229, 232, 233, 234, 236, 265, 266], "limit": [19, 100, 110, 118, 211, 261, 264], "matric": [19, 40, 55, 134, 135, 139, 181, 182, 237, 239, 240, 241, 242, 243, 245, 246, 247, 250, 251, 252, 253, 254, 255, 257, 261], "deviat": [19, 172, 211, 217, 265, 267], "et": [19, 254, 255], "al": 19, "intent": [19, 65], "found": [19, 212, 215, 267, 268], "problemat": [19, 63, 210, 213], "conflict": 19, "definit": [19, 86, 87, 165, 166, 177, 178, 209, 237, 266], "batch": [19, 259, 261], "cetera": [19, 254, 255], "permute_dim": [19, 194], "interfac": [19, 215, 261, 265, 267], "ab": [20, 109, 152, 194, 209, 245, 259], "augend": 21, "addend": 21, "self_i": [22, 28, 30, 31, 33, 36, 37, 38, 39, 41, 43, 44, 45, 46, 48, 50, 51, 52], "other_i": [22, 28, 30, 31, 33, 37, 38, 39, 41, 43, 45, 47, 48, 50, 51, 52], "bitwise_and": [22, 194], "api_vers": [23, 265], "object": [23, 24, 25, 26, 29, 32, 34, 35, 53, 57, 59, 60, 90, 100, 104, 110, 112, 114, 115, 116, 194, 195, 204, 207, 209, 213, 215, 216, 219, 221, 260, 262, 266, 267], "2020": [23, 221, 262, 264, 265], "10": [23, 27, 126, 195, 265], "latest": [23, 215], "modul": [23, 207, 262, 266, 267, 268], "everi": [23, 105, 106, 251, 265], "top": [23, 207, 265, 267], "level": [23, 204, 210, 215, 216, 260, 261, 265, 266], "public": [23, 260, 266, 267], "well": [23, 210, 212, 215, 216, 251, 267, 268], "part": [23, 35, 181, 182, 204, 209, 215, 220, 262, 265, 267], "convert": [24, 25, 29, 34, 35, 60, 104, 204, 209, 210, 212, 215, 265, 267], "handl": [24, 26, 61, 64, 86, 89, 104, 126, 128, 152, 153, 155, 163, 165, 169, 174, 177, 209, 210, 212, 213, 216, 217, 257, 265], "lazi": [24, 25, 29, 34, 35, 207, 209, 218, 267], "languag": [24, 25, 29, 34, 35, 213, 217, 219, 261, 265, 267], "therefor": [24, 25, 29, 32, 34, 35, 207, 215, 216, 217, 219, 221, 262, 265, 267], "abl": [24, 25, 29, 34, 35, 104, 213, 215, 216, 265, 267], "kind": [24, 25, 26, 29, 34, 35, 47, 51, 77, 92, 100, 104, 106, 110, 115, 117, 118, 152, 204, 209, 219, 261, 264], "here": [24, 25, 26, 29, 34, 35, 195, 204, 213, 215, 220, 221, 267], "valueerror": [24, 25, 26, 29, 34, 35, 60, 104, 158, 170, 267], "instead": [24, 25, 29, 34, 35, 63, 212, 215, 219, 266, 267], "2023": [24, 25, 26, 29, 34, 35, 59, 63, 77, 85, 89, 104, 109, 136, 137, 140, 141, 142, 153, 157, 162, 164, 174, 175, 179, 180, 184, 185, 186, 187, 188, 190, 223, 224, 225, 227, 228, 229, 232, 233, 235, 238, 257], "new": [25, 26, 77, 79, 85, 89, 97, 100, 104, 105, 106, 109, 110, 111, 118, 137, 141, 142, 148, 149, 154, 157, 158, 162, 164, 171, 175, 180, 188, 192, 193, 207, 209, 210, 213, 215, 216, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 262, 265, 266, 267], "stream": [26, 59, 216], "max_vers": [26, 209], "dl_devic": [26, 209], "enum": [26, 27], "pycapsul": 26, "export": [26, 104, 209, 215, 266], "from_dlpack": [26, 27, 194, 209, 215], "dlpack": [26, 27, 104, 209], "capsul": 26, "cuda": [26, 27, 210, 215, 267], "rocm": [26, 27, 210], "pointer": 26, "produc": [26, 32, 241, 251, 254, 267], "instruct": 26, "safe": [26, 124], "insert": [26, 97, 162, 209], "wait": 26, "event": [26, 264], "larger": [26, 100, 160, 172, 189, 250], "below": [26, 103, 104, 181, 182, 197, 215, 216, 240, 257], "signal": [26, 227, 231, 267], "ownership": 26, "stai": 26, "On": 26, "cpu": [26, 27, 207, 210, 215, 216, 261, 265, 267], "queue": [26, 59, 216], "similar": [26, 156, 195, 210, 212, 214, 265, 266, 267], "mechan": [26, 104, 207, 209, 210, 218, 260, 265], "most": [26, 207, 216, 241, 261, 265, 267], "yet": [26, 221, 265], "sycl": 26, "want": [26, 92, 143, 210, 214, 215, 265, 267, 268], "cl": 26, "agre": 26, "assum": [26, 86, 104, 165, 177, 207, 212, 216, 260, 265], "legaci": 26, "per": [26, 157, 210, 215, 263], "thread": [26, 265, 267], "disallow": 26, "due": [26, 42, 57, 58, 124, 143, 157, 175, 211, 212, 261, 265], "ambigu": [26, 63, 103, 213], "construct": [26, 180, 207, 209, 210, 219, 265], "particular": [26, 195, 210, 212, 215, 216, 221, 261, 264, 265, 267, 268], "kdlcpu": 26, "safeti": [26, 59], "prefer": [26, 103, 207, 261, 267], "develop": [26, 211, 265, 266, 267, 268], "who": [26, 211, 265, 266], "think": 26, "cost": 26, "caller": 26, "major": [26, 146, 157, 195, 262], "minor": [26, 262], "verifi": [26, 265], "even": [26, 92, 143, 152, 161, 211, 212, 213, 224, 226, 230, 235, 251, 261, 265, 267], "pass": [26, 65, 207, 211, 216], "format": [26, 27, 262], "__dlpack_device__": [26, 104, 194, 215], "buffererror": [26, 104, 209, 215], "v2023": [26, 104], "mandat": [26, 104, 265], "offer": [26, 104, 210, 215, 216, 220, 265, 267], "referenc": [26, 265], "underli": [26, 67, 70, 72, 104, 211, 252, 261], "interpret": [26, 104, 109, 212, 213, 268], "enumer": 26, "made": [26, 104, 207, 212, 260, 262, 265, 267], "never": [26, 60, 104, 158, 215, 265], "deem": [26, 104], "cross": [26, 104, 209, 216, 261, 265], "movement": [26, 104], "request": [26, 104, 265], "reus": [26, 60, 104, 213, 265], "buffer": [26, 60, 104, 213, 215], "happen": [26, 104, 213, 216, 219, 261], "dlpack_flag_bitmask_is_copi": 26, "flag": 26, "understood": [26, 204], "interchang": [26, 104, 207, 210, 218, 265], "detail": [26, 32, 49, 104, 146, 157, 184, 185, 186, 187, 194, 195, 206, 207, 214, 216, 220, 261, 265, 267], "stride": [26, 104, 213, 215], "fail": [26, 104, 265], "reason": [26, 104, 156, 178, 213, 215, 217, 261, 265, 266], "incorrect": 26, "scheme": [26, 262], "semver": 26, "abi": [26, 210, 215], "break": [26, 217], "introduc": [26, 63, 103, 160, 221, 266], "goe": 26, "togeth": [26, 204, 215], "dlmanagedtensorvers": 26, "struct": 26, "later": 26, "introduct": 26, "becaus": [26, 204, 210, 213, 216, 217, 219, 221, 241, 254, 265, 267, 268], "keep": [26, 204, 210, 265], "march": 26, "2025": 26, "onward": 26, "ideal": [26, 261], "late": 26, "okai": 26, "we": [26, 212, 254, 265], "get": [26, 100, 110, 210, 213, 215, 216], "now": [26, 104, 219, 265, 267], "our_own_dlpack_vers": 26, "fill": [26, 105, 106, 148, 149, 192, 193, 209], "field": [26, 184, 185, 186, 212, 241, 251, 252, 254, 265], "understand": [26, 250, 265, 266], "u": [26, 237, 250, 254], "just": [26, 265, 267], "our": 26, "elif": 26, "fine": [26, 221, 265], "own": [26, 207, 213, 265], "re": [26, 160, 210, 213, 221, 267], "intern": [26, 267], "did": 26, "older": [26, 178, 215, 262, 265], "around": [26, 266], "y": [26, 65, 104, 212, 213, 267], "dlmanagedtensor": 26, "so": [26, 100, 104, 112, 195, 202, 215, 261, 264, 265, 268], "tell": 26, "old": 26, "exchang": [26, 104, 215], "And": [26, 195, 216], "try": [26, 221, 265], "succe": 26, "info": [26, 112], "dltensor_vers": 26, "need": [26, 195, 210, 211, 213, 215, 217, 221, 261, 262, 265, 266, 267, 268], "used_dltensor_vers": 26, "done": [26, 207], "typeerror": [26, 29, 34, 35, 265, 267], "read": [26, 209, 213], "dlpack_flag_bitmask_read_onli": 26, "ignor": [26, 139, 261], "respons": 26, "isn": [26, 210], "t": [26, 194, 210, 213, 216, 220, 221, 265, 267], "id": 27, "meant": 27, "device_typ": 27, "device_id": 27, "member": 27, "cpu_pin": 27, "opencl": 27, "vulkan": 27, "metal": 27, "vpi": 27, "cuda_manag": 27, "13": 27, "one_api": 27, "14": [27, 262], "truth": [28, 31, 33, 37, 39, 43, 90, 95, 107, 108, 122, 123, 147, 268], "undefin": [28, 31, 33, 37, 39, 43, 95, 107, 108, 122, 123, 147, 204, 261], "outsid": [29, 171, 188, 195, 204, 209, 215], "bound": [29, 77, 175, 176, 195, 204, 209, 221], "divis": [30, 41, 71, 92, 103, 156, 163, 212], "floor_divid": [30, 194], "greater_equ": [31, 194], "kei": [32, 49, 113, 115, 117, 265], "slice": [32, 49, 188, 194, 213], "ellipsi": [32, 49, 195], "semant": [32, 40, 49, 103, 134, 156, 175, 194, 195, 207, 213, 215, 217, 219, 220, 261, 265, 266, 267], "iter": [32, 195], "directli": [32, 265, 267], "__iter__": 32, "sequenc": [32, 60, 78, 124, 171, 179, 188, 195, 209, 225, 226, 229, 230, 233, 236, 256], "pep": [34, 40, 103, 134, 215, 262], "357": 34, "overflowerror": 35, "bitwise_invert": [36, 194], "less_equ": [37, 194], "bitwise_left_shift": [38, 194], "matrix": [40, 55, 134, 135, 139, 179, 181, 182, 237, 239, 240, 241, 242, 243, 245, 246, 247, 250, 251, 252, 253, 254, 255, 257, 261, 265], "product": [40, 42, 58, 134, 143, 153, 179, 190, 209, 238, 249, 261], "built": [40, 134, 195, 204, 265], "465": [40, 134], "least": [40, 88, 92, 117, 118, 134, 143, 146, 184, 185, 186, 187, 210, 211, 250], "m": [40, 55, 91, 134, 135, 139, 157, 162, 179, 180, 181, 182, 195, 223, 225, 227, 228, 229, 231, 232, 233, 234, 236, 237, 239, 240, 241, 242, 243, 245, 246, 247, 249, 250, 251, 252, 253, 254, 255, 257], "remov": [40, 134, 170, 195, 212, 240, 257], "innermost": [40, 134, 135, 181, 182, 237, 239, 240, 241, 242, 243, 245, 246, 247, 250, 251, 252, 253, 254, 255, 257], "conjug": [40, 79, 134, 179, 190, 209, 237, 241, 254, 261], "transposit": [40, 134, 179], "desir": [40, 63, 75, 134, 142, 179, 211, 212, 215, 221], "prior": [40, 91, 134, 179], "inner": [40, 134, 209, 241, 261], "stack": [40, 55, 134, 135, 181, 182, 194, 220, 237, 239, 240, 241, 242, 243, 245, 246, 247, 250, 251, 252, 253, 254, 255, 257, 261], "l": [40, 134, 237, 257], "remaind": [41, 194, 195], "multipli": [42, 153, 169, 194, 209, 211, 241, 254], "not_equ": [43, 194, 209], "negat": [44, 79, 144], "bitwise_or": [45, 194], "exponenti": [47, 96, 98, 129, 152, 212], "power": [47, 71, 96, 152, 212, 246, 267], "expon": [47, 152, 246], "versu": [47, 51, 63, 77, 92, 143, 152, 209], "bitwise_right_shift": [48, 194], "mix": [49, 124, 138, 159, 172, 189, 194, 209, 213, 216, 261, 265], "how": [49, 92, 143, 207, 211, 216, 220, 266, 267, 268], "minuend": 50, "subtrahend": 50, "subtract": [50, 194, 209, 211], "choos": [51, 57, 59, 92, 103, 124, 130, 131, 132, 133, 136, 137, 138, 140, 141, 143, 146, 157, 172, 184, 185, 186, 187, 189, 194, 195, 202, 212, 213, 214, 216, 219, 265, 267], "divid": [51, 103, 155, 163, 194, 195, 209, 211], "bitwise_xor": [52, 194], "resid": [53, 59, 97, 142, 179, 195, 209, 215, 265], "fewer": 55, "unknown": [57, 58, 157], "graph": [57, 58, 146, 157, 184, 185, 186, 187, 195, 214, 219, 265], "static": [57, 214, 218], "resolv": [57, 60, 89, 97, 103, 105, 106, 153, 174, 225, 226, 229, 230, 233, 236, 257, 265], "know": [57, 146, 157, 184, 185, 186, 187, 207, 210, 211, 214, 265, 267], "content": [57, 214, 264], "warrant": 57, "custom": [57, 210, 217], "immut": 57, "retriev": [57, 195, 207, 222, 261, 267], "behav": [57, 212], "current": [59, 115, 117, 175, 202, 213, 216, 221, 265, 266, 267], "__dlpack__": [59, 104, 194, 209, 215], "caveat": 59, "would": [59, 60, 158, 162, 195, 209, 213, 219, 261, 265, 267], "locat": [59, 213], "explicit": [59, 60, 104, 175, 179, 216, 267], "enqueu": 59, "asynchron": 59, "explain": [59, 210], "clarifi": [59, 136, 140, 184, 185, 186, 209], "obj": 60, "nestedsequ": 60, "supportsbufferprotocol": 60, "possibli": [60, 220, 265], "nest": [60, 220], "protocol": [60, 207, 215, 221, 265, 267], "turn": [60, 207, 260], "memoryview": 60, "preced": [60, 212, 215, 216], "mixtur": 60, "convers": [60, 124, 209, 210, 265], "obei": [60, 124], "permit": [60, 63, 124, 214, 264], "To": [60, 103, 195, 209, 211, 212, 221, 265, 266, 268], "array_api": [60, 265], "astyp": [60, 194, 209], "exce": [60, 105, 106, 124], "sine": [61, 62, 165, 166, 178], "1j": [61, 64, 86, 87, 96, 98, 109, 165, 166, 177], "asinh": [61, 194, 209, 211], "asin": [62, 194, 209, 211], "irrespect": [63, 212], "histor": [63, 178, 261], "discard": 63, "choic": [63, 172, 189, 207, 211, 212, 216, 217, 219, 220, 261, 262, 265, 267], "arbitrari": [63, 73, 113, 139, 159, 211], "achiev": [63, 195, 211], "outcom": 63, "clariti": 63, "newli": [63, 216], "alloc": [63, 181, 182, 214, 216], "tangent": [64, 65, 66, 177, 178], "atanh": [64, 194, 209, 211], "quotient": [65, 92, 103, 195], "domain": [65, 209, 211, 212, 265, 267], "notat": 65, "denot": [65, 190, 250], "pair": [65, 103, 238, 254], "codomain": 65, "quadrant": 65, "chosen": [65, 191, 215], "angl": [65, 87, 109, 166, 178], "rai": 65, "role": 65, "coordin": [65, 125, 139, 177, 178, 220, 265], "tradit": 65, "atan": [66, 194, 209, 211], "bitwis": [67, 70, 72, 194], "flip": [68, 194], "shift": [69, 71, 160, 226, 230], "arithmet": [71, 92, 138, 143, 194, 204, 212, 265], "propag": [71, 104, 136, 138, 140, 172, 189, 211], "floor": [71, 103, 194], "anoth": [73, 75, 104, 195, 207, 209, 210, 212, 213, 215, 216, 219, 241, 254, 265, 267], "from_": 75, "smallest": [76, 100, 110, 245], "closest": [76, 102, 103, 161], "alreadi": [76, 102, 143, 161, 183, 215, 217, 262, 267], "min": [77, 100, 110, 181, 182, 190, 194, 209, 238, 245, 251, 254, 255, 259], "clamp": [77, 209], "min_i": 77, "max_i": 77, "join": [78, 171, 204], "befor": [78, 89, 153, 162, 174, 184, 185, 186, 187, 190, 209, 212, 238, 257, 265], "concaten": 78, "leav": [78, 142, 171, 195, 202, 209, 211, 213, 250], "famili": [78, 171], "intxx": [78, 171, 204], "floatxx": [78, 171, 204], "718281828459045": 80, "euler": 80, "constant": [80, 84, 194, 195, 209], "71828182845904523536028747135266249775724709369995": 80, "Not": 82, "alia": [83, 117, 195, 209, 244, 248, 256, 258], "141592653589793": 84, "1415926535897932384626433": 84, "compos": [85, 204, 209], "begin": [86, 163, 165, 177, 178, 195, 202, 252, 267], "align": [86, 165, 177, 178, 209, 211, 266], "sum_": [86, 190], "2n": [86, 125], "jx": [86, 165, 177], "cosh": [86, 178, 194, 209, 211], "period": [87, 166, 177, 178], "ci": [87, 96, 98, 166, 267], "v": [87, 96, 98, 162, 166, 218, 250, 254, 265], "co": [87, 96, 98, 166, 194, 209, 211], "sin": [87, 96, 98, 166, 194, 209, 211, 213, 221], "total": [88, 146, 172, 189, 212], "include_initi": 89, "cumul": [89, 209], "unless": [89, 143, 153, 174, 194, 257], "smaller": [89, 153, 160, 174, 257, 267], "latter": [89, 103, 153, 174, 195, 207, 212, 215, 257, 266], "help": [89, 153, 174, 210, 211, 220, 257], "prevent": [89, 153, 174, 257], "initi": [89, 213, 265], "ident": [89, 190, 212, 230, 242, 243, 246, 265], "success": [89, 153, 174, 257], "discret": [91, 223, 224, 225, 227, 228, 229, 231, 232, 233, 234, 235, 236], "forward": [91, 223, 225, 227, 228, 229, 231, 232, 233, 234, 236, 265], "recurs": 91, "final": [91, 262], "dividend": [92, 103, 156], "divisor": [92, 103, 156, 172, 189], "small": [92, 103, 143, 211, 247, 250, 252, 265, 267], "gener": [92, 124, 143, 156, 179, 207, 210, 212, 217, 261, 265, 266], "textbook": [92, 143], "formula": [92, 126, 128, 143], "ac": [92, 143, 212], "bd": [92, 143], "bc": [92, 143, 212], "riemann": [92, 143, 212], "sphere": [92, 143, 212], "infinit": [92, 113, 143, 168, 211, 212], "usual": [92, 143, 265], "interest": [92, 143, 211], "unlik": [92, 143, 262, 265], "consist": [92, 103, 117, 118, 124, 143, 162, 179, 195, 202, 212, 216, 221, 232, 233, 234, 236, 241, 250, 261, 265], "uniniti": [93, 94], "deriv": [94, 106, 149, 193, 195, 217, 266], "natur": [96, 125, 126, 127, 128, 152, 252, 261], "logarithm": [96, 125, 126, 127, 128, 129, 152, 252, 261], "expand": [97, 195, 267], "close": [97, 98, 124, 127, 161, 195, 265, 267], "indexerror": [97, 195], "exp": [98, 129, 152, 194, 209, 211, 252], "accur": [98, 127, 211, 252], "fdlibm": [98, 127, 211], "n_row": 99, "n_col": 99, "ones": [99, 149, 180, 194, 209, 213, 217, 265], "diagon": [99, 181, 182, 241, 250, 251, 257, 261], "elsewher": [99, 191, 212], "row": [99, 146, 157, 195, 245, 251, 253, 254], "column": [99, 241, 245, 251, 253, 254, 265], "finfo_object": [100, 209], "machin": [100, 110, 247, 250, 265], "inform": [100, 110, 265, 266, 267, 268], "occupi": [100, 110], "ep": [100, 247, 250, 265], "next": [100, 145, 265], "largest": [100, 110, 245, 254, 255], "smallest_norm": 100, "full": [100, 194, 209, 213, 251, 253, 254, 267], "preserv": [101, 162, 195, 209, 212, 216], "reorder": [101, 142], "greatest": [102, 103], "238": 103, "goal": [103, 210, 213, 261, 267], "disambigu": 103, "toward": [103, 160, 211, 261, 266], "former": [103, 195, 212, 266], "overload": [103, 261], "led": 103, "subtl": 103, "bug": [103, 267, 268], "expect": [103, 117, 178, 204, 209, 211, 212, 214, 215, 216, 217, 221, 265], "design": [103, 209, 211, 263, 265, 267, 268], "ill": [103, 261], "diverg": [103, 268], "strictli": 103, "relat": [103, 195, 212, 216, 220, 261, 265, 267], "surpris": [103, 212], "unexpect": [103, 212, 217, 265], "enough": [104, 207, 210, 221, 260, 262, 265], "materi": [104, 215], "attributeerror": [104, 215], "present": [104, 117, 213, 214, 216, 260, 261, 262, 265], "suggest": [104, 267], "correctli": [104, 211], "move": [104, 142, 209, 216, 267], "agnost": 104, "fashion": 104, "illustr": [104, 213, 221], "def": [104, 221, 265, 266, 267], "func": 104, "xp_x": 104, "__array_namespace__": [104, 194, 222, 261, 265], "xp_y": 104, "work": [104, 210, 213, 215, 221, 265, 267, 268], "xxxxx": 104, "address": [104, 209, 261, 265, 266, 267], "unsupport": [104, 209], "fill_valu": [105, 106], "squar": [109, 168, 194, 209, 212, 237, 239, 241, 242, 243, 246, 250, 252, 253, 261], "root": [109, 168, 209, 212, 242], "hypotenus": 109, "triangl": 109, "side": [109, 162, 195, 215], "naiv": 109, "correct": [109, 172, 189, 213], "iinfo_object": [110, 209], "inspect": [112, 194], "util": [112, 194, 197, 209, 262, 265, 266], "class": [112, 197, 221, 265, 266], "xp": [112, 222, 260, 261, 265], "capabl": [112, 194, 197, 209], "default_dtyp": [112, 194, 209], "dictionari": [113, 115, 117, 209], "fulli": [113, 216], "complianc": 113, "exclud": [113, 124, 195, 204], "demarc": [113, 214], "throughout": 113, "defaultdatatyp": 115, "concept": [115, 117, 195, 213, 265], "context": [115, 117, 212, 216, 266], "manag": [115, 117, 210, 216], "runtim": [116, 220, 221, 262, 265, 267], "creation": [116, 194, 207, 216, 265], "datatyp": 117, "decid": [117, 265], "belong": [117, 118, 213], "shorthand": [117, 118, 195], "canon": 117, "float16": 118, "bfloat16": [118, 265], "int128": 118, "short": [118, 212, 265, 266], "extend": [118, 195, 212, 265], "extens": [118, 263, 267], "num": 124, "endpoint": 124, "delta_": 124, "textrm": [124, 163, 252], "sampl": [124, 172, 189, 224, 230, 235, 266], "nonneg": [124, 179, 195], "concern": [124, 157, 175, 209, 216, 220, 265], "polar": 125, "r": [125, 180, 195, 237, 241, 242, 243, 251, 253, 254, 265, 267], "theta": 125, "continu": [125, 127, 152, 168, 212, 241, 254, 265], "account": [125, 127, 152, 168, 265], "log_": [126, 128], "log": [126, 127, 128, 129, 152, 194, 209, 211], "mxn": [135, 181, 182, 240, 245, 247, 250, 251, 257], "sentinel": [136, 140], "xy": 139, "grid": 139, "cartesian": 139, "ij": 139, "effect": [139, 172, 189, 216, 268], "ni": 139, "n3": 139, "nn": 139, "three": [139, 216], "p": [139, 242, 245, 259], "sourc": [142, 266, 268], "destin": 142, "uniqu": [142, 179, 184, 185, 186, 187, 209, 212, 225, 226, 229, 230, 233, 236, 241, 243, 251, 253, 254, 261], "state": [143, 194, 195, 265], "cdot": [143, 165, 169, 177, 190], "y_i": [144, 151], "direct": [145, 210, 265, 266], "build": [146, 157, 184, 185, 186, 187, 195, 207, 214, 220, 265], "jax": [146, 157, 184, 185, 186, 187, 195, 213, 214, 265, 266, 267], "dask": [146, 157, 184, 185, 186, 187, 195, 213, 214, 220, 265, 266, 267], "etc": [146, 157, 184, 185, 186, 187, 195, 214, 262], "find": [146, 157, 162, 184, 185, 186, 187, 195, 209, 214, 265, 266], "difficult": [146, 157, 184, 185, 186, 187, 195, 211, 214, 265], "omit": [146, 157, 184, 185, 186, 187, 195, 214, 215, 219], "section": [146, 157, 184, 185, 186, 187, 195, 209, 210, 214, 215, 216, 217, 221, 265, 267], "style": [146, 157, 195], "odd": [152, 224, 230, 232, 233, 235], "treat": [152, 180], "carefulli": 152, "That": [156, 195, 207, 217, 221, 265], "primarili": 156, "basi": 157, "liter": [157, 162, 223, 225, 227, 228, 229, 231, 232, 233, 234, 236, 245, 251, 259], "repetit": [157, 180], "prod": [157, 194, 209, 225, 229, 233, 236], "caus": 157, "advis": [157, 178, 213, 261], "regard": [157, 175, 209, 217, 261, 267], "degrad": 157, "One": [158, 219, 265, 268], "arrays_and_dtyp": 159, "restor": 160, "counterpart": 161, "sorter": 162, "control": [162, 216, 219, 220], "land": 162, "exactli": [162, 177, 178], "edg": 162, "satisfi": [162, 180, 194, 195, 211, 212, 266], "condit": [162, 191, 219, 264], "what": [162, 207, 215, 217, 221, 261, 265, 266, 267, 268], "constitut": [162, 172, 189], "among": [162, 211, 212, 261], "argsort": [162, 194], "invok": [162, 266], "signum": 163, "whenev": [164, 267], "2j": 165, "sinh": [165, 178, 194, 209, 211], "indistinguish": [168, 195, 211], "degre": [172, 189, 242, 261], "freedom": [172, 189], "adjust": [172, 189, 265], "popul": [172, 189], "bessel": [172, 189, 210], "conceptu": 175, "mutat": 175, "check": [175, 176, 195, 211, 237, 241, 242, 251, 253, 260, 267, 268], "select": [175, 176, 195, 265], "analyt": [177, 178, 212], "pole": [177, 178], "tanh": [177, 194, 209, 211], "stem": [178, 241, 254], "patch": 178, "tensor": [179, 261, 265, 267], "contract": [179, 190, 261, 264], "outer": [179, 209], "dot": [179, 190, 261], "x1_ax": 179, "x2_ax": 179, "triangular": [181, 182, 237, 251], "closer": 183, "reconstruct": [184, 186], "distinct": [184, 185, 186, 187, 212, 261], "inverse_indic": [184, 186], "exact": [184, 186, 221], "aggreg": [184, 185], "namedtupl": [184, 185, 186, 241, 251, 252, 254, 261], "third": [184, 254], "fourth": 184, "split": [188, 209], "varianc": 189, "unbias": 189, "mathbf": 190, "overlin": [190, 250], "a_i": 190, "b_i": 190, "restrict": [190, 238, 261, 264], "yield": [191, 212], "signatur": [194, 207, 221, 265, 266], "subset": [194, 211, 266, 267], "categori": 194, "accuraci": [194, 218, 223, 225, 228, 229, 232, 233, 234, 236], "reflect": 194, "mt": 194, "__abs__": [194, 209], "__bool__": [194, 209, 219], "__complex__": [194, 209, 219], "__float__": [194, 209, 219], "__getitem__": [194, 195, 209], "__index__": [194, 209, 219], "__int__": [194, 209, 219], "to_devic": [194, 209, 216], "overview": 194, "algorithm": [194, 211, 252, 267], "inf": [194, 245, 259, 265], "newaxi": [194, 195, 209], "arang": [194, 266], "asarrai": [194, 209, 215, 267], "empty_lik": 194, "ey": [194, 209], "full_lik": [194, 209], "linspac": [194, 209], "meshgrid": [194, 209], "ones_lik": [194, 209], "tril": 194, "triu": 194, "zeros_lik": 194, "can_cast": 194, "finfo": [194, 209], "iinfo": [194, 209], "result_typ": 194, "acosh": [194, 209, 211], "atan2": [194, 211], "clip": [194, 195, 209], "copysign": [194, 209], "expm1": [194, 209, 211], "hypot": [194, 209], "isfinit": [194, 209], "isinf": [194, 209], "isnan": [194, 209], "log1p": [194, 209, 211], "log2": [194, 209, 211], "log10": [194, 209, 211], "logaddexp": 194, "logical_and": 194, "logical_not": 194, "logical_or": 194, "logical_xor": 194, "nextaft": 194, "reciproc": [194, 250], "signbit": [194, 209], "tan": [194, 209, 211], "trunc": [194, 209], "syntax": [194, 213, 215, 217, 265], "take_along_axi": 194, "__array_namespace_info__": [194, 197, 209], "default_devic": [194, 209], "linear": [194, 212, 253, 260], "algebra": [194, 212, 250, 260], "matrix_transpos": [194, 261], "tensordot": [194, 209, 261], "vecdot": [194, 209, 261], "manipul": 194, "broadcast_arrai": 194, "broadcast_to": 194, "concat": 194, "expand_dim": [194, 195], "moveaxi": [194, 209], "reshap": [194, 195], "roll": 194, "squeez": 194, "tile": [194, 209], "unstack": [194, 209], "argmax": 194, "argmin": 194, "count_nonzero": 194, "searchsort": [194, 209], "unique_al": [194, 209], "unique_count": [194, 209], "unique_invers": [194, 209], "unique_valu": [194, 209], "statist": 194, "cumulative_sum": [194, 209], "diff": 194, "__array_api_version__": [194, 206, 209, 262], "syntact": 195, "sugar": 195, "term": [195, 216, 261, 266], "colon": 195, "contrast": [195, 212, 219, 261], "combin": [195, 213, 220, 261], "basic": 195, "noth": 195, "perspect": 195, "item": [195, 213, 265], "2k": 195, "3k": 195, "q": [195, 241, 251], "obtain": [195, 264], "qk": 195, "being": [195, 215, 216, 261, 265, 268], "100": [195, 219, 262], "junk": 195, "consider": [195, 213, 261], "comma": 195, "separ": [195, 209, 215, 260], "exp1": 195, "exp2": 195, "expn": 195, "forth": 195, "decreas": [195, 261], "entri": [195, 225, 226, 229, 230, 233, 236, 265], "retain": 195, "invoc": 195, "manner": [195, 215, 217], "sympi": 195, "flat": 195, "attempt": [195, 211, 212, 213, 216, 217, 265, 267], "dynam": 195, "mask": [195, 265], "filter": 195, "s1": 195, "sm": 195, "s2": 195, "sn": 195, "prohibit": [195, 213], "replac": [195, 219, 250, 268], "programmat": 197, "queri": 197, "reli": [202, 210, 212, 214, 221, 267], "them": [202, 210, 213, 217, 265, 267], "reproduc": [202, 211], "high": [204, 215, 216, 261, 265], "diagram": [204, 265], "lattic": 204, "particip": [204, 212], "matter": [204, 210, 212], "dash": 204, "connect": [204, 264], "rather": [204, 207, 210, 216, 217, 220, 261, 265], "i2": 204, "i1": 204, "i4": 204, "i8": 204, "u1": 204, "u2": 204, "u4": 204, "u8": 204, "f8": 204, "c8": 204, "c16": 204, "regardless": 204, "subject": [204, 252, 264], "met": 204, "give": [204, 212, 215, 216], "No": [207, 262], "run": [207, 266, 267], "varieti": 207, "architectur": 207, "gpu": [207, 215, 216, 267], "distribut": [207, 211, 215, 216, 220, 264], "system": [207, 253, 265], "tpu": [207, 215], "emerg": [207, 215, 265], "instal": [207, 265, 268], "emploi": [207, 214, 216], "parallel": [207, 218, 265, 267], "jit": [207, 210, 265], "put": [207, 265, 267], "constraint": [207, 212, 263], "predict": 207, "itself": [207, 215, 219, 267], "motiv": 207, "importantli": 207, "awar": [207, 221, 267], "layer": [207, 220, 265, 267], "coupl": 207, "downstream": [207, 260, 265, 266], "import": [207, 210, 216, 219, 260, 261, 265, 267, 268], "structur": [207, 221, 265, 266], "interoper": [207, 215], "share": [207, 265], "though": [207, 221, 265, 267], "soft": 207, "arraylib_nam": 207, "constrain": [207, 211], "unwil": 207, "signific": [207, 211, 213, 265], "adopt": [207, 212, 215, 267], "primari": [207, 215], "write": [207, 213, 265, 267], "consequ": [207, 221, 265], "easi": [207, 260], "unambigu": [207, 213, 215, 266], "clear": [207, 213, 215, 265, 267], "significantli": 207, "detract": 207, "experi": [207, 262], "strict": [207, 213], "typic": [207, 213, 215, 217, 262, 265, 267, 268], "good": [207, 210, 213, 216, 221, 265], "anyth": [207, 265], "thin": 207, "conveni": 207, "plan": [208, 265], "previou": [209, 267], "gh": [209, 267], "613": 209, "687": 209, "eager": [209, 218, 265], "708": 209, "revis": [209, 212, 216], "702": 209, "relax": 209, "730": 209, "749": 209, "intrins": 209, "652": 209, "602": 209, "741": 209, "665": 209, "751": 209, "701": 209, "625": 209, "742": 209, "752": 209, "fft": [209, 222, 225, 227, 228, 229, 231, 232, 233, 234, 236], "720": 209, "746": 209, "backport": 209, "689": 209, "715": 209, "693": 209, "653": 209, "703": 209, "713": 209, "656": 209, "690": 209, "699": 209, "705": 209, "692": 209, "604": 209, "740": 209, "fftn": [209, 229], "hfft": 209, "ifft": [209, 223], "ifftn": [209, 225], "irfft": [209, 234, 235], "irfftn": [209, 236], "fftfreq": 209, "rfftfreq": 209, "linalg": [209, 260, 261], "trace": [209, 213, 261, 266], "fix": [209, 216, 265, 267], "clarif": 209, "674": 209, "736": 209, "typo": 209, "633": 209, "681": 209, "706": 209, "miss": [209, 265], "639": 209, "issu": [209, 210, 212, 213, 215, 216, 220, 265, 267], "qr": 209, "661": 209, "choleski": [209, 261], "677": 209, "svd": [209, 250], "619": 209, "666": [209, 266], "644": 209, "622": 209, "723": 209, "497": 209, "498": 209, "546": 209, "525": 209, "528": 209, "557": 209, "529": 209, "448": 209, "447": 209, "537": 209, "526": 209, "554": 209, "517": 209, "520": 209, "521": 209, "522": 209, "523": 209, "524": 209, "442": 209, "434": 209, "445": 209, "454": 209, "453": 209, "436": 209, "451": 209, "452": 209, "484": 209, "435": 209, "531": 209, "530": 209, "532": 209, "568": 209, "514": 209, "534": 209, "536": 209, "437": 209, "441": 209, "438": 209, "553": 209, "440": [209, 262], "556": 209, "457": 209, "456": 209, "552": 209, "461": 209, "538": 209, "459": 209, "458": 209, "558": 209, "540": 209, "512": 209, "470": 209, "417": 209, "502": 209, "443": 209, "559": 209, "det": [209, 242, 252], "542": 209, "eigh": [209, 261], "543": 209, "eigvalsh": [209, 261], "547": 209, "matrix_norm": 209, "565": 209, "matrix_pow": 209, "549": 209, "matrix_rank": 209, "563": 209, "560": 209, "pinv": 209, "564": 209, "548": 209, "slogdet": [209, 261], "567": 209, "solv": [209, 221, 250], "566": 209, "561": 209, "svdval": 209, "562": 209, "541": 209, "vector_norm": 209, "550": [209, 267], "418": 209, "491": 209, "513": 209, "variabl": [209, 220, 253, 268], "515": 209, "527": 209, "573": 209, "480": 209, "485": 209, "496": 209, "503": 209, "427": 209, "416": 209, "fast": 209, "fourier": [209, 223, 224, 225, 227, 228, 229, 231, 232, 233, 234, 235, 236, 260], "transform": [209, 223, 224, 225, 227, 228, 229, 231, 232, 233, 234, 235, 236, 260, 266], "189": 209, "rfft": [209, 232, 235], "rfftn": [209, 233], "irfttn": 209, "fftshift": [209, 230], "ifftshift": 209, "464": 209, "429": 209, "439": 209, "572": 209, "510": 209, "511": 209, "473": 209, "scope": [210, 219, 220, 263, 266], "mention": [210, 217, 267], "There": [210, 213, 215, 216, 221, 265, 267, 268], "deal": [210, 220, 221, 262, 264], "assumpt": [210, 215, 262, 263, 265], "rest": [210, 265, 267], "ndarrai": [210, 215, 265, 267], "visual": 210, "often": [210, 212, 217, 261, 265, 266, 267], "difficulti": [210, 214], "relev": [210, 216, 221, 265], "certainti": 210, "inde": 210, "project": [210, 212, 215, 267], "statsmodel": 210, "scikit": [210, 220, 265, 266, 267], "bio": [210, 267], "qutip": 210, "strategi": [210, 216], "learn": [210, 220, 265, 266, 267], "submodul": [210, 260], "doesn": [210, 216, 265], "cupi": [210, 213, 265, 266, 267], "elementwisekernel": 210, "scipi": [210, 220, 265, 266], "astropi": [210, 267], "seem": [210, 215, 267], "almost": [210, 267], "inevit": 210, "someth": [210, 213, 265], "numba": [210, 215, 265, 267], "sens": [210, 219, 265, 267], "tend": [210, 213, 267], "reimplement": 210, "gamma": 210, "drop": [210, 221, 251, 254], "arraylib": 210, "cpython": 210, "backend": [210, 220, 265], "target": [210, 216], "better": [210, 267], "pypi": [210, 266, 267], "quit": [210, 265, 267], "readi": 210, "mainstream": 210, "todai": [210, 213, 261], "onc": [210, 262], "feasibl": [210, 265], "roundtiestoeven": 211, "ti": [211, 261, 265], "certain": [211, 212, 261], "boundari": 211, "reader": 211, "identifi": [211, 216, 266], "lack": 211, "phrase": [211, 217], "recogn": [211, 216], "seek": [211, 261, 266], "optim": [211, 213, 261, 267], "latitud": 211, "although": [211, 230, 252], "freeli": 211, "sun": 211, "microsystem": 211, "With": [211, 266, 267], "imposs": [211, 213, 214, 268], "suit": [211, 263, 265, 266], "span": 211, "report": 211, "averag": 211, "aid": [211, 268], "best": [211, 215, 261, 265], "effort": [211, 266], "theoret": 211, "sound": 211, "robust": 211, "bare": 211, "summat": [211, 261], "unfortun": 211, "impos": [211, 214], "rigor": 211, "sever": [211, 213, 262, 265], "curtail": 211, "unduli": 211, "topologi": 212, "continuum": 212, "onto": [212, 213], "surfac": [212, 265], "stereograph": 212, "coalesc": 212, "3j": 212, "4j": 212, "convei": 212, "niceti": 212, "translat": [212, 267], "neq": 212, "arriv": [212, 265], "opposit": 212, "subtleti": 212, "craft": 212, "intuit": 212, "julia": [212, 267], "minim": [212, 216], "imperfect": 212, "balanc": 212, "appear": [212, 262, 265, 268], "embrac": 212, "transcendent": 212, "wholli": 212, "analysi": [212, 213, 214, 265, 266, 267], "curv": [212, 265], "discontinu": [212, 267], "taken": [212, 265], "pm": 212, "whole": 212, "simpl": [212, 213, 262], "aris": [212, 261, 264, 265], "trigonometr": 212, "domin": 212, "a_1": 212, "ldot": 212, "a_n": 212, "reflex": 212, "leq": 212, "transit": 212, "antisymmetr": 212, "partial": 212, "establish": [212, 266], "six": 212, "lexicograph": 212, "principl": [212, 266], "situat": [212, 213, 215, 216, 217, 265, 267], "unit": [212, 224, 235], "despit": [212, 215], "admonit": [213, 214], "becom": [213, 215, 265, 267], "trigger": [213, 219], "confid": 213, "pytorch": [213, 216, 265, 266, 267], "mxnet": [213, 265, 266, 267], "save": 213, "faster": 213, "tensorflow": [213, 265, 266, 267], "fundament": [213, 265], "inplac": 213, "update_index": 213, "idx": 213, "solut": [213, 250, 253, 267], "hard": [213, 215, 216, 219, 265], "go": [213, 262], "down": 213, "rout": 213, "val": [213, 219], "veri": [213, 252, 267], "wide": [213, 215, 251, 254, 265], "slightli": 213, "heavili": [213, 267], "you": [213, 268], "_must_": 213, "abstract": [213, 261, 266], "donat": 213, "lapack": [213, 261], "_may_": 213, "overwrit": 213, "whatev": 213, "fastest": 213, "aren": [213, 265], "longer": [213, 261], "problem": [213, 221, 250, 266, 267], "upon": [214, 265], "ahead": 214, "burden": [214, 265], "omiss": 214, "nativ": 215, "layout": 215, "packag": [215, 221, 262, 265, 266, 267], "live": [215, 265], "figur": 215, "contigu": 215, "promin": [215, 265], "releas": [215, 262, 266], "candid": [215, 265], "__cuda_array_interface__": 215, "moment": 215, "tri": [215, 267], "growth": 215, "amd": 215, "undesir": 215, "pattern": [215, 216, 220, 266, 267], "widest": 215, "lot": 215, "3118": 215, "hardli": 215, "mostli": [215, 219, 220, 265], "dealt": [215, 221], "__array__": [215, 267], "attach": 215, "hold": [215, 261], "rfc": [215, 265], "http": [215, 262, 268], "dmlc": 215, "github": [215, 262, 264, 268], "io": 215, "page": [215, 267], "standalon": [215, 268], "outlin": [215, 265], "cover": [215, 265, 268], "usag": [215, 260, 265], "node": 215, "spars": [215, 265], "why": [215, 265], "complet": [215, 220, 251, 262, 265, 267], "scale": 216, "exert": 216, "placement": 216, "global": 216, "switchabl": 216, "transfer": 216, "granular": 216, "downsid": 216, "verbos": 216, "much": [216, 265, 268], "kept": 216, "instanti": 216, "physic": 216, "revisit": 216, "themselv": 216, "expos": [216, 261], "bewar": 216, "framework": [216, 265], "elabor": 216, "polici": 216, "highest": 216, "prioriti": 216, "topic": [216, 220, 263, 265, 267], "pin": 216, "tricki": 216, "sinc": 216, "emit": 217, "misbehav": 217, "forese": 217, "extent": 217, "builtin": 217, "author": [217, 264, 265, 266, 267], "worth": 217, "compli": 217, "aspect": [219, 268], "impact": [219, 265], "prescrib": 219, "show": 219, "up": [219, 251, 260, 267], "five": 219, "dunder": [219, 262], "serial": 219, "compute_someth": 219, "statement": 219, "do_something_els": 219, "flow": 219, "cond": 219, "won": 220, "further": 220, "exercis": 220, "environ": [220, 261, 265, 268], "bla": [220, 261], "openmp": 220, "n_job": [220, 267], "worker": [220, 267], "chunk": 220, "approach": [220, 265, 266], "auto": [220, 267], "thing": 220, "improv": [220, 265, 267], "fit": [220, 264, 265, 267], "becam": [221, 265], "progress": [221, 268], "superclass": 221, "_basearrai": 221, "subclass": [221, 265], "insid": [221, 260], "typevar": 221, "variat": [221, 266], "don": [221, 267], "said": 221, "subtyp": 221, "hasattr": [222, 260, 261, 265], "ortho": [223, 225, 227, 228, 229, 231, 232, 233, 234, 236], "pad": [223, 225, 227, 228, 229, 231, 232, 233, 234, 236], "trim": [223, 225, 227, 228, 229, 231, 232, 233, 234, 236], "orthonorm": [223, 225, 227, 228, 229, 231, 232, 233, 234, 236, 251, 254], "frequenc": [224, 226, 235, 262, 266], "f": [224, 235], "window": [224, 235], "center": 226, "spectrum": 226, "swap": 226, "nyquist": [226, 235], "hermitian": [227, 231, 237, 241, 242], "symmetri": [227, 231], "decomposit": [237, 241, 250, 251, 254, 255, 261], "symmetr": [237, 241, 242], "mathbb": [237, 241, 242, 243, 251, 253, 254], "ll": 237, "h": [237, 241, 250, 254], "qquad": 237, "text": 237, "factor": [237, 254], "offset": [240, 257], "off": [240, 257], "eigenvalu": [241, 242, 261], "lambda": [241, 242], "orthogon": [241, 250, 251, 254, 261], "unitari": [241, 251, 254], "eigenvector": [241, 261], "softwar": [241, 254, 264, 265, 267], "fact": [241, 254], "phi": [241, 254], "eig": 241, "diag": [241, 254], "polynomi": [242, 265], "i_n": [242, 243], "eigval": 242, "xx": 243, "ord": [245, 259], "fro": 245, "nuc": 245, "frobeniu": 245, "nuclear": 245, "singular": [245, 247, 250, 254, 255], "induc": 245, "rtol": [247, 250], "toler": [247, 250], "largest_singular_valu": [247, 250], "epsilon": [247, 250], "moor": 250, "penros": 250, "pseudo": 250, "sigma": [250, 254], "tall": [251, 254], "geq": 251, "necessarili": [251, 268], "linearli": [251, 253, 265], "logabsdet": 252, "again": 252, "equat": 253, "coeffici": 253, "ordin": 253, "full_matric": 254, "u_k": 254, "v_k": 254, "vh": 254, "adjoint": 254, "l1": 259, "manhattan": 259, "l2": 259, "euclidean": 259, "coher": 260, "extension_nam": 260, "regular": [260, 262, 265], "__getattr__": 260, "endeavor": 261, "strai": 261, "far": 261, "restraint": 261, "decis": [261, 265], "accid": 261, "especi": 261, "arisen": 261, "been": [261, 265], "process": [261, 262, 266], "afford": 261, "opportun": 261, "subsequ": [261, 266], "codifi": [261, 266], "theme": 261, "abil": 261, "decim": 261, "overli": 261, "compel": 261, "compris": 261, "prudent": 261, "lastli": 261, "polymorph": 261, "dedic": 261, "agnostic": 261, "eschew": 261, "parameter": 261, "bias": 261, "underpin": 261, "cater": 261, "low": 261, "verbatim": 261, "poor": 261, "uplo": 261, "dai": 261, "monopoli": 261, "prolifer": 261, "conserv": [261, 267], "conservat": 261, "delin": 261, "overlap": 261, "confus": [261, 265], "parsimoni": 261, "einsum": 261, "einstein": 261, "vdot": 261, "multi_dot": 261, "chain": 261, "exhibit": 261, "consolid": 261, "propos": [262, 266, 267], "com": [262, 268], "blob": 262, "master": 262, "process_docu": 262, "md": 262, "summari": [262, 266], "matur": 262, "reach": [262, 267], "world": 262, "highli": 262, "strong": 262, "updat": 262, "date": 262, "shall": [262, 264], "alpha": 262, "beta": 262, "rc": 262, "post": 262, "dev": 262, "bugfix": 262, "__version__": 262, "resembl": 262, "year": [262, 265], "evolut": [263, 265], "verif": [263, 265], "benchmark": 263, "changelog": 263, "licens": 263, "websit": 264, "repositori": [264, 266], "mit": 264, "copyright": 264, "2024": 264, "consortium": [264, 265], "contributor": 264, "permiss": 264, "herebi": 264, "grant": 264, "charg": 264, "person": 264, "file": [264, 266, 267, 268], "merg": [264, 265], "publish": [264, 266], "sublicens": 264, "sell": 264, "whom": 264, "furnish": 264, "notic": 264, "substanti": 264, "portion": 264, "THE": 264, "AS": 264, "warranti": 264, "OF": 264, "BUT": 264, "TO": 264, "merchant": 264, "FOR": 264, "noninfring": 264, "IN": 264, "NO": 264, "holder": 264, "BE": 264, "liabl": 264, "claim": 264, "damag": 264, "liabil": 264, "action": 264, "tort": 264, "WITH": 264, "wealth": 265, "scienc": 265, "deep": 265, "push": 265, "art": 265, "unintend": 265, "activ": 265, "creativ": 265, "fragment": 265, "multidimension": 265, "xarrai": [265, 266], "pick": 265, "bless": 265, "inconsist": 265, "obviou": 265, "mind": 265, "sure": 265, "rare": [265, 266], "unimport": 265, "scientif": 265, "mid": 265, "1990": 265, "earli": 265, "2000": 265, "numarrai": 265, "2005": 265, "superced": 265, "roughli": 265, "decad": 265, "past": 265, "mainli": 265, "rise": 265, "newer": 265, "inspir": [265, 267], "idea": 265, "seriou": 265, "grew": 265, "quickli": 265, "infeas": 265, "speed": 265, "innov": [265, 266], "group": 265, "assembl": 265, "draft": 265, "presenc": 265, "meta": 265, "concret": 265, "shown": 265, "core": [265, 267], "borrow": 265, "steep": 265, "switch": [265, 267], "accompani": 265, "actual": 265, "task": [265, 267], "schedul": 265, "characterist": 265, "grain": 265, "obstacl": 265, "cython": [265, 267], "datetim": 265, "void": 265, "uniformli": 265, "o": 265, "routin": 265, "bind": [265, 267], "cffi": 265, "ctype": 265, "ufunc": 265, "gufunc": 265, "extra": 265, "huge": 265, "amount": [265, 266, 267], "strength": 265, "advantag": 265, "foreign": 265, "indirect": 265, "program": 265, "pydata": 265, "weld": 265, "bohrium": 265, "arkouda": 265, "legat": 265, "grow": 265, "panda": [265, 266], "matplotlib": [265, 266], "networkx": 265, "xtensor": 265, "xnd": [265, 267], "stdlib": 265, "javascript": 265, "rust": 265, "rrai": 265, "nd4j": 265, "jvm": 265, "numsharp": 265, "dispatch": [265, 267], "pythran": 265, "transon": 265, "onnx": 265, "apach": 265, "tvm": 265, "mlir": 265, "taco": 265, "unumpi": [265, 267], "einop": 265, "arrow": 265, "consult": 265, "simplest": 265, "package_nam": 265, "uniform": 265, "hinder": 265, "inter": 265, "distinguish": 265, "is_array_api_obj": 265, "peopl": 265, "abc": 265, "inherit": 265, "isinst": 265, "prove": 265, "discov": 265, "assist": 265, "importlib": 265, "metadata": 265, "entry_point": 265, "dict": 265, "deprec": 265, "py3": 265, "supplant": 265, "load": 265, "path": 265, "haven": 265, "measur": 265, "isol": 265, "indispens": 265, "institut": 265, "electr": 265, "electron": 265, "engin": [265, 267], "york": 265, "scott": 265, "bradner": 265, "1997": 265, "word": 265, "2119": 265, "doi": 265, "17487": 265, "rfc2119": 265, "technic": 266, "vacuum": 266, "sometim": 266, "compet": 266, "friction": 266, "focu": 266, "accommod": [266, 267], "foo": 266, "bar": 266, "aspir": 266, "experiment": 266, "channel": 266, "resourc": [266, 267], "novel": 266, "thwart": 266, "reinvent": 266, "proverbi": 266, "wheel": 266, "foundat": 266, "articul": 266, "quantifi": 266, "analyz": 266, "ground": [266, 268], "empir": 266, "acquir": 266, "scrape": 266, "unifi": [266, 267], "extract": 266, "intersect": 266, "complement": 266, "suitabl": 266, "preval": 266, "eas": 266, "leverag": 266, "summar": 266, "tool": [266, 267], "explor": 266, "instrument": 266, "record": 266, "collect": 266, "json": 266, "human": 266, "docstr": 266, "_0": 266, "_arg": 266, "347": 266, "359": 266, "894": 266, "1173": 266, "skimag": 266, "174": 266, "sklearn": 266, "373": 266, "publicli": 266, "stori": 266, "broad": 266, "wider": 267, "wrap": 267, "familiar": 267, "survei": 267, "advanc": 267, "research": 267, "nsf": 267, "pain": 267, "brought": 267, "wish": 267, "multiprocess": 267, "shorten": 267, "fortran": 267, "easili": [267, 268], "pure": 267, "manual": 267, "Then": 267, "hoc": 267, "critic": 267, "corner": 267, "tractabl": 267, "spectral": 267, "periodogram": 267, "spectrogram": 267, "csd": 267, "welch": 267, "stft": 267, "istft": 267, "lombscargl": 267, "40": 267, "sai": [267, 268], "ineffici": 267, "x_np": 267, "asnumpi": 267, "freq": 267, "pxx": 267, "back": 267, "torch": 267, "littl": 267, "flexibl": 267, "py": [267, 268], "rearrang": 267, "_backend": 267, "glue": 267, "loc": 267, "some_func": 267, "get_backend": 267, "disappear": 267, "serv": 267, "50": 267, "tensorli": 267, "kera": 267, "eagerpi": 267, "notabl": 267, "suboptim": 267, "readili": 267, "cpyext": 267, "unsuccess": 267, "xla": 267, "vta": 267, "jump": 267, "hoop": 267, "attain": 267, "got": 267, "cfunc": 267, "np": 267, "assert_array_almost_equ": 267, "pyfunc": 267, "pyarray_cancastarrayto": 267, "assertequ": 267, "spec": 268, "clone": 268, "repo": 268, "pip": 268, "pytest": 268, "hypothesi": 268, "conda": 268, "array_api_tests_modul": 268, "edit": 268, "array_api_test": 268, "_array_modul": 268, "array_modul": 268, "command": 268, "asid": 268, "vendor": 268, "readm": 268}, "objects": {"array_api": [[8, 0, 1, "", "__array_api_version__"], [9, 1, 1, "", "abs"], [10, 1, 1, "", "acos"], [11, 1, 1, "", "acosh"], [12, 1, 1, "", "add"], [13, 1, 1, "", "all"], [14, 1, 1, "", "any"], [15, 1, 1, "", "arange"], [16, 1, 1, "", "argmax"], [17, 1, 1, "", "argmin"], [18, 1, 1, "", "argsort"], [60, 1, 1, "", "asarray"], [61, 1, 1, "", "asin"], [62, 1, 1, "", "asinh"], [63, 1, 1, "", "astype"], [64, 1, 1, "", "atan"], [65, 1, 1, "", "atan2"], [66, 1, 1, "", "atanh"], [67, 1, 1, "", "bitwise_and"], [68, 1, 1, "", "bitwise_invert"], [69, 1, 1, "", "bitwise_left_shift"], [70, 1, 1, "", "bitwise_or"], [71, 1, 1, "", "bitwise_right_shift"], [72, 1, 1, "", "bitwise_xor"], [73, 1, 1, "", "broadcast_arrays"], [74, 1, 1, "", "broadcast_to"], [75, 1, 1, "", "can_cast"], [76, 1, 1, "", "ceil"], [77, 1, 1, "", "clip"], [78, 1, 1, "", "concat"], [79, 1, 1, "", "conj"], [85, 1, 1, "", "copysign"], [86, 1, 1, "", "cos"], [87, 1, 1, "", "cosh"], [88, 1, 1, "", "count_nonzero"], [89, 1, 1, "", "cumulative_sum"], [91, 1, 1, "", "diff"], [92, 1, 1, "", "divide"], [93, 1, 1, "", "empty"], [94, 1, 1, "", "empty_like"], [95, 1, 1, "", "equal"], [96, 1, 1, "", "exp"], [97, 1, 1, "", "expand_dims"], [98, 1, 1, "", "expm1"], [99, 1, 1, "", "eye"], [100, 1, 1, "", "finfo"], [101, 1, 1, "", "flip"], [102, 1, 1, "", "floor"], [103, 1, 1, "", "floor_divide"], [104, 1, 1, "", "from_dlpack"], [105, 1, 1, "", "full"], [106, 1, 1, "", "full_like"], [107, 1, 1, "", "greater"], [108, 1, 1, "", "greater_equal"], [109, 1, 1, "", "hypot"], [110, 1, 1, "", "iinfo"], [111, 1, 1, "", "imag"], [118, 1, 1, "", "isdtype"], [119, 1, 1, "", "isfinite"], [120, 1, 1, "", "isinf"], [121, 1, 1, "", "isnan"], [122, 1, 1, "", "less"], [123, 1, 1, "", "less_equal"], [124, 1, 1, "", "linspace"], [125, 1, 1, "", "log"], [126, 1, 1, "", "log10"], [127, 1, 1, "", "log1p"], [128, 1, 1, "", "log2"], [129, 1, 1, "", "logaddexp"], [130, 1, 1, "", "logical_and"], [131, 1, 1, "", "logical_not"], [132, 1, 1, "", "logical_or"], [133, 1, 1, "", "logical_xor"], [134, 1, 1, "", "matmul"], [135, 1, 1, "", "matrix_transpose"], [136, 1, 1, "", "max"], [137, 1, 1, "", "maximum"], [138, 1, 1, "", "mean"], [139, 1, 1, "", "meshgrid"], [140, 1, 1, "", "min"], [141, 1, 1, "", "minimum"], [142, 1, 1, "", "moveaxis"], [143, 1, 1, "", "multiply"], [144, 1, 1, "", "negative"], [145, 1, 1, "", "nextafter"], [146, 1, 1, "", "nonzero"], [147, 1, 1, "", "not_equal"], [148, 1, 1, "", "ones"], [149, 1, 1, "", "ones_like"], [150, 1, 1, "", "permute_dims"], [151, 1, 1, "", "positive"], [152, 1, 1, "", "pow"], [153, 1, 1, "", "prod"], [154, 1, 1, "", "real"], [155, 1, 1, "", "reciprocal"], [156, 1, 1, "", "remainder"], [157, 1, 1, "", "repeat"], [158, 1, 1, "", "reshape"], [159, 1, 1, "", "result_type"], [160, 1, 1, "", "roll"], [161, 1, 1, "", "round"], [162, 1, 1, "", "searchsorted"], [163, 1, 1, "", "sign"], [164, 1, 1, "", "signbit"], [165, 1, 1, "", "sin"], [166, 1, 1, "", "sinh"], [167, 1, 1, "", "sort"], [168, 1, 1, "", "sqrt"], [169, 1, 1, "", "square"], [170, 1, 1, "", "squeeze"], [171, 1, 1, "", "stack"], [172, 1, 1, "", "std"], [173, 1, 1, "", "subtract"], [174, 1, 1, "", "sum"], [175, 1, 1, "", "take"], [176, 1, 1, "", "take_along_axis"], [177, 1, 1, "", "tan"], [178, 1, 1, "", "tanh"], [179, 1, 1, "", "tensordot"], [180, 1, 1, "", "tile"], [181, 1, 1, "", "tril"], [182, 1, 1, "", "triu"], [183, 1, 1, "", "trunc"], [184, 1, 1, "", "unique_all"], [185, 1, 1, "", "unique_counts"], [186, 1, 1, "", "unique_inverse"], [187, 1, 1, "", "unique_values"], [188, 1, 1, "", "unstack"], [189, 1, 1, "", "var"], [190, 1, 1, "", "vecdot"], [191, 1, 1, "", "where"], [192, 1, 1, "", "zeros"], [193, 1, 1, "", "zeros_like"]], "array_api.array": [[19, 2, 1, "", "T"], [20, 3, 1, "", "__abs__"], [21, 3, 1, "", "__add__"], [22, 3, 1, "", "__and__"], [23, 3, 1, "", "__array_namespace__"], [24, 3, 1, "", "__bool__"], [25, 3, 1, "", "__complex__"], [26, 3, 1, "", "__dlpack__"], [27, 3, 1, "", "__dlpack_device__"], [28, 3, 1, "", "__eq__"], [29, 3, 1, "", "__float__"], [30, 3, 1, "", "__floordiv__"], [31, 3, 1, "", "__ge__"], [32, 3, 1, "", "__getitem__"], [33, 3, 1, "", "__gt__"], [34, 3, 1, "", "__index__"], [35, 3, 1, "", "__int__"], [36, 3, 1, "", "__invert__"], [37, 3, 1, "", "__le__"], [38, 3, 1, "", "__lshift__"], [39, 3, 1, "", "__lt__"], [40, 3, 1, "", "__matmul__"], [41, 3, 1, "", "__mod__"], [42, 3, 1, "", "__mul__"], [43, 3, 1, "", "__ne__"], [44, 3, 1, "", "__neg__"], [45, 3, 1, "", "__or__"], [46, 3, 1, "", "__pos__"], [47, 3, 1, "", "__pow__"], [48, 3, 1, "", "__rshift__"], [49, 3, 1, "", "__setitem__"], [50, 3, 1, "", "__sub__"], [51, 3, 1, "", "__truediv__"], [52, 3, 1, "", "__xor__"], [53, 2, 1, "", "device"], [54, 2, 1, "", "dtype"], [55, 2, 1, "", "mT"], [56, 2, 1, "", "ndim"], [57, 2, 1, "", "shape"], [58, 2, 1, "", "size"], [59, 3, 1, "", "to_device"]], "array_api.constants": [[80, 0, 1, "", "e"], [81, 0, 1, "", "inf"], [82, 0, 1, "", "nan"], [83, 0, 1, "", "newaxis"], [84, 0, 1, "", "pi"]], "array_api.data_types": [[90, 1, 1, "", "__eq__"]], "array_api.fft": [[223, 1, 1, "", "fft"], [224, 1, 1, "", "fftfreq"], [225, 1, 1, "", "fftn"], [226, 1, 1, "", "fftshift"], [227, 1, 1, "", "hfft"], [228, 1, 1, "", "ifft"], [229, 1, 1, "", "ifftn"], [230, 1, 1, "", "ifftshift"], [231, 1, 1, "", "ihfft"], [232, 1, 1, "", "irfft"], [233, 1, 1, "", "irfftn"], [234, 1, 1, "", "rfft"], [235, 1, 1, "", "rfftfreq"], [236, 1, 1, "", "rfftn"]], "array_api.info": [[112, 1, 1, "", "__array_namespace_info__"], [113, 1, 1, "", "capabilities"], [114, 1, 1, "", "default_device"], [115, 1, 1, "", "default_dtypes"], [116, 1, 1, "", "devices"], [117, 1, 1, "", "dtypes"]], "array_api.linalg": [[237, 1, 1, "", "cholesky"], [238, 1, 1, "", "cross"], [239, 1, 1, "", "det"], [240, 1, 1, "", "diagonal"], [241, 1, 1, "", "eigh"], [242, 1, 1, "", "eigvalsh"], [243, 1, 1, "", "inv"], [244, 1, 1, "", "matmul"], [245, 1, 1, "", "matrix_norm"], [246, 1, 1, "", "matrix_power"], [247, 1, 1, "", "matrix_rank"], [248, 1, 1, "", "matrix_transpose"], [249, 1, 1, "", "outer"], [250, 1, 1, "", "pinv"], [251, 1, 1, "", "qr"], [252, 1, 1, "", "slogdet"], [253, 1, 1, "", "solve"], [254, 1, 1, "", "svd"], [255, 1, 1, "", "svdvals"], [256, 1, 1, "", "tensordot"], [257, 1, 1, "", "trace"], [258, 1, 1, "", "vecdot"], [259, 1, 1, "", "vector_norm"]]}, "objtypes": {"0": "py:data", "1": "py:function", "2": "py:property", "3": "py:method"}, "objnames": {"0": ["py", "data", "Python data"], "1": ["py", "function", "Python function"], "2": ["py", "property", "Python property"], "3": ["py", "method", "Python method"]}, "titleterms": {"arrai": [0, 195, 204, 263, 265, 267], "object": [0, 2, 3, 4, 5, 6, 196, 197, 198, 199, 200, 201, 202, 203, 205, 206, 222, 261, 265], "oper": [0, 211], "arithmet": [0, 211], "bitwis": 0, "comparison": 0, "In": [0, 1, 265], "place": [0, 1], "reflect": 0, "attribut": 0, "method": [0, 7], "broadcast": 1, "overview": 1, "algorithm": 1, "exampl": [1, 210], "semant": [1, 216], "constant": 2, "api": [2, 3, 4, 6, 194, 196, 197, 198, 199, 200, 201, 202, 203, 205, 206, 209, 210, 222, 261, 262, 263, 265, 267], "creation": 3, "function": [3, 4, 6, 7, 196, 198, 199, 200, 201, 202, 203, 205, 211, 222], "data": [4, 5, 146, 157, 184, 185, 186, 187, 195, 209, 214, 215, 266], "type": [4, 5, 204, 209, 221, 267], "us": [5, 207, 210, 215, 266, 267], "default": 5, "categori": 5, "element": 6, "wise": 6, "signatur": 7, "__array_api_version__": 8, "ab": 9, "aco": 10, "acosh": 11, "add": [12, 267], "all": 13, "ani": 14, "arang": 15, "argmax": 16, "argmin": 17, "argsort": 18, "t": 19, "__abs__": 20, "__add__": 21, "__and__": 22, "__array_namespace__": 23, "__bool__": 24, "__complex__": 25, "__dlpack__": 26, "tip": [26, 60], "__dlpack_device__": 27, "__eq__": [28, 90], "__float__": 29, "__floordiv__": 30, "__ge__": 31, "__getitem__": 32, "__gt__": 33, "__index__": 34, "__int__": 35, "__invert__": 36, "__le__": 37, "__lshift__": 38, "__lt__": 39, "__matmul__": 40, "__mod__": 41, "__mul__": 42, "__ne__": 43, "__neg__": 44, "__or__": 45, "__pos__": 46, "__pow__": 47, "__rshift__": 48, "__setitem__": 49, "__sub__": 50, "__truediv__": 51, "__xor__": 52, "devic": [53, 116, 210, 216], "dtype": [54, 117], "mt": 55, "ndim": 56, "shape": [57, 146, 157, 184, 185, 186, 187, 195, 214], "size": 58, "to_devic": 59, "asarrai": 60, "note": [60, 104, 124, 204], "asin": 61, "asinh": 62, "astyp": 63, "atan": 64, "atan2": 65, "atanh": 66, "bitwise_and": 67, "bitwise_invert": 68, "bitwise_left_shift": 69, "bitwise_or": 70, "bitwise_right_shift": 71, "bitwise_xor": 72, "broadcast_arrai": 73, "broadcast_to": 74, "can_cast": 75, "ceil": 76, "clip": 77, "concat": 78, "conj": 79, "e": 80, "inf": 81, "nan": 82, "newaxi": 83, "pi": 84, "copysign": 85, "co": 86, "cosh": 87, "count_nonzero": 88, "cumulative_sum": 89, "diff": 91, "divid": 92, "empti": 93, "empty_lik": 94, "equal": 95, "exp": 96, "expand_dim": 97, "expm1": 98, "ey": 99, "finfo": 100, "flip": 101, "floor": 102, "floor_divid": 103, "from_dlpack": 104, "full": 105, "full_lik": 106, "greater": 107, "greater_equ": 108, "hypot": 109, "iinfo": 110, "imag": 111, "__array_namespace_info__": 112, "capabl": 113, "default_devic": 114, "default_dtyp": 115, "isdtyp": 118, "isfinit": 119, "isinf": 120, "isnan": 121, "less": 122, "less_equ": 123, "linspac": 124, "log": 125, "log10": 126, "log1p": 127, "log2": 128, "logaddexp": 129, "logical_and": 130, "logical_not": 131, "logical_or": 132, "logical_xor": 133, "matmul": [134, 244], "matrix_transpos": [135, 248], "max": 136, "maximum": 137, "mean": 138, "meshgrid": 139, "min": 140, "minimum": 141, "moveaxi": 142, "multipli": 143, "neg": 144, "nextaft": 145, "nonzero": 146, "depend": [146, 157, 184, 185, 186, 187, 195, 207, 214], "output": [146, 157, 184, 185, 186, 187, 195, 214], "not_equ": 147, "ones": 148, "ones_lik": 149, "permute_dim": 150, "posit": 151, "pow": 152, "prod": 153, "real": 154, "reciproc": 155, "remaind": 156, "repeat": 157, "reshap": 158, "result_typ": 159, "roll": 160, "round": 161, "searchsort": 162, "sign": [163, 204], "signbit": 164, "sin": 165, "sinh": 166, "sort": [167, 202], "sqrt": 168, "squar": 169, "squeez": 170, "stack": 171, "std": 172, "subtract": 173, "sum": 174, "take": 175, "take_along_axi": 176, "tan": 177, "tanh": 178, "tensordot": [179, 256], "tile": 180, "tril": 181, "triu": 182, "trunc": 183, "unique_al": 184, "unique_count": 185, "unique_invers": 186, "unique_valu": 187, "unstack": 188, "var": 189, "vecdot": [190, 258], "where": 191, "zero": 192, "zeros_lik": 193, "specif": 194, "index": [195, 196], "singl": 195, "axi": 195, "slice": 195, "syntax": [195, 216], "multi": 195, "boolean": 195, "return": 195, "valu": [195, 212], "inspect": [197, 209], "linear": [198, 211, 261], "algebra": [198, 211, 261], "manipul": 199, "search": 200, "set": 201, "statist": [203, 211], "promot": [204, 212], "rule": 204, "integ": 204, "tabl": 204, "unsign": 204, "mix": 204, "float": 204, "point": 204, "python": [204, 210, 263, 267], "scalar": 204, "util": 205, "version": [206, 209, 262], "assumpt": 207, "hardwar": [207, 267], "softwar": 207, "environ": 207, "backward": [207, 262], "compat": [207, 262], "product": 207, "code": [207, 210], "interact": 207, "benchmark": 208, "suit": [208, 268], "changelog": 209, "per": 209, "standard": [209, 210, 262, 263, 265], "v2023": 209, "12": 209, "updat": 209, "norm": [209, 265], "extens": [209, 210, 222, 260, 261, 262], "addit": 209, "break": 209, "chang": 209, "errata": 209, "v2022": 209, "complex": [209, 212], "number": [209, 210, 212], "support": [209, 210, 215, 216, 267], "c": 210, "situat": 210, "cython": 210, "usag": [210, 216, 222, 261, 263, 266], "1": [210, 267], "packag": 210, "i": 210, "mostli": 210, "pure": 210, "limit": 210, "2": [210, 267], "contain": 210, "lot": 210, "3": [210, 267], "numpi": 210, "directli": 210, "other": [210, 263], "longer": 210, "term": [210, 265], "approach": 210, "further": 210, "hpy": 210, "accuraci": 211, "mathemat": 211, "The": 212, "plane": 212, "branch": 212, "cut": 212, "order": 212, "base": 212, "copi": 213, "view": 213, "behaviour": 213, "mutabl": 213, "mutat": 213, "interchang": 215, "mechan": 215, "dlpack": 215, "an": [215, 265], "memori": 215, "tensor": 215, "structur": 215, "non": [215, 265], "case": [215, 267], "intend": 216, "assign": 216, "out": [216, 265], "scope": [216, 262, 265], "except": 217, "design": [218, 261, 266], "topic": 218, "constraint": 218, "lazi": 219, "v": 219, "eager": 219, "execut": 219, "parallel": 220, "static": 221, "fourier": 222, "transform": 222, "name": [222, 261], "fft": 223, "fftfreq": 224, "fftn": 225, "fftshift": 226, "hfft": 227, "ifft": 228, "ifftn": 229, "ifftshift": 230, "ihfft": 231, "irfft": 232, "irfftn": 233, "rfft": 234, "rfftfreq": 235, "rfftn": 236, "choleski": 237, "cross": 238, "det": 239, "diagon": 240, "eigh": 241, "eigvalsh": 242, "inv": 243, "matrix_norm": 245, "matrix_pow": 246, "matrix_rank": 247, "outer": 249, "pinv": 250, "qr": 251, "slogdet": 252, "solv": 253, "svd": 254, "svdval": 255, "trace": 257, "vector_norm": 259, "modul": 260, "principl": 261, "futur": 262, "evolut": 262, "content": 263, "context": 263, "methodologi": 263, "licens": 264, "purpos": 265, "introduct": [265, 266], "thi": 265, "histori": 265, "includ": 265, "goal": 265, "implic": 265, "stakehold": 265, "how": 265, "read": 265, "document": 265, "adopt": 265, "check": 265, "complianc": 265, "discover": 265, "conform": [265, 268], "implement": 265, "option": 265, "featur": 265, "definit": 265, "refer": 265, "decis": 266, "make": [266, 267], "concret": 267, "acceler": 267, "distribut": 267, "scipi": 267, "simplifi": 267, "einop": 267, "remov": 267, "backend": 267, "system": 267, "ad": 267, "xtensor": 267, "4": 267, "jit": 267, "compil": 267, "comput": 267, "easier": 267, "more": 267, "robust": 267, "verif": 268, "test": 268, "measur": 268, "run": 268}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.todo": 2, "sphinx": 60}, "alltitles": {"Array object": [[0, "array-object"]], "Operators": [[0, "operators"]], "Arithmetic Operators": [[0, "arithmetic-operators"], [0, "id26"], [0, "id29"]], "Array Operators": [[0, "array-operators"], [0, "id27"], [0, "id30"]], "Bitwise Operators": [[0, "bitwise-operators"], [0, "id28"], [0, "id31"]], "Comparison Operators": [[0, "comparison-operators"]], "In-place Operators": [[0, "in-place-operators"]], "Reflected Operators": [[0, "reflected-operators"]], "Attributes": [[0, "attributes"]], "Methods": [[0, "methods"]], "Broadcasting": [[1, "broadcasting"]], "Overview": [[1, "overview"]], "Algorithm": [[1, "algorithm"]], "Examples": [[1, "examples"]], "In-place Semantics": [[1, "in-place-semantics"]], "Constants": [[2, "constants"]], "Objects in API": [[2, "objects-in-api"], [3, "objects-in-api"], [4, "objects-in-api"], [6, "objects-in-api"], [196, "objects-in-api"], [197, "objects-in-api"], [198, "objects-in-api"], [199, "objects-in-api"], [200, "objects-in-api"], [201, "objects-in-api"], [202, "objects-in-api"], [203, "objects-in-api"], [205, "objects-in-api"], [206, "objects-in-api"], [222, "objects-in-api"], [261, "objects-in-api"]], "Creation Functions": [[3, "creation-functions"]], "Data Type Functions": [[4, "data-type-functions"]], "Data Types": [[5, "data-types"], [209, "data-types"]], "Use of data type objects": [[5, "use-of-data-type-objects"]], "Default Data Types": [[5, "default-data-types"]], "Data Type Categories": [[5, "data-type-categories"]], "Element-wise Functions": [[6, "element-wise-functions"]], "Function and method signatures": [[7, "function-and-method-signatures"]], "__array_api_version__": [[8, "array-api-version"]], "abs": [[9, "abs"]], "acos": [[10, "acos"]], "acosh": [[11, "acosh"]], "add": [[12, "add"]], "all": [[13, "all"]], "any": [[14, "any"]], "arange": [[15, "arange"]], "argmax": [[16, "argmax"]], "argmin": [[17, "argmin"]], "argsort": [[18, "argsort"]], "T": [[19, "t"]], "__abs__": [[20, "abs"]], "__add__": [[21, "add"]], "__and__": [[22, "and"]], "__array_namespace__": [[23, "array-namespace"]], "__bool__": [[24, "bool"]], "__complex__": [[25, "complex"]], "__dlpack__": [[26, "dlpack"]], "Tip": [[26, null], [60, null]], "__dlpack_device__": [[27, "dlpack-device"]], "__eq__": [[28, "eq"], [90, "eq"]], "__float__": [[29, "float"]], "__floordiv__": [[30, "floordiv"]], "__ge__": [[31, "ge"]], "__getitem__": [[32, "getitem"]], "__gt__": [[33, "gt"]], "__index__": [[34, "index"]], "__int__": [[35, "int"]], "__invert__": [[36, "invert"]], "__le__": [[37, "le"]], "__lshift__": [[38, "lshift"]], "__lt__": [[39, "lt"]], "__matmul__": [[40, "matmul"]], "__mod__": [[41, "mod"]], "__mul__": [[42, "mul"]], "__ne__": [[43, "ne"]], "__neg__": [[44, "neg"]], "__or__": [[45, "or"]], "__pos__": [[46, "pos"]], "__pow__": [[47, "pow"]], "__rshift__": [[48, "rshift"]], "__setitem__": [[49, "setitem"]], "__sub__": [[50, "sub"]], "__truediv__": [[51, "truediv"]], "__xor__": [[52, "xor"]], "device": [[53, "device"]], "dtype": [[54, "dtype"]], "mT": [[55, "mt"]], "ndim": [[56, "ndim"]], "shape": [[57, "shape"]], "size": [[58, "size"]], "to_device": [[59, "to-device"]], "asarray": [[60, "asarray"]], "Note": [[60, null], [104, null], [124, null]], "asin": [[61, "asin"]], "asinh": [[62, "asinh"]], "astype": [[63, "astype"]], "atan": [[64, "atan"]], "atan2": [[65, "atan2"]], "atanh": [[66, "atanh"]], "bitwise_and": [[67, "bitwise-and"]], "bitwise_invert": [[68, "bitwise-invert"]], "bitwise_left_shift": [[69, "bitwise-left-shift"]], "bitwise_or": [[70, "bitwise-or"]], "bitwise_right_shift": [[71, "bitwise-right-shift"]], "bitwise_xor": [[72, "bitwise-xor"]], "broadcast_arrays": [[73, "broadcast-arrays"]], "broadcast_to": [[74, "broadcast-to"]], "can_cast": [[75, "can-cast"]], "ceil": [[76, "ceil"]], "clip": [[77, "clip"]], "concat": [[78, "concat"]], "conj": [[79, "conj"]], "e": [[80, "e"]], "inf": [[81, "inf"]], "nan": [[82, "nan"]], "newaxis": [[83, "newaxis"]], "pi": [[84, "pi"]], "copysign": [[85, "copysign"]], "cos": [[86, "cos"]], "cosh": [[87, "cosh"]], "count_nonzero": [[88, "count-nonzero"]], "cumulative_sum": [[89, "cumulative-sum"]], "diff": [[91, "diff"]], "divide": [[92, "divide"]], "empty": [[93, "empty"]], "empty_like": [[94, "empty-like"]], "equal": [[95, "equal"]], "exp": [[96, "exp"]], "expand_dims": [[97, "expand-dims"]], "expm1": [[98, "expm1"]], "eye": [[99, "eye"]], "finfo": [[100, "finfo"]], "flip": [[101, "flip"]], "floor": [[102, "floor"]], "floor_divide": [[103, "floor-divide"]], "from_dlpack": [[104, "from-dlpack"]], "full": [[105, "full"]], "full_like": [[106, "full-like"]], "greater": [[107, "greater"]], "greater_equal": [[108, "greater-equal"]], "hypot": [[109, "hypot"]], "iinfo": [[110, "iinfo"]], "imag": [[111, "imag"]], "__array_namespace_info__": [[112, "array-namespace-info"]], "capabilities": [[113, "capabilities"]], "default_device": [[114, "default-device"]], "default_dtypes": [[115, "default-dtypes"]], "devices": [[116, "devices"]], "dtypes": [[117, "dtypes"]], "isdtype": [[118, "isdtype"]], "isfinite": [[119, "isfinite"]], "isinf": [[120, "isinf"]], "isnan": [[121, "isnan"]], "less": [[122, "less"]], "less_equal": [[123, "less-equal"]], "linspace": [[124, "linspace"]], "log": [[125, "log"]], "log10": [[126, "log10"]], "log1p": [[127, "log1p"]], "log2": [[128, "log2"]], "logaddexp": [[129, "logaddexp"]], "logical_and": [[130, "logical-and"]], "logical_not": [[131, "logical-not"]], "logical_or": [[132, "logical-or"]], "logical_xor": [[133, "logical-xor"]], "matmul": [[134, "matmul"], [244, "matmul"]], "matrix_transpose": [[135, "matrix-transpose"], [248, "matrix-transpose"]], "max": [[136, "max"]], "maximum": [[137, "maximum"]], "mean": [[138, "mean"]], "meshgrid": [[139, "meshgrid"]], "min": [[140, "min"]], "minimum": [[141, "minimum"]], "moveaxis": [[142, "moveaxis"]], "multiply": [[143, "multiply"]], "negative": [[144, "negative"]], "nextafter": [[145, "nextafter"]], "nonzero": [[146, "nonzero"]], "Data-dependent output shape": [[146, null], [157, null], [184, null], [185, null], [186, null], [187, null], [195, null], [214, null]], "not_equal": [[147, "not-equal"]], "ones": [[148, "ones"]], "ones_like": [[149, "ones-like"]], "permute_dims": [[150, "permute-dims"]], "positive": [[151, "positive"]], "pow": [[152, "pow"]], "prod": [[153, "prod"]], "real": [[154, "real"]], "reciprocal": [[155, "reciprocal"]], "remainder": [[156, "remainder"]], "repeat": [[157, "repeat"]], "reshape": [[158, "reshape"]], "result_type": [[159, "result-type"]], "roll": [[160, "roll"]], "round": [[161, "round"]], "searchsorted": [[162, "searchsorted"]], "sign": [[163, "sign"]], "signbit": [[164, "signbit"]], "sin": [[165, "sin"]], "sinh": [[166, "sinh"]], "sort": [[167, "sort"]], "sqrt": [[168, "sqrt"]], "square": [[169, "square"]], "squeeze": [[170, "squeeze"]], "stack": [[171, "stack"]], "std": [[172, "std"]], "subtract": [[173, "subtract"]], "sum": [[174, "sum"]], "take": [[175, "take"]], "take_along_axis": [[176, "take-along-axis"]], "tan": [[177, "tan"]], "tanh": [[178, "tanh"]], "tensordot": [[179, "tensordot"], [256, "tensordot"]], "tile": [[180, "tile"]], "tril": [[181, "tril"]], "triu": [[182, "triu"]], "trunc": [[183, "trunc"]], "unique_all": [[184, "unique-all"]], "unique_counts": [[185, "unique-counts"]], "unique_inverse": [[186, "unique-inverse"]], "unique_values": [[187, "unique-values"]], "unstack": [[188, "unstack"]], "var": [[189, "var"]], "vecdot": [[190, "vecdot"], [258, "vecdot"]], "where": [[191, "where"]], "zeros": [[192, "zeros"]], "zeros_like": [[193, "zeros-like"]], "API specification": [[194, "api-specification"], [194, null]], "Indexing": [[195, "indexing"]], "Single-axis Indexing": [[195, "single-axis-indexing"]], "Slice Syntax": [[195, "slice-syntax"]], "Multi-axis Indexing": [[195, "multi-axis-indexing"]], "Boolean Array Indexing": [[195, "boolean-array-indexing"]], "Return Values": [[195, "return-values"]], "Indexing Functions": [[196, "indexing-functions"]], "Inspection": [[197, "inspection"]], "Inspection APIs": [[197, "inspection-apis"], [209, "inspection-apis"]], "Linear Algebra Functions": [[198, "linear-algebra-functions"]], "Manipulation Functions": [[199, "manipulation-functions"]], "Searching Functions": [[200, "searching-functions"]], "Set Functions": [[201, "set-functions"]], "Sorting Functions": [[202, "sorting-functions"]], "Statistical Functions": [[203, "statistical-functions"], [211, "statistical-functions"]], "Type Promotion Rules": [[204, "type-promotion-rules"]], "Rules": [[204, "rules"]], "Signed integer type promotion table": [[204, "signed-integer-type-promotion-table"]], "Unsigned integer type promotion table": [[204, "unsigned-integer-type-promotion-table"]], "Mixed unsigned and signed integer type promotion table": [[204, "mixed-unsigned-and-signed-integer-type-promotion-table"]], "Floating-point type promotion table": [[204, "floating-point-type-promotion-table"]], "Notes": [[204, "notes"]], "Mixing arrays with Python scalars": [[204, "mixing-arrays-with-python-scalars"]], "Utility Functions": [[205, "utility-functions"]], "Version": [[206, "version"]], "Assumptions": [[207, "assumptions"]], "Hardware and software environments": [[207, "hardware-and-software-environments"]], "Dependencies": [[207, "dependencies"]], "Backwards compatibility": [[207, "backwards-compatibility"], [262, "backwards-compatibility"]], "Production code & interactive use": [[207, "production-code-interactive-use"]], "Benchmark suite": [[208, "benchmark-suite"]], "Changelog per API standard version": [[209, "changelog-per-api-standard-version"]], "Changelog": [[209, "changelog"]], "v2023.12": [[209, "v2023-12"]], "Updates": [[209, "updates"], [209, "id3"]], "Normative": [[209, "normative"]], "APIs": [[209, "apis"], [209, "id1"], [209, "id4"], [209, "id8"]], "Extensions": [[209, "extensions"], [209, "id2"], [209, "id5"], [209, "id9"], [260, "extensions"]], "Additions": [[209, "additions"], [209, "id7"]], "Breaking Changes": [[209, "breaking-changes"]], "Errata": [[209, "errata"], [209, "id10"]], "v2022.12": [[209, "v2022-12"]], "Complex Number Support": [[209, "complex-number-support"], [209, "id6"]], "C API": [[210, "c-api"]], "Example situations for C/Cython usage": [[210, "example-situations-for-c-cython-usage"]], "Situation 1: a Python package that is mostly pure Python, with a limited number of Cython extensions": [[210, "situation-1-a-python-package-that-is-mostly-pure-python-with-a-limited-number-of-cython-extensions"]], "Situation 2: a Python package that contains a lot of Cython code": [[210, "situation-2-a-python-package-that-contains-a-lot-of-cython-code"]], "Situation 3: a Python package that uses the NumPy or Python C API directly": [[210, "situation-3-a-python-package-that-uses-the-numpy-or-python-c-api-directly"]], "Device support": [[210, "device-support"], [216, "device-support"]], "Other longer-term approaches": [[210, "other-longer-term-approaches"]], "Further Python API standardization": [[210, "further-python-api-standardization"]], "HPy": [[210, "hpy"]], "Accuracy": [[211, "accuracy"]], "Arithmetic Operations": [[211, "arithmetic-operations"]], "Mathematical Functions": [[211, "mathematical-functions"]], "Linear Algebra": [[211, "linear-algebra"]], "Complex Numbers": [[212, "complex-numbers"]], "The Complex Plane": [[212, "the-complex-plane"]], "Branch Cuts": [[212, "branch-cuts"]], "Complex Number Ordering": [[212, "complex-number-ordering"]], "Valued-based Promotion": [[212, "valued-based-promotion"]], "Copy-view behaviour and mutability": [[213, "copy-view-behaviour-and-mutability"]], "Mutating views": [[213, null]], "Data-dependent output shapes": [[214, "data-dependent-output-shapes"]], "Data interchange mechanisms": [[215, "data-interchange-mechanisms"]], "DLPack: An in-memory tensor structure": [[215, "dlpack-an-in-memory-tensor-structure"]], "Non-supported use cases": [[215, "non-supported-use-cases"]], "Intended usage": [[216, "intended-usage"]], "Syntax for device assignment": [[216, "syntax-for-device-assignment"]], "Semantics": [[216, "semantics"]], "Out of scope for device support": [[216, "out-of-scope-for-device-support"]], "Exceptions": [[217, "exceptions"]], "Design topics & constraints": [[218, "design-topics-constraints"], [218, null]], "Lazy vs. eager execution": [[219, "lazy-vs-eager-execution"]], "Parallelism": [[220, "parallelism"]], "Static typing": [[221, "static-typing"]], "Fourier transform Functions": [[222, "fourier-transform-functions"]], "Extension name and usage": [[222, "extension-name-and-usage"], [261, "extension-name-and-usage"]], "fft": [[223, "fft"]], "fftfreq": [[224, "fftfreq"]], "fftn": [[225, "fftn"]], "fftshift": [[226, "fftshift"]], "hfft": [[227, "hfft"]], "ifft": [[228, "ifft"]], "ifftn": [[229, "ifftn"]], "ifftshift": [[230, "ifftshift"]], "ihfft": [[231, "ihfft"]], "irfft": [[232, "irfft"]], "irfftn": [[233, "irfftn"]], "rfft": [[234, "rfft"]], "rfftfreq": [[235, "rfftfreq"]], "rfftn": [[236, "rfftn"]], "cholesky": [[237, "cholesky"]], "cross": [[238, "cross"]], "det": [[239, "det"]], "diagonal": [[240, "diagonal"]], "eigh": [[241, "eigh"]], "eigvalsh": [[242, "eigvalsh"]], "inv": [[243, "inv"]], "matrix_norm": [[245, "matrix-norm"]], "matrix_power": [[246, "matrix-power"]], "matrix_rank": [[247, "matrix-rank"]], "outer": [[249, "outer"]], "pinv": [[250, "pinv"]], "qr": [[251, "qr"]], "slogdet": [[252, "slogdet"]], "solve": [[253, "solve"]], "svd": [[254, "svd"]], "svdvals": [[255, "svdvals"]], "trace": [[257, "trace"]], "vector_norm": [[259, "vector-norm"]], "Extension modules:": [[260, null]], "Linear Algebra Extension": [[261, "linear-algebra-extension"]], "Design Principles": [[261, "design-principles"]], "Future API standard evolution": [[262, "future-api-standard-evolution"]], "Scope extensions": [[262, "scope-extensions"]], "Versioning": [[262, "versioning"]], "Python array API standard": [[263, "python-array-api-standard"]], "Contents": [[263, "contents"]], "Context": [[263, null]], "API": [[263, null]], "Methodology and Usage": [[263, null]], "Other": [[263, null]], "License": [[264, "license"]], "Purpose and scope": [[265, "purpose-and-scope"]], "Introduction": [[265, "introduction"], [266, "introduction"]], "This API standard": [[265, "this-api-standard"]], "History": [[265, "history"]], "Scope (includes out-of-scope / non-goals)": [[265, "scope-includes-out-of-scope-non-goals"]], "In scope": [[265, "in-scope"]], "Out of scope": [[265, "out-of-scope"]], "Implications of in/out of scope": [[265, "implications-of-in-out-of-scope"]], "Stakeholders": [[265, "stakeholders"]], "How to read this document": [[265, "how-to-read-this-document"]], "How to adopt this API": [[265, "how-to-adopt-this-api"]], "Checking an array object for Compliance": [[265, "checking-an-array-object-for-compliance"]], "Discoverability of conforming implementations": [[265, "discoverability-of-conforming-implementations"]], "Optional feature": [[265, null]], "Conformance": [[265, "conformance"]], "Terms and Definitions": [[265, "terms-and-definitions"]], "Normative References": [[265, "normative-references"]], "Usage Data": [[266, "usage-data"]], "Design": [[266, "design"]], "Usage": [[266, "usage"]], "Use in Decision-Making": [[266, "use-in-decision-making"]], "Use cases": [[267, "use-cases"]], "Types of use cases": [[267, "types-of-use-cases"]], "Concrete use cases": [[267, "concrete-use-cases"]], "Use case 1: add hardware accelerator and distributed support to SciPy": [[267, "use-case-1-add-hardware-accelerator-and-distributed-support-to-scipy"]], "Use case 2: simplify einops by removing the backend system": [[267, "use-case-2-simplify-einops-by-removing-the-backend-system"]], "Use case 3: adding a Python API to xtensor": [[267, "use-case-3-adding-a-python-api-to-xtensor"]], "Use case 4: make JIT compilation of array computations easier and more robust": [[267, "use-case-4-make-jit-compilation-of-array-computations-easier-and-more-robust"]], "Verification - test suite": [[268, "verification-test-suite"]], "Measuring conformance": [[268, "measuring-conformance"]], "Running the tests": [[268, "running-the-tests"]]}, "indexentries": {"__array_api_version__ (in module array_api)": [[8, "array_api.__array_api_version__"]], "abs() (in module array_api)": [[9, "array_api.abs"]], "acos() (in module array_api)": [[10, "array_api.acos"]], "acosh() (in module array_api)": [[11, "array_api.acosh"]], "add() (in module array_api)": [[12, "array_api.add"]], "all() (in module array_api)": [[13, "array_api.all"]], "any() (in module array_api)": [[14, "array_api.any"]], "arange() (in module array_api)": [[15, "array_api.arange"]], "argmax() (in module array_api)": [[16, "array_api.argmax"]], "argmin() (in module array_api)": [[17, "array_api.argmin"]], "argsort() (in module array_api)": [[18, "array_api.argsort"]], "t (array property)": [[19, "array_api.array.T"]], "__abs__() (array method)": [[20, "array_api.array.__abs__"]], "__add__() (array method)": [[21, "array_api.array.__add__"]], "__and__() (array method)": [[22, "array_api.array.__and__"]], "__array_namespace__() (array method)": [[23, "array_api.array.__array_namespace__"]], "__bool__() (array method)": [[24, "array_api.array.__bool__"]], "__complex__() (array method)": [[25, "array_api.array.__complex__"]], "__dlpack__() (array method)": [[26, "array_api.array.__dlpack__"]], "__dlpack_device__() (array method)": [[27, "array_api.array.__dlpack_device__"]], "__eq__() (array method)": [[28, "array_api.array.__eq__"]], "__float__() (array method)": [[29, "array_api.array.__float__"]], "__floordiv__() (array method)": [[30, "array_api.array.__floordiv__"]], "__ge__() (array method)": [[31, "array_api.array.__ge__"]], "__getitem__() (array method)": [[32, "array_api.array.__getitem__"]], "__gt__() (array method)": [[33, "array_api.array.__gt__"]], "__index__() (array method)": [[34, "array_api.array.__index__"]], "__int__() (array method)": [[35, "array_api.array.__int__"]], "__invert__() (array method)": [[36, "array_api.array.__invert__"]], "__le__() (array method)": [[37, "array_api.array.__le__"]], "__lshift__() (array method)": [[38, "array_api.array.__lshift__"]], "__lt__() (array method)": [[39, "array_api.array.__lt__"]], "__matmul__() (array method)": [[40, "array_api.array.__matmul__"]], "__mod__() (array method)": [[41, "array_api.array.__mod__"]], "__mul__() (array method)": [[42, "array_api.array.__mul__"]], "__ne__() (array method)": [[43, "array_api.array.__ne__"]], "__neg__() (array method)": [[44, "array_api.array.__neg__"]], "__or__() (array method)": [[45, "array_api.array.__or__"]], "__pos__() (array method)": [[46, "array_api.array.__pos__"]], "__pow__() (array method)": [[47, "array_api.array.__pow__"]], "__rshift__() (array method)": [[48, "array_api.array.__rshift__"]], "__setitem__() (array method)": [[49, "array_api.array.__setitem__"]], "__sub__() (array method)": [[50, "array_api.array.__sub__"]], "__truediv__() (array method)": [[51, "array_api.array.__truediv__"]], "__xor__() (array method)": [[52, "array_api.array.__xor__"]], "device (array property)": [[53, "array_api.array.device"]], "dtype (array property)": [[54, "array_api.array.dtype"]], "mt (array property)": [[55, "array_api.array.mT"]], "ndim (array property)": [[56, "array_api.array.ndim"]], "shape (array property)": [[57, "array_api.array.shape"]], "size (array property)": [[58, "array_api.array.size"]], "to_device() (array method)": [[59, "array_api.array.to_device"]], "asarray() (in module array_api)": [[60, "array_api.asarray"]], "asin() (in module array_api)": [[61, "array_api.asin"]], "asinh() (in module array_api)": [[62, "array_api.asinh"]], "astype() (in module array_api)": [[63, "array_api.astype"]], "atan() (in module array_api)": [[64, "array_api.atan"]], "atan2() (in module array_api)": [[65, "array_api.atan2"]], "atanh() (in module array_api)": [[66, "array_api.atanh"]], "bitwise_and() (in module array_api)": [[67, "array_api.bitwise_and"]], "bitwise_invert() (in module array_api)": [[68, "array_api.bitwise_invert"]], "bitwise_left_shift() (in module array_api)": [[69, "array_api.bitwise_left_shift"]], "bitwise_or() (in module array_api)": [[70, "array_api.bitwise_or"]], "bitwise_right_shift() (in module array_api)": [[71, "array_api.bitwise_right_shift"]], "bitwise_xor() (in module array_api)": [[72, "array_api.bitwise_xor"]], "broadcast_arrays() (in module array_api)": [[73, "array_api.broadcast_arrays"]], "broadcast_to() (in module array_api)": [[74, "array_api.broadcast_to"]], "can_cast() (in module array_api)": [[75, "array_api.can_cast"]], "ceil() (in module array_api)": [[76, "array_api.ceil"]], "clip() (in module array_api)": [[77, "array_api.clip"]], "concat() (in module array_api)": [[78, "array_api.concat"]], "conj() (in module array_api)": [[79, "array_api.conj"]], "e (in module array_api.constants)": [[80, "array_api.constants.e"]], "inf (in module array_api.constants)": [[81, "array_api.constants.inf"]], "nan (in module array_api.constants)": [[82, "array_api.constants.nan"]], "newaxis (in module array_api.constants)": [[83, "array_api.constants.newaxis"]], "pi (in module array_api.constants)": [[84, "array_api.constants.pi"]], "copysign() (in module array_api)": [[85, "array_api.copysign"]], "cos() (in module array_api)": [[86, "array_api.cos"]], "cosh() (in module array_api)": [[87, "array_api.cosh"]], "count_nonzero() (in module array_api)": [[88, "array_api.count_nonzero"]], "cumulative_sum() (in module array_api)": [[89, "array_api.cumulative_sum"]], "__eq__() (in module array_api.data_types)": [[90, "array_api.data_types.__eq__"]], "diff() (in module array_api)": [[91, "array_api.diff"]], "divide() (in module array_api)": [[92, "array_api.divide"]], "empty() (in module array_api)": [[93, "array_api.empty"]], "empty_like() (in module array_api)": [[94, "array_api.empty_like"]], "equal() (in module array_api)": [[95, "array_api.equal"]], "exp() (in module array_api)": [[96, "array_api.exp"]], "expand_dims() (in module array_api)": [[97, "array_api.expand_dims"]], "expm1() (in module array_api)": [[98, "array_api.expm1"]], "eye() (in module array_api)": [[99, "array_api.eye"]], "finfo() (in module array_api)": [[100, "array_api.finfo"]], "flip() (in module array_api)": [[101, "array_api.flip"]], "floor() (in module array_api)": [[102, "array_api.floor"]], "floor_divide() (in module array_api)": [[103, "array_api.floor_divide"]], "from_dlpack() (in module array_api)": [[104, "array_api.from_dlpack"]], "full() (in module array_api)": [[105, "array_api.full"]], "full_like() (in module array_api)": [[106, "array_api.full_like"]], "greater() (in module array_api)": [[107, "array_api.greater"]], "greater_equal() (in module array_api)": [[108, "array_api.greater_equal"]], "hypot() (in module array_api)": [[109, "array_api.hypot"]], "iinfo() (in module array_api)": [[110, "array_api.iinfo"]], "imag() (in module array_api)": [[111, "array_api.imag"]], "__array_namespace_info__() (in module array_api.info)": [[112, "array_api.info.__array_namespace_info__"]], "capabilities() (in module array_api.info)": [[113, "array_api.info.capabilities"]], "default_device() (in module array_api.info)": [[114, "array_api.info.default_device"]], "default_dtypes() (in module array_api.info)": [[115, "array_api.info.default_dtypes"]], "devices() (in module array_api.info)": [[116, "array_api.info.devices"]], "dtypes() (in module array_api.info)": [[117, "array_api.info.dtypes"]], "isdtype() (in module array_api)": [[118, "array_api.isdtype"]], "isfinite() (in module array_api)": [[119, "array_api.isfinite"]], "isinf() (in module array_api)": [[120, "array_api.isinf"]], "isnan() (in module array_api)": [[121, "array_api.isnan"]], "less() (in module array_api)": [[122, "array_api.less"]], "less_equal() (in module array_api)": [[123, "array_api.less_equal"]], "linspace() (in module array_api)": [[124, "array_api.linspace"]], "log() (in module array_api)": [[125, "array_api.log"]], "log10() (in module array_api)": [[126, "array_api.log10"]], "log1p() (in module array_api)": [[127, "array_api.log1p"]], "log2() (in module array_api)": [[128, "array_api.log2"]], "logaddexp() (in module array_api)": [[129, "array_api.logaddexp"]], "logical_and() (in module array_api)": [[130, "array_api.logical_and"]], "logical_not() (in module array_api)": [[131, "array_api.logical_not"]], "logical_or() (in module array_api)": [[132, "array_api.logical_or"]], "logical_xor() (in module array_api)": [[133, "array_api.logical_xor"]], "matmul() (in module array_api)": [[134, "array_api.matmul"]], "matrix_transpose() (in module array_api)": [[135, "array_api.matrix_transpose"]], "max() (in module array_api)": [[136, "array_api.max"]], "maximum() (in module array_api)": [[137, "array_api.maximum"]], "mean() (in module array_api)": [[138, "array_api.mean"]], "meshgrid() (in module array_api)": [[139, "array_api.meshgrid"]], "min() (in module array_api)": [[140, "array_api.min"]], "minimum() (in module array_api)": [[141, "array_api.minimum"]], "moveaxis() (in module array_api)": [[142, "array_api.moveaxis"]], "multiply() (in module array_api)": [[143, "array_api.multiply"]], "negative() (in module array_api)": [[144, "array_api.negative"]], "nextafter() (in module array_api)": [[145, "array_api.nextafter"]], "nonzero() (in module array_api)": [[146, "array_api.nonzero"]], "not_equal() (in module array_api)": [[147, "array_api.not_equal"]], "ones() (in module array_api)": [[148, "array_api.ones"]], "ones_like() (in module array_api)": [[149, "array_api.ones_like"]], "permute_dims() (in module array_api)": [[150, "array_api.permute_dims"]], "positive() (in module array_api)": [[151, "array_api.positive"]], "pow() (in module array_api)": [[152, "array_api.pow"]], "prod() (in module array_api)": [[153, "array_api.prod"]], "real() (in module array_api)": [[154, "array_api.real"]], "reciprocal() (in module array_api)": [[155, "array_api.reciprocal"]], "remainder() (in module array_api)": [[156, "array_api.remainder"]], "repeat() (in module array_api)": [[157, "array_api.repeat"]], "reshape() (in module array_api)": [[158, "array_api.reshape"]], "result_type() (in module array_api)": [[159, "array_api.result_type"]], "roll() (in module array_api)": [[160, "array_api.roll"]], "round() (in module array_api)": [[161, "array_api.round"]], "searchsorted() (in module array_api)": [[162, "array_api.searchsorted"]], "sign() (in module array_api)": [[163, "array_api.sign"]], "signbit() (in module array_api)": [[164, "array_api.signbit"]], "sin() (in module array_api)": [[165, "array_api.sin"]], "sinh() (in module array_api)": [[166, "array_api.sinh"]], "sort() (in module array_api)": [[167, "array_api.sort"]], "sqrt() (in module array_api)": [[168, "array_api.sqrt"]], "square() (in module array_api)": [[169, "array_api.square"]], "squeeze() (in module array_api)": [[170, "array_api.squeeze"]], "stack() (in module array_api)": [[171, "array_api.stack"]], "std() (in module array_api)": [[172, "array_api.std"]], "subtract() (in module array_api)": [[173, "array_api.subtract"]], "sum() (in module array_api)": [[174, "array_api.sum"]], "take() (in module array_api)": [[175, "array_api.take"]], "take_along_axis() (in module array_api)": [[176, "array_api.take_along_axis"]], "tan() (in module array_api)": [[177, "array_api.tan"]], "tanh() (in module array_api)": [[178, "array_api.tanh"]], "tensordot() (in module array_api)": [[179, "array_api.tensordot"]], "tile() (in module array_api)": [[180, "array_api.tile"]], "tril() (in module array_api)": [[181, "array_api.tril"]], "triu() (in module array_api)": [[182, "array_api.triu"]], "trunc() (in module array_api)": [[183, "array_api.trunc"]], "unique_all() (in module array_api)": [[184, "array_api.unique_all"]], "unique_counts() (in module array_api)": [[185, "array_api.unique_counts"]], "unique_inverse() (in module array_api)": [[186, "array_api.unique_inverse"]], "unique_values() (in module array_api)": [[187, "array_api.unique_values"]], "unstack() (in module array_api)": [[188, "array_api.unstack"]], "var() (in module array_api)": [[189, "array_api.var"]], "vecdot() (in module array_api)": [[190, "array_api.vecdot"]], "where() (in module array_api)": [[191, "array_api.where"]], "zeros() (in module array_api)": [[192, "array_api.zeros"]], "zeros_like() (in module array_api)": [[193, "array_api.zeros_like"]], "fft() (in module array_api.fft)": [[223, "array_api.fft.fft"]], "fftfreq() (in module array_api.fft)": [[224, "array_api.fft.fftfreq"]], "fftn() (in module array_api.fft)": [[225, "array_api.fft.fftn"]], "fftshift() (in module array_api.fft)": [[226, "array_api.fft.fftshift"]], "hfft() (in module array_api.fft)": [[227, "array_api.fft.hfft"]], "ifft() (in module array_api.fft)": [[228, "array_api.fft.ifft"]], "ifftn() (in module array_api.fft)": [[229, "array_api.fft.ifftn"]], "ifftshift() (in module array_api.fft)": [[230, "array_api.fft.ifftshift"]], "ihfft() (in module array_api.fft)": [[231, "array_api.fft.ihfft"]], "irfft() (in module array_api.fft)": [[232, "array_api.fft.irfft"]], "irfftn() (in module array_api.fft)": [[233, "array_api.fft.irfftn"]], "rfft() (in module array_api.fft)": [[234, "array_api.fft.rfft"]], "rfftfreq() (in module array_api.fft)": [[235, "array_api.fft.rfftfreq"]], "rfftn() (in module array_api.fft)": [[236, "array_api.fft.rfftn"]], "cholesky() (in module array_api.linalg)": [[237, "array_api.linalg.cholesky"]], "cross() (in module array_api.linalg)": [[238, "array_api.linalg.cross"]], "det() (in module array_api.linalg)": [[239, "array_api.linalg.det"]], "diagonal() (in module array_api.linalg)": [[240, "array_api.linalg.diagonal"]], "eigh() (in module array_api.linalg)": [[241, "array_api.linalg.eigh"]], "eigvalsh() (in module array_api.linalg)": [[242, "array_api.linalg.eigvalsh"]], "inv() (in module array_api.linalg)": [[243, "array_api.linalg.inv"]], "matmul() (in module array_api.linalg)": [[244, "array_api.linalg.matmul"]], "matrix_norm() (in module array_api.linalg)": [[245, "array_api.linalg.matrix_norm"]], "matrix_power() (in module array_api.linalg)": [[246, "array_api.linalg.matrix_power"]], "matrix_rank() (in module array_api.linalg)": [[247, "array_api.linalg.matrix_rank"]], "matrix_transpose() (in module array_api.linalg)": [[248, "array_api.linalg.matrix_transpose"]], "outer() (in module array_api.linalg)": [[249, "array_api.linalg.outer"]], "pinv() (in module array_api.linalg)": [[250, "array_api.linalg.pinv"]], "qr() (in module array_api.linalg)": [[251, "array_api.linalg.qr"]], "slogdet() (in module array_api.linalg)": [[252, "array_api.linalg.slogdet"]], "solve() (in module array_api.linalg)": [[253, "array_api.linalg.solve"]], "svd() (in module array_api.linalg)": [[254, "array_api.linalg.svd"]], "svdvals() (in module array_api.linalg)": [[255, "array_api.linalg.svdvals"]], "tensordot() (in module array_api.linalg)": [[256, "array_api.linalg.tensordot"]], "trace() (in module array_api.linalg)": [[257, "array_api.linalg.trace"]], "vecdot() (in module array_api.linalg)": [[258, "array_api.linalg.vecdot"]], "vector_norm() (in module array_api.linalg)": [[259, "array_api.linalg.vector_norm"]]}})