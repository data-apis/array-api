Search.setIndex({"docnames": ["API_specification/array_object", "API_specification/broadcasting", "API_specification/constants", "API_specification/creation_functions", "API_specification/data_type_functions", "API_specification/data_types", "API_specification/elementwise_functions", "API_specification/function_and_method_signatures", "API_specification/generated/array_api.__array_api_version__", "API_specification/generated/array_api.abs", "API_specification/generated/array_api.acos", "API_specification/generated/array_api.acosh", "API_specification/generated/array_api.add", "API_specification/generated/array_api.all", "API_specification/generated/array_api.any", "API_specification/generated/array_api.arange", "API_specification/generated/array_api.argmax", "API_specification/generated/array_api.argmin", "API_specification/generated/array_api.argsort", "API_specification/generated/array_api.array.T", "API_specification/generated/array_api.array.__abs__", "API_specification/generated/array_api.array.__add__", "API_specification/generated/array_api.array.__and__", "API_specification/generated/array_api.array.__array_namespace__", "API_specification/generated/array_api.array.__bool__", "API_specification/generated/array_api.array.__complex__", "API_specification/generated/array_api.array.__dlpack__", "API_specification/generated/array_api.array.__dlpack_device__", "API_specification/generated/array_api.array.__eq__", "API_specification/generated/array_api.array.__float__", "API_specification/generated/array_api.array.__floordiv__", "API_specification/generated/array_api.array.__ge__", "API_specification/generated/array_api.array.__getitem__", "API_specification/generated/array_api.array.__gt__", "API_specification/generated/array_api.array.__index__", "API_specification/generated/array_api.array.__int__", "API_specification/generated/array_api.array.__invert__", "API_specification/generated/array_api.array.__le__", "API_specification/generated/array_api.array.__lshift__", "API_specification/generated/array_api.array.__lt__", "API_specification/generated/array_api.array.__matmul__", "API_specification/generated/array_api.array.__mod__", "API_specification/generated/array_api.array.__mul__", "API_specification/generated/array_api.array.__ne__", "API_specification/generated/array_api.array.__neg__", "API_specification/generated/array_api.array.__or__", "API_specification/generated/array_api.array.__pos__", "API_specification/generated/array_api.array.__pow__", "API_specification/generated/array_api.array.__rshift__", "API_specification/generated/array_api.array.__setitem__", "API_specification/generated/array_api.array.__sub__", "API_specification/generated/array_api.array.__truediv__", "API_specification/generated/array_api.array.__xor__", "API_specification/generated/array_api.array.device", "API_specification/generated/array_api.array.dtype", "API_specification/generated/array_api.array.mT", "API_specification/generated/array_api.array.ndim", "API_specification/generated/array_api.array.shape", "API_specification/generated/array_api.array.size", "API_specification/generated/array_api.array.to_device", "API_specification/generated/array_api.asarray", "API_specification/generated/array_api.asin", "API_specification/generated/array_api.asinh", "API_specification/generated/array_api.astype", "API_specification/generated/array_api.atan", "API_specification/generated/array_api.atan2", "API_specification/generated/array_api.atanh", "API_specification/generated/array_api.bitwise_and", "API_specification/generated/array_api.bitwise_invert", "API_specification/generated/array_api.bitwise_left_shift", "API_specification/generated/array_api.bitwise_or", "API_specification/generated/array_api.bitwise_right_shift", "API_specification/generated/array_api.bitwise_xor", "API_specification/generated/array_api.broadcast_arrays", "API_specification/generated/array_api.broadcast_to", "API_specification/generated/array_api.can_cast", "API_specification/generated/array_api.ceil", "API_specification/generated/array_api.clip", "API_specification/generated/array_api.concat", "API_specification/generated/array_api.conj", "API_specification/generated/array_api.constants.e", "API_specification/generated/array_api.constants.inf", "API_specification/generated/array_api.constants.nan", "API_specification/generated/array_api.constants.newaxis", "API_specification/generated/array_api.constants.pi", "API_specification/generated/array_api.copysign", "API_specification/generated/array_api.cos", "API_specification/generated/array_api.cosh", "API_specification/generated/array_api.cumulative_sum", "API_specification/generated/array_api.data_types.__eq__", "API_specification/generated/array_api.diff", "API_specification/generated/array_api.divide", "API_specification/generated/array_api.empty", "API_specification/generated/array_api.empty_like", "API_specification/generated/array_api.equal", "API_specification/generated/array_api.exp", "API_specification/generated/array_api.expand_dims", "API_specification/generated/array_api.expm1", "API_specification/generated/array_api.eye", "API_specification/generated/array_api.finfo", "API_specification/generated/array_api.flip", "API_specification/generated/array_api.floor", "API_specification/generated/array_api.floor_divide", "API_specification/generated/array_api.from_dlpack", "API_specification/generated/array_api.full", "API_specification/generated/array_api.full_like", "API_specification/generated/array_api.greater", "API_specification/generated/array_api.greater_equal", "API_specification/generated/array_api.hypot", "API_specification/generated/array_api.iinfo", "API_specification/generated/array_api.imag", "API_specification/generated/array_api.info.__array_namespace_info__", "API_specification/generated/array_api.info.capabilities", "API_specification/generated/array_api.info.default_device", "API_specification/generated/array_api.info.default_dtypes", "API_specification/generated/array_api.info.devices", "API_specification/generated/array_api.info.dtypes", "API_specification/generated/array_api.isdtype", "API_specification/generated/array_api.isfinite", "API_specification/generated/array_api.isinf", "API_specification/generated/array_api.isnan", "API_specification/generated/array_api.less", "API_specification/generated/array_api.less_equal", "API_specification/generated/array_api.linspace", "API_specification/generated/array_api.log", "API_specification/generated/array_api.log10", "API_specification/generated/array_api.log1p", "API_specification/generated/array_api.log2", "API_specification/generated/array_api.logaddexp", "API_specification/generated/array_api.logical_and", "API_specification/generated/array_api.logical_not", "API_specification/generated/array_api.logical_or", "API_specification/generated/array_api.logical_xor", "API_specification/generated/array_api.matmul", "API_specification/generated/array_api.matrix_transpose", "API_specification/generated/array_api.max", "API_specification/generated/array_api.maximum", "API_specification/generated/array_api.mean", "API_specification/generated/array_api.meshgrid", "API_specification/generated/array_api.min", "API_specification/generated/array_api.minimum", "API_specification/generated/array_api.moveaxis", "API_specification/generated/array_api.multiply", "API_specification/generated/array_api.negative", "API_specification/generated/array_api.nextafter", "API_specification/generated/array_api.nonzero", "API_specification/generated/array_api.not_equal", "API_specification/generated/array_api.ones", "API_specification/generated/array_api.ones_like", "API_specification/generated/array_api.permute_dims", "API_specification/generated/array_api.positive", "API_specification/generated/array_api.pow", "API_specification/generated/array_api.prod", "API_specification/generated/array_api.real", "API_specification/generated/array_api.reciprocal", "API_specification/generated/array_api.remainder", "API_specification/generated/array_api.repeat", "API_specification/generated/array_api.reshape", "API_specification/generated/array_api.result_type", "API_specification/generated/array_api.roll", "API_specification/generated/array_api.round", "API_specification/generated/array_api.searchsorted", "API_specification/generated/array_api.sign", "API_specification/generated/array_api.signbit", "API_specification/generated/array_api.sin", "API_specification/generated/array_api.sinh", "API_specification/generated/array_api.sort", "API_specification/generated/array_api.sqrt", "API_specification/generated/array_api.square", "API_specification/generated/array_api.squeeze", "API_specification/generated/array_api.stack", "API_specification/generated/array_api.std", "API_specification/generated/array_api.subtract", "API_specification/generated/array_api.sum", "API_specification/generated/array_api.take", "API_specification/generated/array_api.take_along_axis", "API_specification/generated/array_api.tan", "API_specification/generated/array_api.tanh", "API_specification/generated/array_api.tensordot", "API_specification/generated/array_api.tile", "API_specification/generated/array_api.tril", "API_specification/generated/array_api.triu", "API_specification/generated/array_api.trunc", "API_specification/generated/array_api.unique_all", "API_specification/generated/array_api.unique_counts", "API_specification/generated/array_api.unique_inverse", "API_specification/generated/array_api.unique_values", "API_specification/generated/array_api.unstack", "API_specification/generated/array_api.var", "API_specification/generated/array_api.vecdot", "API_specification/generated/array_api.where", "API_specification/generated/array_api.zeros", "API_specification/generated/array_api.zeros_like", "API_specification/index", "API_specification/indexing", "API_specification/indexing_functions", "API_specification/inspection", "API_specification/linear_algebra_functions", "API_specification/manipulation_functions", "API_specification/searching_functions", "API_specification/set_functions", "API_specification/sorting_functions", "API_specification/statistical_functions", "API_specification/type_promotion", "API_specification/utility_functions", "API_specification/version", "assumptions", "benchmark_suite", "changelog", "design_topics/C_API", "design_topics/accuracy", "design_topics/complex_numbers", "design_topics/copies_views_and_mutation", "design_topics/data_dependent_output_shapes", "design_topics/data_interchange", "design_topics/device_support", "design_topics/exceptions", "design_topics/index", "design_topics/lazy_eager", "design_topics/parallelism", "design_topics/static_typing", "extensions/fourier_transform_functions", "extensions/generated/array_api.fft.fft", "extensions/generated/array_api.fft.fftfreq", "extensions/generated/array_api.fft.fftn", "extensions/generated/array_api.fft.fftshift", "extensions/generated/array_api.fft.hfft", "extensions/generated/array_api.fft.ifft", "extensions/generated/array_api.fft.ifftn", "extensions/generated/array_api.fft.ifftshift", "extensions/generated/array_api.fft.ihfft", "extensions/generated/array_api.fft.irfft", "extensions/generated/array_api.fft.irfftn", "extensions/generated/array_api.fft.rfft", "extensions/generated/array_api.fft.rfftfreq", "extensions/generated/array_api.fft.rfftn", "extensions/generated/array_api.linalg.cholesky", "extensions/generated/array_api.linalg.cross", "extensions/generated/array_api.linalg.det", "extensions/generated/array_api.linalg.diagonal", "extensions/generated/array_api.linalg.eigh", "extensions/generated/array_api.linalg.eigvalsh", "extensions/generated/array_api.linalg.inv", "extensions/generated/array_api.linalg.matmul", "extensions/generated/array_api.linalg.matrix_norm", "extensions/generated/array_api.linalg.matrix_power", "extensions/generated/array_api.linalg.matrix_rank", "extensions/generated/array_api.linalg.matrix_transpose", "extensions/generated/array_api.linalg.outer", "extensions/generated/array_api.linalg.pinv", "extensions/generated/array_api.linalg.qr", "extensions/generated/array_api.linalg.slogdet", "extensions/generated/array_api.linalg.solve", "extensions/generated/array_api.linalg.svd", "extensions/generated/array_api.linalg.svdvals", "extensions/generated/array_api.linalg.tensordot", "extensions/generated/array_api.linalg.trace", "extensions/generated/array_api.linalg.vecdot", "extensions/generated/array_api.linalg.vector_norm", "extensions/index", "extensions/linear_algebra_functions", "future_API_evolution", "index", "license", "purpose_and_scope", "usage_data", "use_cases", "verification_test_suite"], "filenames": ["API_specification/array_object.rst", "API_specification/broadcasting.rst", "API_specification/constants.rst", "API_specification/creation_functions.rst", "API_specification/data_type_functions.rst", "API_specification/data_types.rst", "API_specification/elementwise_functions.rst", "API_specification/function_and_method_signatures.rst", "API_specification/generated/array_api.__array_api_version__.rst", "API_specification/generated/array_api.abs.rst", "API_specification/generated/array_api.acos.rst", "API_specification/generated/array_api.acosh.rst", "API_specification/generated/array_api.add.rst", "API_specification/generated/array_api.all.rst", "API_specification/generated/array_api.any.rst", "API_specification/generated/array_api.arange.rst", "API_specification/generated/array_api.argmax.rst", "API_specification/generated/array_api.argmin.rst", "API_specification/generated/array_api.argsort.rst", "API_specification/generated/array_api.array.T.rst", "API_specification/generated/array_api.array.__abs__.rst", "API_specification/generated/array_api.array.__add__.rst", "API_specification/generated/array_api.array.__and__.rst", "API_specification/generated/array_api.array.__array_namespace__.rst", "API_specification/generated/array_api.array.__bool__.rst", "API_specification/generated/array_api.array.__complex__.rst", "API_specification/generated/array_api.array.__dlpack__.rst", "API_specification/generated/array_api.array.__dlpack_device__.rst", "API_specification/generated/array_api.array.__eq__.rst", "API_specification/generated/array_api.array.__float__.rst", "API_specification/generated/array_api.array.__floordiv__.rst", "API_specification/generated/array_api.array.__ge__.rst", "API_specification/generated/array_api.array.__getitem__.rst", "API_specification/generated/array_api.array.__gt__.rst", "API_specification/generated/array_api.array.__index__.rst", "API_specification/generated/array_api.array.__int__.rst", "API_specification/generated/array_api.array.__invert__.rst", "API_specification/generated/array_api.array.__le__.rst", "API_specification/generated/array_api.array.__lshift__.rst", "API_specification/generated/array_api.array.__lt__.rst", "API_specification/generated/array_api.array.__matmul__.rst", "API_specification/generated/array_api.array.__mod__.rst", "API_specification/generated/array_api.array.__mul__.rst", "API_specification/generated/array_api.array.__ne__.rst", "API_specification/generated/array_api.array.__neg__.rst", "API_specification/generated/array_api.array.__or__.rst", "API_specification/generated/array_api.array.__pos__.rst", "API_specification/generated/array_api.array.__pow__.rst", "API_specification/generated/array_api.array.__rshift__.rst", "API_specification/generated/array_api.array.__setitem__.rst", "API_specification/generated/array_api.array.__sub__.rst", "API_specification/generated/array_api.array.__truediv__.rst", "API_specification/generated/array_api.array.__xor__.rst", "API_specification/generated/array_api.array.device.rst", "API_specification/generated/array_api.array.dtype.rst", "API_specification/generated/array_api.array.mT.rst", "API_specification/generated/array_api.array.ndim.rst", "API_specification/generated/array_api.array.shape.rst", "API_specification/generated/array_api.array.size.rst", "API_specification/generated/array_api.array.to_device.rst", "API_specification/generated/array_api.asarray.rst", "API_specification/generated/array_api.asin.rst", "API_specification/generated/array_api.asinh.rst", "API_specification/generated/array_api.astype.rst", "API_specification/generated/array_api.atan.rst", "API_specification/generated/array_api.atan2.rst", "API_specification/generated/array_api.atanh.rst", "API_specification/generated/array_api.bitwise_and.rst", "API_specification/generated/array_api.bitwise_invert.rst", "API_specification/generated/array_api.bitwise_left_shift.rst", "API_specification/generated/array_api.bitwise_or.rst", "API_specification/generated/array_api.bitwise_right_shift.rst", "API_specification/generated/array_api.bitwise_xor.rst", "API_specification/generated/array_api.broadcast_arrays.rst", "API_specification/generated/array_api.broadcast_to.rst", "API_specification/generated/array_api.can_cast.rst", "API_specification/generated/array_api.ceil.rst", "API_specification/generated/array_api.clip.rst", "API_specification/generated/array_api.concat.rst", "API_specification/generated/array_api.conj.rst", "API_specification/generated/array_api.constants.e.rst", "API_specification/generated/array_api.constants.inf.rst", "API_specification/generated/array_api.constants.nan.rst", "API_specification/generated/array_api.constants.newaxis.rst", "API_specification/generated/array_api.constants.pi.rst", "API_specification/generated/array_api.copysign.rst", "API_specification/generated/array_api.cos.rst", "API_specification/generated/array_api.cosh.rst", "API_specification/generated/array_api.cumulative_sum.rst", "API_specification/generated/array_api.data_types.__eq__.rst", "API_specification/generated/array_api.diff.rst", "API_specification/generated/array_api.divide.rst", "API_specification/generated/array_api.empty.rst", "API_specification/generated/array_api.empty_like.rst", "API_specification/generated/array_api.equal.rst", "API_specification/generated/array_api.exp.rst", "API_specification/generated/array_api.expand_dims.rst", "API_specification/generated/array_api.expm1.rst", "API_specification/generated/array_api.eye.rst", "API_specification/generated/array_api.finfo.rst", "API_specification/generated/array_api.flip.rst", "API_specification/generated/array_api.floor.rst", "API_specification/generated/array_api.floor_divide.rst", "API_specification/generated/array_api.from_dlpack.rst", "API_specification/generated/array_api.full.rst", "API_specification/generated/array_api.full_like.rst", "API_specification/generated/array_api.greater.rst", "API_specification/generated/array_api.greater_equal.rst", "API_specification/generated/array_api.hypot.rst", "API_specification/generated/array_api.iinfo.rst", "API_specification/generated/array_api.imag.rst", "API_specification/generated/array_api.info.__array_namespace_info__.rst", "API_specification/generated/array_api.info.capabilities.rst", "API_specification/generated/array_api.info.default_device.rst", "API_specification/generated/array_api.info.default_dtypes.rst", "API_specification/generated/array_api.info.devices.rst", "API_specification/generated/array_api.info.dtypes.rst", "API_specification/generated/array_api.isdtype.rst", "API_specification/generated/array_api.isfinite.rst", "API_specification/generated/array_api.isinf.rst", "API_specification/generated/array_api.isnan.rst", "API_specification/generated/array_api.less.rst", "API_specification/generated/array_api.less_equal.rst", "API_specification/generated/array_api.linspace.rst", "API_specification/generated/array_api.log.rst", "API_specification/generated/array_api.log10.rst", "API_specification/generated/array_api.log1p.rst", "API_specification/generated/array_api.log2.rst", "API_specification/generated/array_api.logaddexp.rst", "API_specification/generated/array_api.logical_and.rst", "API_specification/generated/array_api.logical_not.rst", "API_specification/generated/array_api.logical_or.rst", "API_specification/generated/array_api.logical_xor.rst", "API_specification/generated/array_api.matmul.rst", "API_specification/generated/array_api.matrix_transpose.rst", "API_specification/generated/array_api.max.rst", "API_specification/generated/array_api.maximum.rst", "API_specification/generated/array_api.mean.rst", "API_specification/generated/array_api.meshgrid.rst", "API_specification/generated/array_api.min.rst", "API_specification/generated/array_api.minimum.rst", "API_specification/generated/array_api.moveaxis.rst", "API_specification/generated/array_api.multiply.rst", "API_specification/generated/array_api.negative.rst", "API_specification/generated/array_api.nextafter.rst", "API_specification/generated/array_api.nonzero.rst", "API_specification/generated/array_api.not_equal.rst", "API_specification/generated/array_api.ones.rst", "API_specification/generated/array_api.ones_like.rst", "API_specification/generated/array_api.permute_dims.rst", "API_specification/generated/array_api.positive.rst", "API_specification/generated/array_api.pow.rst", "API_specification/generated/array_api.prod.rst", "API_specification/generated/array_api.real.rst", "API_specification/generated/array_api.reciprocal.rst", "API_specification/generated/array_api.remainder.rst", "API_specification/generated/array_api.repeat.rst", "API_specification/generated/array_api.reshape.rst", "API_specification/generated/array_api.result_type.rst", "API_specification/generated/array_api.roll.rst", "API_specification/generated/array_api.round.rst", "API_specification/generated/array_api.searchsorted.rst", "API_specification/generated/array_api.sign.rst", "API_specification/generated/array_api.signbit.rst", "API_specification/generated/array_api.sin.rst", "API_specification/generated/array_api.sinh.rst", "API_specification/generated/array_api.sort.rst", "API_specification/generated/array_api.sqrt.rst", "API_specification/generated/array_api.square.rst", "API_specification/generated/array_api.squeeze.rst", "API_specification/generated/array_api.stack.rst", "API_specification/generated/array_api.std.rst", "API_specification/generated/array_api.subtract.rst", "API_specification/generated/array_api.sum.rst", "API_specification/generated/array_api.take.rst", "API_specification/generated/array_api.take_along_axis.rst", "API_specification/generated/array_api.tan.rst", "API_specification/generated/array_api.tanh.rst", "API_specification/generated/array_api.tensordot.rst", "API_specification/generated/array_api.tile.rst", "API_specification/generated/array_api.tril.rst", "API_specification/generated/array_api.triu.rst", "API_specification/generated/array_api.trunc.rst", "API_specification/generated/array_api.unique_all.rst", "API_specification/generated/array_api.unique_counts.rst", "API_specification/generated/array_api.unique_inverse.rst", "API_specification/generated/array_api.unique_values.rst", "API_specification/generated/array_api.unstack.rst", "API_specification/generated/array_api.var.rst", "API_specification/generated/array_api.vecdot.rst", "API_specification/generated/array_api.where.rst", "API_specification/generated/array_api.zeros.rst", "API_specification/generated/array_api.zeros_like.rst", "API_specification/index.rst", "API_specification/indexing.rst", "API_specification/indexing_functions.rst", "API_specification/inspection.rst", "API_specification/linear_algebra_functions.rst", "API_specification/manipulation_functions.rst", "API_specification/searching_functions.rst", "API_specification/set_functions.rst", "API_specification/sorting_functions.rst", "API_specification/statistical_functions.rst", "API_specification/type_promotion.rst", "API_specification/utility_functions.rst", "API_specification/version.rst", "assumptions.md", "benchmark_suite.md", "changelog.rst", "design_topics/C_API.rst", "design_topics/accuracy.rst", "design_topics/complex_numbers.rst", "design_topics/copies_views_and_mutation.rst", "design_topics/data_dependent_output_shapes.rst", "design_topics/data_interchange.rst", "design_topics/device_support.rst", "design_topics/exceptions.rst", "design_topics/index.rst", "design_topics/lazy_eager.rst", "design_topics/parallelism.rst", "design_topics/static_typing.rst", "extensions/fourier_transform_functions.rst", "extensions/generated/array_api.fft.fft.rst", "extensions/generated/array_api.fft.fftfreq.rst", "extensions/generated/array_api.fft.fftn.rst", "extensions/generated/array_api.fft.fftshift.rst", "extensions/generated/array_api.fft.hfft.rst", "extensions/generated/array_api.fft.ifft.rst", "extensions/generated/array_api.fft.ifftn.rst", "extensions/generated/array_api.fft.ifftshift.rst", "extensions/generated/array_api.fft.ihfft.rst", "extensions/generated/array_api.fft.irfft.rst", "extensions/generated/array_api.fft.irfftn.rst", "extensions/generated/array_api.fft.rfft.rst", "extensions/generated/array_api.fft.rfftfreq.rst", "extensions/generated/array_api.fft.rfftn.rst", "extensions/generated/array_api.linalg.cholesky.rst", "extensions/generated/array_api.linalg.cross.rst", "extensions/generated/array_api.linalg.det.rst", "extensions/generated/array_api.linalg.diagonal.rst", "extensions/generated/array_api.linalg.eigh.rst", "extensions/generated/array_api.linalg.eigvalsh.rst", "extensions/generated/array_api.linalg.inv.rst", "extensions/generated/array_api.linalg.matmul.rst", "extensions/generated/array_api.linalg.matrix_norm.rst", "extensions/generated/array_api.linalg.matrix_power.rst", "extensions/generated/array_api.linalg.matrix_rank.rst", "extensions/generated/array_api.linalg.matrix_transpose.rst", "extensions/generated/array_api.linalg.outer.rst", "extensions/generated/array_api.linalg.pinv.rst", "extensions/generated/array_api.linalg.qr.rst", "extensions/generated/array_api.linalg.slogdet.rst", "extensions/generated/array_api.linalg.solve.rst", "extensions/generated/array_api.linalg.svd.rst", "extensions/generated/array_api.linalg.svdvals.rst", "extensions/generated/array_api.linalg.tensordot.rst", "extensions/generated/array_api.linalg.trace.rst", "extensions/generated/array_api.linalg.vecdot.rst", "extensions/generated/array_api.linalg.vector_norm.rst", "extensions/index.rst", "extensions/linear_algebra_functions.rst", "future_API_evolution.md", "index.rst", "license.rst", "purpose_and_scope.md", "usage_data.md", "use_cases.md", "verification_test_suite.md"], "titles": ["Array object", "Broadcasting", "Constants", "Creation Functions", "Data Type Functions", "Data Types", "Element-wise Functions", "Function and method signatures", "__array_api_version__", "abs", "acos", "acosh", "add", "all", "any", "arange", "argmax", "argmin", "argsort", "T", "__abs__", "__add__", "__and__", "__array_namespace__", "__bool__", "__complex__", "__dlpack__", "__dlpack_device__", "__eq__", "__float__", "__floordiv__", "__ge__", "__getitem__", "__gt__", "__index__", "__int__", "__invert__", "__le__", "__lshift__", "__lt__", "__matmul__", "__mod__", "__mul__", "__ne__", "__neg__", "__or__", "__pos__", "__pow__", "__rshift__", "__setitem__", "__sub__", "__truediv__", "__xor__", "device", "dtype", "mT", "ndim", "shape", "size", "to_device", "asarray", "asin", "asinh", "astype", "atan", "atan2", "atanh", "bitwise_and", "bitwise_invert", "bitwise_left_shift", "bitwise_or", "bitwise_right_shift", "bitwise_xor", "broadcast_arrays", "broadcast_to", "can_cast", "ceil", "clip", "concat", "conj", "e", "inf", "nan", "newaxis", "pi", "copysign", "cos", "cosh", "cumulative_sum", "__eq__", "diff", "divide", "empty", "empty_like", "equal", "exp", "expand_dims", "expm1", "eye", "finfo", "flip", "floor", "floor_divide", "from_dlpack", "full", "full_like", "greater", "greater_equal", "hypot", "iinfo", "imag", "__array_namespace_info__", "capabilities", "default_device", "default_dtypes", "devices", "dtypes", "isdtype", "isfinite", "isinf", "isnan", "less", "less_equal", "linspace", "log", "log10", "log1p", "log2", "logaddexp", "logical_and", "logical_not", "logical_or", "logical_xor", "matmul", "matrix_transpose", "max", "maximum", "mean", "meshgrid", "min", "minimum", "moveaxis", "multiply", "negative", "nextafter", "nonzero", "not_equal", "ones", "ones_like", "permute_dims", "positive", "pow", "prod", "real", "reciprocal", "remainder", "repeat", "reshape", "result_type", "roll", "round", "searchsorted", "sign", "signbit", "sin", "sinh", "sort", "sqrt", "square", "squeeze", "stack", "std", "subtract", "sum", "take", "take_along_axis", "tan", "tanh", "tensordot", "tile", "tril", "triu", "trunc", "unique_all", "unique_counts", "unique_inverse", "unique_values", "unstack", "var", "vecdot", "where", "zeros", "zeros_like", "API specification", "Indexing", "Indexing Functions", "Inspection", "Linear Algebra Functions", "Manipulation Functions", "Searching Functions", "Set Functions", "Sorting Functions", "Statistical Functions", "Type Promotion Rules", "Utility Functions", "Version", "Assumptions", "Benchmark suite", "Changelog per API standard version", "C API", "Accuracy", "Complex Numbers", "Copy-view behaviour and mutability", "Data-dependent output shapes", "Data interchange mechanisms", "Device support", "Exceptions", "Design topics &amp; constraints", "Lazy vs. eager execution", "Parallelism", "Static typing", "Fourier transform Functions", "fft", "fftfreq", "fftn", "fftshift", "hfft", "ifft", "ifftn", "ifftshift", "ihfft", "irfft", "irfftn", "rfft", "rfftfreq", "rfftn", "cholesky", "cross", "det", "diagonal", "eigh", "eigvalsh", "inv", "matmul", "matrix_norm", "matrix_power", "matrix_rank", "matrix_transpose", "outer", "pinv", "qr", "slogdet", "solve", "svd", "svdvals", "tensordot", "trace", "vecdot", "vector_norm", "Extensions", "Linear Algebra Extension", "Future API standard evolution", "Python array API standard", "License", "Purpose and scope", "Usage Data", "Use cases", "Verification - test suite"], "terms": {"api": [0, 1, 5, 7, 8, 23, 26, 63, 103, 111, 112, 116, 117, 194, 203, 206, 210, 211, 212, 214, 215, 216, 217, 218, 219, 220, 259, 263, 265, 267], "specif": [0, 1, 2, 3, 4, 5, 6, 8, 19, 23, 26, 49, 51, 59, 63, 78, 91, 102, 112, 114, 116, 117, 123, 129, 130, 131, 132, 135, 136, 137, 139, 140, 151, 156, 158, 161, 170, 171, 174, 175, 178, 183, 184, 188, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 208, 209, 210, 211, 212, 213, 214, 215, 216, 218, 220, 221, 240, 241, 259, 260, 261, 262, 264, 265, 266, 267], "A": [0, 1, 2, 3, 4, 5, 7, 13, 14, 26, 57, 90, 98, 103, 117, 156, 170, 187, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 209, 212, 214, 215, 218, 219, 220, 221, 222, 224, 226, 227, 228, 230, 231, 232, 233, 235, 249, 252, 260, 263, 264, 265, 266], "conform": [0, 2, 3, 4, 5, 8, 9, 16, 17, 18, 31, 33, 37, 39, 59, 60, 97, 106, 107, 108, 112, 116, 117, 121, 122, 123, 126, 135, 136, 139, 140, 151, 156, 161, 166, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 208, 210, 211, 214, 221, 260], "implement": [0, 2, 3, 4, 5, 8, 9, 10, 11, 16, 17, 18, 20, 23, 24, 25, 26, 29, 30, 31, 32, 33, 34, 35, 37, 39, 40, 41, 44, 47, 49, 51, 59, 60, 61, 62, 63, 64, 65, 66, 77, 86, 87, 88, 91, 95, 97, 102, 103, 104, 105, 106, 107, 108, 112, 117, 121, 122, 123, 124, 125, 126, 127, 133, 135, 136, 137, 139, 140, 142, 143, 145, 151, 152, 154, 155, 156, 158, 161, 164, 165, 166, 168, 171, 173, 176, 177, 183, 184, 185, 186, 188, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 208, 209, 210, 211, 212, 213, 214, 215, 216, 218, 220, 221, 224, 225, 228, 229, 232, 235, 236, 240, 241, 250, 252, 256, 259, 260, 261, 265, 266], "standard": [0, 2, 3, 4, 5, 7, 26, 99, 103, 117, 125, 127, 171, 177, 188, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 210, 211, 212, 214, 215, 216, 218, 219, 220, 259, 260, 263, 265, 266], "must": [0, 1, 2, 3, 4, 5, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 76, 77, 78, 79, 85, 86, 87, 88, 90, 91, 92, 93, 94, 95, 96, 97, 98, 100, 101, 102, 103, 104, 105, 106, 107, 108, 110, 112, 114, 115, 116, 117, 118, 119, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 208, 210, 211, 212, 214, 216, 218, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 244, 245, 246, 248, 249, 250, 251, 252, 253, 254, 256, 258, 259, 260, 261, 264, 265], "provid": [0, 2, 3, 4, 5, 13, 14, 26, 59, 88, 90, 96, 100, 103, 115, 117, 138, 141, 152, 156, 158, 170, 171, 173, 174, 175, 187, 188, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 208, 209, 211, 212, 214, 215, 216, 219, 220, 221, 222, 224, 227, 228, 231, 232, 233, 235, 245, 256, 259, 260, 261, 263, 264, 265, 266], "support": [0, 1, 2, 3, 4, 5, 7, 9, 10, 11, 12, 13, 14, 16, 17, 18, 20, 21, 24, 26, 29, 31, 32, 33, 35, 37, 39, 40, 42, 43, 44, 46, 47, 49, 50, 51, 53, 57, 59, 60, 61, 62, 63, 64, 66, 86, 87, 88, 89, 91, 94, 95, 97, 98, 99, 102, 103, 104, 105, 106, 107, 108, 112, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 129, 130, 131, 132, 133, 135, 136, 138, 139, 140, 142, 143, 145, 146, 147, 148, 150, 151, 152, 156, 160, 162, 164, 165, 166, 167, 168, 172, 173, 174, 176, 177, 178, 183, 184, 185, 186, 189, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 206, 210, 211, 212, 217, 220, 221, 236, 237, 238, 240, 241, 242, 244, 245, 246, 248, 249, 250, 251, 252, 253, 254, 256, 258, 259, 260, 264, 265], "an": [0, 1, 5, 7, 9, 10, 11, 12, 13, 14, 15, 18, 19, 20, 21, 22, 23, 26, 28, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 76, 77, 78, 79, 83, 85, 86, 87, 88, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 115, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 194, 201, 203, 206, 208, 209, 210, 211, 212, 213, 215, 216, 218, 219, 220, 222, 223, 224, 226, 227, 228, 230, 231, 232, 233, 234, 235, 236, 237, 239, 240, 241, 242, 244, 245, 246, 249, 250, 251, 252, 253, 254, 256, 258, 259, 260, 261, 263, 265, 266], "have": [0, 1, 2, 5, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 55, 57, 58, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 76, 77, 78, 79, 85, 86, 87, 88, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 104, 105, 106, 107, 108, 109, 110, 112, 114, 116, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 194, 206, 208, 209, 211, 212, 215, 218, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 244, 245, 246, 248, 249, 250, 251, 252, 253, 254, 256, 258, 260, 261, 264, 265, 266], "follow": [0, 1, 2, 3, 4, 5, 7, 10, 11, 12, 26, 44, 49, 61, 62, 64, 66, 88, 90, 91, 99, 102, 104, 109, 111, 112, 114, 116, 117, 124, 126, 142, 143, 151, 155, 160, 167, 178, 183, 184, 185, 186, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 206, 208, 210, 211, 213, 214, 215, 216, 221, 222, 224, 226, 227, 228, 230, 231, 232, 233, 235, 244, 250, 258, 260, 261, 263, 264, 265, 266], "furthermor": [0, 264, 267], "minimum": [0, 9, 17, 20, 44, 135, 139, 143, 193, 208, 210], "rank": [0, 1, 13, 14, 90, 96, 138, 141, 145, 161, 170, 174, 175, 178, 179, 187, 189, 194, 208, 222, 224, 226, 227, 228, 230, 231, 232, 233, 235, 237, 244, 246, 250, 252, 256, 258, 264], "i": [0, 1, 2, 5, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 23, 24, 25, 26, 29, 30, 31, 32, 33, 34, 35, 37, 39, 40, 41, 42, 43, 44, 47, 49, 51, 55, 57, 59, 60, 61, 62, 63, 64, 65, 66, 69, 71, 74, 76, 77, 78, 79, 83, 85, 86, 87, 88, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 110, 114, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 133, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 201, 203, 206, 207, 208, 210, 211, 212, 214, 215, 216, 218, 219, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 244, 245, 246, 248, 249, 250, 251, 252, 253, 254, 256, 258, 259, 260, 261, 263, 264, 265, 266, 267], "e": [0, 1, 2, 5, 7, 9, 10, 11, 18, 19, 20, 26, 32, 40, 43, 47, 49, 51, 55, 57, 62, 63, 65, 66, 69, 71, 76, 77, 78, 86, 87, 88, 90, 91, 94, 95, 96, 101, 102, 103, 108, 110, 116, 117, 123, 124, 125, 126, 127, 133, 135, 137, 138, 139, 141, 142, 143, 145, 146, 147, 148, 150, 151, 152, 153, 155, 156, 158, 160, 161, 163, 164, 165, 166, 167, 169, 170, 171, 173, 174, 175, 176, 177, 178, 179, 183, 184, 185, 186, 188, 193, 194, 201, 203, 208, 209, 210, 211, 212, 213, 214, 215, 218, 222, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 235, 237, 240, 241, 244, 246, 249, 251, 252, 253, 254, 256, 258, 259, 260, 261, 264, 265, 266], "number": [0, 1, 5, 9, 10, 11, 12, 13, 14, 16, 17, 18, 25, 26, 31, 32, 33, 35, 37, 39, 44, 56, 58, 60, 61, 62, 63, 64, 65, 66, 73, 76, 79, 82, 87, 88, 90, 91, 94, 95, 96, 97, 98, 99, 101, 102, 104, 106, 107, 108, 109, 110, 112, 118, 119, 121, 122, 123, 124, 126, 135, 136, 137, 138, 139, 140, 141, 142, 143, 145, 146, 147, 148, 149, 151, 152, 153, 155, 156, 158, 159, 160, 161, 162, 163, 165, 166, 167, 168, 170, 171, 173, 174, 175, 177, 178, 179, 182, 183, 184, 187, 188, 189, 194, 201, 203, 214, 217, 222, 224, 226, 227, 228, 230, 231, 232, 233, 235, 236, 240, 241, 242, 246, 250, 251, 252, 253, 256, 260, 264, 265], "dimens": [0, 1, 13, 14, 16, 17, 19, 32, 40, 55, 56, 57, 58, 78, 88, 90, 96, 100, 112, 133, 134, 135, 137, 139, 141, 145, 149, 152, 156, 157, 159, 169, 170, 171, 173, 174, 175, 178, 179, 180, 181, 183, 184, 185, 186, 187, 188, 189, 194, 203, 222, 224, 225, 226, 227, 228, 230, 231, 232, 233, 235, 236, 237, 238, 239, 240, 241, 242, 244, 245, 246, 249, 250, 251, 252, 253, 254, 256, 258, 264], "0": [0, 1, 5, 9, 10, 11, 12, 15, 24, 25, 26, 29, 32, 35, 38, 48, 57, 61, 62, 63, 64, 65, 66, 69, 71, 76, 78, 85, 86, 87, 91, 94, 95, 96, 97, 98, 99, 101, 102, 108, 124, 125, 126, 127, 135, 136, 137, 139, 140, 142, 144, 149, 151, 152, 154, 155, 160, 161, 162, 163, 164, 165, 167, 170, 171, 173, 176, 177, 178, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 194, 201, 203, 211, 212, 223, 225, 234, 239, 244, 251, 253, 254, 256, 258, 264, 266], "1": [0, 1, 7, 10, 11, 13, 14, 15, 18, 25, 26, 27, 29, 32, 35, 40, 61, 62, 63, 64, 65, 66, 85, 86, 87, 88, 90, 95, 96, 97, 98, 99, 102, 123, 124, 125, 126, 127, 133, 147, 148, 149, 151, 152, 154, 156, 157, 161, 162, 163, 166, 170, 171, 175, 176, 177, 178, 179, 180, 181, 188, 189, 194, 211, 212, 219, 222, 223, 224, 226, 227, 228, 230, 231, 232, 233, 234, 235, 237, 240, 242, 244, 252, 253, 254, 258], "2": [0, 1, 5, 7, 9, 10, 11, 26, 27, 40, 61, 62, 64, 65, 66, 80, 86, 87, 91, 124, 126, 127, 133, 165, 168, 176, 177, 178, 179, 194, 211, 212, 220, 223, 226, 230, 231, 232, 233, 234, 235, 244, 246, 249, 250, 251, 252, 253, 254, 255, 256, 258], "3": [0, 1, 5, 7, 27, 84, 174, 179, 206, 211, 212, 215, 237], "4": [0, 1, 5, 10, 11, 27, 62, 65, 124, 126, 179, 194, 219, 265], "explicitli": [0, 26, 40, 63, 112, 133, 174, 178, 194, 206, 208, 236, 240, 241, 250, 252, 260, 264, 266], "document": [0, 5, 7, 59, 102, 117, 156, 196, 201, 209, 211, 214, 216, 259, 261, 263, 265, 266, 267], "maximum": [0, 1, 16, 26, 112, 123, 135, 139, 193, 208, 210, 244], "n": [0, 1, 13, 14, 32, 40, 55, 86, 88, 90, 96, 123, 133, 134, 137, 138, 141, 145, 149, 152, 156, 161, 170, 171, 173, 176, 177, 178, 179, 180, 181, 187, 188, 189, 194, 208, 222, 223, 224, 226, 227, 228, 230, 231, 232, 233, 234, 235, 236, 237, 239, 240, 241, 242, 244, 245, 246, 248, 249, 250, 253, 254, 256, 258, 264], "zero": [0, 5, 13, 14, 16, 17, 24, 25, 29, 30, 32, 34, 35, 40, 41, 47, 63, 65, 69, 88, 91, 96, 97, 98, 102, 108, 126, 129, 130, 131, 132, 133, 135, 136, 137, 138, 139, 140, 142, 145, 147, 148, 151, 152, 155, 161, 163, 171, 173, 180, 181, 182, 183, 184, 185, 186, 188, 189, 192, 193, 194, 201, 203, 208, 209, 211, 214, 222, 224, 225, 226, 227, 228, 230, 231, 232, 233, 235, 238, 245, 246, 249, 250, 251, 258, 266], "dimension": [0, 13, 14, 15, 16, 17, 19, 24, 25, 29, 32, 34, 35, 40, 88, 98, 123, 133, 135, 137, 138, 139, 145, 152, 156, 161, 171, 173, 174, 175, 183, 184, 185, 186, 188, 189, 194, 203, 208, 220, 222, 224, 226, 227, 228, 230, 231, 232, 233, 235, 237, 238, 241, 242, 246, 248, 249, 258, 260, 264], "apart": 0, "from": [0, 5, 13, 14, 15, 19, 26, 32, 44, 59, 60, 63, 75, 78, 88, 90, 93, 100, 102, 103, 104, 105, 108, 123, 124, 126, 138, 143, 148, 151, 152, 157, 158, 167, 169, 171, 173, 174, 175, 177, 183, 185, 188, 189, 190, 192, 194, 203, 206, 208, 209, 210, 211, 214, 215, 216, 218, 222, 224, 226, 227, 228, 230, 231, 232, 233, 235, 237, 240, 251, 253, 256, 260, 261, 263, 264, 265, 266, 267], "ndim": [0, 189, 193, 237, 250, 253, 254], "devic": [0, 5, 15, 26, 27, 59, 60, 63, 92, 93, 98, 103, 104, 105, 111, 113, 114, 116, 123, 147, 148, 156, 180, 181, 191, 192, 193, 194, 196, 208, 214, 217, 223, 234, 250, 260, 264, 266], "dtype": [0, 5, 15, 26, 60, 63, 73, 75, 88, 89, 92, 93, 98, 99, 103, 104, 105, 109, 111, 117, 123, 147, 148, 152, 158, 173, 191, 192, 193, 203, 206, 208, 214, 220, 256, 264, 265, 266], "all": [0, 5, 15, 19, 23, 26, 60, 63, 87, 91, 98, 100, 103, 112, 116, 142, 159, 165, 177, 179, 180, 181, 187, 189, 193, 194, 206, 208, 209, 211, 212, 213, 214, 215, 216, 218, 222, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 235, 237, 249, 251, 252, 258, 259, 260, 263, 264, 266, 267], "thi": [0, 1, 5, 7, 15, 19, 26, 32, 34, 58, 59, 63, 71, 78, 97, 102, 103, 108, 112, 116, 117, 123, 126, 129, 130, 131, 132, 137, 145, 151, 155, 156, 170, 171, 174, 175, 183, 184, 185, 186, 188, 193, 194, 201, 203, 206, 208, 209, 210, 211, 212, 213, 214, 215, 216, 218, 219, 220, 221, 222, 224, 225, 227, 228, 231, 232, 233, 235, 250, 251, 252, 253, 259, 260, 261, 263, 265, 266, 267], "return": [0, 5, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 196, 201, 208, 209, 210, 212, 214, 215, 218, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 244, 245, 246, 248, 249, 250, 251, 252, 253, 254, 256, 258, 260, 264, 266], "tupl": [0, 1, 13, 14, 26, 27, 32, 49, 57, 74, 78, 92, 100, 104, 116, 117, 135, 137, 139, 141, 145, 147, 149, 152, 157, 159, 169, 170, 171, 173, 178, 179, 183, 184, 185, 187, 188, 191, 194, 206, 240, 250, 251, 253, 255, 258, 264], "includ": [0, 1, 7, 9, 13, 14, 15, 16, 17, 20, 21, 23, 28, 30, 40, 41, 42, 43, 47, 51, 88, 108, 112, 116, 117, 119, 123, 133, 135, 137, 139, 152, 156, 167, 171, 173, 188, 193, 194, 203, 208, 209, 210, 211, 212, 213, 214, 215, 219, 244, 258, 260, 261, 263, 265, 266], "those": [0, 5, 7, 15, 23, 88, 91, 114, 116, 142, 145, 152, 156, 173, 203, 208, 211, 212, 215, 216, 218, 250, 253, 254, 256, 259, 260, 261, 264, 265, 266], "mean": [0, 26, 193, 206, 212, 214, 215, 220, 261, 264], "var": [0, 193], "std": [0, 193], "which": [0, 1, 5, 7, 8, 13, 14, 15, 16, 17, 18, 19, 26, 30, 40, 41, 44, 59, 60, 63, 75, 77, 78, 83, 88, 90, 92, 93, 96, 98, 99, 100, 102, 103, 104, 105, 108, 109, 112, 114, 115, 116, 123, 133, 135, 137, 139, 143, 145, 147, 148, 152, 155, 156, 159, 161, 166, 170, 171, 173, 174, 175, 176, 180, 181, 183, 184, 185, 186, 187, 188, 189, 191, 192, 194, 208, 209, 210, 211, 212, 213, 214, 215, 216, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 244, 252, 253, 254, 256, 258, 259, 260, 261, 264, 265, 266], "some": [0, 97, 102, 114, 116, 126, 194, 209, 210, 211, 212, 215, 220, 264, 266, 267], "common": [0, 194, 203, 206, 215, 218, 219, 260, 264, 265, 266], "librari": [0, 5, 7, 26, 51, 57, 58, 59, 60, 63, 91, 97, 102, 103, 112, 114, 116, 117, 123, 126, 129, 130, 131, 132, 135, 136, 137, 139, 140, 145, 156, 161, 171, 177, 183, 184, 185, 186, 188, 193, 194, 206, 208, 209, 210, 211, 212, 213, 214, 215, 216, 218, 219, 220, 236, 240, 241, 250, 252, 259, 260, 261, 264, 265, 266, 267], "g": [0, 5, 9, 19, 20, 26, 47, 51, 57, 77, 88, 90, 91, 103, 108, 110, 116, 117, 123, 135, 139, 142, 145, 152, 153, 156, 158, 160, 173, 179, 183, 184, 185, 186, 194, 201, 203, 208, 209, 210, 211, 212, 213, 214, 215, 218, 226, 230, 231, 232, 233, 235, 240, 241, 244, 251, 253, 254, 256, 258, 259, 260, 261, 264, 265, 266], "numpi": [0, 19, 63, 194, 206, 211, 212, 214, 215, 260, 264, 265, 266, 267], "scalar": [0, 2, 49, 60, 193, 194, 208, 218, 258, 266], "valu": [0, 1, 2, 5, 7, 9, 10, 11, 12, 15, 16, 17, 18, 20, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 37, 39, 41, 43, 49, 51, 57, 58, 60, 61, 62, 63, 64, 65, 66, 76, 77, 78, 85, 86, 87, 88, 89, 90, 91, 92, 94, 95, 97, 98, 99, 101, 102, 104, 105, 106, 107, 108, 112, 114, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 135, 136, 137, 139, 140, 142, 144, 145, 146, 147, 151, 152, 155, 156, 160, 161, 162, 163, 164, 165, 166, 167, 171, 173, 174, 175, 176, 177, 182, 183, 184, 185, 186, 188, 189, 191, 193, 201, 203, 206, 208, 210, 212, 213, 214, 218, 220, 223, 226, 230, 231, 232, 233, 234, 235, 236, 240, 241, 242, 244, 245, 246, 249, 250, 251, 252, 253, 254, 256, 258, 260, 264, 266], "rational": [0, 7, 88, 152, 173, 194, 214, 215, 256, 259, 261, 264], "alwai": [0, 12, 26, 42, 60, 63, 99, 103, 142, 157, 194, 206, 211, 212, 215, 240], "necessari": [0, 26, 60, 91, 103, 142, 157, 179, 194, 212, 264], "acceler": [0, 5, 108, 156, 206, 214], "where": [0, 1, 7, 13, 14, 15, 26, 32, 47, 57, 65, 86, 87, 90, 91, 95, 97, 98, 102, 104, 105, 125, 126, 127, 138, 142, 145, 149, 151, 156, 161, 162, 164, 165, 170, 171, 176, 177, 179, 187, 188, 189, 193, 194, 203, 209, 211, 214, 215, 218, 222, 224, 226, 227, 228, 230, 231, 232, 233, 235, 236, 237, 240, 241, 242, 244, 246, 249, 250, 251, 252, 253, 254, 256, 260, 264, 265, 266], "non": [0, 1, 7, 13, 14, 16, 17, 63, 129, 130, 131, 132, 135, 137, 139, 145, 152, 171, 178, 188, 189, 194, 203, 208, 209, 215, 222, 224, 227, 228, 231, 232, 233, 235, 237, 238, 240, 244, 246, 253, 258, 266], "could": [0, 26, 183, 184, 185, 186, 206, 212, 219, 260, 264, 266], "forc": 0, "synchron": [0, 26, 59, 156, 264], "delai": [0, 24, 25, 29, 34, 35, 206, 218, 264], "execut": [0, 203, 206, 215, 217, 219, 264, 266], "model": [0, 57, 58, 91, 142, 211, 218, 266], "repres": [0, 8, 11, 12, 23, 24, 25, 26, 29, 34, 35, 62, 66, 87, 91, 102, 138, 142, 165, 176, 177, 208, 210, 214, 215, 251, 265, 266], "futur": [0, 26, 103, 207, 211, 212, 215, 219, 220, 240, 241, 262, 264, 266], "python": [0, 2, 5, 7, 24, 25, 26, 29, 32, 34, 35, 49, 60, 102, 103, 155, 193, 194, 206, 208, 211, 214, 216, 218, 219, 220, 261, 263, 264, 265], "x": [0, 1, 5, 7, 9, 10, 11, 13, 14, 16, 17, 18, 20, 26, 32, 61, 62, 63, 64, 65, 66, 68, 74, 76, 77, 79, 85, 86, 87, 88, 90, 93, 95, 96, 97, 100, 101, 103, 105, 110, 118, 119, 120, 124, 125, 126, 127, 130, 134, 135, 137, 139, 141, 143, 145, 148, 149, 150, 152, 153, 154, 156, 157, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 173, 174, 175, 176, 177, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 192, 194, 211, 212, 220, 221, 222, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 235, 236, 238, 239, 240, 241, 242, 244, 245, 246, 247, 249, 250, 251, 252, 253, 254, 256, 258, 260, 264, 266], "__pos__": [0, 193, 208], "po": 0, "__neg__": [0, 193, 208], "neg": [0, 13, 14, 15, 44, 47, 65, 78, 88, 90, 91, 96, 98, 100, 102, 119, 124, 126, 142, 151, 155, 159, 163, 167, 174, 175, 178, 189, 193, 194, 208, 211, 222, 224, 226, 227, 228, 230, 231, 232, 233, 235, 237, 258, 264], "x1": [0, 7, 12, 40, 65, 67, 69, 70, 71, 72, 77, 85, 91, 94, 102, 106, 107, 108, 121, 122, 128, 129, 131, 132, 133, 136, 140, 142, 144, 146, 151, 155, 161, 172, 178, 189, 190, 208, 237, 243, 248, 252, 255, 257], "x2": [0, 7, 12, 40, 65, 67, 69, 70, 71, 72, 85, 91, 94, 102, 106, 107, 108, 121, 122, 128, 129, 131, 132, 133, 136, 140, 142, 144, 146, 151, 155, 161, 172, 178, 189, 190, 208, 237, 243, 248, 252, 255, 257], "__add__": [0, 50, 193, 208], "add": [0, 7, 21, 88, 172, 173, 193, 194, 208, 209, 210, 215, 256], "__sub__": [0, 193, 208], "sub": [0, 194], "__mul__": [0, 193, 208], "mul": 0, "__truediv__": [0, 193, 208], "truediv": 0, "__floordiv__": [0, 193], "floordiv": 0, "__mod__": [0, 193], "mod": 0, "__pow__": [0, 193, 208], "pow": [0, 47, 193, 208, 210], "should": [0, 1, 5, 7, 9, 10, 11, 12, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 50, 51, 52, 55, 57, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 76, 77, 79, 85, 86, 87, 88, 90, 91, 95, 96, 97, 99, 101, 102, 103, 106, 107, 108, 110, 114, 116, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 135, 136, 137, 138, 139, 140, 142, 143, 144, 150, 151, 152, 153, 154, 155, 157, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 171, 172, 173, 176, 177, 178, 180, 181, 182, 183, 184, 185, 186, 188, 189, 194, 201, 208, 209, 210, 211, 214, 215, 216, 220, 222, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 235, 236, 237, 238, 240, 241, 242, 244, 245, 246, 249, 250, 251, 252, 253, 254, 256, 258, 259, 260, 264, 266, 267], "defin": [0, 5, 12, 23, 30, 32, 41, 49, 60, 65, 79, 91, 102, 104, 105, 116, 123, 135, 136, 137, 139, 140, 141, 142, 155, 162, 167, 168, 171, 180, 181, 188, 189, 193, 196, 201, 208, 210, 211, 220, 224, 225, 228, 229, 232, 235, 236, 240, 241, 242, 249, 250, 252, 260, 265, 266, 267], "real": [0, 5, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 24, 25, 29, 30, 31, 33, 35, 37, 39, 41, 44, 51, 60, 61, 62, 63, 64, 65, 66, 76, 77, 85, 86, 87, 88, 91, 92, 94, 95, 97, 98, 99, 101, 102, 104, 106, 107, 108, 114, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 135, 136, 137, 139, 140, 142, 143, 144, 145, 146, 147, 148, 151, 152, 155, 160, 161, 162, 163, 164, 165, 166, 167, 171, 173, 176, 177, 182, 188, 189, 191, 193, 203, 208, 211, 223, 226, 230, 231, 232, 233, 234, 235, 236, 240, 241, 242, 244, 246, 249, 250, 251, 252, 253, 254, 256, 258, 261], "data": [0, 1, 2, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76, 77, 78, 79, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 112, 114, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 157, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 188, 189, 190, 191, 192, 193, 196, 203, 206, 209, 211, 212, 215, 217, 218, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 244, 245, 246, 248, 249, 250, 251, 252, 253, 254, 256, 258, 260, 261, 262, 263, 264, 267], "type": [0, 2, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 55, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76, 77, 78, 79, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 114, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 188, 189, 190, 191, 192, 193, 194, 196, 206, 209, 211, 212, 214, 216, 217, 218, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 244, 245, 246, 248, 249, 250, 251, 252, 253, 254, 256, 258, 260, 261, 264, 265], "__matmul__": [0, 193, 208], "matmul": [0, 40, 193, 203, 208, 260], "The": [0, 1, 5, 7, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 22, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 55, 57, 58, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 76, 77, 78, 79, 85, 86, 87, 88, 90, 91, 94, 95, 97, 100, 101, 102, 103, 106, 107, 108, 110, 111, 112, 114, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 139, 140, 141, 142, 143, 144, 145, 146, 149, 150, 151, 152, 153, 154, 155, 156, 160, 161, 162, 163, 164, 165, 166, 167, 168, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 188, 189, 190, 194, 203, 206, 208, 209, 210, 212, 213, 214, 215, 218, 219, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 244, 245, 246, 248, 249, 250, 251, 252, 253, 254, 256, 258, 259, 260, 261, 263, 264, 265, 266, 267], "__invert__": [0, 193], "inv": [0, 208, 260], "invert": [0, 68, 242, 245, 252], "__inv__": 0, "__and__": [0, 193], "__or__": [0, 193], "__xor__": [0, 193], "xor": [0, 72, 132], "__lshift__": [0, 193], "lshift": 0, "__rshift__": [0, 193], "rshift": 0, "integ": [0, 5, 9, 13, 14, 15, 20, 22, 26, 29, 30, 34, 35, 36, 38, 41, 44, 45, 47, 48, 51, 52, 60, 67, 68, 69, 70, 71, 72, 76, 77, 88, 90, 91, 101, 102, 104, 105, 109, 112, 116, 117, 123, 135, 137, 139, 143, 151, 152, 155, 156, 158, 160, 161, 171, 173, 174, 182, 188, 189, 193, 194, 208, 210, 211, 222, 224, 226, 227, 228, 230, 231, 232, 233, 235, 237, 245, 246, 256, 258, 264], "boolean": [0, 5, 22, 24, 25, 26, 29, 35, 36, 43, 45, 52, 57, 60, 63, 67, 68, 70, 72, 88, 89, 103, 104, 105, 112, 116, 117, 123, 129, 130, 131, 132, 145, 193, 203, 208], "__lt__": [0, 193, 208], "lt": 0, "__le__": [0, 193, 208], "le": 0, "__gt__": [0, 193, 208], "gt": [0, 250, 253], "__ge__": [0, 193, 208], "ge": 0, "__eq__": [0, 193, 208, 215], "eq": 0, "__ne__": [0, 193, 208], "ne": 0, "ar": [0, 1, 5, 7, 15, 16, 17, 19, 23, 24, 25, 26, 27, 29, 34, 35, 40, 49, 55, 58, 60, 77, 85, 86, 89, 90, 91, 95, 98, 99, 100, 102, 103, 108, 115, 116, 123, 129, 130, 131, 132, 133, 142, 145, 151, 156, 159, 160, 164, 176, 177, 179, 183, 185, 189, 194, 203, 206, 208, 209, 210, 211, 212, 213, 214, 215, 216, 218, 219, 220, 222, 223, 224, 225, 227, 228, 229, 231, 232, 233, 234, 235, 237, 240, 241, 246, 249, 250, 253, 259, 260, 261, 264, 265, 266, 267], "onli": [0, 1, 5, 7, 16, 17, 23, 26, 40, 57, 58, 63, 100, 103, 108, 114, 116, 117, 123, 129, 130, 131, 132, 133, 137, 171, 188, 189, 193, 194, 203, 206, 208, 209, 211, 212, 214, 215, 216, 218, 220, 225, 237, 242, 249, 250, 252, 260, 261, 264, 265, 266, 267], "other": [0, 5, 21, 22, 23, 26, 28, 30, 31, 33, 37, 38, 39, 40, 41, 42, 43, 45, 47, 48, 50, 51, 52, 63, 89, 91, 97, 102, 103, 126, 141, 142, 171, 188, 194, 196, 206, 208, 210, 211, 212, 213, 214, 215, 216, 220, 237, 249, 259, 260, 263, 264, 266], "ani": [0, 1, 9, 10, 11, 23, 24, 25, 26, 28, 29, 34, 35, 43, 59, 61, 62, 66, 89, 90, 94, 108, 118, 119, 146, 167, 193, 194, 203, 208, 211, 212, 214, 220, 253, 261, 263, 264, 267], "For": [0, 1, 5, 7, 9, 10, 11, 12, 16, 17, 18, 20, 24, 25, 26, 29, 30, 31, 33, 35, 37, 39, 41, 44, 57, 58, 61, 62, 64, 65, 66, 76, 79, 85, 86, 87, 88, 91, 94, 95, 97, 101, 102, 106, 107, 108, 114, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 135, 136, 138, 139, 140, 142, 143, 144, 146, 151, 152, 154, 155, 156, 160, 161, 162, 163, 164, 165, 166, 167, 168, 170, 173, 176, 177, 182, 183, 184, 185, 186, 194, 201, 206, 210, 211, 213, 215, 218, 223, 232, 234, 251, 253, 254, 256, 264, 266, 267], "backward": [0, 13, 14, 16, 17, 18, 31, 33, 37, 39, 90, 106, 107, 121, 122, 123, 135, 136, 139, 140, 155, 166, 189, 194, 208, 211, 212, 216, 222, 224, 226, 227, 228, 230, 231, 232, 233, 235, 237, 264], "compat": [0, 1, 12, 13, 14, 16, 17, 18, 21, 22, 26, 28, 30, 31, 33, 37, 38, 39, 40, 41, 42, 43, 45, 47, 48, 49, 50, 51, 52, 65, 67, 69, 70, 71, 72, 74, 77, 85, 91, 94, 102, 106, 107, 108, 121, 122, 123, 128, 129, 131, 132, 133, 135, 136, 137, 139, 140, 142, 144, 146, 151, 152, 155, 156, 157, 166, 171, 172, 173, 175, 188, 189, 190, 203, 208, 211, 212, 216, 237, 244, 246, 249, 252, 258, 264, 266], "mai": [0, 5, 7, 15, 16, 17, 18, 23, 26, 28, 31, 33, 37, 39, 43, 51, 57, 58, 59, 60, 89, 90, 91, 94, 102, 103, 106, 107, 108, 111, 116, 117, 121, 122, 123, 129, 130, 131, 132, 135, 136, 137, 139, 140, 142, 145, 146, 156, 157, 161, 166, 171, 177, 183, 184, 185, 186, 188, 193, 194, 201, 203, 206, 209, 210, 211, 212, 213, 214, 215, 216, 218, 219, 220, 240, 250, 251, 253, 259, 260, 264, 265, 266], "complex": [0, 5, 9, 10, 11, 12, 13, 14, 16, 17, 18, 20, 21, 24, 25, 29, 31, 33, 35, 37, 39, 40, 42, 43, 44, 46, 47, 50, 51, 60, 61, 62, 63, 64, 66, 79, 86, 87, 88, 91, 94, 95, 97, 98, 99, 104, 105, 106, 107, 108, 110, 114, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 133, 135, 136, 138, 139, 140, 142, 143, 145, 146, 147, 148, 150, 151, 152, 153, 160, 162, 164, 165, 166, 167, 168, 172, 173, 176, 177, 178, 183, 184, 185, 186, 189, 203, 210, 214, 215, 217, 218, 222, 224, 226, 227, 228, 230, 231, 232, 233, 235, 236, 237, 238, 240, 241, 242, 244, 245, 246, 248, 249, 250, 251, 252, 253, 254, 256, 258, 260, 264, 265], "howev": [0, 5, 16, 17, 18, 31, 33, 37, 39, 57, 88, 102, 106, 107, 108, 117, 121, 122, 123, 135, 136, 139, 140, 156, 161, 166, 174, 176, 177, 206, 209, 210, 211, 212, 213, 215, 260, 261, 264, 266], "inequ": [0, 16, 17, 18, 31, 33, 37, 39, 106, 107, 121, 122, 135, 136, 139, 140, 166], "unspecifi": [0, 5, 10, 11, 16, 17, 18, 30, 31, 32, 33, 37, 39, 41, 47, 51, 60, 62, 66, 77, 78, 87, 91, 95, 97, 102, 104, 105, 106, 107, 121, 122, 123, 135, 136, 139, 140, 151, 155, 161, 165, 166, 167, 170, 174, 175, 177, 194, 201, 203, 208, 224, 225, 228, 229, 232, 235, 240, 241, 264], "thu": [0, 5, 16, 17, 18, 30, 31, 32, 33, 37, 39, 41, 47, 57, 60, 71, 77, 102, 104, 105, 106, 107, 121, 122, 123, 135, 136, 139, 140, 151, 155, 161, 166, 176, 177, 194, 201, 210, 211, 224, 225, 228, 229, 232, 235, 240, 241, 253, 260], "depend": [0, 5, 9, 10, 11, 16, 17, 18, 20, 26, 29, 31, 33, 37, 39, 44, 47, 51, 57, 58, 59, 61, 62, 63, 64, 65, 66, 77, 86, 87, 91, 95, 97, 106, 107, 112, 121, 122, 123, 124, 125, 126, 127, 142, 143, 151, 161, 164, 165, 166, 176, 177, 190, 201, 203, 210, 211, 214, 217, 218, 220, 240, 241, 250, 251, 252, 253, 260, 264, 266, 267], "see": [0, 5, 10, 11, 12, 13, 14, 16, 17, 18, 21, 22, 26, 28, 30, 31, 32, 33, 34, 37, 38, 39, 40, 41, 42, 43, 45, 47, 48, 49, 50, 51, 52, 53, 59, 61, 62, 64, 65, 66, 67, 69, 70, 71, 72, 74, 77, 85, 91, 94, 97, 102, 103, 105, 106, 107, 108, 111, 112, 115, 121, 122, 124, 126, 128, 129, 131, 132, 133, 135, 136, 137, 139, 140, 142, 144, 145, 146, 151, 152, 154, 155, 156, 158, 162, 166, 167, 168, 171, 172, 173, 175, 183, 184, 185, 186, 188, 189, 190, 193, 194, 203, 205, 206, 209, 211, 213, 214, 215, 220, 237, 244, 246, 249, 252, 258, 259, 264, 265, 266, 267], "order": [0, 5, 7, 16, 17, 18, 19, 26, 31, 33, 37, 39, 55, 60, 63, 65, 89, 90, 100, 102, 103, 106, 107, 121, 122, 135, 136, 139, 140, 145, 156, 161, 166, 176, 177, 178, 183, 184, 185, 186, 194, 201, 203, 208, 210, 213, 214, 216, 231, 232, 240, 241, 244, 253, 254, 258, 260, 261, 264, 265], "chang": [0, 1, 9, 10, 11, 12, 13, 14, 20, 21, 24, 25, 26, 29, 34, 35, 40, 42, 43, 44, 46, 47, 50, 51, 59, 60, 61, 62, 63, 64, 66, 86, 87, 91, 94, 95, 97, 98, 99, 103, 104, 105, 118, 119, 120, 123, 124, 125, 126, 127, 133, 135, 138, 139, 142, 143, 145, 146, 147, 148, 150, 151, 152, 157, 160, 162, 164, 165, 167, 168, 172, 173, 174, 176, 177, 178, 183, 184, 185, 186, 189, 206, 222, 223, 224, 226, 227, 228, 231, 232, 234, 236, 237, 238, 240, 241, 242, 244, 245, 246, 248, 249, 250, 251, 252, 253, 254, 256, 258, 261, 264, 266, 267], "shape": [0, 1, 18, 40, 55, 63, 73, 74, 78, 88, 90, 92, 93, 96, 100, 104, 105, 112, 133, 134, 138, 147, 148, 157, 159, 161, 166, 170, 174, 175, 178, 179, 180, 181, 187, 189, 191, 192, 193, 208, 217, 218, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 238, 239, 240, 241, 242, 244, 245, 246, 248, 249, 250, 251, 252, 253, 254, 256, 264, 266], "result": [0, 1, 5, 9, 10, 11, 12, 13, 14, 15, 16, 17, 20, 21, 22, 24, 25, 28, 29, 30, 31, 33, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 76, 77, 79, 85, 86, 87, 91, 94, 95, 97, 101, 102, 106, 107, 108, 110, 118, 119, 120, 121, 122, 124, 125, 126, 127, 128, 129, 130, 131, 132, 135, 136, 137, 139, 140, 142, 143, 144, 146, 150, 151, 152, 153, 154, 155, 156, 158, 160, 161, 162, 163, 164, 165, 167, 168, 170, 171, 172, 173, 176, 177, 178, 182, 183, 188, 194, 201, 203, 208, 210, 211, 212, 218, 236, 237, 239, 244, 245, 251, 252, 258, 264, 265, 266, 267], "promot": [0, 1, 5, 10, 11, 12, 21, 22, 30, 40, 41, 42, 44, 45, 47, 49, 50, 51, 52, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 75, 78, 85, 86, 87, 91, 95, 97, 102, 105, 108, 123, 124, 125, 126, 127, 128, 133, 136, 137, 140, 142, 143, 151, 154, 155, 158, 164, 165, 167, 168, 170, 171, 172, 176, 177, 178, 188, 189, 190, 193, 208, 236, 237, 242, 244, 245, 246, 248, 249, 250, 251, 252, 258, 260], "rule": [0, 5, 7, 10, 11, 12, 21, 22, 30, 40, 41, 42, 44, 45, 47, 49, 50, 51, 52, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 75, 78, 85, 86, 87, 88, 91, 95, 97, 102, 104, 105, 108, 123, 124, 125, 126, 127, 128, 133, 136, 140, 142, 143, 151, 154, 155, 158, 162, 164, 165, 167, 168, 170, 172, 176, 177, 178, 189, 190, 193, 194, 208, 211, 214, 236, 237, 242, 244, 245, 246, 248, 249, 250, 251, 252, 258, 260, 264, 266], "broadcast": [0, 12, 13, 14, 16, 17, 21, 22, 28, 30, 31, 33, 37, 38, 39, 40, 41, 42, 43, 45, 47, 48, 49, 50, 51, 52, 65, 67, 69, 70, 71, 72, 73, 74, 77, 85, 91, 94, 102, 106, 107, 108, 121, 122, 128, 129, 131, 132, 133, 135, 136, 137, 139, 140, 142, 144, 146, 151, 152, 155, 156, 171, 172, 173, 175, 178, 188, 189, 190, 193, 208, 237, 244, 246, 249, 252, 258, 264], "same": [0, 5, 7, 9, 12, 15, 18, 19, 20, 26, 32, 36, 38, 40, 41, 46, 48, 50, 55, 59, 63, 68, 73, 74, 76, 77, 78, 79, 88, 90, 91, 93, 96, 99, 100, 101, 102, 103, 105, 110, 133, 134, 135, 137, 138, 139, 141, 142, 144, 148, 149, 150, 151, 152, 153, 155, 156, 157, 159, 160, 161, 162, 166, 169, 170, 171, 172, 173, 174, 175, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 192, 194, 203, 206, 208, 211, 212, 214, 215, 220, 222, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 235, 236, 238, 239, 240, 242, 245, 249, 250, 251, 253, 254, 256, 259, 260, 264, 266], "behavior": [0, 5, 32, 47, 49, 59, 60, 63, 77, 91, 102, 104, 105, 108, 123, 142, 151, 155, 161, 174, 175, 183, 184, 185, 186, 193, 194, 196, 203, 206, 208, 210, 211, 218, 219, 224, 225, 228, 229, 232, 235, 260, 261, 264, 265, 266, 267], "special": [0, 9, 10, 11, 12, 20, 21, 24, 25, 28, 29, 30, 35, 41, 42, 43, 47, 51, 61, 62, 64, 65, 66, 76, 77, 85, 86, 87, 88, 91, 94, 95, 97, 101, 102, 108, 118, 119, 120, 124, 125, 126, 127, 128, 135, 136, 137, 139, 140, 142, 144, 146, 151, 152, 154, 155, 160, 162, 163, 164, 165, 167, 168, 171, 173, 176, 177, 182, 188, 208, 209, 211, 251, 256], "case": [0, 1, 5, 7, 9, 10, 11, 12, 15, 20, 21, 24, 25, 26, 28, 29, 30, 35, 41, 42, 43, 47, 51, 60, 61, 62, 64, 65, 66, 76, 77, 85, 86, 87, 88, 91, 94, 95, 97, 101, 102, 103, 108, 118, 119, 120, 124, 125, 126, 127, 128, 135, 136, 137, 138, 139, 140, 142, 144, 146, 151, 152, 154, 155, 160, 162, 163, 164, 165, 167, 168, 171, 173, 176, 177, 182, 188, 194, 206, 208, 209, 210, 211, 212, 215, 216, 218, 250, 251, 253, 256, 260, 262, 264, 267], "its": [0, 5, 26, 40, 73, 91, 99, 133, 142, 157, 159, 210, 211, 214, 215, 259, 264, 265, 266], "respect": [0, 9, 12, 20, 21, 22, 28, 30, 31, 33, 37, 38, 39, 41, 42, 43, 45, 48, 50, 51, 52, 65, 67, 69, 70, 71, 72, 77, 87, 91, 94, 102, 106, 107, 108, 114, 121, 122, 123, 128, 129, 131, 132, 136, 138, 140, 141, 142, 144, 146, 155, 165, 172, 176, 177, 178, 183, 184, 189, 208, 210, 213, 215, 240, 250, 253], "binari": [0, 5, 67, 70, 72, 176, 177, 209], "two": [0, 1, 5, 15, 19, 40, 55, 65, 71, 98, 103, 133, 134, 138, 160, 178, 180, 181, 183, 184, 185, 186, 189, 194, 203, 214, 215, 218, 219, 224, 225, 228, 229, 232, 235, 236, 238, 239, 240, 241, 242, 244, 245, 246, 248, 249, 250, 251, 252, 253, 254, 256, 260, 264, 265, 266, 267], "operand": [0, 1, 9, 10, 11, 12, 24, 25, 29, 35, 61, 62, 64, 65, 66, 76, 85, 86, 87, 88, 91, 94, 95, 97, 101, 102, 108, 118, 119, 120, 124, 125, 126, 127, 128, 135, 136, 139, 140, 142, 144, 146, 151, 152, 154, 155, 160, 162, 163, 164, 165, 167, 168, 173, 176, 177, 182, 203, 208, 210, 251, 256], "assign": [0, 212], "exampl": [0, 5, 12, 23, 26, 116, 117, 170, 193, 194, 206, 211, 212, 213, 215, 218, 219, 220, 256, 260, 264, 266, 267], "after": [0, 1, 26, 40, 133, 167, 179], "addit": [0, 5, 7, 12, 26, 50, 59, 88, 116, 172, 193, 194, 203, 209, 211, 214, 260, 264, 265, 267], "modifi": [0, 26, 212, 263], "equal": [0, 1, 9, 10, 11, 18, 20, 21, 22, 26, 28, 30, 31, 33, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 58, 61, 62, 63, 64, 65, 66, 69, 71, 77, 87, 89, 95, 97, 98, 104, 105, 108, 117, 119, 124, 125, 126, 127, 137, 145, 146, 147, 148, 151, 152, 160, 165, 166, 167, 171, 173, 174, 175, 177, 178, 179, 183, 184, 185, 186, 188, 193, 194, 201, 208, 211, 215, 222, 224, 226, 227, 228, 230, 231, 232, 233, 235, 237, 239, 245, 246, 249, 250, 251, 252, 256, 264], "equival": [0, 20, 21, 22, 28, 30, 31, 33, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 71, 102, 108, 129, 130, 131, 132, 155, 160, 174, 194, 203, 211, 212, 246, 249, 252, 258, 264], "discuss": [0, 94, 146, 208, 214, 215, 219, 264, 265, 266], "copi": [0, 1, 26, 59, 60, 63, 103, 157, 166, 208, 209, 214, 215, 217, 263, 264], "view": [0, 103, 217], "behaviour": [0, 217, 264, 266], "mutabl": [0, 217], "via": [0, 26, 102, 103, 174, 194, 209, 214, 215, 219, 221, 249, 259, 260, 261, 264], "__iadd__": 0, "__isub__": 0, "__imul__": 0, "__itruediv__": 0, "__ifloordiv__": 0, "__ipow__": 0, "__imod__": 0, "__imatmul__": 0, "__iand__": 0, "__ior__": 0, "__ixor__": 0, "__ilshift__": 0, "__irshift__": 0, "appli": [0, 12, 77, 78, 85, 91, 142, 158, 160, 170, 178, 194, 203, 206, 211, 222, 224, 227, 228, 231, 232, 233, 235, 246, 249, 260, 264, 266], "match": [0, 1, 5, 9, 20, 26, 63, 102, 155, 178, 183, 184, 216, 226, 230, 231, 232, 233, 235, 240, 241, 244, 258, 266], "op": [0, 203], "__radd__": 0, "__rsub__": 0, "__rmul__": 0, "__rtruediv__": 0, "__rfloordiv__": 0, "__rpow__": 0, "__rmod__": 0, "__rmatmul__": 0, "__rand__": 0, "__ror__": 0, "__rxor__": 0, "__rlshift__": 0, "__rrshift__": 0, "arrai": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 83, 85, 86, 87, 88, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 195, 196, 197, 198, 199, 200, 201, 202, 204, 205, 206, 208, 209, 210, 211, 212, 213, 214, 215, 216, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 265, 267], "refer": [1, 13, 14, 90, 97, 98, 126, 171, 178, 179, 188, 189, 194, 211, 212, 220, 222, 224, 226, 227, 228, 230, 231, 232, 233, 235, 237, 252], "automat": [1, 32, 264], "implicit": [1, 214, 215, 218, 264], "expans": [1, 264], "size": [1, 13, 14, 88, 90, 96, 123, 145, 159, 169, 174, 175, 178, 189, 193, 194, 213, 219, 222, 224, 226, 227, 228, 230, 231, 232, 233, 235, 237, 239, 248, 250, 253, 264], "without": [1, 7, 26, 57, 103, 114, 116, 145, 156, 157, 183, 184, 185, 186, 206, 209, 210, 213, 263, 264, 266], "purpos": [1, 5, 97, 108, 126, 206, 251, 260, 262, 263, 266], "make": [1, 7, 206, 209, 210, 212, 214, 218, 222, 224, 226, 227, 228, 230, 231, 232, 233, 235, 259, 261, 264], "differ": [1, 12, 26, 49, 50, 77, 78, 88, 90, 91, 99, 102, 103, 142, 152, 170, 172, 173, 194, 206, 212, 215, 216, 218, 229, 240, 250, 251, 253, 256, 260, 264, 265, 266], "element": [1, 9, 10, 11, 12, 13, 14, 15, 20, 21, 22, 24, 25, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 54, 58, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 76, 77, 79, 85, 86, 87, 88, 90, 91, 94, 95, 97, 98, 100, 101, 102, 104, 105, 106, 107, 108, 110, 118, 119, 120, 121, 122, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 135, 136, 137, 139, 140, 142, 143, 144, 145, 146, 150, 151, 152, 153, 154, 155, 156, 157, 159, 160, 161, 162, 163, 164, 165, 167, 168, 169, 171, 172, 173, 174, 175, 176, 177, 179, 180, 181, 182, 183, 184, 185, 186, 188, 190, 193, 194, 208, 210, 222, 224, 226, 227, 228, 230, 231, 232, 233, 235, 237, 240, 249, 250, 251, 253, 256, 264], "wise": [1, 9, 10, 12, 20, 21, 22, 28, 30, 31, 33, 36, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 61, 64, 65, 67, 68, 69, 70, 71, 72, 77, 79, 85, 91, 94, 102, 106, 107, 108, 110, 121, 122, 128, 129, 130, 131, 132, 136, 140, 142, 144, 146, 151, 153, 154, 155, 172, 193, 208, 210, 264], "oper": [1, 12, 19, 24, 26, 34, 40, 57, 58, 59, 61, 64, 71, 86, 88, 91, 102, 125, 127, 133, 142, 151, 152, 154, 155, 158, 164, 168, 173, 176, 178, 193, 194, 200, 203, 208, 211, 212, 213, 214, 215, 256, 260, 261, 264, 265, 266], "facilit": [1, 201, 206], "user": [1, 7, 26, 111, 177, 206, 209, 210, 212, 215, 219, 260, 264, 265, 266], "ergonom": 1, "encourag": [1, 264, 265], "avoid": [1, 9, 63, 91, 97, 102, 108, 126, 142, 157, 209, 212, 215, 218, 260, 264, 266], "unnecessari": [1, 260], "can": [1, 7, 26, 32, 60, 75, 111, 115, 117, 194, 203, 206, 209, 211, 212, 214, 215, 220, 249, 250, 253, 259, 260, 264, 265, 266, 267], "potenti": [1, 26, 97, 112, 126, 156, 212, 264], "enabl": [1, 26, 103, 215, 219, 220, 264], "more": [1, 5, 7, 15, 19, 26, 32, 40, 58, 60, 63, 73, 88, 97, 100, 102, 126, 133, 145, 151, 156, 174, 183, 184, 185, 186, 194, 203, 206, 209, 210, 211, 212, 213, 214, 215, 216, 219, 220, 224, 225, 228, 229, 232, 235, 251, 260, 261, 264, 265, 267], "memori": [1, 26, 60, 103, 206, 212, 213, 215, 264, 266], "effici": [1, 206, 212], "through": [1, 60, 65, 259, 261, 265, 266], "vector": [1, 40, 133, 138, 189, 237, 248, 253, 254, 258, 260, 264], "reduc": [1, 13, 14, 16, 17, 135, 137, 139, 152, 171, 173, 188, 194, 250, 253, 260, 265, 266], "consumpt": [1, 26, 265], "cach": 1, "local": [1, 215], "given": [1, 23, 90, 100, 123, 159, 161, 187, 203, 208, 211, 212, 215, 216, 220, 241, 251, 260, 261, 264, 266], "involv": [1, 12, 91, 102, 142, 151, 158, 203, 210, 211, 215, 219], "singleton": [1, 13, 14, 16, 17, 96, 135, 137, 139, 152, 169, 171, 173, 179, 188, 244, 258, 264], "whose": [1, 5, 9, 11, 19, 20, 26, 47, 55, 62, 66, 85, 86, 87, 98, 100, 103, 134, 151, 159, 163, 164, 165, 174, 175, 176, 177, 178, 180, 181, 183, 184, 185, 194, 212, 226, 230, 231, 232, 233, 235, 236, 238, 239, 240, 241, 242, 244, 245, 246, 248, 249, 250, 251, 252, 253, 254, 256, 258, 264, 266], "one": [1, 15, 19, 26, 32, 40, 51, 58, 60, 63, 73, 75, 88, 91, 96, 98, 100, 102, 103, 116, 117, 123, 133, 138, 142, 145, 147, 148, 156, 161, 169, 174, 175, 183, 184, 185, 186, 189, 194, 206, 209, 211, 212, 214, 215, 218, 219, 220, 222, 224, 226, 227, 228, 229, 230, 231, 232, 233, 235, 248, 249, 250, 258, 260, 261, 264, 266], "virtual": 1, "repeat": [1, 193, 194, 208, 266], "across": [1, 5, 91, 102, 142, 177, 208, 210, 211, 215, 259, 264], "correspond": [1, 16, 17, 23, 47, 59, 65, 73, 77, 103, 112, 113, 114, 151, 157, 159, 161, 171, 175, 178, 183, 184, 185, 186, 188, 189, 194, 208, 210, 224, 228, 232, 235, 237, 240, 244, 263, 264], "If": [1, 5, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 23, 24, 25, 26, 29, 34, 35, 40, 44, 47, 51, 55, 57, 59, 60, 61, 62, 63, 64, 65, 66, 74, 76, 77, 78, 85, 86, 87, 88, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 108, 112, 114, 116, 117, 118, 119, 120, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 151, 152, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 169, 170, 171, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 191, 192, 194, 209, 211, 215, 221, 222, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 235, 236, 237, 240, 241, 242, 244, 245, 246, 249, 250, 251, 252, 253, 256, 258, 259, 260, 264, 266], "unequ": 1, "lower": [1, 77, 98, 180, 236], "higher": [1, 5, 26, 90, 194, 209, 260, 265], "prepend": [1, 40, 90, 96, 133, 179], "until": [1, 26, 179], "store": [1, 26, 215, 256], "determin": [1, 10, 11, 12, 13, 14, 21, 22, 26, 30, 40, 41, 42, 44, 45, 47, 50, 51, 52, 61, 62, 64, 65, 66, 67, 69, 70, 71, 72, 75, 78, 85, 86, 87, 88, 90, 91, 95, 97, 102, 108, 118, 119, 120, 124, 125, 126, 127, 128, 133, 136, 140, 142, 143, 151, 154, 155, 163, 164, 165, 167, 168, 172, 174, 175, 176, 177, 178, 183, 184, 185, 186, 189, 190, 203, 208, 211, 214, 215, 222, 224, 226, 227, 228, 230, 231, 232, 233, 235, 236, 237, 238, 239, 242, 244, 245, 246, 248, 249, 250, 251, 252, 256, 258, 260, 264], "let": [1, 9, 10, 11, 12, 62, 66, 85, 87, 88, 90, 94, 95, 97, 103, 118, 119, 120, 123, 124, 126, 137, 146, 152, 156, 161, 162, 165, 167, 171, 173, 177, 179, 188, 189, 194, 219, 222, 224, 226, 227, 228, 230, 231, 232, 233, 235, 236, 240, 241, 242, 250, 252, 253, 256], "b": [1, 9, 10, 11, 12, 57, 62, 66, 87, 91, 94, 95, 97, 102, 118, 119, 120, 123, 124, 126, 142, 146, 162, 165, 167, 170, 177, 189, 194, 208, 211, 212, 216, 249, 252, 266], "both": [1, 40, 44, 47, 51, 65, 77, 88, 91, 99, 102, 103, 108, 123, 133, 143, 151, 152, 173, 177, 178, 189, 194, 211, 212, 214, 218, 220, 237, 256, 260, 264, 265], "shape1": 1, "describ": [1, 5, 12, 88, 91, 94, 116, 117, 142, 146, 151, 152, 173, 196, 203, 211, 214, 218, 223, 234, 256, 264], "shape2": 1, "n1": [1, 90, 138], "len": [1, 138, 179], "n2": [1, 90, 138], "max": [1, 26, 77, 99, 109, 112, 179, 193, 194, 208, 244, 246, 249], "temporari": 1, "list": [1, 73, 78, 111, 115, 138, 170, 194, 206, 208, 215, 264, 266], "length": [1, 15, 108, 138, 157, 178, 194, 223, 225, 226, 229, 234, 253, 254], "while": [1, 102, 116, 123, 129, 130, 131, 132, 137, 141, 161, 171, 183, 184, 188, 193, 194, 201, 206, 208, 211, 212, 213, 215, 218, 249, 260, 265, 266, 267], "d1": 1, "els": [1, 26, 206, 265], "d2": 1, "set": [1, 18, 26, 49, 65, 103, 163, 166, 171, 180, 181, 183, 185, 186, 188, 193, 194, 208, 209, 210, 211, 212, 215, 216, 219, 220, 222, 224, 226, 227, 228, 230, 231, 232, 233, 235, 236, 240, 241, 242, 246, 249, 250, 252, 253, 259, 260, 264, 266, 267], "th": [1, 90, 98, 179, 194, 224, 228, 232, 235], "throw": 1, "except": [1, 7, 13, 14, 26, 74, 78, 88, 90, 98, 103, 123, 145, 156, 170, 174, 175, 187, 194, 203, 206, 208, 210, 212, 215, 217, 218, 222, 224, 226, 227, 228, 230, 231, 232, 233, 235, 249, 261, 264, 265, 266], "demonstr": 1, "applic": [1, 26, 88, 152, 156, 173, 203, 256, 260, 264, 265], "4d": 1, "8": [1, 5, 7, 27, 179, 203, 206], "6": [1, 7, 179], "3d": 1, "7": [1, 7, 27, 220], "5": [1, 194, 264], "2d": 1, "1d": 1, "15": 1, "do": [1, 26, 91, 142, 155, 201, 206, 209, 211, 212, 214, 215, 216, 260, 261, 263, 264, 266, 267], "doe": [1, 15, 26, 103, 146, 174, 175, 194, 203, 206, 209, 210, 211, 212, 213, 215, 216, 218, 220, 260, 264, 266, 267], "second": [1, 12, 65, 67, 69, 70, 71, 72, 94, 106, 107, 108, 121, 122, 128, 129, 131, 132, 133, 136, 140, 142, 144, 146, 151, 170, 172, 178, 183, 184, 185, 189, 190, 237, 240, 248, 250, 251, 253, 254, 264], "append": [1, 40, 69, 90, 96, 133, 239], "As": [1, 123, 151, 183, 184, 185, 186, 206, 214, 220, 266], "impli": [1, 183, 184, 185, 186, 263, 264], "__setitem__": [1, 174, 193, 208], "Such": [1, 210, 260], "right": [1, 69, 71, 108, 161, 167, 209, 253, 263], "hand": [1, 203], "left": [1, 5, 60, 69, 102, 104, 161, 174, 175, 194, 203, 240, 241, 253, 264], "index": [1, 5, 16, 17, 18, 32, 34, 49, 57, 83, 98, 112, 114, 138, 141, 145, 161, 170, 174, 178, 183, 184, 185, 193, 208, 224, 228, 232, 235, 264, 266], "perform": [1, 5, 13, 14, 26, 40, 59, 60, 91, 108, 133, 142, 156, 178, 194, 209, 210, 211, 212, 213, 214, 222, 224, 227, 228, 229, 231, 232, 233, 235, 253, 254, 260, 264, 265, 266], "empti": [1, 13, 14, 15, 152, 173, 193, 194, 208, 256, 264], "ok": 1, "allow": [1, 24, 25, 26, 29, 34, 35, 114, 116, 151, 157, 178, 194, 208, 209, 210, 212, 215, 218, 219, 260, 266], "NOT": [1, 130, 263], "adher": [2, 7, 8, 193, 194, 206, 259, 264], "convent": [2, 7, 10, 11, 26, 40, 61, 62, 64, 65, 66, 88, 124, 126, 133, 151, 167, 193, 194, 201, 211, 215, 259, 260, 265], "each": [2, 9, 10, 11, 12, 20, 21, 22, 26, 28, 30, 31, 33, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 76, 77, 79, 85, 86, 87, 91, 94, 95, 97, 101, 102, 106, 107, 108, 110, 115, 118, 119, 120, 121, 122, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 136, 138, 140, 141, 142, 143, 144, 145, 146, 150, 151, 153, 154, 155, 156, 159, 160, 161, 162, 163, 164, 165, 167, 168, 170, 172, 176, 177, 178, 179, 182, 183, 184, 194, 206, 208, 210, 214, 218, 220, 232, 236, 237, 238, 242, 244, 245, 246, 249, 250, 251, 252, 253, 254, 259, 260, 264, 265, 266], "float": [2, 5, 9, 10, 11, 12, 13, 14, 15, 20, 21, 24, 25, 28, 29, 30, 31, 33, 34, 35, 37, 39, 40, 41, 42, 43, 44, 47, 49, 50, 51, 60, 61, 62, 63, 64, 65, 66, 76, 77, 79, 80, 81, 82, 84, 85, 86, 87, 88, 91, 92, 94, 95, 97, 98, 99, 101, 102, 104, 105, 108, 110, 114, 116, 117, 118, 119, 120, 123, 124, 125, 126, 127, 128, 133, 135, 136, 137, 139, 140, 142, 143, 144, 145, 146, 147, 148, 151, 152, 153, 154, 155, 158, 160, 161, 162, 163, 164, 165, 167, 168, 171, 172, 173, 176, 177, 178, 182, 183, 184, 185, 186, 188, 189, 191, 193, 201, 208, 210, 211, 218, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 238, 240, 241, 242, 244, 245, 246, 249, 250, 251, 252, 253, 254, 256, 258, 260, 264, 265], "point": [2, 5, 9, 10, 11, 12, 13, 14, 15, 20, 24, 25, 26, 29, 34, 35, 40, 41, 42, 44, 47, 50, 51, 60, 61, 62, 63, 64, 65, 66, 76, 77, 79, 80, 81, 82, 84, 85, 86, 87, 88, 91, 92, 94, 95, 97, 98, 99, 101, 102, 104, 105, 108, 110, 114, 116, 117, 118, 119, 120, 123, 124, 125, 126, 127, 128, 133, 135, 136, 137, 139, 140, 142, 143, 144, 145, 146, 147, 148, 151, 152, 153, 154, 155, 158, 160, 161, 162, 163, 164, 165, 167, 168, 171, 172, 173, 176, 177, 178, 182, 183, 184, 185, 186, 188, 189, 191, 193, 201, 208, 210, 211, 215, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 238, 240, 241, 242, 244, 245, 246, 249, 250, 251, 252, 253, 254, 256, 258, 260, 264, 266], "creat": [3, 15, 60, 92, 93, 98, 103, 104, 105, 123, 147, 148, 191, 192, 200, 206, 215, 223, 234, 260, 264], "main": [5, 98, 180, 181, 209, 214, 239, 256, 259, 266], "namespac": [5, 7, 23, 111, 196, 206, 208, 221, 259, 260, 261, 264, 267], "under": [5, 259, 263, 264], "specifi": [5, 13, 14, 15, 16, 17, 18, 26, 29, 59, 60, 63, 74, 78, 88, 90, 92, 96, 99, 100, 104, 114, 116, 117, 123, 147, 152, 155, 156, 159, 169, 170, 173, 174, 175, 179, 180, 181, 183, 184, 185, 186, 189, 191, 194, 203, 208, 210, 211, 212, 214, 215, 216, 220, 222, 224, 225, 226, 227, 228, 230, 231, 232, 233, 235, 239, 256, 258, 260, 261, 264, 266, 267], "name": [5, 7, 23, 26, 102, 116, 183, 184, 185, 194, 211, 240, 249, 250, 251, 253, 259, 264, 265], "descript": [5, 7, 208, 210, 244, 258], "bool": [5, 13, 14, 16, 17, 18, 22, 24, 26, 28, 31, 33, 37, 39, 43, 45, 49, 52, 60, 63, 75, 88, 89, 94, 103, 104, 105, 106, 107, 116, 117, 118, 119, 120, 121, 122, 123, 129, 130, 131, 132, 135, 137, 139, 146, 152, 157, 163, 166, 171, 173, 188, 203, 208, 218, 236, 244, 253, 258], "true": [5, 13, 14, 16, 17, 18, 24, 25, 26, 29, 35, 60, 63, 75, 88, 94, 99, 102, 103, 112, 118, 119, 120, 123, 129, 130, 131, 132, 135, 137, 139, 145, 146, 152, 157, 163, 166, 171, 173, 183, 184, 185, 186, 188, 190, 194, 208, 236, 244, 253, 258, 260], "fals": [5, 13, 14, 16, 17, 18, 24, 25, 26, 29, 35, 60, 63, 75, 88, 94, 103, 112, 118, 119, 120, 123, 129, 130, 131, 132, 135, 137, 139, 146, 152, 157, 163, 166, 171, 173, 183, 184, 185, 186, 188, 194, 236, 244, 253, 258], "int8": [5, 116, 117, 203], "bit": [5, 68, 69, 71, 85, 88, 99, 109, 152, 163, 173, 203, 208, 210, 256], "sign": [5, 9, 10, 11, 12, 15, 20, 41, 44, 62, 65, 66, 71, 85, 87, 88, 91, 95, 97, 102, 116, 117, 124, 126, 135, 136, 139, 140, 142, 143, 151, 152, 155, 161, 163, 165, 167, 173, 177, 183, 184, 185, 186, 193, 201, 208, 211, 250, 251, 256], "exist": [5, 7, 26, 60, 78, 103, 206, 208, 211, 214, 215, 216, 242, 261, 264, 265], "interv": [5, 10, 11, 13, 14, 15, 61, 62, 64, 66, 90, 96, 123, 124, 126, 141, 170, 178, 180, 181, 187, 189, 194, 222, 224, 226, 227, 228, 230, 231, 232, 233, 235, 237, 261], "128": 5, "127": 5, "int16": [5, 88, 116, 117, 152, 173, 203, 256], "16": [5, 203], "32": [5, 203], "767": 5, "int32": [5, 88, 116, 117, 152, 173, 203, 256], "147": 5, "483": 5, "647": 5, "int64": [5, 88, 116, 117, 152, 173, 203, 256], "64": [5, 203], "9": [5, 27], "223": 5, "372": 5, "036": 5, "854": 5, "775": 5, "807": 5, "uint8": [5, 116, 117, 203], "unsign": [5, 88, 116, 117, 152, 173, 193, 256], "255": 5, "uint16": [5, 88, 116, 117, 152, 173, 203, 256], "65": 5, "535": [5, 208], "uint32": [5, 88, 116, 117, 152, 173, 203, 256], "294": 5, "967": 5, "295": 5, "uint64": [5, 116, 117, 203], "18": 5, "446": [5, 208], "744": [5, 208], "073": 5, "709": [5, 208], "551": [5, 208], "615": 5, "float32": [5, 110, 116, 117, 153, 203, 251, 253, 254], "ieee": [5, 12, 65, 80, 81, 82, 84, 91, 97, 99, 108, 126, 142, 155, 167, 176, 177, 193, 201, 210, 211, 264], "754": [5, 12, 65, 80, 81, 82, 84, 91, 97, 99, 108, 126, 142, 155, 167, 176, 177, 193, 201, 210, 211, 264], "singl": [5, 7, 24, 25, 29, 34, 35, 114, 116, 183, 184, 193, 203, 208, 209, 211, 214, 215, 220, 260, 264, 265, 266], "precis": [5, 9, 20, 42, 60, 99, 104, 105, 110, 142, 153, 167, 203, 208, 210, 226, 230, 231, 232, 233, 235, 240, 241, 244, 251, 253, 254, 258, 264], "2019": [5, 12, 91, 97, 108, 126, 142, 193, 210, 264, 266], "float64": [5, 9, 20, 116, 117, 203, 226, 230, 231, 232, 233, 235, 240, 241, 244, 258], "doubl": [5, 178, 203, 208], "complex64": [5, 110, 116, 117, 153, 203, 208, 251, 253, 254], "imaginari": [5, 10, 11, 12, 13, 14, 44, 61, 62, 63, 64, 66, 79, 87, 91, 94, 95, 97, 99, 110, 124, 126, 142, 143, 145, 146, 147, 148, 151, 160, 165, 167, 177, 208, 211], "compon": [5, 10, 11, 12, 13, 14, 44, 62, 63, 66, 79, 87, 91, 94, 95, 97, 99, 110, 124, 126, 142, 143, 145, 146, 147, 148, 151, 153, 160, 165, 167, 176, 177, 183, 184, 185, 186, 208, 211, 225, 234], "complex128": [5, 9, 20, 116, 117, 203, 208, 226, 230, 231, 232, 233, 235, 240, 241, 244, 258], "method": [5, 26, 34, 103, 193, 196, 206, 212, 214, 215, 218, 219, 220, 264, 265, 266], "attribut": [5, 23, 99, 109, 193, 205, 208, 261, 264, 265, 266], "requir": [5, 10, 11, 24, 25, 29, 34, 35, 59, 61, 62, 63, 64, 66, 88, 103, 108, 117, 152, 167, 170, 173, 174, 175, 177, 183, 184, 186, 187, 193, 194, 201, 203, 206, 208, 209, 210, 211, 212, 213, 214, 215, 218, 220, 222, 223, 224, 226, 227, 228, 231, 232, 234, 237, 256, 259, 260, 264, 265, 266], "beyond": [5, 159, 203, 264], "It": [5, 23, 26, 103, 206, 212, 214, 264, 266, 267], "also": [5, 7, 26, 32, 34, 103, 108, 162, 203, 206, 211, 212, 213, 214, 220, 224, 228, 232, 235, 253, 259, 266], "subnorm": [5, 108], "k": [5, 40, 98, 108, 133, 145, 180, 181, 194, 236, 240, 241, 242, 250, 252, 253, 254, 256, 264], "denorm": [5, 108], "gradual": [5, 108, 264], "underflow": [5, 9, 91, 102, 108, 251], "hardwar": [5, 53, 108, 156, 210, 214, 215, 240, 253, 260, 264], "univers": [5, 108, 209, 215, 260, 264], "mani": [5, 108, 179, 264, 266], "platform": [5, 26, 108], "compil": [5, 108, 177, 206, 209, 213, 264], "toggl": [5, 108], "daz": [5, 108], "flush": [5, 108], "ftz": [5, 108], "increas": [5, 108, 210, 265], "guard": [5, 108], "against": [5, 40, 73, 108, 133, 177, 194, 246, 249, 267], "time": [5, 7, 16, 17, 26, 90, 108, 156, 183, 184, 206, 208, 213, 214, 219, 236, 240, 241, 242, 250, 252, 253, 260, 264, 266], "attack": [5, 108], "accordingli": [5, 10, 11, 13, 14, 16, 17, 59, 61, 62, 64, 66, 91, 97, 102, 108, 123, 124, 126, 135, 137, 138, 139, 142, 145, 152, 156, 161, 167, 171, 173, 183, 184, 185, 186, 188, 194, 203, 210, 211, 212, 213, 215, 244, 250, 258, 260], "vari": [5, 108, 161, 177, 183, 184, 185, 186, 203, 210], "function": [5, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 26, 28, 29, 30, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 60, 61, 62, 64, 65, 66, 74, 78, 86, 87, 88, 90, 95, 97, 100, 103, 108, 115, 116, 117, 123, 124, 126, 129, 130, 131, 132, 133, 137, 145, 151, 152, 155, 156, 157, 162, 164, 165, 166, 167, 170, 171, 173, 174, 175, 176, 177, 178, 179, 183, 184, 185, 186, 187, 188, 189, 193, 196, 206, 208, 209, 211, 212, 213, 214, 215, 218, 219, 220, 222, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 235, 236, 237, 240, 241, 242, 246, 249, 250, 251, 252, 253, 254, 256, 259, 260, 261, 264, 265, 266], "access": [5, 26, 32, 103, 111, 194, 208, 214, 259, 261, 264], "variou": [5, 208], "cast": [5, 29, 49, 60, 63, 75, 88, 152, 173, 203, 211, 256, 264, 266], "introspect": 5, "isdtyp": [5, 193, 208], "integr": [5, 63, 114, 116, 117], "keyword": [5, 7, 26, 63, 88, 115, 138, 152, 173, 193, 208, 212, 215, 219, 220, 256, 260, 261, 264, 265, 266], "affect": [5, 15, 49, 212, 215], "intermedi": [5, 9, 108], "calcul": [5, 9, 10, 11, 12, 20, 21, 42, 47, 50, 61, 62, 64, 65, 66, 86, 87, 88, 90, 91, 95, 97, 124, 125, 126, 127, 128, 135, 137, 139, 142, 151, 152, 164, 165, 167, 171, 172, 173, 176, 177, 188, 208, 251], "implementor": [5, 259], "free": [5, 215, 263], "when": [5, 7, 12, 16, 17, 26, 32, 47, 49, 59, 63, 91, 97, 102, 103, 108, 114, 116, 123, 126, 135, 136, 139, 140, 142, 151, 152, 156, 157, 161, 171, 173, 177, 188, 190, 193, 194, 203, 208, 209, 211, 212, 213, 214, 216, 218, 219, 220, 222, 224, 226, 227, 228, 230, 231, 232, 233, 235, 236, 240, 242, 246, 249, 250, 251, 252, 253, 254, 256, 260, 264, 265, 266], "accumul": 5, "reduct": [5, 13, 14], "long": [5, 111, 220], "ha": [5, 9, 13, 14, 20, 23, 29, 34, 35, 40, 44, 47, 55, 86, 87, 88, 91, 95, 96, 97, 102, 105, 133, 137, 138, 141, 142, 143, 145, 151, 152, 164, 165, 169, 171, 173, 174, 176, 177, 178, 179, 183, 184, 185, 186, 188, 194, 203, 206, 211, 214, 215, 218, 219, 237, 244, 252, 253, 256, 258, 260, 261, 264, 266, 267], "wai": [5, 26, 63, 103, 206, 209, 215, 216, 261, 264, 265, 266, 267], "f4": [5, 203], "ensur": [5, 26, 161, 206, 210, 260, 264, 265, 266], "portabl": [5, 59, 123, 210, 212, 215, 216, 264], "consum": [5, 26, 63, 114, 116, 206, 211, 212, 220, 259, 264, 265], "recommend": [5, 7, 19, 23, 26, 123, 129, 130, 131, 132, 137, 155, 171, 188, 201, 208, 210, 214, 215, 264], "guidanc": [5, 7, 49, 208, 209, 216, 264], "govern": [5, 50, 172, 203, 260, 261], "interact": [5, 211], "either": [5, 9, 10, 11, 12, 24, 26, 35, 40, 65, 77, 87, 88, 91, 94, 95, 97, 99, 102, 103, 108, 111, 117, 118, 119, 123, 124, 125, 126, 127, 128, 133, 135, 136, 139, 140, 142, 144, 152, 155, 162, 163, 164, 167, 173, 176, 177, 178, 194, 210, 211, 212, 216, 220, 251, 256, 264, 265, 267], "whether": [5, 13, 14, 26, 59, 60, 63, 88, 89, 103, 112, 117, 120, 123, 157, 163, 208, 215, 236, 240, 241, 250, 252, 259, 263, 264, 266], "otherwis": [5, 13, 14, 15, 16, 17, 26, 59, 60, 63, 75, 103, 112, 114, 116, 135, 137, 139, 152, 156, 157, 161, 162, 171, 173, 188, 189, 190, 193, 194, 206, 215, 236, 238, 244, 251, 252, 258, 263], "note": [5, 7, 9, 10, 11, 12, 13, 14, 20, 21, 24, 25, 26, 29, 32, 34, 35, 40, 42, 43, 44, 46, 47, 50, 51, 59, 61, 62, 63, 64, 65, 66, 76, 77, 79, 85, 86, 87, 88, 90, 91, 94, 95, 97, 98, 99, 101, 102, 104, 105, 108, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 124, 125, 126, 127, 128, 133, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 151, 152, 153, 154, 155, 156, 160, 161, 162, 163, 164, 165, 167, 168, 171, 172, 173, 174, 176, 177, 178, 179, 182, 183, 184, 185, 186, 187, 188, 189, 193, 194, 208, 214, 218, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 240, 241, 242, 244, 245, 246, 248, 249, 250, 251, 252, 253, 254, 256, 258, 264, 265, 266, 267], "possibl": [5, 26, 60, 102, 103, 135, 139, 157, 176, 177, 206, 209, 210, 211, 212, 214, 215, 216, 218, 220, 260, 264, 265, 266, 267], "multipl": [5, 7, 13, 14, 16, 17, 40, 42, 44, 133, 135, 137, 139, 142, 143, 152, 171, 173, 188, 194, 206, 209, 211, 214, 215, 219, 220, 241, 242, 260, 261, 264, 266], "In": [5, 12, 19, 26, 59, 88, 91, 94, 102, 117, 119, 120, 142, 146, 152, 155, 162, 173, 193, 194, 196, 203, 210, 211, 214, 216, 231, 232, 250, 251, 253, 256, 260, 261, 265, 266, 267], "clearli": [5, 59, 117, 201, 211, 260, 261], "warn": [5, 156, 216], "about": [5, 7, 26, 99, 109, 212, 260, 264, 266, 267], "": [5, 26, 29, 32, 49, 58, 59, 60, 80, 102, 103, 138, 155, 171, 179, 180, 181, 188, 194, 201, 206, 208, 209, 210, 211, 212, 214, 215, 218, 220, 224, 228, 232, 235, 249, 253, 254, 260, 261, 264, 266], "organ": [5, 208, 260, 265, 266], "within": [5, 15, 27, 194, 203, 206, 208, 211, 215, 222, 224, 227, 228, 231, 232, 233, 235, 264], "numer": [5, 9, 12, 20, 21, 40, 42, 44, 46, 47, 50, 51, 88, 90, 91, 102, 116, 117, 118, 119, 120, 133, 138, 142, 143, 150, 151, 152, 160, 162, 168, 172, 173, 178, 203, 210, 222, 224, 227, 228, 231, 232, 233, 235, 237, 248, 249, 251, 256, 260, 264, 266], "accord": [5, 12, 60, 71, 75, 88, 91, 99, 102, 104, 123, 142, 151, 161, 162, 171, 175, 188, 189, 194, 210, 211], "These": [5, 212, 240, 265], "intend": [5, 88, 152, 173, 206, 256], "posit": [7, 9, 10, 11, 13, 14, 20, 46, 62, 65, 66, 81, 91, 96, 98, 99, 102, 119, 124, 126, 141, 142, 145, 155, 159, 163, 165, 167, 177, 193, 194, 206, 208, 210, 220, 234, 236, 250, 265], "paramet": [7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 114, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 206, 208, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 244, 245, 246, 248, 249, 250, 251, 252, 253, 254, 256, 258, 260], "extern": [7, 266], "usabl": 7, "accept": [7, 26, 129, 130, 131, 132, 137, 155, 171, 188, 206, 261], "call": [7, 34, 90, 214, 215, 218, 251, 264, 265, 266], "argument": [7, 10, 11, 26, 40, 61, 62, 63, 64, 65, 66, 86, 88, 108, 115, 124, 126, 133, 152, 158, 161, 164, 167, 173, 176, 177, 178, 193, 203, 208, 210, 212, 214, 215, 222, 224, 227, 228, 231, 232, 233, 235, 256, 260, 264, 265, 266], "map": [7, 211, 212], "base": [7, 47, 57, 58, 95, 96, 124, 125, 126, 127, 151, 183, 184, 185, 186, 194, 208, 212, 218, 220, 260, 261, 264, 265, 266], "sole": [7, 194, 201, 260], "incompat": [7, 26, 74, 103, 206, 261, 264], "us": [7, 19, 26, 27, 59, 60, 83, 99, 103, 108, 123, 125, 127, 159, 183, 185, 193, 194, 203, 208, 210, 211, 212, 213, 215, 216, 219, 220, 221, 222, 224, 226, 227, 228, 230, 231, 232, 233, 235, 259, 260, 261, 262, 263, 264, 267], "normal": [7, 78, 170, 222, 224, 226, 227, 228, 230, 231, 232, 233, 235], "practic": [7, 19, 194, 260, 265], "avail": [7, 103, 115, 206, 214, 259, 261, 265], "still": [7, 26, 220, 260, 265, 266, 267], "consid": [7, 26, 63, 103, 129, 130, 131, 132, 183, 184, 185, 186, 211, 215, 234, 249, 260, 264, 266, 267], "compliant": [7, 26, 51, 91, 97, 103, 123, 126, 129, 130, 131, 132, 135, 136, 137, 139, 140, 171, 188, 210, 213, 215, 261, 264], "altern": [7, 212, 214, 267], "thei": [7, 26, 203, 209, 214, 215, 219, 220, 259, 260, 261, 264, 266, 267], "were": [7, 102, 156, 161, 208, 264], "option": [7, 13, 14, 15, 16, 17, 23, 26, 57, 58, 59, 60, 63, 77, 78, 88, 90, 92, 93, 98, 100, 103, 104, 105, 114, 116, 123, 135, 137, 139, 147, 148, 152, 156, 157, 159, 161, 171, 173, 174, 188, 191, 192, 193, 208, 219, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 244, 246, 249, 256, 258, 260, 265, 266], "lead": [7, 102, 211, 250, 253, 264], "readabl": [7, 203, 260, 265], "code": [7, 59, 203, 212, 213, 215, 218, 220, 260, 264, 265, 266], "easier": [7, 206, 212, 260], "evolv": [7, 206, 260], "over": [7, 13, 14, 26, 123, 135, 137, 139, 152, 171, 173, 174, 178, 188, 189, 210, 211, 212, 214, 215, 219, 222, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 235, 237, 256, 258, 260, 264], "ad": [7, 9, 10, 11, 12, 13, 14, 20, 21, 24, 26, 29, 35, 40, 42, 43, 44, 46, 47, 50, 51, 60, 61, 62, 63, 64, 66, 86, 87, 91, 94, 95, 97, 98, 99, 103, 104, 105, 118, 119, 120, 123, 124, 125, 126, 127, 133, 138, 142, 143, 145, 146, 147, 148, 150, 151, 152, 160, 162, 164, 165, 167, 168, 172, 173, 176, 177, 178, 183, 184, 185, 186, 189, 194, 207, 208, 209, 215, 236, 237, 238, 240, 241, 242, 244, 245, 246, 248, 249, 250, 251, 252, 253, 254, 256, 258, 261], "worri": 7, "xi": [7, 138], "annot": [7, 208, 220, 264], "individu": [7, 161, 215, 218, 219, 220, 223, 234, 264, 265], "aim": [7, 209, 220, 259, 260, 261, 264, 265, 266, 267], "strongli": [7, 212, 266], "look": [7, 266], "like": [7, 206, 209, 211, 212, 218, 220, 261, 264, 265, 266], "funcnam": 7, "key1": 7, "key2": 7, "none": [7, 13, 14, 15, 16, 17, 23, 26, 32, 49, 57, 58, 59, 60, 63, 77, 78, 83, 88, 90, 92, 93, 98, 100, 103, 104, 105, 112, 114, 116, 123, 135, 137, 139, 147, 148, 152, 156, 157, 159, 161, 171, 173, 174, 188, 191, 192, 194, 208, 215, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 244, 246, 249, 256, 257, 258, 264, 265, 267], "out": [7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 194, 208, 209, 212, 214, 218, 219, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 244, 245, 246, 248, 249, 250, 251, 252, 253, 254, 256, 258, 263, 266], "int": [7, 13, 14, 15, 16, 17, 18, 21, 22, 26, 27, 28, 30, 31, 32, 33, 34, 35, 37, 38, 39, 41, 42, 43, 45, 47, 48, 49, 50, 51, 52, 56, 57, 58, 59, 60, 74, 77, 78, 88, 90, 92, 96, 98, 99, 100, 102, 104, 105, 109, 123, 135, 137, 139, 141, 147, 149, 152, 156, 157, 159, 166, 169, 170, 171, 173, 174, 175, 178, 179, 180, 181, 187, 188, 189, 191, 194, 203, 218, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 239, 244, 245, 255, 256, 257, 258, 265], "str": [7, 8, 23, 116, 117, 138, 265], "modulo": 7, "self": [7, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 59, 89, 208, 266], "few": [7, 210, 218, 264, 266], "enhanc": 7, "default": [7, 13, 14, 15, 16, 17, 18, 23, 26, 59, 60, 63, 77, 78, 88, 90, 92, 93, 98, 100, 103, 104, 105, 113, 114, 116, 123, 135, 137, 138, 139, 145, 147, 148, 152, 156, 157, 159, 161, 166, 170, 171, 173, 175, 178, 180, 181, 183, 184, 185, 187, 188, 189, 191, 192, 193, 194, 208, 210, 215, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 239, 244, 246, 249, 250, 253, 256, 258], "form": [7, 23, 26, 40, 79, 133, 134, 180, 181, 212, 236, 238, 239, 240, 241, 242, 244, 245, 246, 249, 250, 251, 252, 253, 254, 256, 261, 265], "question": [7, 209, 264], "commonli": [7, 171, 188, 209, 211, 213, 259, 260, 264, 265], "written": [7, 206, 264, 266], "yyyi": [8, 23, 261], "mm": [8, 23, 261], "string": [8, 23, 116, 117, 208, 261, 264], "version": [8, 9, 10, 11, 12, 13, 14, 20, 21, 23, 24, 25, 26, 29, 34, 35, 40, 42, 43, 44, 46, 47, 50, 51, 59, 60, 61, 62, 63, 64, 66, 77, 79, 85, 86, 87, 88, 91, 94, 95, 97, 98, 99, 103, 104, 105, 108, 109, 110, 117, 118, 119, 120, 123, 124, 125, 126, 127, 133, 135, 136, 138, 139, 140, 141, 142, 143, 145, 146, 147, 148, 150, 151, 152, 153, 156, 160, 161, 162, 163, 164, 165, 167, 168, 172, 173, 174, 176, 177, 178, 179, 183, 184, 185, 186, 187, 189, 193, 206, 209, 215, 219, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 240, 241, 242, 244, 245, 246, 248, 249, 250, 251, 252, 253, 254, 256, 258, 262, 264, 266], "absolut": [9, 20, 85, 162, 210, 212, 244, 245, 251, 260], "x_i": [9, 10, 11, 61, 62, 64, 66, 68, 76, 77, 79, 86, 87, 95, 97, 101, 110, 118, 119, 120, 124, 125, 126, 127, 130, 135, 137, 139, 143, 150, 153, 154, 160, 162, 163, 164, 165, 167, 168, 171, 176, 177, 182, 188], "input": [9, 10, 11, 12, 13, 14, 16, 17, 18, 20, 26, 30, 41, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 75, 76, 77, 78, 79, 85, 86, 87, 88, 90, 91, 93, 94, 95, 96, 97, 100, 101, 102, 103, 105, 106, 107, 108, 110, 117, 118, 119, 120, 121, 122, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 192, 193, 201, 206, 208, 211, 213, 215, 216, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 244, 245, 246, 248, 249, 250, 251, 253, 254, 256, 258, 260, 264, 266], "magnitud": [9, 12, 20, 85, 91, 102, 108, 142, 208, 253, 254], "represent": [9, 12, 20, 29, 44, 67, 70, 72, 80, 81, 82, 84, 91, 99, 102, 109, 142, 143, 144, 176, 177, 210, 214, 265], "known": [9, 162, 210, 213, 214], "norm": [9, 222, 224, 226, 227, 228, 230, 231, 232, 233, 235, 244, 258, 260], "modulu": [9, 155], "z": [9, 10, 11, 61, 62, 64, 66, 124, 211], "bj": [9, 12, 79, 91, 142], "comput": [9, 12, 28, 31, 33, 37, 39, 40, 43, 57, 58, 67, 70, 72, 79, 88, 89, 90, 91, 94, 96, 102, 106, 107, 108, 121, 122, 129, 130, 131, 132, 133, 135, 136, 137, 139, 140, 142, 143, 145, 146, 150, 152, 156, 171, 173, 178, 183, 184, 185, 186, 188, 189, 194, 208, 210, 213, 218, 222, 223, 224, 226, 227, 228, 230, 231, 232, 233, 234, 235, 236, 237, 240, 241, 242, 244, 246, 249, 250, 251, 252, 253, 254, 256, 258, 260, 264], "operatornam": [9, 10, 11, 61, 62, 64, 66, 86, 87, 162, 164, 165, 176, 177, 211, 240, 241, 251, 253], "sqrt": [9, 10, 11, 61, 62, 193, 208, 211, 222, 224, 226, 227, 228, 230, 231, 232, 233, 235, 258], "take": [9, 124, 126, 151, 167, 193, 208, 215, 220, 264], "care": [9, 212, 260], "undu": [9, 213], "overflow": [9, 12, 88, 91, 102, 108, 123, 152, 173, 203, 251, 256, 260], "dure": [9, 40, 59, 108, 133, 171, 188, 203, 206, 249, 264, 265], "stage": [9, 108, 261], "contain": [9, 10, 11, 12, 13, 14, 15, 16, 17, 20, 21, 22, 23, 26, 28, 30, 31, 32, 33, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 76, 77, 78, 79, 85, 86, 87, 88, 90, 91, 92, 93, 94, 95, 97, 101, 102, 103, 106, 107, 108, 110, 111, 112, 114, 116, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 160, 161, 162, 163, 164, 165, 167, 168, 171, 172, 173, 176, 177, 178, 180, 181, 182, 183, 184, 185, 186, 188, 189, 191, 194, 208, 210, 211, 212, 214, 218, 219, 223, 224, 225, 228, 229, 232, 234, 235, 236, 237, 238, 239, 240, 241, 242, 244, 245, 246, 248, 249, 250, 251, 252, 253, 254, 256, 258, 264, 266], "nan": [9, 10, 11, 12, 13, 14, 24, 25, 35, 61, 62, 63, 64, 65, 66, 76, 77, 85, 86, 87, 91, 94, 95, 97, 101, 102, 108, 118, 119, 120, 124, 125, 126, 127, 128, 135, 136, 137, 139, 140, 142, 144, 146, 151, 155, 160, 161, 162, 163, 164, 165, 167, 171, 176, 177, 182, 183, 184, 185, 186, 188, 193, 201, 211, 264], "infin": [9, 10, 11, 12, 13, 14, 24, 25, 35, 62, 63, 64, 65, 66, 76, 81, 86, 87, 91, 94, 95, 97, 101, 102, 108, 118, 119, 124, 125, 126, 127, 128, 135, 139, 142, 146, 151, 155, 160, 163, 164, 165, 167, 176, 177, 182, 211, 251, 258], "imag": [9, 10, 11, 12, 24, 62, 63, 66, 87, 94, 95, 97, 118, 119, 120, 123, 124, 126, 146, 160, 162, 165, 167, 177, 193, 208, 209, 264, 265, 266], "finit": [9, 10, 11, 12, 25, 35, 42, 62, 65, 66, 87, 91, 94, 95, 97, 102, 108, 112, 118, 119, 124, 126, 142, 146, 151, 155, 163, 165, 167, 177, 210], "2022": [9, 10, 11, 12, 13, 14, 20, 21, 24, 25, 26, 29, 35, 40, 42, 43, 44, 46, 47, 50, 51, 60, 61, 62, 63, 64, 66, 79, 86, 87, 91, 94, 95, 97, 98, 99, 104, 105, 109, 110, 117, 118, 119, 120, 123, 124, 125, 126, 127, 133, 138, 142, 143, 145, 146, 147, 148, 150, 151, 152, 153, 160, 162, 164, 165, 167, 168, 172, 173, 174, 176, 177, 178, 183, 184, 185, 186, 189, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 240, 241, 242, 244, 245, 246, 248, 249, 250, 251, 252, 253, 254, 256, 258], "12": [9, 10, 11, 12, 13, 14, 20, 21, 24, 25, 26, 29, 34, 35, 40, 42, 43, 44, 46, 47, 50, 51, 59, 60, 61, 62, 63, 64, 66, 77, 79, 85, 86, 87, 88, 91, 94, 95, 97, 98, 99, 103, 104, 105, 108, 109, 110, 117, 118, 119, 120, 123, 124, 125, 126, 127, 133, 135, 136, 138, 139, 140, 141, 142, 143, 145, 146, 147, 148, 150, 151, 152, 153, 156, 160, 161, 162, 163, 164, 165, 167, 168, 172, 173, 174, 176, 177, 178, 179, 183, 184, 185, 186, 187, 189, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 240, 241, 242, 244, 245, 246, 248, 249, 250, 251, 252, 253, 254, 256, 258, 261], "approxim": [10, 11, 47, 61, 62, 64, 65, 66, 86, 87, 95, 97, 102, 124, 125, 126, 127, 151, 164, 165, 176, 177, 210, 246, 249], "princip": [10, 11, 61, 62, 64, 66, 124, 167, 211, 260], "invers": [10, 11, 61, 62, 64, 65, 66, 211, 222, 224, 227, 228, 229, 230, 231, 232, 233, 235, 242, 245, 249, 260], "cosin": [10, 11, 86, 87, 177], "express": [10, 61, 63, 64, 65, 86, 164, 176, 194, 203, 212, 260, 263], "radian": [10, 61, 64, 65, 86, 164, 176], "arc": [10, 61, 64], "frac": [10, 11, 61, 62, 64, 66, 86, 87, 91, 123, 125, 127, 162, 164, 165, 176, 177, 211, 251], "pi": [10, 11, 61, 62, 64, 66, 87, 124, 126, 165, 176, 177, 193], "j": [10, 11, 12, 25, 61, 62, 64, 66, 87, 91, 95, 97, 123, 124, 126, 142, 161, 162, 164, 165, 167, 176, 177, 194, 211, 240, 253, 256], "ln": [10, 11, 61, 62, 64, 66, 124], "zj": [10, 61, 62, 64, 66], "conj": [10, 11, 61, 62, 64, 66, 87, 95, 97, 124, 125, 126, 127, 165, 167, 177, 193, 208], "multi": [10, 11, 61, 62, 64, 66, 193, 211, 214, 215, 237, 266], "branch": [10, 11, 61, 62, 64, 65, 66, 86, 87, 91, 95, 97, 124, 126, 142, 151, 164, 165, 167, 176, 177, 264], "cut": [10, 11, 61, 62, 64, 66, 86, 87, 95, 97, 124, 126, 151, 164, 165, 167, 176, 177, 264], "plane": [10, 11, 61, 62, 64, 66, 86, 87, 91, 95, 97, 142, 164, 165, 167, 176, 177, 264], "By": [10, 11, 13, 14, 61, 62, 64, 65, 66, 88, 124, 126, 135, 137, 139, 151, 152, 167, 171, 173, 188, 189, 210, 211, 237, 260, 265], "place": [10, 11, 15, 60, 61, 62, 63, 64, 66, 92, 93, 98, 103, 104, 105, 123, 147, 148, 159, 191, 192, 193, 201, 203, 208, 212, 215, 223, 234, 249], "line": [10, 11, 61, 62, 64, 66, 176, 177, 203, 211, 264, 265, 266, 267], "segment": [10, 11, 61, 62, 64, 66, 211], "infti": [10, 11, 61, 62, 64, 66, 86, 124, 126, 151, 167, 211], "axi": [10, 11, 13, 14, 16, 17, 18, 61, 62, 64, 66, 78, 88, 90, 96, 100, 124, 126, 135, 137, 139, 141, 151, 152, 156, 159, 166, 167, 169, 170, 171, 173, 174, 175, 178, 179, 187, 188, 189, 193, 208, 222, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 235, 237, 244, 257, 258, 264], "rang": [10, 61, 62, 64, 66, 77, 88, 124, 126, 152, 167, 173, 194, 208, 214, 256, 264], "strip": [10, 61, 62, 64, 66, 124, 126], "unbound": [10, 61, 62, 64, 66, 124, 126], "along": [10, 11, 13, 14, 16, 17, 18, 61, 62, 64, 66, 78, 88, 90, 98, 100, 124, 126, 135, 137, 139, 152, 156, 159, 166, 167, 170, 171, 173, 174, 175, 176, 177, 179, 187, 188, 189, 194, 208, 222, 224, 226, 227, 228, 230, 231, 232, 233, 235, 237, 256, 258, 260], "c99": [10, 11, 61, 62, 64, 66, 91, 124, 126, 142, 151, 167, 211, 261], "provision": [10, 11, 61, 62, 64, 66, 124, 126, 151, 167, 211], "statu": [10, 11, 61, 62, 64, 66, 124, 126, 151, 167, 211], "greater": [10, 11, 33, 38, 48, 61, 62, 65, 66, 69, 71, 77, 85, 91, 101, 102, 124, 126, 151, 155, 162, 163, 165, 167, 169, 177, 193, 194, 222, 224, 226, 227, 228, 230, 231, 232, 233, 235, 237, 245], "than": [10, 11, 19, 26, 32, 38, 40, 47, 48, 49, 55, 61, 62, 63, 65, 66, 69, 71, 76, 77, 85, 88, 91, 99, 100, 101, 102, 103, 124, 125, 126, 127, 133, 142, 151, 152, 155, 162, 163, 165, 167, 169, 171, 173, 174, 177, 182, 183, 184, 185, 186, 188, 194, 203, 206, 209, 212, 215, 216, 219, 222, 224, 226, 227, 228, 230, 231, 232, 233, 235, 237, 244, 245, 246, 249, 256, 258, 260, 261, 264, 266], "less": [10, 11, 39, 47, 61, 65, 66, 76, 85, 91, 102, 124, 125, 126, 127, 151, 155, 162, 163, 167, 171, 188, 193, 194, 212, 222, 224, 226, 227, 228, 230, 231, 232, 233, 235, 244, 245, 246, 249, 258, 264], "\u03c0": [10, 64, 65, 84], "0j": [10, 11, 12, 25, 62, 63, 66, 87, 95, 97, 98, 124, 126, 147, 148, 162, 165, 167, 177, 211, 251], "nonzero": [10, 11, 12, 62, 66, 87, 91, 95, 97, 102, 142, 165, 177, 193, 194, 208, 249], "3\u03c0": [10, 65], "hyperbol": [11, 62, 66, 86, 87, 164, 165, 176, 177, 211], "aco": [11, 61, 193, 208, 210], "simpli": [11, 97, 126, 209, 220, 264, 266], "upper": [11, 77, 98, 181, 208, 236, 250], "half": [11, 15, 66, 123, 141, 167, 178, 194, 225], "area": [11, 62, 66], "sector": [11, 62, 66], "\u03c0j": [11, 62, 66, 124, 126], "3\u03c0j": [11, 124, 126], "sum": [12, 21, 88, 108, 128, 152, 193, 208, 244, 256, 258, 260], "x1_i": [12, 65, 67, 69, 70, 71, 72, 85, 91, 94, 102, 106, 107, 108, 121, 122, 128, 129, 131, 132, 136, 140, 142, 144, 146, 151, 155, 172, 190, 208], "x2_i": [12, 65, 67, 69, 70, 71, 72, 85, 91, 94, 102, 106, 107, 108, 121, 122, 128, 129, 131, 132, 136, 140, 142, 144, 146, 151, 155, 172, 190, 208], "first": [12, 16, 17, 19, 65, 67, 69, 70, 71, 72, 88, 90, 94, 106, 107, 108, 121, 122, 128, 129, 131, 132, 133, 136, 140, 142, 144, 146, 151, 159, 170, 172, 176, 177, 178, 183, 184, 185, 189, 190, 194, 211, 237, 240, 248, 250, 251, 253, 254, 260, 264, 265, 266, 267], "remain": [12, 91, 94, 102, 117, 119, 120, 142, 146, 155, 157, 162, 194, 212, 235], "neither": [12, 40, 91, 102, 133, 142, 178, 253, 265], "nor": [12, 91, 102, 142, 253, 265], "mathemat": [12, 19, 65, 84, 86, 87, 91, 97, 102, 124, 126, 142, 164, 165, 176, 177, 193, 211, 244, 258], "round": [12, 15, 76, 91, 101, 102, 142, 167, 182, 193, 208, 210], "nearest": [12, 91, 142, 160, 182, 210], "mode": [12, 91, 142, 210, 222, 224, 226, 227, 228, 230, 231, 232, 233, 235, 250], "too": [12, 26, 91, 102, 142, 260, 264], "larg": [12, 91, 102, 142, 214, 220, 251, 264], "appropri": [12, 26, 91, 102, 142, 211, 216], "commut": 12, "associ": [12, 42, 142, 196, 203, 246, 249, 252, 260, 263, 265], "tabl": [12, 91, 142, 193], "c": [12, 91, 94, 123, 142, 145, 146, 156, 170, 171, 177, 188, 194, 208, 211, 214, 217, 236, 240, 241, 242, 250, 252, 253, 261, 263, 264, 266], "d": [12, 91, 94, 123, 142, 146, 203, 223, 234], "dj": [12, 91, 142], "independ": [12, 91, 142, 160, 194, 206, 214, 237, 250, 252, 260, 261, 264], "abov": [12, 88, 91, 94, 124, 126, 142, 146, 151, 152, 167, 173, 180, 181, 194, 203, 211, 212, 214, 215, 218, 239, 240, 256, 260, 263, 266], "similarli": [12, 57, 117, 138, 203, 236, 253], "henc": [12, 79, 96, 145, 156, 183, 184, 185, 186, 194, 209, 211, 212, 213, 214, 218, 219, 220, 264, 266], "z1": 12, "z2": 12, "keepdim": [13, 14, 16, 17, 135, 137, 139, 152, 171, 173, 188, 244, 258], "test": [13, 14, 89, 118, 119, 120, 208, 210, 262, 264, 265, 266], "evalu": [13, 14, 22, 30, 36, 38, 41, 44, 45, 46, 48, 51, 52, 95, 97, 124, 125, 126, 127, 143, 150, 162, 163, 168, 206, 264], "union": [13, 14, 15, 21, 22, 26, 28, 30, 31, 32, 33, 37, 38, 39, 41, 42, 43, 45, 47, 48, 49, 50, 51, 52, 59, 60, 75, 77, 78, 92, 99, 100, 104, 105, 109, 116, 117, 123, 135, 137, 139, 141, 147, 152, 156, 158, 159, 169, 170, 171, 173, 178, 188, 191, 225, 229, 244, 246, 249, 258, 265], "ax": [13, 14, 16, 17, 19, 55, 56, 100, 135, 137, 139, 141, 149, 152, 159, 169, 171, 173, 178, 179, 188, 189, 194, 208, 224, 225, 228, 229, 232, 235, 237, 244, 249, 252, 255, 258], "logic": [13, 14, 24, 26, 91, 94, 129, 130, 131, 132, 142, 146, 215, 218, 224, 228, 232, 235], "AND": [13, 67, 94, 129, 263], "entir": [13, 14, 86, 87, 95, 97, 135, 137, 139, 152, 164, 165, 171, 173, 188], "valid": [13, 14, 26, 27, 90, 96, 115, 141, 170, 178, 187, 194, 210, 218, 222, 224, 226, 227, 228, 230, 231, 232, 233, 235, 240, 250, 253, 265], "count": [13, 14, 78, 88, 90, 100, 174, 175, 183, 184, 189, 194, 208, 222, 224, 226, 227, 228, 230, 231, 232, 233, 235, 237, 241], "last": [13, 14, 18, 19, 55, 78, 88, 90, 100, 159, 166, 170, 174, 175, 178, 189, 194, 222, 224, 226, 227, 228, 230, 231, 232, 233, 235, 237, 239, 244, 250, 253, 256], "invalid": [13, 14, 23, 90, 96, 216, 264], "rais": [13, 14, 19, 23, 24, 25, 26, 29, 34, 35, 40, 47, 51, 55, 60, 74, 90, 91, 95, 96, 103, 123, 133, 135, 139, 145, 151, 157, 169, 170, 187, 189, 194, 203, 206, 208, 214, 215, 216, 218, 237, 245, 264], "wa": [13, 14, 19, 26, 102, 135, 137, 139, 152, 171, 173, 188, 203, 215, 220, 264, 266], "OR": [14, 24, 70, 131, 146, 263], "start": [15, 123, 194, 208, 220, 264, 266], "stop": [15, 123, 194, 208, 265], "step": [15, 123, 194, 265], "evenli": [15, 123], "space": [15, 123, 223, 225, 234], "open": [15, 123, 141, 178, 194], "inclus": [15, 194, 264], "end": [15, 65, 86, 123, 162, 164, 176, 177, 201, 212, 251, 264, 265, 266], "exclus": [15, 194], "distanc": [15, 108], "between": [15, 26, 47, 51, 65, 78, 91, 94, 99, 123, 135, 136, 139, 140, 146, 151, 170, 183, 184, 185, 186, 203, 211, 212, 215, 223, 234, 260, 264, 266], "adjac": 15, "output": [15, 60, 63, 78, 88, 92, 93, 96, 98, 100, 103, 104, 105, 112, 123, 138, 147, 148, 157, 159, 161, 169, 170, 174, 179, 191, 192, 206, 208, 211, 212, 215, 217, 218, 220, 222, 223, 224, 226, 227, 228, 231, 232, 233, 234, 235, 256, 264], "infer": [15, 60, 63, 93, 104, 105, 148, 157, 192, 213, 260, 265], "cannot": [15, 26, 57, 103, 176, 177, 208, 211, 213, 264], "guarante": [15, 59, 183, 185, 206, 211, 215, 264, 266], "error": [15, 19, 23, 24, 25, 26, 29, 34, 35, 51, 55, 91, 103, 135, 139, 176, 177, 203, 210, 251, 264], "ceil": [15, 193], "indic": [16, 17, 18, 26, 60, 88, 89, 103, 112, 117, 123, 141, 145, 159, 161, 162, 174, 175, 178, 180, 181, 183, 185, 194, 203, 208, 258, 264], "occur": [16, 17, 75, 108, 176, 177, 183, 184, 185, 186, 211, 265], "occurr": [16, 17, 183], "comparison": [16, 17, 18, 31, 33, 37, 39, 94, 106, 107, 121, 122, 135, 136, 139, 140, 146, 166, 193, 211, 261, 265], "search": [16, 17, 161, 193], "flatten": [16, 17, 78, 156, 159, 183, 184, 185, 186, 258, 260], "descend": [18, 166, 253, 254], "stabl": [18, 166, 214], "sort": [18, 161, 193, 208, 240, 241, 253, 254], "ascend": [18, 161, 166, 208], "stabil": [18, 166], "maintain": [18, 166, 209, 264, 266], "rel": [18, 19, 55, 100, 136, 140, 159, 166, 208, 239, 246, 249, 256], "compar": [18, 166, 183, 184, 185, 186, 210, 215, 265, 267], "properti": [19, 53, 54, 55, 56, 57, 58, 116, 208, 211, 215, 220, 264], "transpos": [19, 40, 55, 133, 134, 178, 236, 240, 249, 253, 260], "instanc": [19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 55, 59, 89, 203, 206, 208, 215], "permut": [19, 55, 149], "revers": [19, 55, 65, 100], "origin": [19, 55, 65, 108, 141, 157, 159, 208, 212, 222, 224, 227, 228, 231, 232, 233, 235, 264, 265], "limit": [19, 99, 109, 117, 210, 260, 263], "matric": [19, 40, 55, 133, 134, 138, 180, 181, 236, 238, 239, 240, 241, 242, 244, 245, 246, 249, 250, 251, 252, 253, 254, 256, 260], "deviat": [19, 171, 210, 216, 264, 266], "et": [19, 253, 254], "al": 19, "intent": [19, 65], "found": [19, 211, 214, 266, 267], "problemat": [19, 63, 209, 212], "conflict": 19, "definit": [19, 86, 87, 164, 165, 176, 177, 208, 236, 265], "batch": [19, 258, 260], "cetera": [19, 253, 254], "permute_dim": [19, 193], "interfac": [19, 214, 260, 264, 266], "ab": [20, 108, 151, 193, 208, 244, 258], "augend": 21, "addend": 21, "self_i": [22, 28, 30, 31, 33, 36, 37, 38, 39, 41, 43, 44, 45, 46, 48, 50, 51, 52], "other_i": [22, 28, 30, 31, 33, 37, 38, 39, 41, 43, 45, 47, 48, 50, 51, 52], "bitwise_and": [22, 193], "api_vers": [23, 264], "object": [23, 24, 25, 26, 29, 32, 34, 35, 53, 57, 59, 60, 89, 99, 103, 109, 111, 113, 114, 115, 193, 194, 203, 206, 208, 212, 214, 215, 218, 220, 259, 261, 265, 266], "2020": [23, 220, 261, 263, 264], "10": [23, 27, 125, 194, 264], "latest": [23, 214], "modul": [23, 206, 261, 265, 266, 267], "everi": [23, 104, 105, 250, 264], "top": [23, 206, 264, 266], "level": [23, 203, 209, 214, 215, 259, 260, 264, 265], "public": [23, 259, 265, 266], "well": [23, 209, 211, 214, 215, 250, 266, 267], "part": [23, 35, 180, 181, 203, 208, 214, 219, 261, 264, 266], "convert": [24, 25, 29, 34, 35, 60, 103, 203, 208, 209, 211, 214, 264, 266], "handl": [24, 26, 61, 64, 86, 88, 103, 125, 127, 151, 152, 154, 162, 164, 168, 173, 176, 208, 209, 211, 212, 215, 216, 256, 264], "lazi": [24, 25, 29, 34, 35, 206, 208, 217, 266], "languag": [24, 25, 29, 34, 35, 212, 216, 218, 260, 264, 266], "therefor": [24, 25, 29, 32, 34, 35, 206, 214, 215, 216, 218, 220, 261, 264, 266], "abl": [24, 25, 29, 34, 35, 103, 212, 214, 215, 264, 266], "kind": [24, 25, 26, 29, 34, 35, 47, 51, 77, 91, 99, 103, 105, 109, 114, 116, 117, 151, 203, 208, 218, 260, 263], "here": [24, 25, 26, 29, 34, 35, 194, 203, 212, 214, 219, 220, 266], "valueerror": [24, 25, 26, 29, 34, 35, 60, 103, 157, 169, 266], "instead": [24, 25, 29, 34, 35, 63, 211, 214, 218, 265, 266], "2023": [24, 25, 26, 29, 34, 35, 59, 63, 77, 85, 88, 103, 108, 135, 136, 139, 140, 141, 152, 156, 161, 163, 173, 174, 178, 179, 183, 184, 185, 186, 187, 189, 222, 223, 224, 226, 227, 228, 231, 232, 234, 237, 256], "new": [25, 26, 77, 79, 85, 88, 96, 99, 103, 104, 105, 108, 109, 110, 117, 136, 140, 141, 147, 148, 153, 156, 157, 161, 163, 170, 174, 179, 187, 191, 192, 206, 208, 209, 212, 214, 215, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 261, 264, 265, 266], "stream": [26, 59, 215], "max_vers": [26, 208], "dl_devic": [26, 208], "enum": [26, 27], "pycapsul": 26, "export": [26, 103, 208, 214, 265], "from_dlpack": [26, 27, 193, 208, 214], "dlpack": [26, 27, 103, 208], "capsul": 26, "cuda": [26, 27, 209, 214, 266], "rocm": [26, 27, 209], "pointer": 26, "produc": [26, 32, 240, 250, 253, 266], "instruct": 26, "safe": [26, 123], "insert": [26, 96, 161, 208], "wait": 26, "event": [26, 263], "larger": [26, 99, 159, 171, 188, 249], "below": [26, 102, 103, 180, 181, 196, 214, 215, 239, 256], "signal": [26, 226, 230, 266], "ownership": 26, "stai": 26, "On": 26, "cpu": [26, 27, 206, 209, 214, 215, 260, 264, 266], "queue": [26, 59, 215], "similar": [26, 155, 194, 209, 211, 213, 264, 265, 266], "mechan": [26, 103, 206, 208, 209, 217, 259, 264], "most": [26, 206, 215, 240, 260, 264, 266], "yet": [26, 220, 264], "sycl": 26, "want": [26, 91, 142, 209, 213, 214, 264, 266, 267], "cl": 26, "agre": 26, "assum": [26, 86, 103, 164, 176, 206, 211, 215, 259, 264], "legaci": 26, "per": [26, 156, 209, 214, 262], "thread": [26, 264, 266], "disallow": 26, "due": [26, 42, 57, 58, 123, 142, 156, 174, 210, 211, 260, 264], "ambigu": [26, 63, 102, 212], "construct": [26, 179, 206, 208, 209, 218, 264], "particular": [26, 194, 209, 211, 214, 215, 220, 260, 263, 264, 266, 267], "kdlcpu": 26, "safeti": [26, 59], "prefer": [26, 102, 206, 260, 266], "develop": [26, 210, 264, 265, 266, 267], "who": [26, 210, 264, 265], "think": 26, "cost": 26, "caller": 26, "major": [26, 145, 156, 194, 261], "minor": [26, 261], "verifi": [26, 264], "even": [26, 91, 142, 151, 160, 210, 211, 212, 223, 225, 229, 234, 250, 260, 264, 266], "pass": [26, 65, 206, 210, 215], "format": [26, 27, 261], "__dlpack_device__": [26, 103, 193, 214], "buffererror": [26, 103, 208, 214], "v2023": [26, 103], "mandat": [26, 103, 264], "offer": [26, 103, 209, 214, 215, 219, 264, 266], "referenc": [26, 264], "underli": [26, 67, 70, 72, 103, 210, 251, 260], "interpret": [26, 103, 108, 211, 212, 267], "enumer": 26, "made": [26, 103, 206, 211, 259, 261, 264, 266], "never": [26, 60, 103, 157, 214, 264], "deem": [26, 103], "cross": [26, 103, 208, 215, 260, 264], "movement": [26, 103], "request": [26, 103, 264], "reus": [26, 60, 103, 212, 264], "buffer": [26, 60, 103, 212, 214], "happen": [26, 103, 212, 215, 218, 260], "dlpack_flag_bitmask_is_copi": 26, "flag": 26, "understood": [26, 203], "interchang": [26, 103, 206, 209, 217, 264], "detail": [26, 32, 49, 103, 145, 156, 183, 184, 185, 186, 193, 194, 205, 206, 213, 215, 219, 260, 264, 266], "stride": [26, 103, 212, 214], "fail": [26, 103, 264], "reason": [26, 103, 155, 177, 212, 214, 216, 260, 264, 265], "incorrect": 26, "scheme": [26, 261], "semver": 26, "abi": [26, 209, 214], "break": [26, 216], "introduc": [26, 63, 102, 159, 220, 265], "goe": 26, "togeth": [26, 203, 214], "dlmanagedtensorvers": 26, "struct": 26, "later": 26, "introduct": 26, "becaus": [26, 203, 209, 212, 215, 216, 218, 220, 240, 253, 264, 266, 267], "keep": [26, 203, 209, 264], "march": 26, "2025": 26, "onward": 26, "ideal": [26, 260], "late": 26, "okai": 26, "we": [26, 211, 253, 264], "get": [26, 99, 109, 209, 212, 214, 215], "now": [26, 103, 218, 264, 266], "our_own_dlpack_vers": 26, "fill": [26, 104, 105, 147, 148, 191, 192, 208], "field": [26, 183, 184, 185, 211, 240, 250, 251, 253, 264], "understand": [26, 249, 264, 265], "u": [26, 236, 249, 253], "just": [26, 264, 266], "our": 26, "elif": 26, "fine": [26, 220, 264], "own": [26, 206, 212, 264], "re": [26, 159, 209, 212, 220, 266], "intern": [26, 266], "did": 26, "older": [26, 177, 214, 261, 264], "around": [26, 265], "y": [26, 65, 103, 211, 212, 266], "dlmanagedtensor": 26, "so": [26, 99, 103, 111, 194, 201, 214, 260, 263, 264, 267], "tell": 26, "old": 26, "exchang": [26, 103, 214], "And": [26, 194, 215], "try": [26, 220, 264], "succe": 26, "info": [26, 111], "dltensor_vers": 26, "need": [26, 194, 209, 210, 212, 214, 216, 220, 260, 261, 264, 265, 266, 267], "used_dltensor_vers": 26, "done": [26, 206], "typeerror": [26, 29, 34, 35, 264, 266], "read": [26, 208, 212], "dlpack_flag_bitmask_read_onli": 26, "ignor": [26, 138, 260], "respons": 26, "isn": [26, 209], "t": [26, 193, 209, 212, 215, 219, 220, 264, 266], "id": 27, "meant": 27, "device_typ": 27, "device_id": 27, "member": 27, "cpu_pin": 27, "opencl": 27, "vulkan": 27, "metal": 27, "vpi": 27, "cuda_manag": 27, "13": 27, "one_api": 27, "14": [27, 261], "truth": [28, 31, 33, 37, 39, 43, 89, 94, 106, 107, 121, 122, 146, 267], "outsid": [29, 170, 187, 194, 203, 208, 214], "bound": [29, 77, 174, 175, 194, 203, 208, 220], "divis": [30, 41, 71, 91, 102, 155, 162, 211], "floor_divid": [30, 193], "greater_equ": [31, 193], "kei": [32, 49, 112, 114, 116, 264], "slice": [32, 49, 187, 193, 212], "ellipsi": [32, 49, 194], "semant": [32, 40, 49, 102, 133, 155, 174, 193, 194, 206, 212, 214, 216, 218, 219, 260, 264, 265, 266], "iter": [32, 194], "directli": [32, 264, 266], "__iter__": 32, "sequenc": [32, 60, 78, 123, 170, 178, 187, 194, 208, 224, 225, 228, 229, 232, 235, 255], "pep": [34, 40, 102, 133, 214, 261], "357": 34, "overflowerror": 35, "bitwise_invert": [36, 193], "less_equ": [37, 193], "bitwise_left_shift": [38, 193], "matrix": [40, 55, 133, 134, 138, 178, 180, 181, 236, 238, 239, 240, 241, 242, 244, 245, 246, 249, 250, 251, 252, 253, 254, 256, 260, 264], "product": [40, 42, 58, 133, 142, 152, 178, 189, 208, 237, 248, 260], "built": [40, 133, 194, 203, 264], "465": [40, 133], "least": [40, 91, 116, 117, 133, 142, 145, 183, 184, 185, 186, 209, 210, 249], "m": [40, 55, 90, 133, 134, 138, 156, 161, 178, 179, 180, 181, 194, 222, 224, 226, 227, 228, 230, 231, 232, 233, 235, 236, 238, 239, 240, 241, 242, 244, 245, 246, 248, 249, 250, 251, 252, 253, 254, 256], "remov": [40, 133, 169, 194, 211, 239, 256], "innermost": [40, 133, 134, 180, 181, 236, 238, 239, 240, 241, 242, 244, 245, 246, 249, 250, 251, 252, 253, 254, 256], "conjug": [40, 79, 133, 178, 189, 208, 236, 240, 253, 260], "transposit": [40, 133, 178], "desir": [40, 63, 75, 133, 141, 178, 210, 211, 214, 220], "prior": [40, 90, 133, 178], "inner": [40, 133, 208, 240, 260], "stack": [40, 55, 133, 134, 180, 181, 193, 219, 236, 238, 239, 240, 241, 242, 244, 245, 246, 249, 250, 251, 252, 253, 254, 256, 260], "l": [40, 133, 236, 256], "remaind": [41, 193, 194], "multipli": [42, 152, 168, 193, 208, 210, 240, 253], "not_equ": [43, 193, 208], "negat": [44, 79, 143], "bitwise_or": [45, 193], "exponenti": [47, 95, 97, 128, 151, 211], "power": [47, 71, 95, 151, 211, 245, 266], "expon": [47, 151, 245], "versu": [47, 51, 63, 77, 91, 142, 151, 208], "bitwise_right_shift": [48, 193], "mix": [49, 123, 137, 158, 171, 188, 193, 208, 212, 215, 260, 264], "how": [49, 91, 142, 206, 210, 215, 219, 265, 266, 267], "minuend": 50, "subtrahend": 50, "subtract": [50, 193, 208, 210], "choos": [51, 57, 59, 91, 102, 123, 129, 130, 131, 132, 135, 136, 137, 139, 140, 142, 145, 156, 171, 183, 184, 185, 186, 188, 193, 194, 201, 211, 212, 213, 215, 218, 264, 266], "divid": [51, 102, 154, 162, 193, 194, 208, 210], "bitwise_xor": [52, 193], "resid": [53, 59, 96, 141, 178, 194, 208, 214, 264], "fewer": 55, "unknown": [57, 58, 156], "graph": [57, 58, 145, 156, 183, 184, 185, 186, 194, 213, 218, 264], "static": [57, 213, 217], "resolv": [57, 60, 88, 96, 102, 104, 105, 152, 173, 224, 225, 228, 229, 232, 235, 256, 264], "know": [57, 145, 156, 183, 184, 185, 186, 206, 209, 210, 213, 264, 266], "content": [57, 213, 263], "warrant": 57, "custom": [57, 209, 216], "immut": 57, "retriev": [57, 194, 206, 221, 260, 266], "behav": [57, 211], "current": [59, 114, 116, 174, 201, 212, 215, 220, 264, 265, 266], "__dlpack__": [59, 103, 193, 208, 214], "caveat": 59, "would": [59, 60, 157, 161, 194, 208, 212, 218, 260, 264, 266], "locat": [59, 212], "explicit": [59, 60, 103, 174, 178, 215, 266], "enqueu": 59, "asynchron": 59, "explain": [59, 209], "clarifi": [59, 135, 139, 183, 184, 185, 208], "obj": 60, "nestedsequ": 60, "supportsbufferprotocol": 60, "possibli": [60, 219, 264], "nest": [60, 219], "protocol": [60, 206, 214, 220, 264, 266], "turn": [60, 206, 259], "memoryview": 60, "preced": [60, 211, 214, 215], "mixtur": 60, "convers": [60, 123, 208, 209, 264], "obei": [60, 123], "permit": [60, 63, 123, 213, 263], "To": [60, 102, 194, 208, 210, 211, 220, 264, 265, 267], "array_api": [60, 264], "astyp": [60, 193, 208], "exce": [60, 104, 105, 123], "sine": [61, 62, 164, 165, 177], "1j": [61, 64, 86, 87, 95, 97, 108, 164, 165, 176], "asinh": [61, 193, 208, 210], "asin": [62, 193, 208, 210], "irrespect": [63, 211], "histor": [63, 177, 260], "discard": 63, "choic": [63, 171, 188, 206, 210, 211, 215, 216, 218, 219, 260, 261, 264, 266], "arbitrari": [63, 73, 112, 138, 158, 210], "achiev": [63, 194, 210], "outcom": 63, "clariti": 63, "newli": [63, 215], "alloc": [63, 180, 181, 213, 215], "tangent": [64, 65, 66, 176, 177], "atanh": [64, 193, 208, 210], "quotient": [65, 91, 102, 194], "domain": [65, 208, 210, 211, 264, 266], "notat": 65, "denot": [65, 189, 249], "pair": [65, 102, 237, 253], "codomain": 65, "quadrant": 65, "chosen": [65, 190, 214], "angl": [65, 87, 108, 165, 177], "rai": 65, "role": 65, "coordin": [65, 124, 138, 176, 177, 219, 264], "tradit": 65, "atan": [66, 193, 208, 210], "bitwis": [67, 70, 72, 193], "flip": [68, 193], "shift": [69, 71, 159, 225, 229], "arithmet": [71, 91, 137, 142, 193, 203, 211, 264], "propag": [71, 103, 135, 137, 139, 171, 188, 210], "floor": [71, 102, 193], "anoth": [73, 75, 103, 194, 206, 208, 209, 211, 212, 214, 215, 218, 240, 253, 264, 266], "from_": 75, "smallest": [76, 99, 109, 244], "closest": [76, 101, 102, 160], "alreadi": [76, 101, 142, 160, 182, 214, 216, 261, 266], "min": [77, 99, 109, 180, 181, 189, 193, 208, 237, 244, 250, 253, 254, 258], "clamp": [77, 208], "min_i": 77, "max_i": 77, "join": [78, 170, 203], "befor": [78, 88, 152, 161, 173, 183, 184, 185, 186, 189, 208, 211, 237, 256, 264], "concaten": 78, "leav": [78, 141, 170, 194, 201, 208, 210, 212, 249], "famili": [78, 170], "intxx": [78, 170, 203], "floatxx": [78, 170, 203], "718281828459045": 80, "euler": 80, "constant": [80, 84, 193, 194, 208], "71828182845904523536028747135266249775724709369995": 80, "Not": 82, "alia": [83, 116, 194, 208, 243, 247, 255, 257], "141592653589793": 84, "1415926535897932384626433": 84, "compos": [85, 203, 208], "begin": [86, 162, 164, 176, 177, 194, 201, 251, 266], "align": [86, 164, 176, 177, 208, 210, 265], "sum_": [86, 189], "2n": [86, 124], "jx": [86, 164, 176], "cosh": [86, 177, 193, 208, 210], "period": [87, 165, 176, 177], "ci": [87, 95, 97, 165, 266], "v": [87, 95, 97, 161, 165, 217, 249, 253, 264], "co": [87, 95, 97, 165, 193, 208, 210], "sin": [87, 95, 97, 165, 193, 208, 210, 212, 220], "include_initi": 88, "cumul": [88, 208], "unless": [88, 142, 152, 173, 193, 256], "smaller": [88, 152, 159, 173, 256, 266], "latter": [88, 102, 152, 173, 194, 206, 211, 214, 256, 265], "help": [88, 152, 173, 209, 210, 219, 256], "prevent": [88, 152, 173, 256], "initi": [88, 212, 264], "ident": [88, 189, 211, 229, 241, 242, 245, 264], "success": [88, 152, 173, 256], "discret": [90, 222, 223, 224, 226, 227, 228, 230, 231, 232, 233, 234, 235], "forward": [90, 222, 224, 226, 227, 228, 230, 231, 232, 233, 235, 264], "recurs": 90, "final": [90, 261], "dividend": [91, 102, 155], "divisor": [91, 102, 155, 171, 188], "small": [91, 102, 142, 210, 246, 249, 251, 264, 266], "gener": [91, 123, 142, 155, 178, 206, 209, 211, 216, 260, 264, 265], "textbook": [91, 142], "formula": [91, 125, 127, 142], "ac": [91, 142, 211], "bd": [91, 142], "bc": [91, 142, 211], "riemann": [91, 142, 211], "sphere": [91, 142, 211], "infinit": [91, 112, 142, 167, 210, 211], "usual": [91, 142, 264], "interest": [91, 142, 210], "unlik": [91, 142, 261, 264], "consist": [91, 102, 116, 117, 123, 142, 161, 178, 194, 201, 211, 215, 220, 231, 232, 233, 235, 240, 249, 260, 264], "uniniti": [92, 93], "deriv": [93, 105, 148, 192, 194, 216, 265], "natur": [95, 124, 125, 126, 127, 151, 251, 260], "logarithm": [95, 124, 125, 126, 127, 128, 151, 251, 260], "expand": [96, 194, 266], "close": [96, 97, 123, 126, 160, 194, 264, 266], "indexerror": [96, 194], "exp": [97, 128, 151, 193, 208, 210, 251], "accur": [97, 126, 210, 251], "fdlibm": [97, 126, 210], "n_row": 98, "n_col": 98, "ones": [98, 148, 179, 193, 208, 212, 216, 264], "diagon": [98, 180, 181, 240, 249, 250, 256, 260], "elsewher": [98, 190, 211], "row": [98, 145, 156, 194, 244, 250, 252, 253], "column": [98, 240, 244, 250, 252, 253, 264], "finfo_object": [99, 208], "machin": [99, 109, 246, 249, 264], "inform": [99, 109, 264, 265, 266, 267], "occupi": [99, 109], "ep": [99, 246, 249, 264], "next": [99, 144, 264], "largest": [99, 109, 244, 253, 254], "smallest_norm": 99, "full": [99, 193, 208, 212, 250, 252, 253, 266], "preserv": [100, 161, 194, 208, 211, 215], "reorder": [100, 141], "greatest": [101, 102], "238": 102, "goal": [102, 209, 212, 260, 266], "disambigu": 102, "toward": [102, 159, 210, 260, 265], "former": [102, 194, 211, 265], "overload": [102, 260], "led": 102, "subtl": 102, "bug": [102, 266, 267], "expect": [102, 116, 177, 203, 208, 210, 211, 213, 214, 215, 216, 220, 264], "design": [102, 208, 210, 262, 264, 266, 267], "ill": [102, 260], "diverg": [102, 267], "strictli": 102, "relat": [102, 194, 211, 215, 219, 260, 264, 266], "surpris": [102, 211], "unexpect": [102, 211, 216, 264], "enough": [103, 206, 209, 220, 259, 261, 264], "materi": [103, 214], "attributeerror": [103, 214], "present": [103, 116, 212, 213, 215, 259, 260, 261, 264], "suggest": [103, 266], "correctli": [103, 210], "move": [103, 141, 208, 215, 266], "agnost": 103, "fashion": 103, "illustr": [103, 212, 220], "def": [103, 220, 264, 265, 266], "func": 103, "xp_x": 103, "__array_namespace__": [103, 193, 221, 260, 264], "xp_y": 103, "work": [103, 209, 212, 214, 220, 264, 266, 267], "xxxxx": 103, "address": [103, 208, 260, 264, 265, 266], "unsupport": [103, 208], "fill_valu": [104, 105], "squar": [108, 167, 193, 208, 211, 236, 238, 240, 241, 242, 245, 249, 251, 252, 260], "root": [108, 167, 208, 211, 241], "hypotenus": 108, "triangl": 108, "side": [108, 161, 194, 214], "naiv": 108, "correct": [108, 171, 188, 212], "iinfo_object": [109, 208], "inspect": [111, 193], "util": [111, 193, 196, 208, 261, 264, 265], "class": [111, 196, 220, 264, 265], "xp": [111, 221, 259, 260, 264], "capabl": [111, 193, 196, 208], "default_dtyp": [111, 193, 208], "dictionari": [112, 114, 116, 208], "fulli": [112, 215], "complianc": 112, "exclud": [112, 123, 194, 203], "demarc": [112, 213], "throughout": 112, "defaultdatatyp": 114, "concept": [114, 116, 194, 212, 264], "context": [114, 116, 211, 215, 265], "manag": [114, 116, 209, 215], "runtim": [115, 219, 220, 261, 264, 266], "creation": [115, 193, 206, 215, 264], "datatyp": 116, "decid": [116, 264], "belong": [116, 117, 212], "shorthand": [116, 117, 194], "canon": 116, "float16": 117, "bfloat16": [117, 264], "int128": 117, "short": [117, 211, 264, 265], "extend": [117, 194, 211, 264], "extens": [117, 262, 266], "num": 123, "endpoint": 123, "delta_": 123, "textrm": [123, 162, 251], "sampl": [123, 171, 188, 223, 229, 234, 265], "nonneg": [123, 178, 194], "concern": [123, 156, 174, 208, 215, 219, 264], "polar": 124, "r": [124, 179, 194, 236, 240, 241, 242, 250, 252, 253, 264, 266], "theta": 124, "continu": [124, 126, 151, 167, 211, 240, 253, 264], "account": [124, 126, 151, 167, 264], "log_": [125, 127], "log": [125, 126, 127, 128, 151, 193, 208, 210], "mxn": [134, 180, 181, 239, 244, 246, 249, 250, 256], "sentinel": [135, 139], "xy": 138, "grid": 138, "cartesian": 138, "ij": 138, "effect": [138, 171, 188, 215, 267], "ni": 138, "n3": 138, "nn": 138, "three": [138, 215], "p": [138, 241, 244, 258], "sourc": [141, 265, 267], "destin": 141, "uniqu": [141, 178, 183, 184, 185, 186, 208, 211, 224, 225, 228, 229, 232, 235, 240, 242, 250, 252, 253, 260], "state": [142, 193, 194, 264], "cdot": [142, 164, 168, 176, 189], "y_i": [143, 150], "direct": [144, 209, 264, 265], "build": [145, 156, 183, 184, 185, 186, 194, 206, 213, 219, 264], "jax": [145, 156, 183, 184, 185, 186, 194, 212, 213, 264, 265, 266], "dask": [145, 156, 183, 184, 185, 186, 194, 212, 213, 219, 264, 265, 266], "etc": [145, 156, 183, 184, 185, 186, 194, 213, 261], "find": [145, 156, 161, 183, 184, 185, 186, 194, 208, 213, 264, 265], "difficult": [145, 156, 183, 184, 185, 186, 194, 210, 213, 264], "omit": [145, 156, 183, 184, 185, 186, 194, 213, 214, 218], "section": [145, 156, 183, 184, 185, 186, 194, 208, 209, 213, 214, 215, 216, 220, 264, 266], "typl": 145, "total": [145, 171, 188, 211], "style": [145, 156, 194], "odd": [151, 223, 229, 231, 232, 234], "treat": [151, 179], "carefulli": 151, "That": [155, 194, 206, 216, 220, 264], "primarili": 155, "basi": 156, "liter": [156, 161, 222, 224, 226, 227, 228, 230, 231, 232, 233, 235, 244, 250, 258], "repetit": [156, 179], "prod": [156, 193, 208, 224, 228, 232, 235], "caus": 156, "advis": [156, 177, 212, 260], "regard": [156, 174, 208, 216, 260, 266], "degrad": 156, "One": [157, 218, 264, 267], "arrays_and_dtyp": 158, "restor": 159, "counterpart": 160, "sorter": 161, "control": [161, 215, 218, 219], "land": 161, "exactli": [161, 176, 177], "edg": 161, "satisfi": [161, 179, 193, 194, 210, 211, 265], "condit": [161, 190, 218, 263], "what": [161, 206, 214, 216, 220, 260, 264, 265, 266, 267], "constitut": [161, 171, 188], "among": [161, 210, 211, 260], "argsort": [161, 193], "invok": [161, 265], "signum": 162, "whenev": [163, 266], "2j": 164, "sinh": [164, 177, 193, 208, 210], "indistinguish": [167, 194, 210], "degre": [171, 188, 241, 260], "freedom": [171, 188], "adjust": [171, 188, 264], "popul": [171, 188], "bessel": [171, 188, 209], "conceptu": 174, "mutat": 174, "check": [174, 175, 194, 210, 236, 240, 241, 250, 252, 259, 266, 267], "select": [174, 175, 194, 264], "analyt": [176, 177, 211], "pole": [176, 177], "tanh": [176, 193, 208, 210], "stem": [177, 240, 253], "patch": 177, "tensor": [178, 260, 264, 266], "contract": [178, 189, 260, 263], "outer": [178, 208], "dot": [178, 189, 260], "x1_ax": 178, "x2_ax": 178, "triangular": [180, 181, 236, 250], "closer": 182, "reconstruct": [183, 185], "distinct": [183, 184, 185, 186, 211, 260], "inverse_indic": [183, 185], "exact": [183, 185, 220], "aggreg": [183, 184], "namedtupl": [183, 184, 185, 240, 250, 251, 253, 260], "third": [183, 253], "fourth": 183, "split": [187, 208], "varianc": 188, "unbias": 188, "mathbf": 189, "overlin": [189, 249], "a_i": 189, "b_i": 189, "restrict": [189, 237, 260, 263], "yield": [190, 211], "signatur": [193, 206, 220, 264, 265], "subset": [193, 210, 265, 266], "categori": 193, "accuraci": [193, 217, 222, 224, 227, 228, 231, 232, 233, 235], "reflect": 193, "mt": 193, "__abs__": [193, 208], "__bool__": [193, 208, 218], "__complex__": [193, 208, 218], "__float__": [193, 208, 218], "__getitem__": [193, 194, 208], "__index__": [193, 208, 218], "__int__": [193, 208, 218], "to_devic": [193, 208, 215], "overview": 193, "algorithm": [193, 210, 251, 266], "inf": [193, 244, 258, 264], "newaxi": [193, 194, 208], "arang": [193, 265], "asarrai": [193, 208, 214, 266], "empty_lik": 193, "ey": [193, 208], "full_lik": [193, 208], "linspac": [193, 208], "meshgrid": [193, 208], "ones_lik": [193, 208], "tril": 193, "triu": 193, "zeros_lik": 193, "can_cast": 193, "finfo": [193, 208], "iinfo": [193, 208], "result_typ": 193, "acosh": [193, 208, 210], "atan2": [193, 210], "clip": [193, 194, 208], "copysign": [193, 208], "expm1": [193, 208, 210], "hypot": [193, 208], "isfinit": [193, 208], "isinf": [193, 208], "isnan": [193, 208], "log1p": [193, 208, 210], "log2": [193, 208, 210], "log10": [193, 208, 210], "logaddexp": 193, "logical_and": 193, "logical_not": 193, "logical_or": 193, "logical_xor": 193, "nextaft": 193, "reciproc": [193, 249], "signbit": [193, 208], "tan": [193, 208, 210], "trunc": [193, 208], "syntax": [193, 212, 214, 216, 264], "take_along_axi": 193, "__array_namespace_info__": [193, 196, 208], "default_devic": [193, 208], "linear": [193, 211, 252, 259], "algebra": [193, 211, 249, 259], "matrix_transpos": [193, 260], "tensordot": [193, 208, 260], "vecdot": [193, 208, 260], "manipul": 193, "broadcast_arrai": 193, "broadcast_to": 193, "concat": 193, "expand_dim": [193, 194], "moveaxi": [193, 208], "reshap": [193, 194], "roll": 193, "squeez": 193, "tile": [193, 208], "unstack": [193, 208], "argmax": 193, "argmin": 193, "searchsort": [193, 208], "unique_al": [193, 208], "unique_count": [193, 208], "unique_invers": [193, 208], "unique_valu": [193, 208], "statist": 193, "cumulative_sum": [193, 208], "diff": 193, "__array_api_version__": [193, 205, 208, 261], "syntact": 194, "sugar": 194, "term": [194, 215, 260, 265], "colon": 194, "contrast": [194, 211, 218, 260], "combin": [194, 212, 219, 260], "basic": 194, "noth": 194, "perspect": 194, "item": [194, 212, 264], "2k": 194, "3k": 194, "q": [194, 240, 250], "obtain": [194, 263], "qk": 194, "being": [194, 214, 215, 260, 264, 267], "100": [194, 218, 261], "junk": 194, "consider": [194, 212, 260], "comma": 194, "separ": [194, 208, 214, 259], "exp1": 194, "exp2": 194, "expn": 194, "forth": 194, "decreas": [194, 260], "entri": [194, 224, 225, 228, 229, 232, 235, 264], "retain": 194, "invoc": 194, "manner": [194, 214, 216], "sympi": 194, "flat": 194, "attempt": [194, 210, 211, 212, 215, 216, 264, 266], "dynam": 194, "mask": [194, 264], "filter": 194, "s1": 194, "sm": 194, "s2": 194, "sn": 194, "prohibit": [194, 212], "replac": [194, 218, 249, 267], "programmat": 196, "queri": 196, "reli": [201, 209, 211, 213, 220, 266], "them": [201, 209, 212, 216, 264, 266], "reproduc": [201, 210], "high": [203, 214, 215, 260, 264], "diagram": [203, 264], "lattic": 203, "particip": [203, 211], "matter": [203, 209, 211], "dash": 203, "undefin": [203, 260], "connect": [203, 263], "rather": [203, 206, 209, 215, 216, 219, 260, 264], "i2": 203, "i1": 203, "i4": 203, "i8": 203, "u1": 203, "u2": 203, "u4": 203, "u8": 203, "f8": 203, "c8": 203, "c16": 203, "regardless": 203, "subject": [203, 251, 263], "met": 203, "give": [203, 211, 214, 215], "No": [206, 261], "run": [206, 265, 266], "varieti": 206, "architectur": 206, "gpu": [206, 214, 215, 266], "distribut": [206, 210, 214, 215, 219, 263], "system": [206, 252, 264], "tpu": [206, 214], "emerg": [206, 214, 264], "instal": [206, 264, 267], "emploi": [206, 213, 215], "parallel": [206, 217, 264, 266], "jit": [206, 209, 264], "put": [206, 264, 266], "constraint": [206, 211, 262], "predict": 206, "itself": [206, 214, 218, 266], "motiv": 206, "importantli": 206, "awar": [206, 220, 266], "layer": [206, 219, 264, 266], "coupl": 206, "downstream": [206, 259, 264, 265], "import": [206, 209, 215, 218, 259, 260, 264, 266, 267], "structur": [206, 220, 264, 265], "interoper": [206, 214], "share": [206, 264], "though": [206, 220, 264, 266], "soft": 206, "arraylib_nam": 206, "constrain": [206, 210], "unwil": 206, "signific": [206, 210, 212, 264], "adopt": [206, 211, 214, 266], "primari": [206, 214], "write": [206, 212, 264, 266], "consequ": [206, 220, 264], "easi": [206, 259], "unambigu": [206, 212, 214, 265], "clear": [206, 212, 214, 264, 266], "significantli": 206, "detract": 206, "experi": [206, 261], "strict": [206, 212], "typic": [206, 212, 214, 216, 261, 264, 266, 267], "good": [206, 209, 212, 215, 220, 264], "anyth": [206, 264], "thin": 206, "conveni": 206, "plan": [207, 264], "previou": [208, 266], "gh": [208, 266], "613": 208, "687": 208, "eager": [208, 217, 264], "708": 208, "revis": [208, 211, 215], "702": 208, "relax": 208, "730": 208, "749": 208, "intrins": 208, "652": 208, "602": 208, "741": 208, "665": 208, "751": 208, "701": 208, "625": 208, "742": 208, "752": 208, "fft": [208, 221, 224, 226, 227, 228, 230, 231, 232, 233, 235], "720": 208, "746": 208, "backport": 208, "689": 208, "715": 208, "693": 208, "653": 208, "703": 208, "713": 208, "656": 208, "690": 208, "699": 208, "705": 208, "692": 208, "604": 208, "740": 208, "fftn": [208, 228], "hfft": 208, "ifft": [208, 222], "ifftn": [208, 224], "irfft": [208, 233, 234], "irfftn": [208, 235], "fftfreq": 208, "rfftfreq": 208, "linalg": [208, 259, 260], "trace": [208, 212, 260, 265], "fix": [208, 215, 264, 266], "clarif": 208, "674": 208, "736": 208, "typo": 208, "633": 208, "681": 208, "706": 208, "miss": [208, 264], "639": 208, "issu": [208, 209, 211, 212, 214, 215, 219, 264, 266], "qr": 208, "661": 208, "choleski": [208, 260], "677": 208, "svd": [208, 249], "619": 208, "666": [208, 265], "644": 208, "622": 208, "723": 208, "497": 208, "498": 208, "546": 208, "525": 208, "528": 208, "557": 208, "529": 208, "448": 208, "447": 208, "537": 208, "526": 208, "554": 208, "517": 208, "520": 208, "521": 208, "522": 208, "523": 208, "524": 208, "442": 208, "434": 208, "445": 208, "454": 208, "453": 208, "436": 208, "451": 208, "452": 208, "484": 208, "435": 208, "531": 208, "530": 208, "532": 208, "568": 208, "514": 208, "534": 208, "536": 208, "437": 208, "441": 208, "438": 208, "553": 208, "440": [208, 261], "556": 208, "457": 208, "456": 208, "552": 208, "461": 208, "538": 208, "459": 208, "458": 208, "558": 208, "540": 208, "512": 208, "470": 208, "417": 208, "502": 208, "443": 208, "559": 208, "det": [208, 241, 251], "542": 208, "eigh": [208, 260], "543": 208, "eigvalsh": [208, 260], "547": 208, "matrix_norm": 208, "565": 208, "matrix_pow": 208, "549": 208, "matrix_rank": 208, "563": 208, "560": 208, "pinv": 208, "564": 208, "548": 208, "slogdet": [208, 260], "567": 208, "solv": [208, 220, 249], "566": 208, "561": 208, "svdval": 208, "562": 208, "541": 208, "vector_norm": 208, "550": [208, 266], "418": 208, "491": 208, "513": 208, "variabl": [208, 219, 252, 267], "515": 208, "527": 208, "573": 208, "480": 208, "485": 208, "496": 208, "503": 208, "427": 208, "416": 208, "fast": 208, "fourier": [208, 222, 223, 224, 226, 227, 228, 230, 231, 232, 233, 234, 235, 259], "transform": [208, 222, 223, 224, 226, 227, 228, 230, 231, 232, 233, 234, 235, 259, 265], "189": 208, "rfft": [208, 231, 234], "rfftn": [208, 232], "irfttn": 208, "fftshift": [208, 229], "ifftshift": 208, "464": 208, "429": 208, "439": 208, "572": 208, "510": 208, "511": 208, "473": 208, "scope": [209, 218, 219, 262, 265], "mention": [209, 216, 266], "There": [209, 212, 214, 215, 220, 264, 266, 267], "deal": [209, 219, 220, 261, 263], "assumpt": [209, 214, 261, 262, 264], "rest": [209, 264, 266], "ndarrai": [209, 214, 264, 266], "visual": 209, "often": [209, 211, 216, 260, 264, 265, 266], "difficulti": [209, 213], "relev": [209, 215, 220, 264], "certainti": 209, "inde": 209, "project": [209, 211, 214, 266], "statsmodel": 209, "scikit": [209, 219, 264, 265, 266], "bio": [209, 266], "qutip": 209, "strategi": [209, 215], "learn": [209, 219, 264, 265, 266], "submodul": [209, 259], "doesn": [209, 215, 264], "cupi": [209, 212, 264, 265, 266], "elementwisekernel": 209, "scipi": [209, 219, 264, 265], "astropi": [209, 266], "seem": [209, 214, 266], "almost": [209, 266], "inevit": 209, "someth": [209, 212, 264], "numba": [209, 214, 264, 266], "sens": [209, 218, 264, 266], "tend": [209, 212, 266], "reimplement": 209, "gamma": 209, "drop": [209, 220, 250, 253], "arraylib": 209, "cpython": 209, "backend": [209, 219, 264], "target": [209, 215], "better": [209, 266], "pypi": [209, 265, 266], "quit": [209, 264, 266], "readi": 209, "mainstream": 209, "todai": [209, 212, 260], "onc": [209, 261], "feasibl": [209, 264], "roundtiestoeven": 210, "ti": [210, 260, 264], "certain": [210, 211, 260], "boundari": 210, "reader": 210, "identifi": [210, 215, 265], "lack": 210, "phrase": [210, 216], "recogn": [210, 215], "seek": [210, 260, 265], "optim": [210, 212, 260, 266], "latitud": 210, "although": [210, 229, 251], "freeli": 210, "sun": 210, "microsystem": 210, "With": [210, 265, 266], "imposs": [210, 212, 213, 267], "suit": [210, 262, 264, 265], "span": 210, "report": 210, "averag": 210, "aid": [210, 267], "best": [210, 214, 260, 264], "effort": [210, 265], "theoret": 210, "sound": 210, "robust": 210, "bare": 210, "summat": [210, 260], "unfortun": 210, "impos": [210, 213], "rigor": 210, "sever": [210, 212, 261, 264], "curtail": 210, "unduli": 210, "topologi": 211, "continuum": 211, "onto": [211, 212], "surfac": [211, 264], "stereograph": 211, "coalesc": 211, "3j": 211, "4j": 211, "convei": 211, "niceti": 211, "translat": [211, 266], "neq": 211, "arriv": [211, 264], "opposit": 211, "subtleti": 211, "craft": 211, "intuit": 211, "julia": [211, 266], "minim": [211, 215], "imperfect": 211, "balanc": 211, "appear": [211, 261, 264, 267], "embrac": 211, "transcendent": 211, "wholli": 211, "analysi": [211, 212, 213, 264, 265, 266], "curv": [211, 264], "discontinu": [211, 266], "taken": [211, 264], "pm": 211, "whole": 211, "simpl": [211, 212, 261], "aris": [211, 260, 263, 264], "trigonometr": 211, "domin": 211, "a_1": 211, "ldot": 211, "a_n": 211, "reflex": 211, "leq": 211, "transit": 211, "antisymmetr": 211, "partial": 211, "establish": [211, 265], "six": 211, "lexicograph": 211, "principl": [211, 265], "situat": [211, 212, 214, 215, 216, 264, 266], "unit": [211, 223, 234], "despit": [211, 214], "admonit": [212, 213], "becom": [212, 214, 264, 266], "trigger": [212, 218], "confid": 212, "pytorch": [212, 215, 264, 265, 266], "mxnet": [212, 264, 265, 266], "save": 212, "faster": 212, "tensorflow": [212, 264, 265, 266], "fundament": [212, 264], "inplac": 212, "update_index": 212, "idx": 212, "solut": [212, 249, 252, 266], "hard": [212, 214, 215, 218, 264], "go": [212, 261], "down": 212, "rout": 212, "val": [212, 218], "veri": [212, 251, 266], "wide": [212, 214, 250, 253, 264], "slightli": 212, "heavili": [212, 266], "you": [212, 267], "_must_": 212, "abstract": [212, 260, 265], "donat": 212, "lapack": [212, 260], "_may_": 212, "overwrit": 212, "whatev": 212, "fastest": 212, "aren": [212, 264], "longer": [212, 260], "problem": [212, 220, 249, 265, 266], "upon": [213, 264], "ahead": 213, "burden": [213, 264], "omiss": 213, "nativ": 214, "layout": 214, "packag": [214, 220, 261, 264, 265, 266], "live": [214, 264], "figur": 214, "contigu": 214, "promin": [214, 264], "releas": [214, 261, 265], "candid": [214, 264], "__cuda_array_interface__": 214, "moment": 214, "tri": [214, 266], "growth": 214, "amd": 214, "undesir": 214, "pattern": [214, 215, 219, 265, 266], "widest": 214, "lot": 214, "3118": 214, "hardli": 214, "mostli": [214, 218, 219, 264], "dealt": [214, 220], "__array__": [214, 266], "attach": 214, "hold": [214, 260], "rfc": [214, 264], "http": [214, 261, 267], "dmlc": 214, "github": [214, 261, 263, 267], "io": 214, "page": [214, 266], "standalon": [214, 267], "outlin": [214, 264], "cover": [214, 264, 267], "usag": [214, 259, 264], "node": 214, "spars": [214, 264], "why": [214, 264], "complet": [214, 219, 250, 261, 264, 266], "scale": 215, "exert": 215, "placement": 215, "global": 215, "switchabl": 215, "transfer": 215, "granular": 215, "downsid": 215, "verbos": 215, "much": [215, 264, 267], "kept": 215, "instanti": 215, "physic": 215, "revisit": 215, "themselv": 215, "expos": [215, 260], "bewar": 215, "framework": [215, 264], "elabor": 215, "polici": 215, "highest": 215, "prioriti": 215, "topic": [215, 219, 262, 264, 266], "pin": 215, "tricki": 215, "sinc": 215, "emit": 216, "misbehav": 216, "forese": 216, "extent": 216, "builtin": 216, "author": [216, 263, 264, 265, 266], "worth": 216, "compli": 216, "aspect": [218, 267], "impact": [218, 264], "prescrib": 218, "show": 218, "up": [218, 250, 259, 266], "five": 218, "dunder": [218, 261], "serial": 218, "compute_someth": 218, "statement": 218, "do_something_els": 218, "flow": 218, "cond": 218, "won": 219, "further": 219, "exercis": 219, "environ": [219, 260, 264, 267], "bla": [219, 260], "openmp": 219, "n_job": [219, 266], "worker": [219, 266], "chunk": 219, "approach": [219, 264, 265], "auto": [219, 266], "thing": 219, "improv": [219, 264, 266], "fit": [219, 263, 264, 266], "becam": [220, 264], "progress": [220, 267], "superclass": 220, "_basearrai": 220, "subclass": [220, 264], "insid": [220, 259], "typevar": 220, "variat": [220, 265], "don": [220, 266], "said": 220, "subtyp": 220, "hasattr": [221, 259, 260, 264], "ortho": [222, 224, 226, 227, 228, 230, 231, 232, 233, 235], "pad": [222, 224, 226, 227, 228, 230, 231, 232, 233, 235], "trim": [222, 224, 226, 227, 228, 230, 231, 232, 233, 235], "orthonorm": [222, 224, 226, 227, 228, 230, 231, 232, 233, 235, 250, 253], "frequenc": [223, 225, 234, 261, 265], "f": [223, 234], "window": [223, 234], "center": 225, "spectrum": 225, "swap": 225, "nyquist": [225, 234], "hermitian": [226, 230, 236, 240, 241], "symmetri": [226, 230], "decomposit": [236, 240, 249, 250, 253, 254, 260], "symmetr": [236, 240, 241], "mathbb": [236, 240, 241, 242, 250, 252, 253], "ll": 236, "h": [236, 240, 249, 253], "qquad": 236, "text": 236, "factor": [236, 253], "offset": [239, 256], "off": [239, 256], "eigenvalu": [240, 241, 260], "lambda": [240, 241], "orthogon": [240, 249, 250, 253, 260], "unitari": [240, 250, 253], "eigenvector": [240, 260], "softwar": [240, 253, 263, 264, 266], "fact": [240, 253], "phi": [240, 253], "eig": 240, "diag": [240, 253], "polynomi": [241, 264], "i_n": [241, 242], "eigval": 241, "xx": 242, "ord": [244, 258], "fro": 244, "nuc": 244, "frobeniu": 244, "nuclear": 244, "singular": [244, 246, 249, 253, 254], "induc": 244, "rtol": [246, 249], "toler": [246, 249], "largest_singular_valu": [246, 249], "epsilon": [246, 249], "moor": 249, "penros": 249, "pseudo": 249, "sigma": [249, 253], "tall": [250, 253], "geq": 250, "necessarili": [250, 267], "linearli": [250, 252, 264], "logabsdet": 251, "again": 251, "equat": 252, "coeffici": 252, "ordin": 252, "full_matric": 253, "u_k": 253, "v_k": 253, "vh": 253, "adjoint": 253, "l1": 258, "manhattan": 258, "l2": 258, "euclidean": 258, "coher": 259, "extension_nam": 259, "regular": [259, 261, 264], "__getattr__": 259, "endeavor": 260, "strai": 260, "far": 260, "restraint": 260, "decis": [260, 264], "accid": 260, "especi": 260, "arisen": 260, "been": [260, 264], "process": [260, 261, 265], "afford": 260, "opportun": 260, "subsequ": [260, 265], "codifi": [260, 265], "theme": 260, "abil": 260, "decim": 260, "overli": 260, "compel": 260, "compris": 260, "prudent": 260, "lastli": 260, "polymorph": 260, "dedic": 260, "agnostic": 260, "eschew": 260, "parameter": 260, "bias": 260, "underpin": 260, "cater": 260, "low": 260, "verbatim": 260, "poor": 260, "uplo": 260, "dai": 260, "monopoli": 260, "prolifer": 260, "conserv": [260, 266], "conservat": 260, "delin": 260, "overlap": 260, "confus": [260, 264], "parsimoni": 260, "einsum": 260, "einstein": 260, "vdot": 260, "multi_dot": 260, "chain": 260, "exhibit": 260, "consolid": 260, "propos": [261, 265, 266], "com": [261, 267], "blob": 261, "master": 261, "process_docu": 261, "md": 261, "summari": [261, 265], "matur": 261, "reach": [261, 266], "world": 261, "highli": 261, "strong": 261, "updat": 261, "date": 261, "shall": [261, 263], "alpha": 261, "beta": 261, "rc": 261, "post": 261, "dev": 261, "bugfix": 261, "__version__": 261, "resembl": 261, "year": [261, 264], "evolut": [262, 264], "verif": [262, 264], "benchmark": 262, "changelog": 262, "licens": 262, "websit": 263, "repositori": [263, 265], "mit": 263, "copyright": 263, "2024": 263, "consortium": [263, 264], "contributor": 263, "permiss": 263, "herebi": 263, "grant": 263, "charg": 263, "person": 263, "file": [263, 265, 266, 267], "merg": [263, 264], "publish": [263, 265], "sublicens": 263, "sell": 263, "whom": 263, "furnish": 263, "notic": 263, "substanti": 263, "portion": 263, "THE": 263, "AS": 263, "warranti": 263, "OF": 263, "BUT": 263, "TO": 263, "merchant": 263, "FOR": 263, "noninfring": 263, "IN": 263, "NO": 263, "holder": 263, "BE": 263, "liabl": 263, "claim": 263, "damag": 263, "liabil": 263, "action": 263, "tort": 263, "WITH": 263, "wealth": 264, "scienc": 264, "deep": 264, "push": 264, "art": 264, "unintend": 264, "activ": 264, "creativ": 264, "fragment": 264, "multidimension": 264, "xarrai": [264, 265], "pick": 264, "bless": 264, "inconsist": 264, "obviou": 264, "mind": 264, "sure": 264, "rare": [264, 265], "unimport": 264, "scientif": 264, "mid": 264, "1990": 264, "earli": 264, "2000": 264, "numarrai": 264, "2005": 264, "superced": 264, "roughli": 264, "decad": 264, "past": 264, "mainli": 264, "rise": 264, "newer": 264, "inspir": [264, 266], "idea": 264, "seriou": 264, "grew": 264, "quickli": 264, "infeas": 264, "speed": 264, "innov": [264, 265], "group": 264, "assembl": 264, "draft": 264, "presenc": 264, "meta": 264, "concret": 264, "shown": 264, "core": [264, 266], "borrow": 264, "steep": 264, "switch": [264, 266], "accompani": 264, "actual": 264, "task": [264, 266], "schedul": 264, "characterist": 264, "grain": 264, "obstacl": 264, "cython": [264, 266], "datetim": 264, "void": 264, "uniformli": 264, "o": 264, "routin": 264, "bind": [264, 266], "cffi": 264, "ctype": 264, "ufunc": 264, "gufunc": 264, "extra": 264, "huge": 264, "amount": [264, 265, 266], "strength": 264, "advantag": 264, "foreign": 264, "indirect": 264, "program": 264, "pydata": 264, "weld": 264, "bohrium": 264, "arkouda": 264, "legat": 264, "grow": 264, "panda": [264, 265], "matplotlib": [264, 265], "networkx": 264, "xtensor": 264, "xnd": [264, 266], "stdlib": 264, "javascript": 264, "rust": 264, "rrai": 264, "nd4j": 264, "jvm": 264, "numsharp": 264, "dispatch": [264, 266], "pythran": 264, "transon": 264, "onnx": 264, "apach": 264, "tvm": 264, "mlir": 264, "taco": 264, "unumpi": [264, 266], "einop": 264, "arrow": 264, "consult": 264, "simplest": 264, "package_nam": 264, "uniform": 264, "hinder": 264, "inter": 264, "distinguish": 264, "is_array_api_obj": 264, "peopl": 264, "abc": 264, "inherit": 264, "isinst": 264, "prove": 264, "discov": 264, "assist": 264, "importlib": 264, "metadata": 264, "entry_point": 264, "dict": 264, "deprec": 264, "py3": 264, "supplant": 264, "load": 264, "path": 264, "haven": 264, "measur": 264, "isol": 264, "indispens": 264, "institut": 264, "electr": 264, "electron": 264, "engin": [264, 266], "york": 264, "scott": 264, "bradner": 264, "1997": 264, "word": 264, "2119": 264, "doi": 264, "17487": 264, "rfc2119": 264, "technic": 265, "vacuum": 265, "sometim": 265, "compet": 265, "friction": 265, "focu": 265, "accommod": [265, 266], "foo": 265, "bar": 265, "aspir": 265, "experiment": 265, "channel": 265, "resourc": [265, 266], "novel": 265, "thwart": 265, "reinvent": 265, "proverbi": 265, "wheel": 265, "foundat": 265, "articul": 265, "quantifi": 265, "analyz": 265, "ground": [265, 267], "empir": 265, "acquir": 265, "scrape": 265, "unifi": [265, 266], "extract": 265, "intersect": 265, "complement": 265, "suitabl": 265, "preval": 265, "eas": 265, "leverag": 265, "summar": 265, "tool": [265, 266], "explor": 265, "instrument": 265, "record": 265, "collect": 265, "json": 265, "human": 265, "docstr": 265, "_0": 265, "_arg": 265, "347": 265, "359": 265, "894": 265, "1173": 265, "skimag": 265, "174": 265, "sklearn": 265, "373": 265, "publicli": 265, "stori": 265, "broad": 265, "wider": 266, "wrap": 266, "familiar": 266, "survei": 266, "advanc": 266, "research": 266, "nsf": 266, "pain": 266, "brought": 266, "wish": 266, "multiprocess": 266, "shorten": 266, "fortran": 266, "easili": [266, 267], "pure": 266, "manual": 266, "Then": 266, "hoc": 266, "critic": 266, "corner": 266, "tractabl": 266, "spectral": 266, "periodogram": 266, "spectrogram": 266, "csd": 266, "welch": 266, "stft": 266, "istft": 266, "lombscargl": 266, "40": 266, "sai": [266, 267], "ineffici": 266, "x_np": 266, "asnumpi": 266, "freq": 266, "pxx": 266, "back": 266, "torch": 266, "littl": 266, "flexibl": 266, "py": [266, 267], "rearrang": 266, "_backend": 266, "glue": 266, "loc": 266, "some_func": 266, "get_backend": 266, "disappear": 266, "serv": 266, "50": 266, "tensorli": 266, "kera": 266, "eagerpi": 266, "notabl": 266, "suboptim": 266, "readili": 266, "cpyext": 266, "unsuccess": 266, "xla": 266, "vta": 266, "jump": 266, "hoop": 266, "attain": 266, "got": 266, "cfunc": 266, "np": 266, "assert_array_almost_equ": 266, "pyfunc": 266, "pyarray_cancastarrayto": 266, "assertequ": 266, "spec": 267, "clone": 267, "repo": 267, "pip": 267, "pytest": 267, "hypothesi": 267, "conda": 267, "array_api_tests_modul": 267, "edit": 267, "array_api_test": 267, "_array_modul": 267, "array_modul": 267, "command": 267, "asid": 267, "vendor": 267, "readm": 267}, "objects": {"array_api": [[8, 0, 1, "", "__array_api_version__"], [9, 1, 1, "", "abs"], [10, 1, 1, "", "acos"], [11, 1, 1, "", "acosh"], [12, 1, 1, "", "add"], [13, 1, 1, "", "all"], [14, 1, 1, "", "any"], [15, 1, 1, "", "arange"], [16, 1, 1, "", "argmax"], [17, 1, 1, "", "argmin"], [18, 1, 1, "", "argsort"], [60, 1, 1, "", "asarray"], [61, 1, 1, "", "asin"], [62, 1, 1, "", "asinh"], [63, 1, 1, "", "astype"], [64, 1, 1, "", "atan"], [65, 1, 1, "", "atan2"], [66, 1, 1, "", "atanh"], [67, 1, 1, "", "bitwise_and"], [68, 1, 1, "", "bitwise_invert"], [69, 1, 1, "", "bitwise_left_shift"], [70, 1, 1, "", "bitwise_or"], [71, 1, 1, "", "bitwise_right_shift"], [72, 1, 1, "", "bitwise_xor"], [73, 1, 1, "", "broadcast_arrays"], [74, 1, 1, "", "broadcast_to"], [75, 1, 1, "", "can_cast"], [76, 1, 1, "", "ceil"], [77, 1, 1, "", "clip"], [78, 1, 1, "", "concat"], [79, 1, 1, "", "conj"], [85, 1, 1, "", "copysign"], [86, 1, 1, "", "cos"], [87, 1, 1, "", "cosh"], [88, 1, 1, "", "cumulative_sum"], [90, 1, 1, "", "diff"], [91, 1, 1, "", "divide"], [92, 1, 1, "", "empty"], [93, 1, 1, "", "empty_like"], [94, 1, 1, "", "equal"], [95, 1, 1, "", "exp"], [96, 1, 1, "", "expand_dims"], [97, 1, 1, "", "expm1"], [98, 1, 1, "", "eye"], [99, 1, 1, "", "finfo"], [100, 1, 1, "", "flip"], [101, 1, 1, "", "floor"], [102, 1, 1, "", "floor_divide"], [103, 1, 1, "", "from_dlpack"], [104, 1, 1, "", "full"], [105, 1, 1, "", "full_like"], [106, 1, 1, "", "greater"], [107, 1, 1, "", "greater_equal"], [108, 1, 1, "", "hypot"], [109, 1, 1, "", "iinfo"], [110, 1, 1, "", "imag"], [117, 1, 1, "", "isdtype"], [118, 1, 1, "", "isfinite"], [119, 1, 1, "", "isinf"], [120, 1, 1, "", "isnan"], [121, 1, 1, "", "less"], [122, 1, 1, "", "less_equal"], [123, 1, 1, "", "linspace"], [124, 1, 1, "", "log"], [125, 1, 1, "", "log10"], [126, 1, 1, "", "log1p"], [127, 1, 1, "", "log2"], [128, 1, 1, "", "logaddexp"], [129, 1, 1, "", "logical_and"], [130, 1, 1, "", "logical_not"], [131, 1, 1, "", "logical_or"], [132, 1, 1, "", "logical_xor"], [133, 1, 1, "", "matmul"], [134, 1, 1, "", "matrix_transpose"], [135, 1, 1, "", "max"], [136, 1, 1, "", "maximum"], [137, 1, 1, "", "mean"], [138, 1, 1, "", "meshgrid"], [139, 1, 1, "", "min"], [140, 1, 1, "", "minimum"], [141, 1, 1, "", "moveaxis"], [142, 1, 1, "", "multiply"], [143, 1, 1, "", "negative"], [144, 1, 1, "", "nextafter"], [145, 1, 1, "", "nonzero"], [146, 1, 1, "", "not_equal"], [147, 1, 1, "", "ones"], [148, 1, 1, "", "ones_like"], [149, 1, 1, "", "permute_dims"], [150, 1, 1, "", "positive"], [151, 1, 1, "", "pow"], [152, 1, 1, "", "prod"], [153, 1, 1, "", "real"], [154, 1, 1, "", "reciprocal"], [155, 1, 1, "", "remainder"], [156, 1, 1, "", "repeat"], [157, 1, 1, "", "reshape"], [158, 1, 1, "", "result_type"], [159, 1, 1, "", "roll"], [160, 1, 1, "", "round"], [161, 1, 1, "", "searchsorted"], [162, 1, 1, "", "sign"], [163, 1, 1, "", "signbit"], [164, 1, 1, "", "sin"], [165, 1, 1, "", "sinh"], [166, 1, 1, "", "sort"], [167, 1, 1, "", "sqrt"], [168, 1, 1, "", "square"], [169, 1, 1, "", "squeeze"], [170, 1, 1, "", "stack"], [171, 1, 1, "", "std"], [172, 1, 1, "", "subtract"], [173, 1, 1, "", "sum"], [174, 1, 1, "", "take"], [175, 1, 1, "", "take_along_axis"], [176, 1, 1, "", "tan"], [177, 1, 1, "", "tanh"], [178, 1, 1, "", "tensordot"], [179, 1, 1, "", "tile"], [180, 1, 1, "", "tril"], [181, 1, 1, "", "triu"], [182, 1, 1, "", "trunc"], [183, 1, 1, "", "unique_all"], [184, 1, 1, "", "unique_counts"], [185, 1, 1, "", "unique_inverse"], [186, 1, 1, "", "unique_values"], [187, 1, 1, "", "unstack"], [188, 1, 1, "", "var"], [189, 1, 1, "", "vecdot"], [190, 1, 1, "", "where"], [191, 1, 1, "", "zeros"], [192, 1, 1, "", "zeros_like"]], "array_api.array": [[19, 2, 1, "", "T"], [20, 3, 1, "", "__abs__"], [21, 3, 1, "", "__add__"], [22, 3, 1, "", "__and__"], [23, 3, 1, "", "__array_namespace__"], [24, 3, 1, "", "__bool__"], [25, 3, 1, "", "__complex__"], [26, 3, 1, "", "__dlpack__"], [27, 3, 1, "", "__dlpack_device__"], [28, 3, 1, "", "__eq__"], [29, 3, 1, "", "__float__"], [30, 3, 1, "", "__floordiv__"], [31, 3, 1, "", "__ge__"], [32, 3, 1, "", "__getitem__"], [33, 3, 1, "", "__gt__"], [34, 3, 1, "", "__index__"], [35, 3, 1, "", "__int__"], [36, 3, 1, "", "__invert__"], [37, 3, 1, "", "__le__"], [38, 3, 1, "", "__lshift__"], [39, 3, 1, "", "__lt__"], [40, 3, 1, "", "__matmul__"], [41, 3, 1, "", "__mod__"], [42, 3, 1, "", "__mul__"], [43, 3, 1, "", "__ne__"], [44, 3, 1, "", "__neg__"], [45, 3, 1, "", "__or__"], [46, 3, 1, "", "__pos__"], [47, 3, 1, "", "__pow__"], [48, 3, 1, "", "__rshift__"], [49, 3, 1, "", "__setitem__"], [50, 3, 1, "", "__sub__"], [51, 3, 1, "", "__truediv__"], [52, 3, 1, "", "__xor__"], [53, 2, 1, "", "device"], [54, 2, 1, "", "dtype"], [55, 2, 1, "", "mT"], [56, 2, 1, "", "ndim"], [57, 2, 1, "", "shape"], [58, 2, 1, "", "size"], [59, 3, 1, "", "to_device"]], "array_api.constants": [[80, 0, 1, "", "e"], [81, 0, 1, "", "inf"], [82, 0, 1, "", "nan"], [83, 0, 1, "", "newaxis"], [84, 0, 1, "", "pi"]], "array_api.data_types": [[89, 1, 1, "", "__eq__"]], "array_api.fft": [[222, 1, 1, "", "fft"], [223, 1, 1, "", "fftfreq"], [224, 1, 1, "", "fftn"], [225, 1, 1, "", "fftshift"], [226, 1, 1, "", "hfft"], [227, 1, 1, "", "ifft"], [228, 1, 1, "", "ifftn"], [229, 1, 1, "", "ifftshift"], [230, 1, 1, "", "ihfft"], [231, 1, 1, "", "irfft"], [232, 1, 1, "", "irfftn"], [233, 1, 1, "", "rfft"], [234, 1, 1, "", "rfftfreq"], [235, 1, 1, "", "rfftn"]], "array_api.info": [[111, 1, 1, "", "__array_namespace_info__"], [112, 1, 1, "", "capabilities"], [113, 1, 1, "", "default_device"], [114, 1, 1, "", "default_dtypes"], [115, 1, 1, "", "devices"], [116, 1, 1, "", "dtypes"]], "array_api.linalg": [[236, 1, 1, "", "cholesky"], [237, 1, 1, "", "cross"], [238, 1, 1, "", "det"], [239, 1, 1, "", "diagonal"], [240, 1, 1, "", "eigh"], [241, 1, 1, "", "eigvalsh"], [242, 1, 1, "", "inv"], [243, 1, 1, "", "matmul"], [244, 1, 1, "", "matrix_norm"], [245, 1, 1, "", "matrix_power"], [246, 1, 1, "", "matrix_rank"], [247, 1, 1, "", "matrix_transpose"], [248, 1, 1, "", "outer"], [249, 1, 1, "", "pinv"], [250, 1, 1, "", "qr"], [251, 1, 1, "", "slogdet"], [252, 1, 1, "", "solve"], [253, 1, 1, "", "svd"], [254, 1, 1, "", "svdvals"], [255, 1, 1, "", "tensordot"], [256, 1, 1, "", "trace"], [257, 1, 1, "", "vecdot"], [258, 1, 1, "", "vector_norm"]]}, "objtypes": {"0": "py:data", "1": "py:function", "2": "py:property", "3": "py:method"}, "objnames": {"0": ["py", "data", "Python data"], "1": ["py", "function", "Python function"], "2": ["py", "property", "Python property"], "3": ["py", "method", "Python method"]}, "titleterms": {"arrai": [0, 194, 203, 262, 264, 266], "object": [0, 2, 3, 4, 5, 6, 195, 196, 197, 198, 199, 200, 201, 202, 204, 205, 221, 260, 264], "oper": [0, 210], "arithmet": [0, 210], "bitwis": 0, "comparison": 0, "In": [0, 1, 264], "place": [0, 1], "reflect": 0, "attribut": 0, "method": [0, 7], "broadcast": 1, "overview": 1, "algorithm": 1, "exampl": [1, 209], "semant": [1, 215], "constant": 2, "api": [2, 3, 4, 6, 193, 195, 196, 197, 198, 199, 200, 201, 202, 204, 205, 208, 209, 221, 260, 261, 262, 264, 266], "creation": 3, "function": [3, 4, 6, 7, 195, 197, 198, 199, 200, 201, 202, 204, 210, 221], "data": [4, 5, 145, 156, 183, 184, 185, 186, 194, 208, 213, 214, 265], "type": [4, 5, 203, 208, 220, 266], "us": [5, 206, 209, 214, 265, 266], "default": 5, "categori": 5, "element": 6, "wise": 6, "signatur": 7, "__array_api_version__": 8, "ab": 9, "aco": 10, "acosh": 11, "add": [12, 266], "all": 13, "ani": 14, "arang": 15, "argmax": 16, "argmin": 17, "argsort": 18, "t": 19, "__abs__": 20, "__add__": 21, "__and__": 22, "__array_namespace__": 23, "__bool__": 24, "__complex__": 25, "__dlpack__": 26, "tip": [26, 60], "__dlpack_device__": 27, "__eq__": [28, 89], "__float__": 29, "__floordiv__": 30, "__ge__": 31, "__getitem__": 32, "__gt__": 33, "__index__": 34, "__int__": 35, "__invert__": 36, "__le__": 37, "__lshift__": 38, "__lt__": 39, "__matmul__": 40, "__mod__": 41, "__mul__": 42, "__ne__": 43, "__neg__": 44, "__or__": 45, "__pos__": 46, "__pow__": 47, "__rshift__": 48, "__setitem__": 49, "__sub__": 50, "__truediv__": 51, "__xor__": 52, "devic": [53, 115, 209, 215], "dtype": [54, 116], "mt": 55, "ndim": 56, "shape": [57, 145, 156, 183, 184, 185, 186, 194, 213], "size": 58, "to_devic": 59, "asarrai": 60, "note": [60, 103, 123, 203], "asin": 61, "asinh": 62, "astyp": 63, "atan": 64, "atan2": 65, "atanh": 66, "bitwise_and": 67, "bitwise_invert": 68, "bitwise_left_shift": 69, "bitwise_or": 70, "bitwise_right_shift": 71, "bitwise_xor": 72, "broadcast_arrai": 73, "broadcast_to": 74, "can_cast": 75, "ceil": 76, "clip": 77, "concat": 78, "conj": 79, "e": 80, "inf": 81, "nan": 82, "newaxi": 83, "pi": 84, "copysign": 85, "co": 86, "cosh": 87, "cumulative_sum": 88, "diff": 90, "divid": 91, "empti": 92, "empty_lik": 93, "equal": 94, "exp": 95, "expand_dim": 96, "expm1": 97, "ey": 98, "finfo": 99, "flip": 100, "floor": 101, "floor_divid": 102, "from_dlpack": 103, "full": 104, "full_lik": 105, "greater": 106, "greater_equ": 107, "hypot": 108, "iinfo": 109, "imag": 110, "__array_namespace_info__": 111, "capabl": 112, "default_devic": 113, "default_dtyp": 114, "isdtyp": 117, "isfinit": 118, "isinf": 119, "isnan": 120, "less": 121, "less_equ": 122, "linspac": 123, "log": 124, "log10": 125, "log1p": 126, "log2": 127, "logaddexp": 128, "logical_and": 129, "logical_not": 130, "logical_or": 131, "logical_xor": 132, "matmul": [133, 243], "matrix_transpos": [134, 247], "max": 135, "maximum": 136, "mean": 137, "meshgrid": 138, "min": 139, "minimum": 140, "moveaxi": 141, "multipli": 142, "neg": 143, "nextaft": 144, "nonzero": 145, "depend": [145, 156, 183, 184, 185, 186, 194, 206, 213], "output": [145, 156, 183, 184, 185, 186, 194, 213], "not_equ": 146, "ones": 147, "ones_lik": 148, "permute_dim": 149, "posit": 150, "pow": 151, "prod": 152, "real": 153, "reciproc": 154, "remaind": 155, "repeat": 156, "reshap": 157, "result_typ": 158, "roll": 159, "round": 160, "searchsort": 161, "sign": [162, 203], "signbit": 163, "sin": 164, "sinh": 165, "sort": [166, 201], "sqrt": 167, "squar": 168, "squeez": 169, "stack": 170, "std": 171, "subtract": 172, "sum": 173, "take": 174, "take_along_axi": 175, "tan": 176, "tanh": 177, "tensordot": [178, 255], "tile": 179, "tril": 180, "triu": 181, "trunc": 182, "unique_al": 183, "unique_count": 184, "unique_invers": 185, "unique_valu": 186, "unstack": 187, "var": 188, "vecdot": [189, 257], "where": 190, "zero": 191, "zeros_lik": 192, "specif": 193, "index": [194, 195], "singl": 194, "axi": 194, "slice": 194, "syntax": [194, 215], "multi": 194, "boolean": 194, "return": 194, "valu": [194, 211], "inspect": [196, 208], "linear": [197, 210, 260], "algebra": [197, 210, 260], "manipul": 198, "search": 199, "set": 200, "statist": [202, 210], "promot": [203, 211], "rule": 203, "integ": 203, "tabl": 203, "unsign": 203, "mix": 203, "float": 203, "point": 203, "python": [203, 209, 262, 266], "scalar": 203, "util": 204, "version": [205, 208, 261], "assumpt": 206, "hardwar": [206, 266], "softwar": 206, "environ": 206, "backward": [206, 261], "compat": [206, 261], "product": 206, "code": [206, 209], "interact": 206, "benchmark": 207, "suit": [207, 267], "changelog": 208, "per": 208, "standard": [208, 209, 261, 262, 264], "v2023": 208, "12": 208, "updat": 208, "norm": [208, 264], "extens": [208, 209, 221, 259, 260, 261], "addit": 208, "break": 208, "chang": 208, "errata": 208, "v2022": 208, "complex": [208, 211], "number": [208, 209, 211], "support": [208, 209, 214, 215, 266], "c": 209, "situat": 209, "cython": 209, "usag": [209, 215, 221, 260, 262, 265], "1": [209, 266], "packag": 209, "i": 209, "mostli": 209, "pure": 209, "limit": 209, "2": [209, 266], "contain": 209, "lot": 209, "3": [209, 266], "numpi": 209, "directli": 209, "other": [209, 262], "longer": 209, "term": [209, 264], "approach": 209, "further": 209, "hpy": 209, "accuraci": 210, "mathemat": 210, "The": 211, "plane": 211, "branch": 211, "cut": 211, "order": 211, "base": 211, "copi": 212, "view": 212, "behaviour": 212, "mutabl": 212, "mutat": 212, "interchang": 214, "mechan": 214, "dlpack": 214, "an": [214, 264], "memori": 214, "tensor": 214, "structur": 214, "non": [214, 264], "case": [214, 266], "intend": 215, "assign": 215, "out": [215, 264], "scope": [215, 261, 264], "except": 216, "design": [217, 260, 265], "topic": 217, "constraint": 217, "lazi": 218, "v": 218, "eager": 218, "execut": 218, "parallel": 219, "static": 220, "fourier": 221, "transform": 221, "name": [221, 260], "fft": 222, "fftfreq": 223, "fftn": 224, "fftshift": 225, "hfft": 226, "ifft": 227, "ifftn": 228, "ifftshift": 229, "ihfft": 230, "irfft": 231, "irfftn": 232, "rfft": 233, "rfftfreq": 234, "rfftn": 235, "choleski": 236, "cross": 237, "det": 238, "diagon": 239, "eigh": 240, "eigvalsh": 241, "inv": 242, "matrix_norm": 244, "matrix_pow": 245, "matrix_rank": 246, "outer": 248, "pinv": 249, "qr": 250, "slogdet": 251, "solv": 252, "svd": 253, "svdval": 254, "trace": 256, "vector_norm": 258, "modul": 259, "principl": 260, "futur": 261, "evolut": 261, "content": 262, "context": 262, "methodologi": 262, "licens": 263, "purpos": 264, "introduct": [264, 265], "thi": 264, "histori": 264, "includ": 264, "goal": 264, "implic": 264, "stakehold": 264, "how": 264, "read": 264, "document": 264, "adopt": 264, "check": 264, "complianc": 264, "discover": 264, "conform": [264, 267], "implement": 264, "option": 264, "featur": 264, "definit": 264, "refer": 264, "decis": 265, "make": [265, 266], "concret": 266, "acceler": 266, "distribut": 266, "scipi": 266, "simplifi": 266, "einop": 266, "remov": 266, "backend": 266, "system": 266, "ad": 266, "xtensor": 266, "4": 266, "jit": 266, "compil": 266, "comput": 266, "easier": 266, "more": 266, "robust": 266, "verif": 267, "test": 267, "measur": 267, "run": 267}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.todo": 2, "sphinx": 60}, "alltitles": {"Array object": [[0, "array-object"]], "Operators": [[0, "operators"]], "Arithmetic Operators": [[0, "arithmetic-operators"], [0, "id26"], [0, "id29"]], "Array Operators": [[0, "array-operators"], [0, "id27"], [0, "id30"]], "Bitwise Operators": [[0, "bitwise-operators"], [0, "id28"], [0, "id31"]], "Comparison Operators": [[0, "comparison-operators"]], "In-place Operators": [[0, "in-place-operators"]], "Reflected Operators": [[0, "reflected-operators"]], "Attributes": [[0, "attributes"]], "Methods": [[0, "methods"]], "Broadcasting": [[1, "broadcasting"]], "Overview": [[1, "overview"]], "Algorithm": [[1, "algorithm"]], "Examples": [[1, "examples"]], "In-place Semantics": [[1, "in-place-semantics"]], "Constants": [[2, "constants"]], "Objects in API": [[2, "objects-in-api"], [3, "objects-in-api"], [4, "objects-in-api"], [6, "objects-in-api"], [195, "objects-in-api"], [196, "objects-in-api"], [197, "objects-in-api"], [198, "objects-in-api"], [199, "objects-in-api"], [200, "objects-in-api"], [201, "objects-in-api"], [202, "objects-in-api"], [204, "objects-in-api"], [205, "objects-in-api"], [221, "objects-in-api"], [260, "objects-in-api"]], "Creation Functions": [[3, "creation-functions"]], "Data Type Functions": [[4, "data-type-functions"]], "Data Types": [[5, "data-types"], [208, "data-types"]], "Use of data type objects": [[5, "use-of-data-type-objects"]], "Default Data Types": [[5, "default-data-types"]], "Data Type Categories": [[5, "data-type-categories"]], "Element-wise Functions": [[6, "element-wise-functions"]], "Function and method signatures": [[7, "function-and-method-signatures"]], "__array_api_version__": [[8, "array-api-version"]], "abs": [[9, "abs"]], "acos": [[10, "acos"]], "acosh": [[11, "acosh"]], "add": [[12, "add"]], "all": [[13, "all"]], "any": [[14, "any"]], "arange": [[15, "arange"]], "argmax": [[16, "argmax"]], "argmin": [[17, "argmin"]], "argsort": [[18, "argsort"]], "T": [[19, "t"]], "__abs__": [[20, "abs"]], "__add__": [[21, "add"]], "__and__": [[22, "and"]], "__array_namespace__": [[23, "array-namespace"]], "__bool__": [[24, "bool"]], "__complex__": [[25, "complex"]], "__dlpack__": [[26, "dlpack"]], "Tip": [[26, null], [60, null]], "__dlpack_device__": [[27, "dlpack-device"]], "__eq__": [[28, "eq"], [89, "eq"]], "__float__": [[29, "float"]], "__floordiv__": [[30, "floordiv"]], "__ge__": [[31, "ge"]], "__getitem__": [[32, "getitem"]], "__gt__": [[33, "gt"]], "__index__": [[34, "index"]], "__int__": [[35, "int"]], "__invert__": [[36, "invert"]], "__le__": [[37, "le"]], "__lshift__": [[38, "lshift"]], "__lt__": [[39, "lt"]], "__matmul__": [[40, "matmul"]], "__mod__": [[41, "mod"]], "__mul__": [[42, "mul"]], "__ne__": [[43, "ne"]], "__neg__": [[44, "neg"]], "__or__": [[45, "or"]], "__pos__": [[46, "pos"]], "__pow__": [[47, "pow"]], "__rshift__": [[48, "rshift"]], "__setitem__": [[49, "setitem"]], "__sub__": [[50, "sub"]], "__truediv__": [[51, "truediv"]], "__xor__": [[52, "xor"]], "device": [[53, "device"]], "dtype": [[54, "dtype"]], "mT": [[55, "mt"]], "ndim": [[56, "ndim"]], "shape": [[57, "shape"]], "size": [[58, "size"]], "to_device": [[59, "to-device"]], "asarray": [[60, "asarray"]], "Note": [[60, null], [103, null], [123, null]], "asin": [[61, "asin"]], "asinh": [[62, "asinh"]], "astype": [[63, "astype"]], "atan": [[64, "atan"]], "atan2": [[65, "atan2"]], "atanh": [[66, "atanh"]], "bitwise_and": [[67, "bitwise-and"]], "bitwise_invert": [[68, "bitwise-invert"]], "bitwise_left_shift": [[69, "bitwise-left-shift"]], "bitwise_or": [[70, "bitwise-or"]], "bitwise_right_shift": [[71, "bitwise-right-shift"]], "bitwise_xor": [[72, "bitwise-xor"]], "broadcast_arrays": [[73, "broadcast-arrays"]], "broadcast_to": [[74, "broadcast-to"]], "can_cast": [[75, "can-cast"]], "ceil": [[76, "ceil"]], "clip": [[77, "clip"]], "concat": [[78, "concat"]], "conj": [[79, "conj"]], "e": [[80, "e"]], "inf": [[81, "inf"]], "nan": [[82, "nan"]], "newaxis": [[83, "newaxis"]], "pi": [[84, "pi"]], "copysign": [[85, "copysign"]], "cos": [[86, "cos"]], "cosh": [[87, "cosh"]], "cumulative_sum": [[88, "cumulative-sum"]], "diff": [[90, "diff"]], "divide": [[91, "divide"]], "empty": [[92, "empty"]], "empty_like": [[93, "empty-like"]], "equal": [[94, "equal"]], "exp": [[95, "exp"]], "expand_dims": [[96, "expand-dims"]], "expm1": [[97, "expm1"]], "eye": [[98, "eye"]], "finfo": [[99, "finfo"]], "flip": [[100, "flip"]], "floor": [[101, "floor"]], "floor_divide": [[102, "floor-divide"]], "from_dlpack": [[103, "from-dlpack"]], "full": [[104, "full"]], "full_like": [[105, "full-like"]], "greater": [[106, "greater"]], "greater_equal": [[107, "greater-equal"]], "hypot": [[108, "hypot"]], "iinfo": [[109, "iinfo"]], "imag": [[110, "imag"]], "__array_namespace_info__": [[111, "array-namespace-info"]], "capabilities": [[112, "capabilities"]], "default_device": [[113, "default-device"]], "default_dtypes": [[114, "default-dtypes"]], "devices": [[115, "devices"]], "dtypes": [[116, "dtypes"]], "isdtype": [[117, "isdtype"]], "isfinite": [[118, "isfinite"]], "isinf": [[119, "isinf"]], "isnan": [[120, "isnan"]], "less": [[121, "less"]], "less_equal": [[122, "less-equal"]], "linspace": [[123, "linspace"]], "log": [[124, "log"]], "log10": [[125, "log10"]], "log1p": [[126, "log1p"]], "log2": [[127, "log2"]], "logaddexp": [[128, "logaddexp"]], "logical_and": [[129, "logical-and"]], "logical_not": [[130, "logical-not"]], "logical_or": [[131, "logical-or"]], "logical_xor": [[132, "logical-xor"]], "matmul": [[133, "matmul"], [243, "matmul"]], "matrix_transpose": [[134, "matrix-transpose"], [247, "matrix-transpose"]], "max": [[135, "max"]], "maximum": [[136, "maximum"]], "mean": [[137, "mean"]], "meshgrid": [[138, "meshgrid"]], "min": [[139, "min"]], "minimum": [[140, "minimum"]], "moveaxis": [[141, "moveaxis"]], "multiply": [[142, "multiply"]], "negative": [[143, "negative"]], "nextafter": [[144, "nextafter"]], "nonzero": [[145, "nonzero"]], "Data-dependent output shape": [[145, null], [156, null], [183, null], [184, null], [185, null], [186, null], [194, null], [213, null]], "not_equal": [[146, "not-equal"]], "ones": [[147, "ones"]], "ones_like": [[148, "ones-like"]], "permute_dims": [[149, "permute-dims"]], "positive": [[150, "positive"]], "pow": [[151, "pow"]], "prod": [[152, "prod"]], "real": [[153, "real"]], "reciprocal": [[154, "reciprocal"]], "remainder": [[155, "remainder"]], "repeat": [[156, "repeat"]], "reshape": [[157, "reshape"]], "result_type": [[158, "result-type"]], "roll": [[159, "roll"]], "round": [[160, "round"]], "searchsorted": [[161, "searchsorted"]], "sign": [[162, "sign"]], "signbit": [[163, "signbit"]], "sin": [[164, "sin"]], "sinh": [[165, "sinh"]], "sort": [[166, "sort"]], "sqrt": [[167, "sqrt"]], "square": [[168, "square"]], "squeeze": [[169, "squeeze"]], "stack": [[170, "stack"]], "std": [[171, "std"]], "subtract": [[172, "subtract"]], "sum": [[173, "sum"]], "take": [[174, "take"]], "take_along_axis": [[175, "take-along-axis"]], "tan": [[176, "tan"]], "tanh": [[177, "tanh"]], "tensordot": [[178, "tensordot"], [255, "tensordot"]], "tile": [[179, "tile"]], "tril": [[180, "tril"]], "triu": [[181, "triu"]], "trunc": [[182, "trunc"]], "unique_all": [[183, "unique-all"]], "unique_counts": [[184, "unique-counts"]], "unique_inverse": [[185, "unique-inverse"]], "unique_values": [[186, "unique-values"]], "unstack": [[187, "unstack"]], "var": [[188, "var"]], "vecdot": [[189, "vecdot"], [257, "vecdot"]], "where": [[190, "where"]], "zeros": [[191, "zeros"]], "zeros_like": [[192, "zeros-like"]], "API specification": [[193, "api-specification"], [193, null]], "Indexing": [[194, "indexing"]], "Single-axis Indexing": [[194, "single-axis-indexing"]], "Slice Syntax": [[194, "slice-syntax"]], "Multi-axis Indexing": [[194, "multi-axis-indexing"]], "Boolean Array Indexing": [[194, "boolean-array-indexing"]], "Return Values": [[194, "return-values"]], "Indexing Functions": [[195, "indexing-functions"]], "Inspection": [[196, "inspection"]], "Inspection APIs": [[196, "inspection-apis"], [208, "inspection-apis"]], "Linear Algebra Functions": [[197, "linear-algebra-functions"]], "Manipulation Functions": [[198, "manipulation-functions"]], "Searching Functions": [[199, "searching-functions"]], "Set Functions": [[200, "set-functions"]], "Sorting Functions": [[201, "sorting-functions"]], "Statistical Functions": [[202, "statistical-functions"], [210, "statistical-functions"]], "Type Promotion Rules": [[203, "type-promotion-rules"]], "Rules": [[203, "rules"]], "Signed integer type promotion table": [[203, "signed-integer-type-promotion-table"]], "Unsigned integer type promotion table": [[203, "unsigned-integer-type-promotion-table"]], "Mixed unsigned and signed integer type promotion table": [[203, "mixed-unsigned-and-signed-integer-type-promotion-table"]], "Floating-point type promotion table": [[203, "floating-point-type-promotion-table"]], "Notes": [[203, "notes"]], "Mixing arrays with Python scalars": [[203, "mixing-arrays-with-python-scalars"]], "Utility Functions": [[204, "utility-functions"]], "Version": [[205, "version"]], "Assumptions": [[206, "assumptions"]], "Hardware and software environments": [[206, "hardware-and-software-environments"]], "Dependencies": [[206, "dependencies"]], "Backwards compatibility": [[206, "backwards-compatibility"], [261, "backwards-compatibility"]], "Production code & interactive use": [[206, "production-code-interactive-use"]], "Benchmark suite": [[207, "benchmark-suite"]], "Changelog per API standard version": [[208, "changelog-per-api-standard-version"]], "Changelog": [[208, "changelog"]], "v2023.12": [[208, "v2023-12"]], "Updates": [[208, "updates"], [208, "id3"]], "Normative": [[208, "normative"]], "APIs": [[208, "apis"], [208, "id1"], [208, "id4"], [208, "id8"]], "Extensions": [[208, "extensions"], [208, "id2"], [208, "id5"], [208, "id9"], [259, "extensions"]], "Additions": [[208, "additions"], [208, "id7"]], "Breaking Changes": [[208, "breaking-changes"]], "Errata": [[208, "errata"], [208, "id10"]], "v2022.12": [[208, "v2022-12"]], "Complex Number Support": [[208, "complex-number-support"], [208, "id6"]], "C API": [[209, "c-api"]], "Example situations for C/Cython usage": [[209, "example-situations-for-c-cython-usage"]], "Situation 1: a Python package that is mostly pure Python, with a limited number of Cython extensions": [[209, "situation-1-a-python-package-that-is-mostly-pure-python-with-a-limited-number-of-cython-extensions"]], "Situation 2: a Python package that contains a lot of Cython code": [[209, "situation-2-a-python-package-that-contains-a-lot-of-cython-code"]], "Situation 3: a Python package that uses the NumPy or Python C API directly": [[209, "situation-3-a-python-package-that-uses-the-numpy-or-python-c-api-directly"]], "Device support": [[209, "device-support"], [215, "device-support"]], "Other longer-term approaches": [[209, "other-longer-term-approaches"]], "Further Python API standardization": [[209, "further-python-api-standardization"]], "HPy": [[209, "hpy"]], "Accuracy": [[210, "accuracy"]], "Arithmetic Operations": [[210, "arithmetic-operations"]], "Mathematical Functions": [[210, "mathematical-functions"]], "Linear Algebra": [[210, "linear-algebra"]], "Complex Numbers": [[211, "complex-numbers"]], "The Complex Plane": [[211, "the-complex-plane"]], "Branch Cuts": [[211, "branch-cuts"]], "Complex Number Ordering": [[211, "complex-number-ordering"]], "Valued-based Promotion": [[211, "valued-based-promotion"]], "Copy-view behaviour and mutability": [[212, "copy-view-behaviour-and-mutability"]], "Mutating views": [[212, null]], "Data-dependent output shapes": [[213, "data-dependent-output-shapes"]], "Data interchange mechanisms": [[214, "data-interchange-mechanisms"]], "DLPack: An in-memory tensor structure": [[214, "dlpack-an-in-memory-tensor-structure"]], "Non-supported use cases": [[214, "non-supported-use-cases"]], "Intended usage": [[215, "intended-usage"]], "Syntax for device assignment": [[215, "syntax-for-device-assignment"]], "Semantics": [[215, "semantics"]], "Out of scope for device support": [[215, "out-of-scope-for-device-support"]], "Exceptions": [[216, "exceptions"]], "Design topics & constraints": [[217, "design-topics-constraints"], [217, null]], "Lazy vs. eager execution": [[218, "lazy-vs-eager-execution"]], "Parallelism": [[219, "parallelism"]], "Static typing": [[220, "static-typing"]], "Fourier transform Functions": [[221, "fourier-transform-functions"]], "Extension name and usage": [[221, "extension-name-and-usage"], [260, "extension-name-and-usage"]], "fft": [[222, "fft"]], "fftfreq": [[223, "fftfreq"]], "fftn": [[224, "fftn"]], "fftshift": [[225, "fftshift"]], "hfft": [[226, "hfft"]], "ifft": [[227, "ifft"]], "ifftn": [[228, "ifftn"]], "ifftshift": [[229, "ifftshift"]], "ihfft": [[230, "ihfft"]], "irfft": [[231, "irfft"]], "irfftn": [[232, "irfftn"]], "rfft": [[233, "rfft"]], "rfftfreq": [[234, "rfftfreq"]], "rfftn": [[235, "rfftn"]], "cholesky": [[236, "cholesky"]], "cross": [[237, "cross"]], "det": [[238, "det"]], "diagonal": [[239, "diagonal"]], "eigh": [[240, "eigh"]], "eigvalsh": [[241, "eigvalsh"]], "inv": [[242, "inv"]], "matrix_norm": [[244, "matrix-norm"]], "matrix_power": [[245, "matrix-power"]], "matrix_rank": [[246, "matrix-rank"]], "outer": [[248, "outer"]], "pinv": [[249, "pinv"]], "qr": [[250, "qr"]], "slogdet": [[251, "slogdet"]], "solve": [[252, "solve"]], "svd": [[253, "svd"]], "svdvals": [[254, "svdvals"]], "trace": [[256, "trace"]], "vector_norm": [[258, "vector-norm"]], "Extension modules:": [[259, null]], "Linear Algebra Extension": [[260, "linear-algebra-extension"]], "Design Principles": [[260, "design-principles"]], "Future API standard evolution": [[261, "future-api-standard-evolution"]], "Scope extensions": [[261, "scope-extensions"]], "Versioning": [[261, "versioning"]], "Python array API standard": [[262, "python-array-api-standard"]], "Contents": [[262, "contents"]], "Context": [[262, null]], "API": [[262, null]], "Methodology and Usage": [[262, null]], "Other": [[262, null]], "License": [[263, "license"]], "Purpose and scope": [[264, "purpose-and-scope"]], "Introduction": [[264, "introduction"], [265, "introduction"]], "This API standard": [[264, "this-api-standard"]], "History": [[264, "history"]], "Scope (includes out-of-scope / non-goals)": [[264, "scope-includes-out-of-scope-non-goals"]], "In scope": [[264, "in-scope"]], "Out of scope": [[264, "out-of-scope"]], "Implications of in/out of scope": [[264, "implications-of-in-out-of-scope"]], "Stakeholders": [[264, "stakeholders"]], "How to read this document": [[264, "how-to-read-this-document"]], "How to adopt this API": [[264, "how-to-adopt-this-api"]], "Checking an array object for Compliance": [[264, "checking-an-array-object-for-compliance"]], "Discoverability of conforming implementations": [[264, "discoverability-of-conforming-implementations"]], "Optional feature": [[264, null]], "Conformance": [[264, "conformance"]], "Terms and Definitions": [[264, "terms-and-definitions"]], "Normative References": [[264, "normative-references"]], "Usage Data": [[265, "usage-data"]], "Design": [[265, "design"]], "Usage": [[265, "usage"]], "Use in Decision-Making": [[265, "use-in-decision-making"]], "Use cases": [[266, "use-cases"]], "Types of use cases": [[266, "types-of-use-cases"]], "Concrete use cases": [[266, "concrete-use-cases"]], "Use case 1: add hardware accelerator and distributed support to SciPy": [[266, "use-case-1-add-hardware-accelerator-and-distributed-support-to-scipy"]], "Use case 2: simplify einops by removing the backend system": [[266, "use-case-2-simplify-einops-by-removing-the-backend-system"]], "Use case 3: adding a Python API to xtensor": [[266, "use-case-3-adding-a-python-api-to-xtensor"]], "Use case 4: make JIT compilation of array computations easier and more robust": [[266, "use-case-4-make-jit-compilation-of-array-computations-easier-and-more-robust"]], "Verification - test suite": [[267, "verification-test-suite"]], "Measuring conformance": [[267, "measuring-conformance"]], "Running the tests": [[267, "running-the-tests"]]}, "indexentries": {"__array_api_version__ (in module array_api)": [[8, "array_api.__array_api_version__"]], "abs() (in module array_api)": [[9, "array_api.abs"]], "acos() (in module array_api)": [[10, "array_api.acos"]], "acosh() (in module array_api)": [[11, "array_api.acosh"]], "add() (in module array_api)": [[12, "array_api.add"]], "all() (in module array_api)": [[13, "array_api.all"]], "any() (in module array_api)": [[14, "array_api.any"]], "arange() (in module array_api)": [[15, "array_api.arange"]], "argmax() (in module array_api)": [[16, "array_api.argmax"]], "argmin() (in module array_api)": [[17, "array_api.argmin"]], "argsort() (in module array_api)": [[18, "array_api.argsort"]], "t (array property)": [[19, "array_api.array.T"]], "__abs__() (array method)": [[20, "array_api.array.__abs__"]], "__add__() (array method)": [[21, "array_api.array.__add__"]], "__and__() (array method)": [[22, "array_api.array.__and__"]], "__array_namespace__() (array method)": [[23, "array_api.array.__array_namespace__"]], "__bool__() (array method)": [[24, "array_api.array.__bool__"]], "__complex__() (array method)": [[25, "array_api.array.__complex__"]], "__dlpack__() (array method)": [[26, "array_api.array.__dlpack__"]], "__dlpack_device__() (array method)": [[27, "array_api.array.__dlpack_device__"]], "__eq__() (array method)": [[28, "array_api.array.__eq__"]], "__float__() (array method)": [[29, "array_api.array.__float__"]], "__floordiv__() (array method)": [[30, "array_api.array.__floordiv__"]], "__ge__() (array method)": [[31, "array_api.array.__ge__"]], "__getitem__() (array method)": [[32, "array_api.array.__getitem__"]], "__gt__() (array method)": [[33, "array_api.array.__gt__"]], "__index__() (array method)": [[34, "array_api.array.__index__"]], "__int__() (array method)": [[35, "array_api.array.__int__"]], "__invert__() (array method)": [[36, "array_api.array.__invert__"]], "__le__() (array method)": [[37, "array_api.array.__le__"]], "__lshift__() (array method)": [[38, "array_api.array.__lshift__"]], "__lt__() (array method)": [[39, "array_api.array.__lt__"]], "__matmul__() (array method)": [[40, "array_api.array.__matmul__"]], "__mod__() (array method)": [[41, "array_api.array.__mod__"]], "__mul__() (array method)": [[42, "array_api.array.__mul__"]], "__ne__() (array method)": [[43, "array_api.array.__ne__"]], "__neg__() (array method)": [[44, "array_api.array.__neg__"]], "__or__() (array method)": [[45, "array_api.array.__or__"]], "__pos__() (array method)": [[46, "array_api.array.__pos__"]], "__pow__() (array method)": [[47, "array_api.array.__pow__"]], "__rshift__() (array method)": [[48, "array_api.array.__rshift__"]], "__setitem__() (array method)": [[49, "array_api.array.__setitem__"]], "__sub__() (array method)": [[50, "array_api.array.__sub__"]], "__truediv__() (array method)": [[51, "array_api.array.__truediv__"]], "__xor__() (array method)": [[52, "array_api.array.__xor__"]], "device (array property)": [[53, "array_api.array.device"]], "dtype (array property)": [[54, "array_api.array.dtype"]], "mt (array property)": [[55, "array_api.array.mT"]], "ndim (array property)": [[56, "array_api.array.ndim"]], "shape (array property)": [[57, "array_api.array.shape"]], "size (array property)": [[58, "array_api.array.size"]], "to_device() (array method)": [[59, "array_api.array.to_device"]], "asarray() (in module array_api)": [[60, "array_api.asarray"]], "asin() (in module array_api)": [[61, "array_api.asin"]], "asinh() (in module array_api)": [[62, "array_api.asinh"]], "astype() (in module array_api)": [[63, "array_api.astype"]], "atan() (in module array_api)": [[64, "array_api.atan"]], "atan2() (in module array_api)": [[65, "array_api.atan2"]], "atanh() (in module array_api)": [[66, "array_api.atanh"]], "bitwise_and() (in module array_api)": [[67, "array_api.bitwise_and"]], "bitwise_invert() (in module array_api)": [[68, "array_api.bitwise_invert"]], "bitwise_left_shift() (in module array_api)": [[69, "array_api.bitwise_left_shift"]], "bitwise_or() (in module array_api)": [[70, "array_api.bitwise_or"]], "bitwise_right_shift() (in module array_api)": [[71, "array_api.bitwise_right_shift"]], "bitwise_xor() (in module array_api)": [[72, "array_api.bitwise_xor"]], "broadcast_arrays() (in module array_api)": [[73, "array_api.broadcast_arrays"]], "broadcast_to() (in module array_api)": [[74, "array_api.broadcast_to"]], "can_cast() (in module array_api)": [[75, "array_api.can_cast"]], "ceil() (in module array_api)": [[76, "array_api.ceil"]], "clip() (in module array_api)": [[77, "array_api.clip"]], "concat() (in module array_api)": [[78, "array_api.concat"]], "conj() (in module array_api)": [[79, "array_api.conj"]], "e (in module array_api.constants)": [[80, "array_api.constants.e"]], "inf (in module array_api.constants)": [[81, "array_api.constants.inf"]], "nan (in module array_api.constants)": [[82, "array_api.constants.nan"]], "newaxis (in module array_api.constants)": [[83, "array_api.constants.newaxis"]], "pi (in module array_api.constants)": [[84, "array_api.constants.pi"]], "copysign() (in module array_api)": [[85, "array_api.copysign"]], "cos() (in module array_api)": [[86, "array_api.cos"]], "cosh() (in module array_api)": [[87, "array_api.cosh"]], "cumulative_sum() (in module array_api)": [[88, "array_api.cumulative_sum"]], "__eq__() (in module array_api.data_types)": [[89, "array_api.data_types.__eq__"]], "diff() (in module array_api)": [[90, "array_api.diff"]], "divide() (in module array_api)": [[91, "array_api.divide"]], "empty() (in module array_api)": [[92, "array_api.empty"]], "empty_like() (in module array_api)": [[93, "array_api.empty_like"]], "equal() (in module array_api)": [[94, "array_api.equal"]], "exp() (in module array_api)": [[95, "array_api.exp"]], "expand_dims() (in module array_api)": [[96, "array_api.expand_dims"]], "expm1() (in module array_api)": [[97, "array_api.expm1"]], "eye() (in module array_api)": [[98, "array_api.eye"]], "finfo() (in module array_api)": [[99, "array_api.finfo"]], "flip() (in module array_api)": [[100, "array_api.flip"]], "floor() (in module array_api)": [[101, "array_api.floor"]], "floor_divide() (in module array_api)": [[102, "array_api.floor_divide"]], "from_dlpack() (in module array_api)": [[103, "array_api.from_dlpack"]], "full() (in module array_api)": [[104, "array_api.full"]], "full_like() (in module array_api)": [[105, "array_api.full_like"]], "greater() (in module array_api)": [[106, "array_api.greater"]], "greater_equal() (in module array_api)": [[107, "array_api.greater_equal"]], "hypot() (in module array_api)": [[108, "array_api.hypot"]], "iinfo() (in module array_api)": [[109, "array_api.iinfo"]], "imag() (in module array_api)": [[110, "array_api.imag"]], "__array_namespace_info__() (in module array_api.info)": [[111, "array_api.info.__array_namespace_info__"]], "capabilities() (in module array_api.info)": [[112, "array_api.info.capabilities"]], "default_device() (in module array_api.info)": [[113, "array_api.info.default_device"]], "default_dtypes() (in module array_api.info)": [[114, "array_api.info.default_dtypes"]], "devices() (in module array_api.info)": [[115, "array_api.info.devices"]], "dtypes() (in module array_api.info)": [[116, "array_api.info.dtypes"]], "isdtype() (in module array_api)": [[117, "array_api.isdtype"]], "isfinite() (in module array_api)": [[118, "array_api.isfinite"]], "isinf() (in module array_api)": [[119, "array_api.isinf"]], "isnan() (in module array_api)": [[120, "array_api.isnan"]], "less() (in module array_api)": [[121, "array_api.less"]], "less_equal() (in module array_api)": [[122, "array_api.less_equal"]], "linspace() (in module array_api)": [[123, "array_api.linspace"]], "log() (in module array_api)": [[124, "array_api.log"]], "log10() (in module array_api)": [[125, "array_api.log10"]], "log1p() (in module array_api)": [[126, "array_api.log1p"]], "log2() (in module array_api)": [[127, "array_api.log2"]], "logaddexp() (in module array_api)": [[128, "array_api.logaddexp"]], "logical_and() (in module array_api)": [[129, "array_api.logical_and"]], "logical_not() (in module array_api)": [[130, "array_api.logical_not"]], "logical_or() (in module array_api)": [[131, "array_api.logical_or"]], "logical_xor() (in module array_api)": [[132, "array_api.logical_xor"]], "matmul() (in module array_api)": [[133, "array_api.matmul"]], "matrix_transpose() (in module array_api)": [[134, "array_api.matrix_transpose"]], "max() (in module array_api)": [[135, "array_api.max"]], "maximum() (in module array_api)": [[136, "array_api.maximum"]], "mean() (in module array_api)": [[137, "array_api.mean"]], "meshgrid() (in module array_api)": [[138, "array_api.meshgrid"]], "min() (in module array_api)": [[139, "array_api.min"]], "minimum() (in module array_api)": [[140, "array_api.minimum"]], "moveaxis() (in module array_api)": [[141, "array_api.moveaxis"]], "multiply() (in module array_api)": [[142, "array_api.multiply"]], "negative() (in module array_api)": [[143, "array_api.negative"]], "nextafter() (in module array_api)": [[144, "array_api.nextafter"]], "nonzero() (in module array_api)": [[145, "array_api.nonzero"]], "not_equal() (in module array_api)": [[146, "array_api.not_equal"]], "ones() (in module array_api)": [[147, "array_api.ones"]], "ones_like() (in module array_api)": [[148, "array_api.ones_like"]], "permute_dims() (in module array_api)": [[149, "array_api.permute_dims"]], "positive() (in module array_api)": [[150, "array_api.positive"]], "pow() (in module array_api)": [[151, "array_api.pow"]], "prod() (in module array_api)": [[152, "array_api.prod"]], "real() (in module array_api)": [[153, "array_api.real"]], "reciprocal() (in module array_api)": [[154, "array_api.reciprocal"]], "remainder() (in module array_api)": [[155, "array_api.remainder"]], "repeat() (in module array_api)": [[156, "array_api.repeat"]], "reshape() (in module array_api)": [[157, "array_api.reshape"]], "result_type() (in module array_api)": [[158, "array_api.result_type"]], "roll() (in module array_api)": [[159, "array_api.roll"]], "round() (in module array_api)": [[160, "array_api.round"]], "searchsorted() (in module array_api)": [[161, "array_api.searchsorted"]], "sign() (in module array_api)": [[162, "array_api.sign"]], "signbit() (in module array_api)": [[163, "array_api.signbit"]], "sin() (in module array_api)": [[164, "array_api.sin"]], "sinh() (in module array_api)": [[165, "array_api.sinh"]], "sort() (in module array_api)": [[166, "array_api.sort"]], "sqrt() (in module array_api)": [[167, "array_api.sqrt"]], "square() (in module array_api)": [[168, "array_api.square"]], "squeeze() (in module array_api)": [[169, "array_api.squeeze"]], "stack() (in module array_api)": [[170, "array_api.stack"]], "std() (in module array_api)": [[171, "array_api.std"]], "subtract() (in module array_api)": [[172, "array_api.subtract"]], "sum() (in module array_api)": [[173, "array_api.sum"]], "take() (in module array_api)": [[174, "array_api.take"]], "take_along_axis() (in module array_api)": [[175, "array_api.take_along_axis"]], "tan() (in module array_api)": [[176, "array_api.tan"]], "tanh() (in module array_api)": [[177, "array_api.tanh"]], "tensordot() (in module array_api)": [[178, "array_api.tensordot"]], "tile() (in module array_api)": [[179, "array_api.tile"]], "tril() (in module array_api)": [[180, "array_api.tril"]], "triu() (in module array_api)": [[181, "array_api.triu"]], "trunc() (in module array_api)": [[182, "array_api.trunc"]], "unique_all() (in module array_api)": [[183, "array_api.unique_all"]], "unique_counts() (in module array_api)": [[184, "array_api.unique_counts"]], "unique_inverse() (in module array_api)": [[185, "array_api.unique_inverse"]], "unique_values() (in module array_api)": [[186, "array_api.unique_values"]], "unstack() (in module array_api)": [[187, "array_api.unstack"]], "var() (in module array_api)": [[188, "array_api.var"]], "vecdot() (in module array_api)": [[189, "array_api.vecdot"]], "where() (in module array_api)": [[190, "array_api.where"]], "zeros() (in module array_api)": [[191, "array_api.zeros"]], "zeros_like() (in module array_api)": [[192, "array_api.zeros_like"]], "fft() (in module array_api.fft)": [[222, "array_api.fft.fft"]], "fftfreq() (in module array_api.fft)": [[223, "array_api.fft.fftfreq"]], "fftn() (in module array_api.fft)": [[224, "array_api.fft.fftn"]], "fftshift() (in module array_api.fft)": [[225, "array_api.fft.fftshift"]], "hfft() (in module array_api.fft)": [[226, "array_api.fft.hfft"]], "ifft() (in module array_api.fft)": [[227, "array_api.fft.ifft"]], "ifftn() (in module array_api.fft)": [[228, "array_api.fft.ifftn"]], "ifftshift() (in module array_api.fft)": [[229, "array_api.fft.ifftshift"]], "ihfft() (in module array_api.fft)": [[230, "array_api.fft.ihfft"]], "irfft() (in module array_api.fft)": [[231, "array_api.fft.irfft"]], "irfftn() (in module array_api.fft)": [[232, "array_api.fft.irfftn"]], "rfft() (in module array_api.fft)": [[233, "array_api.fft.rfft"]], "rfftfreq() (in module array_api.fft)": [[234, "array_api.fft.rfftfreq"]], "rfftn() (in module array_api.fft)": [[235, "array_api.fft.rfftn"]], "cholesky() (in module array_api.linalg)": [[236, "array_api.linalg.cholesky"]], "cross() (in module array_api.linalg)": [[237, "array_api.linalg.cross"]], "det() (in module array_api.linalg)": [[238, "array_api.linalg.det"]], "diagonal() (in module array_api.linalg)": [[239, "array_api.linalg.diagonal"]], "eigh() (in module array_api.linalg)": [[240, "array_api.linalg.eigh"]], "eigvalsh() (in module array_api.linalg)": [[241, "array_api.linalg.eigvalsh"]], "inv() (in module array_api.linalg)": [[242, "array_api.linalg.inv"]], "matmul() (in module array_api.linalg)": [[243, "array_api.linalg.matmul"]], "matrix_norm() (in module array_api.linalg)": [[244, "array_api.linalg.matrix_norm"]], "matrix_power() (in module array_api.linalg)": [[245, "array_api.linalg.matrix_power"]], "matrix_rank() (in module array_api.linalg)": [[246, "array_api.linalg.matrix_rank"]], "matrix_transpose() (in module array_api.linalg)": [[247, "array_api.linalg.matrix_transpose"]], "outer() (in module array_api.linalg)": [[248, "array_api.linalg.outer"]], "pinv() (in module array_api.linalg)": [[249, "array_api.linalg.pinv"]], "qr() (in module array_api.linalg)": [[250, "array_api.linalg.qr"]], "slogdet() (in module array_api.linalg)": [[251, "array_api.linalg.slogdet"]], "solve() (in module array_api.linalg)": [[252, "array_api.linalg.solve"]], "svd() (in module array_api.linalg)": [[253, "array_api.linalg.svd"]], "svdvals() (in module array_api.linalg)": [[254, "array_api.linalg.svdvals"]], "tensordot() (in module array_api.linalg)": [[255, "array_api.linalg.tensordot"]], "trace() (in module array_api.linalg)": [[256, "array_api.linalg.trace"]], "vecdot() (in module array_api.linalg)": [[257, "array_api.linalg.vecdot"]], "vector_norm() (in module array_api.linalg)": [[258, "array_api.linalg.vector_norm"]]}})